<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>肖洒</title>
  <subtitle>好记性不如烂键盘</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://x-nicolo.github.io/"/>
  <updated>2018-12-03T09:06:30.000Z</updated>
  <id>https://x-nicolo.github.io/</id>
  
  <author>
    <name>肖洒</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>十大经典排序算法动画</title>
    <link href="https://x-nicolo.github.io/2018/12/03/%E5%8D%81%E5%A4%A7%E7%BB%8F%E5%85%B8%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E5%8A%A8%E7%94%BB/"/>
    <id>https://x-nicolo.github.io/2018/12/03/十大经典排序算法动画/</id>
    <published>2018-12-03T09:06:30.000Z</published>
    <updated>2018-12-03T09:06:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>排序算法是《数据结构与算法》中最基本的算法之一。</p>
<p>排序算法可以分为内部排序和外部排序。</p>
<p>内部排序是数据记录在内存中进行排序。</p>
<p>而外部排序是因排序的数据很大，一次不能容纳全部的排序记录，在排序过程中需要访问外存。</p>
<p>常见的内部排序算法有：插入排序、希尔排序、选择排序、冒泡排序、归并排序、快速排序、堆排序、基数排序等。<br>本文from<a href="https://www.v2ex.com/t/513678#reply34" target="_blank" rel="external">https://www.v2ex.com/t/513678#reply34</a><br><a id="more"></a><br>用一张图概括：<br><img src="https://upload-images.jianshu.io/upload_images/2847713-ddfca9663fa411af.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png">  </p>
<h3 id="关于时间复杂度："><a href="#关于时间复杂度：" class="headerlink" title="关于时间复杂度："></a>关于时间复杂度：</h3><ol>
<li>平方阶 (O(n2)) 排序 各类简单排序：直接插入、直接选择和冒泡排序</li>
<li>线性对数阶 (O(nlog2n)) 排序 快速排序、堆排序和归并排序</li>
<li>O(n1+§)) 排序，§ 是介于 0 和 1 之间的常数。 希尔排序</li>
<li>线性阶 (O(n)) 排序 基数排序，此外还有桶、箱排序。</li>
</ol>
<h3 id="关于稳定性："><a href="#关于稳定性：" class="headerlink" title="关于稳定性："></a>关于稳定性：</h3><ol>
<li>稳定的排序算法：冒泡排序、插入排序、归并排序和基数排序。</li>
<li>不是稳定的排序算法：选择排序、快速排序、希尔排序、堆排序。  </li>
</ol>
<h3 id="1-冒泡排序"><a href="#1-冒泡排序" class="headerlink" title="1.冒泡排序"></a>1.冒泡排序</h3><p><img src="https://upload-images.jianshu.io/upload_images/2847713-82fc8b9e80bf7db1.gif?imageMogr2/auto-orient/strip" alt="1.gif"> </p>
<h3 id="2-选择排序"><a href="#2-选择排序" class="headerlink" title="2.选择排序"></a>2.选择排序</h3><p><img src="https://upload-images.jianshu.io/upload_images/2847713-e61eacb961a97dc3.gif?imageMogr2/auto-orient/strip" alt="2.gif"> </p>
<h3 id="3-插入排序"><a href="#3-插入排序" class="headerlink" title="3.插入排序"></a>3.插入排序</h3><p><img src="https://upload-images.jianshu.io/upload_images/2847713-8b4cfadbadf6aeb1.gif?imageMogr2/auto-orient/strip" alt="3.gif"> </p>
<h3 id="4-希尔排序"><a href="#4-希尔排序" class="headerlink" title="4.希尔排序"></a>4.希尔排序</h3><p><img src="https://upload-images.jianshu.io/upload_images/2847713-02dff43f5d8b7d0a.gif?imageMogr2/auto-orient/strip" alt="4.gif"></p>
<h3 id="5-归并排序"><a href="#5-归并排序" class="headerlink" title="5.归并排序"></a>5.归并排序</h3><p><img src="https://upload-images.jianshu.io/upload_images/2847713-ba12ba67a00aadc1.gif?imageMogr2/auto-orient/strip" alt="5.gif"></p>
<h3 id="6-快速排序"><a href="#6-快速排序" class="headerlink" title="6.快速排序"></a>6.快速排序</h3><p><img src="https://upload-images.jianshu.io/upload_images/2847713-1984db5732180fbc.gif?imageMogr2/auto-orient/strip" alt="6.gif"></p>
<h3 id="7-堆排序"><a href="#7-堆排序" class="headerlink" title="7.堆排序"></a>7.堆排序</h3><p><img src="https://upload-images.jianshu.io/upload_images/2847713-aceda2287b9b1ed8.gif?imageMogr2/auto-orient/strip" alt="7.gif"></p>
<h3 id="8-计数排序"><a href="#8-计数排序" class="headerlink" title="8.计数排序"></a>8.计数排序</h3><p><img src="https://upload-images.jianshu.io/upload_images/2847713-0d3c59eb39df91fb.gif?imageMogr2/auto-orient/strip" alt="8.gif"></p>
<h3 id="9-桶排序"><a href="#9-桶排序" class="headerlink" title="9.桶排序"></a>9.桶排序</h3><p><img src="https://upload-images.jianshu.io/upload_images/2847713-8e5807c77d7aa3db.gif?imageMogr2/auto-orient/strip" alt="9.gif"></p>
<h3 id="10-基数排序"><a href="#10-基数排序" class="headerlink" title="10.基数排序"></a>10.基数排序</h3><p><img src="https://upload-images.jianshu.io/upload_images/2847713-fb7fb4a7829ef836.gif?imageMogr2/auto-orient/strip" alt="10.gif"> </p>
<p>此外，再推荐一个特别神奇的学习算法的网站<a href="https://visualgo.net/zh" target="_blank" rel="external">https://visualgo.net/zh</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;排序算法是《数据结构与算法》中最基本的算法之一。&lt;/p&gt;
&lt;p&gt;排序算法可以分为内部排序和外部排序。&lt;/p&gt;
&lt;p&gt;内部排序是数据记录在内存中进行排序。&lt;/p&gt;
&lt;p&gt;而外部排序是因排序的数据很大，一次不能容纳全部的排序记录，在排序过程中需要访问外存。&lt;/p&gt;
&lt;p&gt;常见的内部排序算法有：插入排序、希尔排序、选择排序、冒泡排序、归并排序、快速排序、堆排序、基数排序等。&lt;br&gt;本文from&lt;a href=&quot;https://www.v2ex.com/t/513678#reply34&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.v2ex.com/t/513678#reply34&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="https://x-nicolo.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="算法" scheme="https://x-nicolo.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>GPS/北斗串口数据实时定位百度地图</title>
    <link href="https://x-nicolo.github.io/2018/11/15/GPS%E4%B8%B2%E5%8F%A3%E6%95%B0%E6%8D%AE%E5%AE%9E%E6%97%B6%E6%A0%87%E8%AE%B0%E5%9C%A8%E7%99%BE%E5%BA%A6%E5%9C%B0%E5%9B%BE/"/>
    <id>https://x-nicolo.github.io/2018/11/15/GPS串口数据实时标记在百度地图/</id>
    <published>2018-11-15T07:23:34.000Z</published>
    <updated>2018-11-15T07:23:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>一个小项目，做点总结。<br><img src="https://upload-images.jianshu.io/upload_images/2847713-455415bc5286817c.gif?imageMogr2/auto-orient/strip" alt="俱乐部2.gif"><br><a id="more"></a></p>
<h2 id="项目需求"><a href="#项目需求" class="headerlink" title="项目需求"></a>项目需求</h2><p>本项目为从串口读取GPS/北斗设备接收数据，进行处理后使用百度地图api实时显示定位。  </p>
<h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>这里有几个关键的信息，需要一步一步进行实现。  </p>
<h3 id="串口"><a href="#串口" class="headerlink" title="串口"></a>串口</h3><p>串口通信这里就不做介绍。本意是使用百度地图的api，但是这是一个静态的网页。如果要动态显示，且由前端直接读取PC端的串口数据其实不好实现，在网上查了很多资料，最通常的做法是在前端使用一个active控件读取串口的数据。这样有缺点，一是技术过于老套，只兼容IE，其他浏览器就不行；二是怎么做到动态实时定位呢？这个没有想明白。放弃了从前端直接读取PC串口的想法。还是需要去用后台采集数据，搭建后台和前端进行通信。  </p>
<h4 id="串口模拟"><a href="#串口模拟" class="headerlink" title="串口模拟"></a>串口模拟</h4><p>路是一步一步走的，胖子也是一口一口吃的，直接去读取GPSS/北斗设备的数据是不可行的。<br>先采用电脑端的串口助手进行数据的发送和接收。  </p>
<ol>
<li>首先采用VSPD（很著名）在PC端模拟出一怼串口，再使用某个串口助手实现数据的发送和接收显示。串口助手很多，随便选择一种即可。  </li>
<li>这样就可以保证有可靠的数据发送和接收的通信是没有问题的。保证发送端数据的一直发送，接着用程序去读取串口的数据。 <figure class="highlight haskell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#语言版本：Python3</span></div><div class="line"><span class="meta">#依赖库：serial，pyserial</span></div><div class="line"><span class="meta">#串口助手发送数据：108.111,34.111</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> serial</div><div class="line"><span class="title">from</span> time <span class="keyword">import</span> sleep</div><div class="line"></div><div class="line"><span class="title">if</span> __name__ == '__main__':</div><div class="line">    serial = serial.<span class="type">Serial</span>('<span class="type">COM2'</span>, <span class="number">115200</span>)#根据自己模拟的端口确定com</div><div class="line">    <span class="keyword">if</span> serial.isOpen() :</div><div class="line">        print(<span class="string">"open success"</span>)</div><div class="line">    <span class="keyword">else</span> :</div><div class="line">        print(<span class="string">"open failed"</span>)</div><div class="line"></div><div class="line">    while <span class="type">True</span>:</div><div class="line">        n = serial.inWaiting()</div><div class="line">        <span class="keyword">if</span> n:</div><div class="line">            <span class="class"><span class="keyword">data</span>= str(<span class="title">serial</span>.<span class="title">read</span>(<span class="title">n</span>))[2:-1].split(',')#对读取的数据进行简单的处理</span></div><div class="line">            j = <span class="class"><span class="keyword">data</span>[0]</span></div><div class="line">            w = <span class="class"><span class="keyword">data</span>[1]</span></div><div class="line">            print(<span class="class"><span class="keyword">data</span>)</span></div></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="读取串口"><a href="#读取串口" class="headerlink" title="读取串口"></a>读取串口</h3><p>保证程序可以正确的读取发送的数据后，再去处理真实的数据，开启GPS/北斗设备，将USB插在电脑上，开始读取原始数据。原始数据包含的信息比较多，而且发送频率也比较高，数据眼花缭乱，这里只匹配想要的数据进行处理。在百度地图上定位只需要“经度”、“纬度”。（这里牵扯到一个坐标系的转换，后面说），这是一个Ajax的程序：<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">def ajax_list(request):</div><div class="line">    s = serial.Serial(<span class="string">'COM5'</span>, <span class="number">115200</span>)</div><div class="line">    #定义接收数据的次数</div><div class="line">    l = <span class="number">0</span></div><div class="line">    data=[]</div><div class="line">    <span class="keyword">while</span> True:</div><div class="line">        <span class="built_in">line</span> = <span class="built_in">str</span>(<span class="built_in">str</span>(s.readline())[<span class="number">2</span>:])</div><div class="line">        # <span class="built_in">print</span>(<span class="built_in">line</span>)#原始数据</div><div class="line">        <span class="keyword">if</span> <span class="built_in">line</span>.startswith(<span class="string">'$GNGGA'</span>):#只匹配以“$GNGGA”开头的数据</div><div class="line">            <span class="built_in">line</span>=<span class="built_in">str</span>(<span class="built_in">line</span>).<span class="built_in">split</span>(<span class="string">','</span>)</div><div class="line">            # <span class="built_in">print</span>(<span class="string">"接收的数据："</span>+ <span class="built_in">str</span>(<span class="built_in">line</span>))</div><div class="line">            # <span class="built_in">print</span>(<span class="string">"OK:"</span>+<span class="built_in">str</span>(<span class="built_in">line</span>))</div><div class="line">            # <span class="built_in">print</span>(<span class="string">"指令名称: "</span>, <span class="built_in">line</span>[<span class="number">0</span>])</div><div class="line">            # <span class="built_in">print</span>(<span class="string">"发送时间: "</span>, <span class="built_in">line</span>[<span class="number">1</span>][:<span class="number">6</span>])</div><div class="line"></div><div class="line">            # 经纬度转换</div><div class="line">            #经度数据处理</div><div class="line">            j = <span class="built_in">float</span>(<span class="built_in">line</span>[<span class="number">4</span>][:<span class="number">-7</span>])+<span class="built_in">float</span>(<span class="built_in">line</span>[<span class="number">4</span>][<span class="number">-7</span>:])/<span class="number">60</span></div><div class="line">            #纬度数据处理</div><div class="line">            w = <span class="built_in">float</span>(<span class="built_in">line</span>[<span class="number">2</span>][:<span class="number">-7</span>])+<span class="built_in">float</span>(<span class="built_in">line</span>[<span class="number">2</span>][<span class="number">-7</span>:])/<span class="number">60</span></div><div class="line"></div><div class="line">            #时间</div><div class="line">            gpstime=time.strftime(<span class="string">'%H:%M:%S'</span>,time.localtime(time.time()))</div><div class="line"></div><div class="line">            # id</div><div class="line">            global l </div><div class="line">            l= l + <span class="number">1</span></div><div class="line"></div><div class="line">            # 添加数据</div><div class="line">            data.<span class="built_in">append</span>(j)</div><div class="line">            data.<span class="built_in">append</span>(w)</div><div class="line">            data.<span class="built_in">append</span>(l)</div><div class="line">            data.<span class="built_in">append</span>(gpstime)</div><div class="line">            <span class="built_in">print</span>(data)</div><div class="line">            <span class="keyword">return</span> HttpResponse(json.dumps(data), content_type=<span class="string">'application/json'</span>)</div></pre></td></tr></table></figure></p>
<h3 id="百度地图api"><a href="#百度地图api" class="headerlink" title="百度地图api"></a>百度地图api</h3><p>先去申请百度地图api 的 key。然后看这里：<a href="http://lbsyun.baidu.com/jsdemo.htm#i8_4" target="_blank" rel="external">http://lbsyun.baidu.com/jsdemo.htm#i8_4</a><br>这里放出百度地图定位aip的源码：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=utf-8"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"initial-scale=1.0, user-scalable=no"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="css">        <span class="selector-tag">body</span>, <span class="selector-tag">html</span>&#123;<span class="attribute">width</span>: <span class="number">100%</span>;<span class="attribute">height</span>: <span class="number">100%</span>;<span class="attribute">margin</span>:<span class="number">0</span>;<span class="attribute">font-family</span>:<span class="string">"微软雅黑"</span>;&#125;</span></div><div class="line"><span class="css">        <span class="selector-id">#allmap</span>&#123;<span class="attribute">height</span>:<span class="number">500px</span>;<span class="attribute">width</span>:<span class="number">100%</span>;&#125;</span></div><div class="line"><span class="css">        <span class="selector-id">#r-result</span>&#123;<span class="attribute">width</span>:<span class="number">100%</span>; <span class="attribute">font-size</span>:<span class="number">14px</span>;&#125;</span></div><div class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"http://api.map.baidu.com/api?v=2.0&amp;ak=您的密钥"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>城市名定位<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"allmap"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"r-result"</span>&gt;</span></div><div class="line">        经度: <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"longitude"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">style</span>=<span class="string">"width:100px; margin-right:10px;"</span> /&gt;</span></div><div class="line">        纬度: <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"latitude"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">style</span>=<span class="string">"width:100px; margin-right:10px;"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"查询"</span> <span class="attr">onclick</span>=<span class="string">"theLocation()"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="actionscript">    <span class="comment">// 百度地图API功能</span></span></div><div class="line"><span class="actionscript">    <span class="keyword">var</span> map = <span class="keyword">new</span> BMap.Map(<span class="string">"allmap"</span>);</span></div><div class="line"><span class="actionscript">    map.centerAndZoom(<span class="keyword">new</span> BMap.Point(<span class="number">116.331398</span>,<span class="number">39.897445</span>),<span class="number">11</span>);</span></div><div class="line"><span class="actionscript">    map.enableScrollWheelZoom(<span class="literal">true</span>);</span></div><div class="line"><span class="undefined">    </span></div><div class="line"><span class="actionscript">    <span class="comment">// 用经纬度设置地图中心点</span></span></div><div class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">theLocation</span><span class="params">()</span></span>&#123;</span></div><div class="line"><span class="javascript">        <span class="keyword">if</span>(<span class="built_in">document</span>.getElementById(<span class="string">"longitude"</span>).value != <span class="string">""</span> &amp;&amp; <span class="built_in">document</span>.getElementById(<span class="string">"latitude"</span>).value != <span class="string">""</span>)&#123;</span></div><div class="line"><span class="undefined">            map.clearOverlays(); </span></div><div class="line"><span class="javascript">            <span class="keyword">var</span> new_point = <span class="keyword">new</span> BMap.Point(<span class="built_in">document</span>.getElementById(<span class="string">"longitude"</span>).value,<span class="built_in">document</span>.getElementById(<span class="string">"latitude"</span>).value);</span></div><div class="line"><span class="actionscript">            <span class="keyword">var</span> marker = <span class="keyword">new</span> BMap.Marker(new_point);  <span class="comment">// 创建标注</span></span></div><div class="line"><span class="actionscript">            map.addOverlay(marker);              <span class="comment">// 将标注添加到地图中</span></span></div><div class="line"><span class="undefined">            map.panTo(new_point);      </span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>上面的程序是静态的，项目需求把从串口源源不断读取的数据在百度地图上进行显示。这里想到使用了Ajax。  </p>
<h3 id="Ajax"><a href="#Ajax" class="headerlink" title="Ajax"></a>Ajax</h3><blockquote>
<p>Ajax 即“Asynchronous Javascript And XML”（异步 JavaScript 和 XML），是指一种创建交互式网页应用的网页开发技术。<br>Ajax = 异步 JavaScript 和 XML（标准通用标记语言的子集）。<br>Ajax 是一种用于创建快速动态网页的技术。<br>Ajax 是一种在无需重新加载整个网页的情况下，能够更新部分网页的技术。<br>通过在后台与服务器进行少量数据交换，Ajax 可以使网页实现异步更新。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。<br>传统的网页（不使用 Ajax）如果需要更新内容，必须重载整个网页页面。</p>
</blockquote>
<h4 id="Django"><a href="#Django" class="headerlink" title="Django"></a>Django</h4><p>使用的是Python语言，用Django后台框架就很简单，这里推荐一个博客，学习到很多。<a href="https://code.ziqiangxuetang.com/django/django-tutorial.html" target="_blank" rel="external">自强学堂-Django教程</a><br>花了点时间学习了下，Django还是很容易上手的最后将接收到处理的数据存储为csv文件。<br>这里给出本项目的Django和前端的程序。  </p>
<h5 id="view-py"><a href="#view-py" class="headerlink" title="view.py"></a>view.py</h5><figure class="highlight processing"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line">from django.http <span class="keyword">import</span> HttpResponse</div><div class="line">from django.shortcuts <span class="keyword">import</span> render</div><div class="line"><span class="keyword">import</span> json</div><div class="line"><span class="keyword">import</span> serial</div><div class="line"><span class="keyword">import</span> time</div><div class="line"><span class="keyword">import</span> csv</div><div class="line">from time <span class="keyword">import</span> sleep</div><div class="line"></div><div class="line">def ajax_list(request):</div><div class="line">    data=[]</div><div class="line">    <span class="keyword">while</span> True:</div><div class="line">        <span class="built_in">line</span> = <span class="built_in">str</span>(<span class="built_in">str</span>(s.readline())[<span class="number">2</span>:])</div><div class="line">        # <span class="built_in">print</span>(<span class="built_in">line</span>)</div><div class="line">        <span class="keyword">if</span> <span class="built_in">line</span>.startswith(<span class="string">'$GNGGA'</span>):</div><div class="line">            <span class="built_in">line</span>=<span class="built_in">str</span>(<span class="built_in">line</span>).<span class="built_in">split</span>(<span class="string">','</span>)</div><div class="line">            # <span class="built_in">print</span>(<span class="string">"接收的数据："</span>+ <span class="built_in">str</span>(<span class="built_in">line</span>))</div><div class="line">            # <span class="built_in">print</span>(<span class="string">"OK:"</span>+<span class="built_in">str</span>(<span class="built_in">line</span>))</div><div class="line">            # <span class="built_in">print</span>(<span class="string">"指令名称: "</span>, <span class="built_in">line</span>[<span class="number">0</span>])</div><div class="line">            # <span class="built_in">print</span>(<span class="string">"发送时间: "</span>, <span class="built_in">line</span>[<span class="number">1</span>][:<span class="number">6</span>])</div><div class="line"></div><div class="line">            # 经纬度转换</div><div class="line">            j = <span class="built_in">float</span>(<span class="built_in">line</span>[<span class="number">4</span>][:<span class="number">-7</span>])+<span class="built_in">float</span>(<span class="built_in">line</span>[<span class="number">4</span>][<span class="number">-7</span>:])/<span class="number">60</span></div><div class="line">            w = <span class="built_in">float</span>(<span class="built_in">line</span>[<span class="number">2</span>][:<span class="number">-7</span>])+<span class="built_in">float</span>(<span class="built_in">line</span>[<span class="number">2</span>][<span class="number">-7</span>:])/<span class="number">60</span></div><div class="line"></div><div class="line">            #时间</div><div class="line">            gpstime=time.strftime(<span class="string">'%H:%M:%S'</span>,time.localtime(time.time()))</div><div class="line"></div><div class="line">            # id</div><div class="line">            global l </div><div class="line">            l= l + <span class="number">1</span></div><div class="line"></div><div class="line">            # 添加数据</div><div class="line">            data.<span class="built_in">append</span>(j)</div><div class="line">            data.<span class="built_in">append</span>(w)</div><div class="line">            data.<span class="built_in">append</span>(l)</div><div class="line">            data.<span class="built_in">append</span>(gpstime)</div><div class="line">            <span class="built_in">print</span>(data)</div><div class="line">            with <span class="built_in">open</span>(<span class="string">'./rec_gps.csv'</span>,<span class="string">'a'</span>,newline=<span class="string">''</span>) as csvFile1:</div><div class="line">                writer = csv.writer(csvFile1)</div><div class="line">                writer.writerow((l,gpstime,j,w))</div><div class="line">                csvFile.close()</div><div class="line">            <span class="keyword">return</span> HttpResponse(json.dumps(data), content_type=<span class="string">'application/json'</span>)</div><div class="line">s = serial.Serial(<span class="string">'COM5'</span>, <span class="number">115200</span>)</div><div class="line">global l </div><div class="line">l = <span class="number">0</span></div><div class="line">csvFile = <span class="built_in">open</span>(<span class="string">'./rec_gps.csv'</span>, <span class="string">'a'</span>,encoding = <span class="string">'utf-8'</span>,newline=<span class="string">''</span>)</div><div class="line">writer = csv.writer(csvFile)</div><div class="line">writer.writerow((<span class="string">'id'</span>,<span class="string">'time'</span>,<span class="string">'longitude'</span>,<span class="string">'latitude'</span>))</div></pre></td></tr></table></figure>
<h5 id="index-html"><a href="#index-html" class="headerlink" title="index.html"></a>index.html</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=utf-8"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"initial-scale=1.0, user-scalable=no"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="css">        <span class="selector-tag">body</span>, <span class="selector-tag">html</span>&#123;<span class="attribute">width</span>: <span class="number">100%</span>;<span class="attribute">height</span>: <span class="number">100%</span>;<span class="attribute">margin</span>:<span class="number">0</span>;<span class="attribute">font-family</span>:<span class="string">"微软雅黑"</span>;&#125;</span></div><div class="line"><span class="undefined">        /* #allmap&#123;height:500px;width:100%;&#125;</span></div><div class="line"><span class="undefined">        #r-result&#123;width:100%; font-size:14px;&#125; */</span></div><div class="line"><span class="css">        <span class="selector-id">#allmap</span>&#123;<span class="attribute">float</span>: right;<span class="attribute">height</span>:<span class="number">100%</span>;<span class="attribute">width</span>:<span class="number">80%</span>;&#125;</span></div><div class="line"><span class="css">        <span class="selector-id">#r-result</span>&#123;<span class="attribute">float</span>: left;<span class="attribute">height</span>:<span class="number">80%</span>;<span class="attribute">width</span>:<span class="number">20%</span>; <span class="attribute">overflow</span>:auto;<span class="attribute">text-align</span>: center&#125;</span></div><div class="line"><span class="css">        <span class="selector-id">#list</span>&#123;<span class="attribute">position</span>:fixed;<span class="attribute">top</span>:-<span class="number">16px</span>;&#125;</span></div><div class="line"><span class="css">        <span class="selector-id">#title</span>&#123;<span class="attribute">position</span>:fixed;<span class="attribute">top</span>:<span class="number">5px</span>;&#125;</span></div><div class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"http://api.map.baidu.com/api?v=2.0&amp;ak=这里写你申请的百度地图api的key"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://apps.bdimg.com/libs/jquery/1.11.1/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- WGS84转BD09 start--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://unpkg.com/gcoord/dist/gcoord.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- end --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>经纬度定位<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- 框架测试start --&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- end --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"allmap"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"r-result"</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"list"</span>&gt;</span></div><div class="line">             <span class="tag">&lt;<span class="name">p</span>  <span class="attr">style</span>=<span class="string">"background-color:rgb(0, 255, 221)"</span>&gt;</span>经纬度数据(WGS84坐标)<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </div><div class="line">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> = <span class="string">"title"</span> &gt;</span></div><div class="line">              <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"background-color:rgb(0, 255, 221)"</span>&gt;</span>ID  |  Time  |  Longitude  | Latitude<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </div><div class="line">         <span class="tag">&lt;<span class="name">p</span>&gt;</span>&amp;nbsp<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"list_result"</span> <span class="attr">style</span>=<span class="string">"font-size: 90%"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="actionscript">    <span class="comment">// 百度地图API功能</span></span></div><div class="line"><span class="actionscript">    <span class="keyword">var</span> map = <span class="keyword">new</span> BMap.Map(<span class="string">"allmap"</span>);</span></div><div class="line"><span class="actionscript">    map.centerAndZoom(<span class="keyword">new</span> BMap.Point(<span class="number">108.953445</span>,<span class="number">34.265721</span>),<span class="number">15</span>);</span></div><div class="line"><span class="actionscript">    map.enableScrollWheelZoom(<span class="literal">true</span>);</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="javascript">    $(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></div><div class="line"><span class="actionscript">      <span class="comment">// 列表 list</span></span></div><div class="line"><span class="javascript">      $(<span class="string">'#list'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></div><div class="line"><span class="javascript">          $.getJSON(<span class="string">'/ajax_list/'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">ret</span>)</span>&#123;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="actionscript">            <span class="comment">//</span></span></div><div class="line"><span class="javascript">            $(<span class="string">'#list_result'</span>).append(ret[<span class="number">2</span>]+<span class="string">",  "</span>+ret[<span class="number">3</span>]+<span class="string">",  "</span>+ret[<span class="number">0</span>].toFixed(<span class="number">6</span>)+<span class="string">",  "</span>+ret[<span class="number">1</span>].toFixed(<span class="number">6</span>) +<span class="string">"&lt;br /&gt;"</span>);</span></div><div class="line"><span class="actionscript">            <span class="comment">// $('#list_result').append("纬度：" + ret[1]+"&lt;br /&gt;" );</span></span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="actionscript">           <span class="comment">// WGS84坐标</span></span></div><div class="line"><span class="actionscript">            <span class="keyword">var</span> result = gcoord.transform(</span></div><div class="line"><span class="actionscript">                [ret[<span class="number">0</span>], ret[<span class="number">1</span>]],    <span class="comment">// 经纬度坐标</span></span></div><div class="line"><span class="actionscript">                gcoord.WGS84,               <span class="comment">// 当前坐标系</span></span></div><div class="line"><span class="actionscript">                gcoord.BD09                 <span class="comment">// 目标坐标系</span></span></div><div class="line"><span class="undefined">                );</span></div><div class="line"><span class="actionscript">            <span class="comment">//BD09坐标</span></span></div><div class="line"><span class="actionscript">            <span class="keyword">var</span> longitude = result[<span class="number">0</span>];</span></div><div class="line"><span class="actionscript">            <span class="keyword">var</span> latitude  = result[<span class="number">1</span>];</span></div><div class="line"><span class="actionscript">            <span class="keyword">var</span> id </span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">            map.clearOverlays(); </span></div><div class="line"><span class="actionscript">            <span class="keyword">var</span> new_point = <span class="keyword">new</span> BMap.Point(longitude,latitude);</span></div><div class="line"><span class="actionscript">            <span class="keyword">var</span> marker = <span class="keyword">new</span> BMap.Marker(new_point);  <span class="comment">// 创建标注</span></span></div><div class="line"><span class="actionscript">            map.addOverlay(marker);              <span class="comment">// 将标注添加到地图中</span></span></div><div class="line"><span class="undefined">            map.panTo(new_point);    </span></div><div class="line"><span class="javascript">            <span class="built_in">document</span>.getElementById(<span class="string">"longitude"</span>).innerHTML=longitude;  </span></div><div class="line"><span class="javascript">            <span class="built_in">document</span>.getElementById(<span class="string">"latitude"</span>).innerHTML=latitude; </span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="actionscript">            <span class="comment">// $('#list_result').append("经度：" + ret[0]+"&lt;br /&gt;" );</span></span></div><div class="line"><span class="actionscript">            <span class="comment">// $('#list_result').append("纬度：" + ret[1]+"&lt;br /&gt;" );</span></span></div><div class="line"><span class="undefined">          &#125;)</span></div><div class="line"><span class="undefined">      &#125;)</span></div><div class="line"><span class="undefined">    &#125;);</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- # 自动点击按钮js --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">myrefresh</span><span class="params">()</span></span>&#123; </span></div><div class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">'list'</span>).click();</span></div><div class="line"><span class="undefined">    &#125; </span></div><div class="line"><span class="actionscript">    setInterval(<span class="string">"myrefresh()"</span>,<span class="string">"2000"</span>); </span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h5 id="urls-py"><a href="#urls-py" class="headerlink" title="urls.py"></a>urls.py</h5><figure class="highlight xl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">from django.urls <span class="keyword">import</span> <span class="built_in">path</span></div><div class="line">from gps <span class="keyword">import</span> views <span class="keyword">as</span> gps_views</div><div class="line">from django.contrib <span class="keyword">import</span> admin</div><div class="line"></div><div class="line">urlpatterns = [</div><div class="line">    <span class="built_in">path</span>(<span class="string">''</span>, gps_views.index),</div><div class="line">    <span class="built_in">path</span>(<span class="string">'ajax_list/'</span>, gps_views.ajax_list)</div><div class="line">]</div></pre></td></tr></table></figure>
<h5 id="Run-me-bat"><a href="#Run-me-bat" class="headerlink" title="Run_me.bat"></a>Run_me.bat</h5><p>批处理文件，方便不懂Django的人开启服务  </p>
<figure class="highlight livescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">@echo <span class="literal">on</span></div><div class="line">python3 .<span class="string">\manage.py</span> runserver</div><div class="line">cmd /k</div></pre></td></tr></table></figure>
<h5 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h5><p><img src="https://upload-images.jianshu.io/upload_images/2847713-455415bc5286817c.gif?imageMogr2/auto-orient/strip" alt="俱乐部2.gif"> </p>
<p><img src="https://upload-images.jianshu.io/upload_images/2847713-125cd865b70b8f0d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="微信截图_20181115165343.png"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一个小项目，做点总结。&lt;br&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/2847713-455415bc5286817c.gif?imageMogr2/auto-orient/strip&quot; alt=&quot;俱乐部2.gif&quot;&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="https://x-nicolo.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Python" scheme="https://x-nicolo.github.io/tags/Python/"/>
    
      <category term="前端" scheme="https://x-nicolo.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>Schedule</title>
    <link href="https://x-nicolo.github.io/2018/09/14/Schedule/"/>
    <id>https://x-nicolo.github.io/2018/09/14/Schedule/</id>
    <published>2018-09-14T11:27:26.000Z</published>
    <updated>2018-09-14T11:27:26.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">私密博客，只能小可爱看</h3><link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css"> <link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css"> <script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <script src="//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js"></script> <div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none">  </div>]]></content>
    
    <summary type="html">
    
      私密博客，只能小可爱看
    
    </summary>
    
      <category term="编程" scheme="https://x-nicolo.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="前端" scheme="https://x-nicolo.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>关于简历，关于面试</title>
    <link href="https://x-nicolo.github.io/2018/08/31/%E5%85%B3%E4%BA%8E%E7%AE%80%E5%8E%86%EF%BC%8C%E5%85%B3%E4%BA%8E%E9%9D%A2%E8%AF%95/"/>
    <id>https://x-nicolo.github.io/2018/08/31/关于简历，关于面试/</id>
    <published>2018-08-31T07:13:46.000Z</published>
    <updated>2018-08-31T07:13:46.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">私密博客，只能小可爱看</h3><link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css"> <link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css"> <script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <script src="//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js"></script> <div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none">  </div>]]></content>
    
    <summary type="html">
    
      私密博客，只能小可爱看
    
    </summary>
    
      <category term="随笔" scheme="https://x-nicolo.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>DO部署Python爬虫应用</title>
    <link href="https://x-nicolo.github.io/2018/07/28/DO%E9%83%A8%E7%BD%B2Python%E7%88%AC%E8%99%AB%E5%BA%94%E7%94%A8/"/>
    <id>https://x-nicolo.github.io/2018/07/28/DO部署Python爬虫应用/</id>
    <published>2018-07-28T02:31:31.000Z</published>
    <updated>2018-07-28T02:31:31.000Z</updated>
    
    <content type="html"><![CDATA[<p>DigitalOcean里面还有60美金，可以用一下，部署了服务器，我可能就不会再去折腾这个爬虫应用了。  </p>
<a id="more"></a>
<h2 id="创建Digital-Ocean账户，准备CentOS系统"><a href="#创建Digital-Ocean账户，准备CentOS系统" class="headerlink" title="创建Digital Ocean账户，准备CentOS系统"></a>创建Digital Ocean账户，准备CentOS系统</h2><p>DO账户GItHub上GET学生包。  </p>
<h3 id="创建Droplet"><a href="#创建Droplet" class="headerlink" title="创建Droplet"></a>创建Droplet</h3><p>毫不犹豫5刀乞丐版。别问为啥，因为穷，一小时0.7美元，资本主义就是好！<br><img src="https://upload-images.jianshu.io/upload_images/2847713-4a59c3102f2a4bf9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>选择旧金山的数据中心。<br><img src="https://upload-images.jianshu.io/upload_images/2847713-ddb50cd1b9118cf9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png">  </p>
<p>最后不需要的就不用看了，一路下来，CREAT。<br>OK  </p>
<p><img src="https://upload-images.jianshu.io/upload_images/2847713-12df869ec9b211fc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png">  </p>
<h3 id="初始配置"><a href="#初始配置" class="headerlink" title="初始配置"></a>初始配置</h3><p>邮箱收到邮件：<br><img src="https://upload-images.jianshu.io/upload_images/2847713-9eb13d1a00c9e154.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png">  </p>
<p>告诉了你IP地址（IP Address）、用户名（Username）和初始密码（Password），记住这3项内容下面会用到。<br>下载putty来登陆服务器。<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">打开putty，输入如下内容：</div><div class="line">Host Name：输入自己的IP</div><div class="line">Port：输入22</div><div class="line">Connection type：SSH</div><div class="line">Saved Sessions：给自己取个炫酷的登录名即可</div></pre></td></tr></table></figure></p>
<p>按照邮件中的信息登录putty。<br><img src="https://upload-images.jianshu.io/upload_images/2847713-ae73417ea4813642.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>在login as处输入自己的用户名即root，回车，提示输入密码，输入密码后点击回车即可登陆（ps.注意这里输入的密码是不可见的，也就是你输入密码的时候你看不到输入了任何东西。pps. putty中的粘贴快捷键是鼠标右键，千万不要用ctrl+v，也就是说你在邮件中复制了初始密码，在这里点一下右键，虽然什么都没有看到但是也点击回车即可。  </p>
<p><img src="https://upload-images.jianshu.io/upload_images/2847713-efacd2d779dff61e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>初始密码校验成功后，会让你必须修改初始密码：<br><img src="https://upload-images.jianshu.io/upload_images/2847713-dd65df08da826d21.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png">  </p>
<p>输初始密码后，输入新密码两次，出现#号即表示登录成功。<br><img src="https://upload-images.jianshu.io/upload_images/2847713-a38c28559eb35200.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png">  </p>
<h3 id="配置运行文件"><a href="#配置运行文件" class="headerlink" title="配置运行文件"></a>配置运行文件</h3><p>先查看Python版本：<br><img src="https://upload-images.jianshu.io/upload_images/2847713-f7263bf0d26f2742.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>确定Python就好了。  </p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;DigitalOcean里面还有60美金，可以用一下，部署了服务器，我可能就不会再去折腾这个爬虫应用了。  &lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="https://x-nicolo.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Python" scheme="https://x-nicolo.github.io/tags/Python/"/>
    
      <category term="爬虫" scheme="https://x-nicolo.github.io/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="服务器" scheme="https://x-nicolo.github.io/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>校招助手数据存储PyMySQL</title>
    <link href="https://x-nicolo.github.io/2018/07/23/%E6%A0%A1%E6%8B%9B%E5%8A%A9%E6%89%8B%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8PyMySQL/"/>
    <id>https://x-nicolo.github.io/2018/07/23/校招助手数据存储PyMySQL/</id>
    <published>2018-07-23T11:39:10.000Z</published>
    <updated>2018-07-23T11:39:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>之前做了<a href="https://x-nicolo.github.io/2018/06/13/%E6%8B%9B%E8%81%98%E4%BC%9A%E4%BF%A1%E6%81%AF%E6%8F%90%E9%86%92%E4%B9%8B%E5%BE%AE%E4%BF%A1%E6%9C%BA%E5%99%A8%E4%BA%BA/">招聘会信息提醒之微信机器人</a>，微信群已经建了7西电+5个西邮，总体的用户大概有3000多。小目标是让西电今年找工作的人都能用上。<br>和几个小伙伴一拍即合，做个小程序吧！<br><a id="more"></a><br>老生长谈，爬虫的三步走：  </p>
<ul>
<li>模拟登陆  </li>
<li>数据下载</li>
<li>数据存储  </li>
</ul>
<p>今天就做了这第三步。作为小程序的数据来源。 </p>
<h2 id="建数据库"><a href="#建数据库" class="headerlink" title="建数据库"></a>建数据库</h2><p>建库建表。<br><img src="https://upload-images.jianshu.io/upload_images/2847713-18bdcb5e204d749a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p>要注意的问题：  </p>
<ul>
<li>infoid 选择自动递增</li>
<li>contents的文本信息较多，应选择text </li>
</ul>
<h2 id="数据库链接"><a href="#数据库链接" class="headerlink" title="数据库链接"></a>数据库链接</h2><p>Python中先导入PyMySQL，链接语句(私密信息已做处理)：<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">connection = pymysql.connect(<span class="attribute">host</span>=<span class="string">'XXXX'</span>, <span class="attribute">user</span>=<span class="string">'XXX'</span>, <span class="attribute">password</span>=<span class="string">'XXX'</span>, <span class="attribute">db</span>=<span class="string">'campushire'</span>, <span class="attribute">charset</span>=<span class="string">'utf8'</span>,</div><div class="line">                                     <span class="attribute">cursorclass</span>=pymysql.cursors.DictCursor)</div><div class="line">cur = connection.cursor()</div><div class="line">cur.execute(<span class="string">"USE campushire"</span>)</div></pre></td></tr></table></figure></p>
<p>这样就可以链接到数据库，选择自己要插入数据的表。  </p>
<h2 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h2><p>数据好插入，复杂的地方在于如何插入自己想要的数据，剔除掉不想要的数据。简单的几个函数，这里还是要再次提及，之前有使用过，但是又忘了。。。<br><figure class="highlight scheme"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[<span class="name">s.extract</span>() for s in tiao_bsObj.findAll(<span class="symbol">'p</span>', attrs=&#123;<span class="symbol">'class</span><span class="symbol">':</span> <span class="string">"windowClose"</span>&#125;)]</div></pre></td></tr></table></figure></p>
<p>嗯，这个的语句的意思是，去除指定标签下的所以内容。这里用于剔除睿思具体内容之前的编辑信息，以及就业信息网上的关闭窗口等等诸如此类不是正文的信息。  </p>
<p>插入语句：  </p>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">cur.execute(<span class="string">"INSERT INTO hireinfo (title,links,viewnum,class,contents) VALUES (<span class="subst">\"</span>%s<span class="subst">\"</span>,<span class="subst">\"</span>%s<span class="subst">\"</span>,<span class="subst">\"</span>%s<span class="subst">\"</span>,<span class="subst">\"</span>%s<span class="subst">\"</span>,<span class="subst">\"</span>%s<span class="subst">\"</span>)"</span>, (P,L,V,C,R))</div><div class="line">cur.connection.commit()</div><div class="line">time.sleep(<span class="number">3</span>)</div></pre></td></tr></table></figure>
<p>插入，提交。延时还是要做的，好像是之前访问数据库太快导致中断？？？  </p>
<p>需要注意的是，表里列的名称要写对，以及VALUES的个数，还有后面要插入的数据与之前的一一对应。  </p>
<p>基本这样就OK了。  </p>
<p><img src="https://upload-images.jianshu.io/upload_images/2847713-3d84ccdbe27dbc47.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png">  </p>
<p>吃饭去，饿死了。  </p>
<p>代码：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># coding:utf - 8</span></div><div class="line"><span class="keyword">import</span> urllib.request</div><div class="line"><span class="keyword">import</span> sys, io</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"><span class="keyword">import</span> itchat</div><div class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</div><div class="line"><span class="keyword">import</span> time</div><div class="line"><span class="keyword">import</span> re</div><div class="line"><span class="keyword">import</span> _thread</div><div class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlopen</div><div class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"><span class="keyword">import</span> time  <span class="comment"># 导入包</span></div><div class="line"><span class="keyword">import</span> urllib.request</div><div class="line"><span class="keyword">import</span> pymysql</div><div class="line">sys.stdout = io.TextIOWrapper(sys.stdout.buffer,encoding=<span class="string">'utf8'</span>)</div><div class="line"></div><div class="line"><span class="comment"># from __future__ import with_statement</span></div><div class="line"><span class="keyword">import</span> contextlib</div><div class="line"><span class="keyword">try</span>:</div><div class="line">    <span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlencode</div><div class="line"><span class="keyword">except</span> ImportError:</div><div class="line">    <span class="keyword">from</span> urllib <span class="keyword">import</span> urlencode</div><div class="line"><span class="keyword">try</span>:</div><div class="line">    <span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlopen</div><div class="line"><span class="keyword">except</span> ImportError:</div><div class="line">    <span class="keyword">from</span> urllib2 <span class="keyword">import</span> urlopen</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">getPageContent</span><span class="params">(url)</span>:</span></div><div class="line">    headers = &#123;<span class="string">'User-Agent'</span> : <span class="string">'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:29.0) Gecko/20100101 Firefox/29.0'</span>&#125;</div><div class="line">    req = urllib.request.Request(url=url,headers=headers)</div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        res = urllib.request.urlopen(req)</div><div class="line">    <span class="keyword">except</span> urllib.error.URLError <span class="keyword">as</span> e:</div><div class="line">        <span class="keyword">return</span> e</div><div class="line">    page_content = res.read()</div><div class="line">    page_content=BeautifulSoup(page_content,<span class="string">"lxml"</span>)</div><div class="line">    <span class="keyword">return</span> page_content</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">    itchat.send_msg(jobinfo2, userName)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">make_tiny</span><span class="params">(url)</span>:</span></div><div class="line">    request_url = (<span class="string">'http://tinyurl.com/api-create.php?'</span> +</div><div class="line">                   urlencode(&#123;<span class="string">'url'</span>: url&#125;))</div><div class="line">    <span class="keyword">with</span> contextlib.closing(urlopen(request_url)) <span class="keyword">as</span> response:</div><div class="line">        <span class="keyword">return</span> response.read().decode(<span class="string">'utf-8'</span>)</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">timer</span><span class="params">(n)</span>:</span></div><div class="line">    itchat.auto_login(hotReload=<span class="keyword">True</span>)  <span class="comment"># 可设置hotReload = True</span></div><div class="line">    time.sleep(n)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">rs</span><span class="params">()</span>:</span></div><div class="line">    pageURL = set()</div><div class="line">    <span class="comment"># job_rs = '🔴今日睿思校园招聘'+"\n"+'[机器喵自动获取，仅供参考]'+"\n"+'有问题请艾特群主@肖洒'+"\n"+'更多有意思的小玩意'+"\n"+'👉https://x-nicolo.github.io/'+"\n"+"--------------------"+"\n"</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">10</span>):</div><div class="line">        pages = <span class="string">'http://rsbbs.xidian.edu.cn/forum.php?mod=forumdisplay&amp;fid=554&amp;page='</span> + str(i) + <span class="string">'&amp;mobile=2'</span></div><div class="line">        <span class="keyword">if</span> pages <span class="keyword">not</span> <span class="keyword">in</span> pageURL:</div><div class="line">            headers = &#123;</div><div class="line">                <span class="string">'User-Agent'</span>: <span class="string">r'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) '</span></div><div class="line">                              <span class="string">r'Chrome/45.0.2454.85 Safari/537.36 115Browser/6.0.3'</span>,</div><div class="line">                <span class="string">'Referer'</span>: <span class="string">r'http://rsbbs.xidian.edu.cn'</span>,</div><div class="line">                <span class="string">'Connection'</span>: <span class="string">'keep-alive'</span>&#125;</div><div class="line">            req = request.Request(pages, headers=headers)</div><div class="line">            html = request.urlopen(req)</div><div class="line">            bsObj = BeautifulSoup(html.read(), <span class="string">"lxml"</span>)</div><div class="line">            [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> bsObj.findAll(<span class="string">'i'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"pstatus"</span>&#125;)]</div><div class="line">            tiezi = bsObj.findAll(<span class="string">"ul"</span>)</div><div class="line">            <span class="keyword">for</span> tiaos <span class="keyword">in</span> tiezi:</div><div class="line">                <span class="keyword">for</span> tiao <span class="keyword">in</span> tiaos.findAll(<span class="string">'a'</span>):</div><div class="line">                    <span class="keyword">for</span> person <span class="keyword">in</span> tiao.findAll(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"by"</span>&#125;):</div><div class="line">                        T = person.get_text().strip()</div><div class="line">                        [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> tiao.findAll(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"by"</span>&#125;)]</div><div class="line">                    <span class="comment"># title</span></div><div class="line">                    P = tiao.get_text().strip().strip(<span class="string">'【散金币】'</span>).strip(<span class="string">'【金币】'</span>).strip(<span class="string">'（散金币）'</span>).strip(<span class="string">'（金币）'</span>) </div><div class="line">                    <span class="keyword">if</span> <span class="string">'href'</span> <span class="keyword">in</span> tiao.attrs:</div><div class="line">                        <span class="keyword">try</span>:</div><div class="line">                            tiao_links = <span class="string">"http://rsbbs.xidian.edu.cn/"</span> + tiao.attrs[<span class="string">'href'</span>]</div><div class="line">                            tiao_html = urlopen(tiao_links)</div><div class="line">                            L=str(make_tiny(tiao_links))</div><div class="line">                            tiao_bsObj = BeautifulSoup(tiao_html.read(), <span class="string">"lxml"</span>)</div><div class="line">                            [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> tiao_bsObj.findAll(<span class="string">'i'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"pstatus"</span>&#125;)]</div><div class="line">                            content = tiao_bsObj.findAll(<span class="string">"div"</span>, &#123;<span class="string">"class"</span>: <span class="string">"message"</span>&#125;)[<span class="number">0</span>]</div><div class="line">                            R = content.get_text().strip()</div><div class="line">                            V=<span class="number">0</span></div><div class="line">                            C=<span class="string">'rs'</span></div><div class="line"></div><div class="line">                        <span class="keyword">except</span> (ValueError, IndexError) <span class="keyword">as</span> e:</div><div class="line">                            <span class="keyword">pass</span></div><div class="line">                        pageURL.add(pages)</div><div class="line">                                            </div><div class="line">                        cur.execute(<span class="string">"INSERT INTO hireinfo (title,links,contents,viewnum,class) VALUES (%s,%s,%s,%s,%s)"</span>, (P,L,R,V,C))</div><div class="line">                        cur.connection.commit()</div><div class="line">        time.sleep(<span class="number">3</span>)  <span class="comment"># 设置时间间隔为3秒</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">xdjobs</span><span class="params">()</span>:</span></div><div class="line">    <span class="comment"># job_rs = '🔴就业信息网最新10条信息'+"\n"+'[机器喵自动获取，仅供参考]'+"\n"+'有问题请艾特群主@肖洒'+"\n"+'更多有意思的小玩意'+"\n"+'👉https://x-nicolo.github.io/'+"\n"+"--------------------"+"\n"</span></div><div class="line">    url = <span class="string">'http://job.xidian.edu.cn/html/zpxx/jobs/'</span></div><div class="line">    headers = &#123;<span class="string">'User-Agent'</span> : <span class="string">'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:29.0) Gecko/20100101 Firefox/29.0'</span>&#125;  </div><div class="line">    req = urllib.request.Request(url=url,headers=headers)</div><div class="line">    res = urllib.request.urlopen(req)</div><div class="line">    page_content = res.read()</div><div class="line">    page_content=BeautifulSoup(page_content,<span class="string">"lxml"</span>)</div><div class="line">    job_content = page_content.find(<span class="string">"div"</span>, &#123;<span class="string">"class"</span>: <span class="string">"content"</span>&#125;)</div><div class="line">    rows = job_content.findAll(<span class="string">"span"</span>)</div><div class="line">    job_info=[]</div><div class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> rows:</div><div class="line">        <span class="keyword">for</span> cell <span class="keyword">in</span> row.findAll(<span class="string">'a'</span>):</div><div class="line">            info=cell.get_text()</div><div class="line">            P = cell.get_text().strip()</div><div class="line">            tiao_links = <span class="string">"http://job.xidian.edu.cn"</span> + cell.attrs[<span class="string">'href'</span>]</div><div class="line">            L=str(make_tiny(tiao_links))</div><div class="line"></div><div class="line">            tiao_html = urllib.request.Request(url=tiao_links,headers=headers)</div><div class="line">            tiao_res = urllib.request.urlopen(tiao_html)</div><div class="line">            tiao_bsObj = BeautifulSoup(tiao_res.read(), <span class="string">"lxml"</span>)</div><div class="line"></div><div class="line">            [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> tiao_bsObj.findAll(<span class="string">'p'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"windowClose"</span>&#125;)]</div><div class="line">            [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> tiao_bsObj.findAll(<span class="string">'p'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"arcInfo"</span>&#125;)]</div><div class="line"></div><div class="line">            [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> tiao_bsObj.findAll(<span class="string">'a'</span>, attrs=&#123;<span class="string">'href'</span>: <span class="string">"javascript:window.print()"</span>&#125;)]</div><div class="line">            [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> tiao_bsObj.findAll(<span class="string">'a'</span>, attrs=&#123;<span class="string">'href'</span>: <span class="string">"javascript:window.close()"</span>&#125;)]</div><div class="line">            [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> tiao_bsObj.findAll(<span class="string">'div'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"context"</span>&#125;)]</div><div class="line">            </div><div class="line">            content = tiao_bsObj.findAll(<span class="string">"div"</span>, &#123;<span class="string">"class"</span>: <span class="string">"content"</span>&#125;)[<span class="number">0</span>]</div><div class="line">            R = content.get_text().strip()</div><div class="line">            <span class="comment"># print(R)</span></div><div class="line"></div><div class="line">            V=<span class="number">0</span></div><div class="line">            C=<span class="string">"就业信息网"</span></div><div class="line"></div><div class="line">            cur.execute(<span class="string">"INSERT INTO hireinfo (title,links,viewnum,class,contents) VALUES (%s,%s,%s,%s,%s)"</span>, (P,L,V,C,R))</div><div class="line">            cur.connection.commit()</div><div class="line">            time.sleep(<span class="number">3</span>) </div><div class="line"></div><div class="line">connection = pymysql.connect(host=<span class="string">'XXX'</span>, user=<span class="string">'XXX'</span>, password=<span class="string">'XXX'</span>, db=<span class="string">'campushire'</span>, charset=<span class="string">'utf8'</span>,</div><div class="line">                                     cursorclass=pymysql.cursors.DictCursor)</div><div class="line">cur = connection.cursor()</div><div class="line">cur.execute(<span class="string">"USE campushire"</span>)</div><div class="line">xdjobs()</div><div class="line">rs()</div></pre></td></tr></table></figure></p>
<p>sql：<a href="http://oeiseebmx.bkt.clouddn.com/campushire.sql" target="_blank" rel="external">点击下载</a></p>
<h2 id="程序及数据库更新"><a href="#程序及数据库更新" class="headerlink" title="程序及数据库更新"></a>程序及数据库更新</h2><ul>
<li>增加了宣讲会信息的爬取 </li>
<li>增加了数据库操作的时间插入<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment"># coding:utf - 8</span></div><div class="line"><span class="keyword">import</span> urllib.request</div><div class="line"><span class="keyword">import</span> sys, io</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"><span class="keyword">import</span> itchat</div><div class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</div><div class="line"><span class="keyword">import</span> time</div><div class="line"><span class="keyword">import</span> re</div><div class="line"><span class="keyword">import</span> _thread</div><div class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlopen</div><div class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"><span class="keyword">import</span> urllib.request</div><div class="line"><span class="keyword">import</span> pymysql</div><div class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</div><div class="line"><span class="keyword">import</span> datetime</div><div class="line"><span class="keyword">import</span> time</div><div class="line">sys.stdout = io.TextIOWrapper(sys.stdout.buffer,encoding=<span class="string">'utf8'</span>)</div><div class="line"><span class="keyword">import</span> contextlib</div><div class="line"><span class="keyword">try</span>:</div><div class="line">    <span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlencode</div><div class="line"><span class="keyword">except</span> ImportError:</div><div class="line">    <span class="keyword">from</span> urllib <span class="keyword">import</span> urlencode</div><div class="line"><span class="keyword">try</span>:</div><div class="line">    <span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlopen</div><div class="line"><span class="keyword">except</span> ImportError:</div><div class="line">    <span class="keyword">from</span> urllib2 <span class="keyword">import</span> urlopen</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">getJobInfo</span><span class="params">(page_content)</span>:</span></div><div class="line">    job_content = page_content.find(<span class="string">"table"</span>, &#123;<span class="string">"class"</span>: <span class="string">"table cxxt-table"</span>&#125;)</div><div class="line">    rows = job_content.findAll(<span class="string">"tr"</span>)[<span class="number">1</span>:]</div><div class="line">    job_info=[]</div><div class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> rows:</div><div class="line">        <span class="keyword">for</span> cell <span class="keyword">in</span> row.findAll(<span class="string">'td'</span>)[:<span class="number">-2</span>]:</div><div class="line">            info=cell.get_text().replace(<span class="string">'&amp;nbsp'</span>,<span class="string">''</span>).strip(<span class="string">"官云宣讲"</span>).strip(<span class="string">"官"</span>).strip(<span class="string">"西电"</span>).strip(<span class="string">"交大"</span>).strip(<span class="string">"西工大"</span>)</div><div class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> cell.findAll(<span class="string">'span'</span>)[<span class="number">1</span>:<span class="number">2</span>]:</div><div class="line">                info1=i.get_text()</div><div class="line">                job_info.append(info1)</div><div class="line">            job_info.append(info)</div><div class="line">    <span class="keyword">return</span> job_info[<span class="number">1</span>:]</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">getPageContent</span><span class="params">(url)</span>:</span></div><div class="line">    headers = &#123;<span class="string">'User-Agent'</span> : <span class="string">'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:29.0) Gecko/20100101 Firefox/29.0'</span>&#125;</div><div class="line">    req = urllib.request.Request(url=url,headers=headers)</div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        res = urllib.request.urlopen(req)</div><div class="line">    <span class="keyword">except</span> urllib.error.URLError <span class="keyword">as</span> e:</div><div class="line">        <span class="keyword">return</span> e</div><div class="line">    page_content = res.read()</div><div class="line">    page_content=BeautifulSoup(page_content,<span class="string">"lxml"</span>)</div><div class="line">    <span class="keyword">return</span> page_content</div><div class="line">    </div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">make_tiny</span><span class="params">(url)</span>:</span></div><div class="line">    request_url = (<span class="string">'http://tinyurl.com/api-create.php?'</span> +</div><div class="line">                   urlencode(&#123;<span class="string">'url'</span>: url&#125;))</div><div class="line">    <span class="keyword">with</span> contextlib.closing(urlopen(request_url)) <span class="keyword">as</span> response:</div><div class="line">        <span class="keyword">return</span> response.read().decode(<span class="string">'utf-8'</span>)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">timer</span><span class="params">(n)</span>:</span></div><div class="line">    itchat.auto_login(hotReload=<span class="keyword">True</span>)</div><div class="line">    time.sleep(n)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">rs</span><span class="params">()</span>:</span></div><div class="line">    pageURL = set()</div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">10</span>):</div><div class="line">        pages = <span class="string">'http://rsbbs.xidian.edu.cn/forum.php?mod=forumdisplay&amp;fid=554&amp;page='</span> + str(i) + <span class="string">'&amp;mobile=2'</span></div><div class="line">        <span class="keyword">if</span> pages <span class="keyword">not</span> <span class="keyword">in</span> pageURL:</div><div class="line">            headers = &#123;</div><div class="line">                <span class="string">'User-Agent'</span>: <span class="string">r'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) '</span></div><div class="line">                              <span class="string">r'Chrome/45.0.2454.85 Safari/537.36 115Browser/6.0.3'</span>,</div><div class="line">                <span class="string">'Referer'</span>: <span class="string">r'http://rsbbs.xidian.edu.cn'</span>,</div><div class="line">                <span class="string">'Connection'</span>: <span class="string">'keep-alive'</span>&#125;</div><div class="line">            req = request.Request(pages, headers=headers)</div><div class="line">            html = request.urlopen(req)</div><div class="line">            bsObj = BeautifulSoup(html.read(), <span class="string">"lxml"</span>)</div><div class="line">            [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> bsObj.findAll(<span class="string">'i'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"pstatus"</span>&#125;)]</div><div class="line">            tiezi = bsObj.findAll(<span class="string">"ul"</span>)</div><div class="line">            <span class="keyword">for</span> tiaos <span class="keyword">in</span> tiezi:</div><div class="line">                <span class="keyword">for</span> tiao <span class="keyword">in</span> tiaos.findAll(<span class="string">'a'</span>):</div><div class="line">                    <span class="keyword">for</span> person <span class="keyword">in</span> tiao.findAll(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"by"</span>&#125;):</div><div class="line">                        T = person.get_text().strip()</div><div class="line">                        [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> tiao.findAll(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"by"</span>&#125;)]</div><div class="line">                    P = tiao.get_text().strip().strip(<span class="string">'【散金币】'</span>).strip(<span class="string">'【金币】'</span>).strip(<span class="string">'（散金币）'</span>).strip(<span class="string">'（金币）'</span>) </div><div class="line">                    <span class="keyword">if</span> <span class="string">'href'</span> <span class="keyword">in</span> tiao.attrs:</div><div class="line">                        <span class="keyword">try</span>:</div><div class="line">                            tiao_links = <span class="string">"http://rsbbs.xidian.edu.cn/"</span> + tiao.attrs[<span class="string">'href'</span>]</div><div class="line">                            tiao_html = urlopen(tiao_links)</div><div class="line">                            L=str(make_tiny(tiao_links))</div><div class="line">                            tiao_bsObj = BeautifulSoup(tiao_html.read(), <span class="string">"lxml"</span>)</div><div class="line">                            [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> tiao_bsObj.findAll(<span class="string">'i'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"pstatus"</span>&#125;)]</div><div class="line">                            content = tiao_bsObj.findAll(<span class="string">"div"</span>, &#123;<span class="string">"class"</span>: <span class="string">"message"</span>&#125;)[<span class="number">0</span>]</div><div class="line">                            R = content.get_text().strip()</div><div class="line">                            V=<span class="number">0</span></div><div class="line">                            C=<span class="string">'rs'</span></div><div class="line">                            time_now = time.strftime(<span class="string">'%H%M'</span>, time.localtime(time.time()))</div><div class="line">                            DBT = datetime.datetime.now().strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>)</div><div class="line">                        <span class="keyword">except</span> (ValueError, IndexError) <span class="keyword">as</span> e:</div><div class="line">                            <span class="keyword">pass</span></div><div class="line">                        pageURL.add(pages)</div><div class="line">                                            </div><div class="line">                        cur.execute(<span class="string">"INSERT INTO hireinfo (title,links,contents,viewnum,classname,dbtime) VALUES (%s,%s,%s,%s,%s,%s)"</span>, (P,L,R,V,C,DBT))</div><div class="line">                        cur.connection.commit()</div><div class="line">        time.sleep(<span class="number">3</span>)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">xdjobs</span><span class="params">()</span>:</span></div><div class="line">    url = <span class="string">'http://job.xidian.edu.cn/html/zpxx/jobs/'</span></div><div class="line">    headers = &#123;<span class="string">'User-Agent'</span> : <span class="string">'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:29.0) Gecko/20100101 Firefox/29.0'</span>&#125;  </div><div class="line">    req = urllib.request.Request(url=url,headers=headers)</div><div class="line">    res = urllib.request.urlopen(req)</div><div class="line">    page_content = res.read()</div><div class="line">    page_content=BeautifulSoup(page_content,<span class="string">"lxml"</span>)</div><div class="line">    job_content = page_content.find(<span class="string">"div"</span>, &#123;<span class="string">"class"</span>: <span class="string">"content"</span>&#125;)</div><div class="line">    rows = job_content.findAll(<span class="string">"span"</span>)</div><div class="line">    job_info=[]</div><div class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> rows:</div><div class="line">        <span class="keyword">for</span> cell <span class="keyword">in</span> row.findAll(<span class="string">'a'</span>):</div><div class="line">            info=cell.get_text()</div><div class="line">            P = cell.get_text().strip()</div><div class="line">            tiao_links = <span class="string">"http://job.xidian.edu.cn"</span> + cell.attrs[<span class="string">'href'</span>]</div><div class="line">            L=str(make_tiny(tiao_links))</div><div class="line">            tiao_html = urllib.request.Request(url=tiao_links,headers=headers)</div><div class="line">            tiao_res = urllib.request.urlopen(tiao_html)</div><div class="line">            tiao_bsObj = BeautifulSoup(tiao_res.read(), <span class="string">"lxml"</span>)</div><div class="line">            [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> tiao_bsObj.findAll(<span class="string">'p'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"windowClose"</span>&#125;)]</div><div class="line">            [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> tiao_bsObj.findAll(<span class="string">'p'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"arcInfo"</span>&#125;)]</div><div class="line">            [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> tiao_bsObj.findAll(<span class="string">'a'</span>, attrs=&#123;<span class="string">'href'</span>: <span class="string">"javascript:window.print()"</span>&#125;)]</div><div class="line">            [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> tiao_bsObj.findAll(<span class="string">'a'</span>, attrs=&#123;<span class="string">'href'</span>: <span class="string">"javascript:window.close()"</span>&#125;)]</div><div class="line">            [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> tiao_bsObj.findAll(<span class="string">'div'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"context"</span>&#125;)]</div><div class="line">            content = tiao_bsObj.findAll(<span class="string">"div"</span>, &#123;<span class="string">"class"</span>: <span class="string">"content"</span>&#125;)[<span class="number">0</span>]</div><div class="line">            R = content.get_text().strip()</div><div class="line">            time_now = time.strftime(<span class="string">'%H%M'</span>, time.localtime(time.time()))</div><div class="line">            DBT = datetime.datetime.now().strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>)</div><div class="line">            V=<span class="number">0</span></div><div class="line">            C=<span class="string">"就业信息网"</span></div><div class="line">            cur.execute(<span class="string">"INSERT INTO hireinfo (title,links,viewnum,classname,contents,dbtime) VALUES (%s,%s,%s,%s,%s,%s)"</span>, (P,L,V,C,R,DBT))</div><div class="line">            cur.connection.commit()</div><div class="line">            time.sleep(<span class="number">3</span>) </div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">seminar</span><span class="params">()</span>:</span></div><div class="line">    url = [<span class="string">'https://xjh.haitou.cc/xa/uni-29'</span>,<span class="string">'https://xjh.haitou.cc/xa/uni-28'</span>,<span class="string">'https://xjh.haitou.cc/xa/uni-27'</span>]</div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> url:</div><div class="line">            page_content=getPageContent(i)</div><div class="line">            job_content = page_content.find(<span class="string">"table"</span>, &#123;<span class="string">"class"</span>: <span class="string">"table cxxt-table"</span>&#125;)</div><div class="line">            rows = job_content.findAll(<span class="string">"tr"</span>)[<span class="number">1</span>:]</div><div class="line">            job_info=[]</div><div class="line">            <span class="keyword">for</span> row <span class="keyword">in</span> rows:</div><div class="line">                <span class="keyword">for</span> cell <span class="keyword">in</span> row.findAll(<span class="string">'td'</span>)[:<span class="number">-2</span>]:</div><div class="line">                    info=cell.get_text().replace(<span class="string">'&amp;nbsp'</span>,<span class="string">''</span>).strip(<span class="string">"官云宣讲"</span>).strip(<span class="string">"热"</span>).strip(<span class="string">"官"</span>).strip(<span class="string">"西电"</span>).strip(<span class="string">"交大"</span>).strip(<span class="string">"西工大"</span>)</div><div class="line">                    <span class="keyword">for</span> i <span class="keyword">in</span> cell.findAll(<span class="string">'span'</span>)[<span class="number">1</span>:<span class="number">2</span>]:</div><div class="line">                        info1=i.get_text()</div><div class="line">                        job_info.append(info1)</div><div class="line">                    job_info.append(info)</div><div class="line">                    jobinfo=job_info[<span class="number">1</span>:]</div><div class="line">                time_now = time.strftime(<span class="string">'%H%M'</span>, time.localtime(time.time()))</div><div class="line">                DBT = datetime.datetime.now().strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>)</div><div class="line">                U = jobinfo[<span class="number">0</span>]</div><div class="line">                C = jobinfo[<span class="number">1</span>]</div><div class="line">                T = jobinfo[<span class="number">3</span>]</div><div class="line">                P = jobinfo[<span class="number">4</span>]</div><div class="line">                cur.execute(<span class="string">"INSERT INTO seminar (university,company,time1,position,dbtime) VALUES (%s,%s,%s,%s,%s)"</span>, (U,C,T,P,DBT))</div><div class="line">                cur.connection.commit()</div><div class="line">                job_info=[]</div><div class="line">    <span class="keyword">except</span>:</div><div class="line">        jobinfo=[<span class="string">"【西电今日无招聘会信息哦】"</span>]</div><div class="line">        print(<span class="string">"jobinfo"</span>)</div><div class="line">connection = pymysql.connect(host=<span class="string">'localhost'</span>, user=<span class="string">'root'</span>, password=<span class="string">'root'</span>, db=<span class="string">'campushire'</span>, charset=<span class="string">'utf8'</span>,</div><div class="line">                                     cursorclass=pymysql.cursors.DictCursor)</div><div class="line">cur = connection.cursor()</div><div class="line">cur.execute(<span class="string">"USE campushire"</span>)</div><div class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">    time_now = time.strftime(<span class="string">'%H%M'</span>,time.localtime(time.time()))</div><div class="line">    <span class="keyword">if</span> int(time_now)  == <span class="number">0000</span>:</div><div class="line">        xdjobs()</div><div class="line">        rs()</div><div class="line">        seminar()</div></pre></td></tr></table></figure>
</li>
</ul>
<p><a href="http://oeiseebmx.bkt.clouddn.com/CampusHire.sql" target="_blank" rel="external">new sql downlaod</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前做了&lt;a href=&quot;https://x-nicolo.github.io/2018/06/13/%E6%8B%9B%E8%81%98%E4%BC%9A%E4%BF%A1%E6%81%AF%E6%8F%90%E9%86%92%E4%B9%8B%E5%BE%AE%E4%BF%A1%E6%9C%BA%E5%99%A8%E4%BA%BA/&quot;&gt;招聘会信息提醒之微信机器人&lt;/a&gt;，微信群已经建了7西电+5个西邮，总体的用户大概有3000多。小目标是让西电今年找工作的人都能用上。&lt;br&gt;和几个小伙伴一拍即合，做个小程序吧！&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="https://x-nicolo.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Python" scheme="https://x-nicolo.github.io/tags/Python/"/>
    
      <category term="爬虫" scheme="https://x-nicolo.github.io/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="MySQL" scheme="https://x-nicolo.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Java面试笔记</title>
    <link href="https://x-nicolo.github.io/2018/07/23/Java%E9%9D%A2%E8%AF%95%E7%AC%94%E8%AE%B0/"/>
    <id>https://x-nicolo.github.io/2018/07/23/Java面试笔记/</id>
    <published>2018-07-23T01:19:17.000Z</published>
    <updated>2018-07-23T01:19:17.000Z</updated>
    
    <content type="html"><![CDATA[<p>站在巨人的肩膀上，好记性不如烂键盘。  </p>
<p>All from <a href="https://love2.io/@hakukata/doc/Java-Interview-Question/java/what_ate_object-oriented_features.md" target="_blank" rel="external">java面试笔记</a><br><a id="more"></a></p>
<blockquote>
<p>本开源书 forked from Java 面试笔记，作者为 <a href="https://github.com/DONGChuan" target="_blank" rel="external">DONGChuan</a>，欢迎大家 star 原作者的 repo，以便获得最新更新，谢谢！  </p>
</blockquote>
<h2 id="说一说Java"><a href="#说一说Java" class="headerlink" title="说一说Java"></a>说一说Java</h2><p>sun公司在1995创建。<br>特点：  </p>
<ul>
<li>面向对象</li>
<li>平台独立</li>
<li>解释性语言</li>
<li>多线程</li>
</ul>
<p>Java最重要的特点就平台独立，平台独立意味着可以在一个系统编译它然后在另一个系统使用它。  </p>
<h3 id="Java为什么是高效的？"><a href="#Java为什么是高效的？" class="headerlink" title="Java为什么是高效的？"></a>Java为什么是高效的？</h3><p>因为Java使用Just-In-Time（即时）编译器。<br>把Java字节码直接转换成可以直接发送给处理器的指令的程序。  </p>
<h3 id="列举出2个IDE"><a href="#列举出2个IDE" class="headerlink" title="列举出2个IDE"></a>列举出2个IDE</h3><p>eclipse，NetBeans。  </p>
<h3 id="面向对象的特征有那些方面？"><a href="#面向对象的特征有那些方面？" class="headerlink" title="面向对象的特征有那些方面？"></a>面向对象的特征有那些方面？</h3><ul>
<li>封装</li>
</ul>
<p>让变量和访问这个变量的方法放在一起，将一个类中的成员变量全部定义成私有的，只有这个类自己的方法才可以访问到这些成员变量。</p>
<ul>
<li>抽象  </li>
</ul>
<p>声明方法的存在而不去实现它的类叫做抽象类。 </p>
<ul>
<li>继承  </li>
</ul>
<p>继承是子类自动共享父类数据和方法的机制。是类之间的一种关系，提高了软件的可重用性和可扩展性。  </p>
<ul>
<li>多态  </li>
</ul>
<p>一个方法或者一个对象可以有不同的形式。  </p>
<h3 id="JDK-JRE-JVM"><a href="#JDK-JRE-JVM" class="headerlink" title="JDK JRE JVM"></a>JDK JRE JVM</h3><ul>
<li>解释它们的区别  </li>
</ul>
<h4 id="JDK"><a href="#JDK" class="headerlink" title="JDK"></a>JDK</h4><p>Java Development Kit用作开发，包含JRE，编译器和其他的工具。可以让开发者开发，编译，执行Java应用程序。  </p>
<h4 id="JRE"><a href="#JRE" class="headerlink" title="JRE"></a>JRE</h4><p>Java运行时环境是将要执行Java虚拟机，可以想象成它是一个容器，JVM是它的内容。  </p>
<p>JRE = JVM + Java Packages Classes(like util, math, lang, awt,swing etc)+runtime libraries.  </p>
<h4 id="JVM"><a href="#JVM" class="headerlink" title="JVM"></a>JVM</h4><p>Java virtual machine（Java虚拟机）是一个可以执行Java编译产生的Java class文件的虚拟机进程，是一个纯的运行环境。  </p>
<h4 id="JVM不是平台独立的"><a href="#JVM不是平台独立的" class="headerlink" title="JVM不是平台独立的"></a>JVM不是平台独立的</h4><p>Java被设计成允许应用程序可以运行在任意的平台，而不需要程序员为每一个平台单独重写或者是重新编译。Java虚拟机让这个变为可能，因为它知道底层硬件平台的指令长度和其他特性。  </p>
<h2 id="什么是对象？"><a href="#什么是对象？" class="headerlink" title="什么是对象？"></a>什么是对象？</h2><ul>
<li>对象是程序运行时的实体  </li>
<li>它的状态存储在变量  </li>
<li>行为是通过方法实现的</li>
<li>方法上操作对象的内部状态</li>
<li>方法是对象对对象的通信的主要手段</li>
</ul>
<h3 id="一个类是由哪些变量构成的？"><a href="#一个类是由哪些变量构成的？" class="headerlink" title="一个类是由哪些变量构成的？"></a>一个类是由哪些变量构成的？</h3><ul>
<li>本地变量<br>在方法体，构造体内部定义的变量。</li>
<li>实例变量<br>在类里但是不在方法里。<br>在类被载入的时候被实例化。</li>
<li>类变量<br>在类里但在方法外，加了static关键字，也叫做静态变量。  </li>
</ul>
<h3 id="静态变量和实例变量的区别？"><a href="#静态变量和实例变量的区别？" class="headerlink" title="静态变量和实例变量的区别？"></a>静态变量和实例变量的区别？</h3><ul>
<li>语法上定义区别：静态变量前要加static关键字，而实例变量前则不加。  </li>
<li>在程序运行时的区别：<br>实例变量属于某个对象的属性，必须创建了实例对象（new一个)其中的实例变量才会被分配空间，才能使用这个实例变量。  </li>
</ul>
<p>静态变量不属于某个实例对象，而是属于类，所以也称为类变量，只要程序加载了类的字节码，不用创建任何实例对象，静态变量就会被分配空间，静态变量就可以被使用了。  </p>
<ul>
<li>总结：实例变量必须创建对象后才可以通过这个对象来使用，静态变量则可以直接使用类名来引用。  </li>
</ul>
<h2 id="封装Encapsulation"><a href="#封装Encapsulation" class="headerlink" title="封装Encapsulation"></a>封装Encapsulation</h2><ul>
<li>使一个类的变量私有化private  </li>
<li>提供public方法来调用这些变量。所以外部类是进不去的。这些变量被隐藏在类里。只能通过已经定义的public方法调用。  </li>
</ul>
<p>好处：<br>当我们修改我们的实现的代码时，不会破坏其他调用我们这部分代码的代码。可维护性，灵活性和可扩展。  </p>
<h2 id="多态Polymorphism"><a href="#多态Polymorphism" class="headerlink" title="多态Polymorphism"></a>多态Polymorphism</h2><p>多态就是指一个变量，一个方法或者一个对象可以有不同的形式。  </p>
<ul>
<li><p>重载overloading<br>就是一个类里有两个或更多的函数，名字相同而他们的参数不同。  </p>
</li>
<li><p>覆盖overriding  </p>
</li>
</ul>
<p>是发生在子类中！也就是说必须有继承的情况下才有覆盖发生。当你继承父类的方法时，如果感到那个方法不爽，功能要变，就把那个函数在子类中重新实现一遍。  </p>
<h3 id="构造器是否可以被覆盖？"><a href="#构造器是否可以被覆盖？" class="headerlink" title="构造器是否可以被覆盖？"></a>构造器是否可以被覆盖？</h3><p>构造器不能被继承，所以不能被覆盖，但是可以被重载。  </p>
<h2 id="接口Interface"><a href="#接口Interface" class="headerlink" title="接口Interface"></a>接口Interface</h2><p>接口是抽象方法的集合。一个类实现一个或多个接口。因此继承了接口的抽象方法。  </p>
<p><strong>接口的特点</strong>  </p>
<ul>
<li>不能实例化  </li>
<li>没有构造体  </li>
<li>所有方法都是抽象的（abstract）。同时也是隐式的public static。也就是说声明时，可以省略public static。</li>
<li>只能含有声明为finalstatic的field。  </li>
</ul>
<h3 id="接口和抽象的区别"><a href="#接口和抽象的区别" class="headerlink" title="接口和抽象的区别"></a>接口和抽象的区别</h3><ul>
<li>抽象类可以有构造方法，接口不行  </li>
<li>抽象类可以有普通成员变量，接口没有  </li>
<li>抽象类可以有非抽象的方法，接口必须全部抽象</li>
<li>抽象类的访问类型都可以，接口只能是public abstract<br><strong>一个类可以实现多个接口，但只能继承一个抽象类</strong></li>
</ul>
<h3 id="基础概念题"><a href="#基础概念题" class="headerlink" title="基础概念题"></a>基础概念题</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">下面哪一项说法是正确的</div><div class="line"></div><div class="line">在一个子类里,一个方法不是 public 就不能重载</div><div class="line">覆盖一个方法只需要满足相同的方法名和参数类型</div><div class="line">覆盖一个方法必须方法名,参数和返回类型都相同</div><div class="line">一个覆盖的方法必须有相同的方法名,参数名和参数类型</div><div class="line">答案 <span class="number">3</span></div><div class="line"></div><div class="line">覆盖函数与被覆盖函数只有函数体不同</div><div class="line"></div><div class="line">下面哪一项说法是错误的</div><div class="line"></div><div class="line">重载函数的函数名必须相同</div><div class="line">重载函数必须在参数个数或类型上有所不同</div><div class="line">重载函数的返回值必须相同</div><div class="line">重载函数的函数体可以不同</div><div class="line">答案 <span class="number">3</span></div><div class="line"></div><div class="line">函数的重载与函数的返回值无关</div><div class="line"></div><div class="line">下面哪一项说法是正确的</div><div class="line"></div><div class="line">静态方法不能被覆盖</div><div class="line">静态方法不能被声明称私有</div><div class="line">私有方法不能被重载</div><div class="line">一个重载的方法在基类中不通过检查不能抛出异常</div><div class="line">答案 <span class="number">1</span></div></pre></td></tr></table></figure>
<h3 id="super关键字"><a href="#super关键字" class="headerlink" title="super关键字"></a>super关键字</h3><ul>
<li>调用父类（superclass）的成员或者方法  </li>
<li>调用父类的构造函数  </li>
<li>调用父类的成员或者方法  </li>
</ul>
<p>如果你的方法复写一个父类成员的方法，可以通过super关键字调用父类的方法。考虑下面的父类：<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Superclass</span>&#123;</div><div class="line">    <span class="function">pubulic <span class="keyword">void</span> <span class="title">printMethod</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        System.<span class="keyword">out</span>.println(<span class="string">"Printed in Superclass"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>下面一个子类叫做Subclass，覆写了printMethond():<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">public <span class="class"><span class="keyword">class</span> <span class="title">Subclass</span> <span class="keyword">extends</span> <span class="title">Superclass</span></span>&#123;</div><div class="line">    <span class="comment">//overrides printMethod in Superclass</span></div><div class="line">    public void printMethod()&#123;</div><div class="line">        <span class="keyword">super</span>.printMethod();</div><div class="line">        <span class="type">System</span>.out.println(<span class="string">"Printed in Subclass"</span>);</div><div class="line">    &#125;</div><div class="line">    public static void main(<span class="type">String</span>[] args)&#123;</div><div class="line">        <span class="type">Subclass</span> s = <span class="keyword">new</span> <span class="type">Subclass</span>&#123;&#125;;</div><div class="line">        s.printMethod();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>输出<br><figure class="highlight erlang"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Printed Superclass.</div><div class="line">Printed Subclsaa</div></pre></td></tr></table></figure></p>
<ul>
<li>调用父类的构造函数  </li>
</ul>
<p>使用super关键字调用父类的构造函数，下面的MountainBike类是Bicycle类的子类，它调用了父类的构造方法并加入了自己的初始化代码：<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="title">MountainBike</span><span class="params">(<span class="keyword">int</span> startHeight,<span class="keyword">int</span> startCadence,<span class="keyword">int</span> startSpeed,<span class="keyword">int</span> startGear)</span></span>&#123;</div><div class="line">    <span class="keyword">super</span>(startCadence,startSpeed,StartGear);</div><div class="line">    seatHeight = startHeight;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>调用父类的构造体必须放在 <strong>第一行</strong><br>使用：<br><figure class="highlight abnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">super()<span class="comment">;</span></div></pre></td></tr></table></figure></p>
<p>或者：<br><figure class="highlight gams"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">super(<span class="keyword">parameter</span> list);</div></pre></td></tr></table></figure></p>
<p>通过super（），父类的无参构造体会被调用。通过super(parameter list)，父类对应参数的构造体会被调用。  </p>
<p>注意：构造体如果没有显式的调用父类的构造体，Java编译器会自动调用父类的无参构造。如果父类没有无参构造，就会报错。  </p>
<h3 id="Super程序题"><a href="#Super程序题" class="headerlink" title="Super程序题"></a>Super程序题</h3><p><strong>题目一</strong>  </p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Base</span></span>&#123;</div><div class="line"><span class="type">Base</span>()&#123;</div><div class="line"><span class="type">System</span>.out.println(“<span class="type">Base</span>”);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">public <span class="class"><span class="keyword">class</span> <span class="title">Checket</span> <span class="keyword">extends</span> <span class="title">Base</span></span>&#123;</div><div class="line"><span class="type">Checket</span>()&#123;</div><div class="line"><span class="type">System</span>.out.println(“<span class="type">Checket</span>”);</div><div class="line"><span class="keyword">super</span>();</div><div class="line">&#125;</div><div class="line">public static void main(<span class="type">String</span> argv[])&#123;</div><div class="line"><span class="type">Checket</span> a = <span class="keyword">new</span> <span class="type">Checket</span>();</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>输出是什么？ 是 compile time error. super() 必须放在前面.放在前面之后,输出为 Base Checket  </p>
<p><strong>题目二</strong>  </p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.util.<span class="type">Date</span>;</div><div class="line"></div><div class="line">public <span class="class"><span class="keyword">class</span> <span class="title">Test</span> <span class="keyword">extends</span> <span class="title">Date</span></span>&#123;</div><div class="line"></div><div class="line">public static void main(<span class="type">String</span>[] args) &#123;</div><div class="line"><span class="keyword">new</span> <span class="type">Test</span>().test();</div><div class="line">&#125;</div><div class="line"></div><div class="line">public void test()&#123;</div><div class="line"><span class="type">System</span>.out.println(<span class="keyword">super</span>.getClass().getName());</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>返回的结果是 Test<br>因为super.getClass().getName() 调用了父类的 getClass() 方法, 返回当前类<br>如果想得到父类的名称，应该用如下代码：<br>getClass().getSuperClass().getName()  </p>
<p><strong>题目三</strong>  </p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Car</span> </span>&#123;</div><div class="line"></div><div class="line">String name = “Car”;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span></span>&#123;</div><div class="line"><span class="keyword">return</span> name;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">demarre</span><span class="params">()</span></span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">B</span> <span class="keyword">extends</span> <span class="title">Car</span></span>&#123;</div><div class="line">String name = “B”;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span></span>&#123;</div><div class="line"><span class="keyword">return</span> name;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demarre</span><span class="params">()</span> </span>&#123;</div><div class="line">System.out.println(getName() + “ demarre”);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">C</span> <span class="keyword">extends</span> <span class="title">B</span></span>&#123;</div><div class="line">String name = “C”;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span></span>&#123;</div><div class="line"><span class="keyword">return</span> name;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demarreWithSuper</span><span class="params">()</span> </span>&#123;</div><div class="line">System.out.println(<span class="keyword">super</span>.getName() + “ demarre”);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demarreNoSuper</span><span class="params">()</span> </span>&#123;</div><div class="line">System.out.println(getName() + “ demarre”);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">D</span> <span class="keyword">extends</span> <span class="title">B</span></span>&#123;</div><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span></span>&#123;</div><div class="line"><span class="keyword">return</span> name;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demarreNoSuper</span><span class="params">()</span> </span>&#123;</div><div class="line">System.out.println(getName() + “ demarre”);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">B b = <span class="keyword">new</span> B();</div><div class="line">b.demarre();</div><div class="line"></div><div class="line">Car bCar = <span class="keyword">new</span> B();</div><div class="line">bCar.demarre();</div><div class="line"></div><div class="line">C c = <span class="keyword">new</span> C();</div><div class="line">c.demarre(); <span class="comment">// c 里并没有定义这个函数</span></div><div class="line">c.demarreWithSuper();</div><div class="line">c.demarreNoSuper();</div><div class="line"></div><div class="line">D d = <span class="keyword">new</span> D();</div><div class="line">d.demarre();</div><div class="line"></div><div class="line">transfer(c); <span class="comment">// TransferC</span></div><div class="line">transfer((B)c); <span class="comment">// TransferB</span></div><div class="line">transfer(d); <span class="comment">// TransferB</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">transfer</span><span class="params">(B b)</span></span>&#123;</div><div class="line">System.out.println(“TransferB”);</div><div class="line">b.demarre();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">transfer</span><span class="params">(C c)</span></span>&#123;</div><div class="line">System.out.println(“TransferC”);</div><div class="line">c.demarre();</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>输出是<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">B </span>demarre</div><div class="line"><span class="keyword">B </span>demarre</div><div class="line">C demarre</div><div class="line"><span class="keyword">B </span>demarre</div><div class="line">C demarre</div><div class="line"><span class="keyword">B </span>demarre</div><div class="line"><span class="symbol">TransferC</span></div><div class="line">C demarre</div><div class="line"><span class="symbol">TransferB</span></div><div class="line">C demarre</div><div class="line"><span class="symbol">TransferB</span></div><div class="line"><span class="keyword">B </span>demarre</div></pre></td></tr></table></figure></p>
<h3 id="this程序题"><a href="#this程序题" class="headerlink" title="this程序题"></a>this程序题</h3><p><strong>题目一</strong><br><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">class</span> <span class="title">Tester</span>&#123;</div><div class="line"><span class="keyword">int</span> <span class="keyword">var</span>;</div><div class="line">Tester(<span class="keyword">double</span> <span class="keyword">var</span>)&#123;<span class="keyword">this</span>.<span class="keyword">var</span> = (<span class="keyword">int</span>)<span class="keyword">var</span>&#125;;</div><div class="line">Tester(<span class="keyword">int</span> <span class="keyword">var</span>)&#123;<span class="keyword">this</span>(“hello”);</div><div class="line">Tester(String s)&#123;</div><div class="line"><span class="keyword">this</span>();</div><div class="line">System.<span class="keyword">out</span>.println(s);</div><div class="line">&#125;</div><div class="line"></div><div class="line">Tester()&#123; System.<span class="keyword">out</span>.println(“good-bye”);&#125;貌似和 <span class="keyword">this</span> 无关但是很重要</div><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Base</span> &#123;</div><div class="line"><span class="keyword">int</span> i;</div><div class="line"></div><div class="line">Base()&#123;</div><div class="line"><span class="keyword">add</span>(<span class="number">1</span>);</div><div class="line">System.<span class="keyword">out</span>.println(i);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span>(<span class="params"><span class="keyword">int</span> v</span>)</span>&#123;</div><div class="line">i+=v;</div><div class="line">System.<span class="keyword">out</span>.println(i);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MyBase</span> <span class="title">extends</span> <span class="title">Base</span>&#123;</div><div class="line">MyBase()&#123;</div><div class="line">System.<span class="keyword">out</span>.println(“MyBase”);</div><div class="line"><span class="keyword">add</span>(<span class="number">2</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span>(<span class="params"><span class="keyword">int</span> v</span>)</span>&#123;</div><div class="line">System.<span class="keyword">out</span>.println(“MyBase Add”);</div><div class="line">i+=v*<span class="number">2</span>;</div><div class="line">System.<span class="keyword">out</span>.println(i);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Test</span> &#123;</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(<span class="params">String[] args</span>) </span>&#123;</div><div class="line">go(<span class="keyword">new</span> MyBase());</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">go</span>(<span class="params">Base b</span>)</span>&#123;</div><div class="line">b.<span class="keyword">add</span>(<span class="number">8</span>);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">输出的结果是 <span class="number">22</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">Tester t = <span class="keyword">new</span> Tester(<span class="number">5</span>) 的输出是什么?</div><div class="line"></div><div class="line">good-bye</div><div class="line">hello</div></pre></td></tr></table></figure></p>
<p><strong>题目二</strong><br><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">貌似和 <span class="keyword">this</span> 无关但是很重要</div><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Base</span> &#123;</div><div class="line"><span class="keyword">int</span> i;</div><div class="line"></div><div class="line">Base()&#123;</div><div class="line"><span class="keyword">add</span>(<span class="number">1</span>);</div><div class="line">System.<span class="keyword">out</span>.println(i);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span>(<span class="params"><span class="keyword">int</span> v</span>)</span>&#123;</div><div class="line">i+=v;</div><div class="line">System.<span class="keyword">out</span>.println(i);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MyBase</span> <span class="title">extends</span> <span class="title">Base</span>&#123;</div><div class="line">MyBase()&#123;</div><div class="line">System.<span class="keyword">out</span>.println(“MyBase”);</div><div class="line"><span class="keyword">add</span>(<span class="number">2</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span>(<span class="params"><span class="keyword">int</span> v</span>)</span>&#123;</div><div class="line">System.<span class="keyword">out</span>.println(“MyBase Add”);</div><div class="line">i+=v*<span class="number">2</span>;</div><div class="line">System.<span class="keyword">out</span>.println(i);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Test</span> &#123;</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(<span class="params">String[] args</span>) </span>&#123;</div><div class="line">go(<span class="keyword">new</span> MyBase());</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">go</span>(<span class="params">Base b</span>)</span>&#123;</div><div class="line">b.<span class="keyword">add</span>(<span class="number">8</span>);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">输出的结果是 <span class="number">22</span></div></pre></td></tr></table></figure></p>
<p>子类会首先调用父类的构造函数,在父类的构造函数 Base() 中执行 add() 方法. 但这个 add()方法由于是在新建MyBase对象时调用的. 所以是执行的MyBase中的add方法在Java中，子类的构造过程中，必须 调用其父类的构造函数,是因为有继承关系存在时,子类要把父类的内容继承下来,通过什么手段做到的？这样：当你new一个子类对象的时候,必须首先要new一个父类的对像出来,这个父类对象位于子类对象的内部,所以说，子类对象比父类对象大,子类对象里面包含了一个父类的对象,这是内存中真实的情况.构造方法是new一个对象的时候,必须要调的方法,这是规定,要new父类对象出来,那么肯定要调用其构造方法,所以<br><strong>第一个规则</strong>：子类的构造过程中，必须 调用其父类的构造方法一个类,如果我们不写构造方法,那么编译器会帮我们加上一个默认的构造方法,所谓默认的构造方法,就是没有参数的构造方法,但是如果你自己写了构造方法,那么编译器就不会给你添加了所以有时候当你new一个子类对象的时候，肯定调用了子类的构造方法，但是在子类构造方法中我们并没有显示的调用基类的构造方法，就是没写，如：super(); 并没有这样写，但是 <strong>第二个规则</strong>：如果子类的构造方法中没有显示的调用基类构造方法，则系统默认调用基类无参数的构造方法.</p>
<p>注意：如果子类的构造方法中既没有显示的调用基类构造方法，而基类中又没有默认无参的构造方法，则编译出错，所以，通常我们需要显示的：super(参数列表)，来调用父类有参数的构造函数  </p>
<h3 id="抽象abstract"><a href="#抽象abstract" class="headerlink" title="抽象abstract"></a>抽象abstract</h3><p><strong>Abstract类</strong>  </p>
<ul>
<li>不能被实例化<br><strong>Abstract方法</strong>  </li>
<li>在父类里定义抽象方法，在子类里定义这个具体的方法，所以它是抽象的。  </li>
</ul>
<p><strong>好处</strong><br>减少复杂度和提高可维护性  </p>
<h3 id="abstract相关问题"><a href="#abstract相关问题" class="headerlink" title="abstract相关问题"></a>abstract相关问题</h3><p><strong>题目一</strong><br>什么是抽象类  </p>
<ul>
<li>A class with no methods  </li>
<li>A class with no concrete subclasses</li>
<li>A class with at least one undefiend message</li>
<li>None of above</li>
</ul>
<p>答案是第四个，可以定义一个抽象空类：<br>abstract class emptyAb{}   </p>
<p><strong>题目二</strong>  </p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Base</span></span>&#123;</div><div class="line"><span class="function"><span class="keyword">abstract</span> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">myfunc</span><span class="params">()</span></span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Abs</span> <span class="keyword">extends</span> <span class="title">Base</span></span>&#123;</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String argv[])</span></span>&#123;</div><div class="line">Abs a = <span class="keyword">new</span> Abs();</div><div class="line">a.amethod();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">amethod</span><span class="params">()</span></span>&#123;</div><div class="line">System.out.println(“A method”);</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>运行的结果：  </p>
<p>The compiler will complain errors in Abs class  </p>
<h3 id="this（）和-super-在构造体里怎么用？"><a href="#this（）和-super-在构造体里怎么用？" class="headerlink" title="this（）和 super()在构造体里怎么用？"></a>this（）和 super()在构造体里怎么用？</h3><p>this()在同一个类的构造体被调用，this（“toto”，“tata”,1)相当于调用对应参数的构造体。<br>super（）用来调用父类构造体。  </p>
<h2 id="Static关键字"><a href="#Static关键字" class="headerlink" title="Static关键字"></a>Static关键字</h2><p>Static关键字表明一个成员变量或者是成员方法可以在没有所属的类的实例的情况下直接被访问。<br>声明为static的方法有一下几条限制：  </p>
<ul>
<li>仅能调用其他的static方法</li>
<li>只能访问static变量</li>
<li>不能以任何方式引用this或super</li>
<li>不能被覆盖</li>
</ul>
<p><strong>声明为static的变量实质上就是全局变量</strong>  （+final就是全局变量）<br>当声明一个对象时，并不产生static变量的拷贝，而是该类所有的实例变量共用同一个static变量。<br>对于静态类，只能用于嵌套类内部类中。  </p>
<h3 id="Static相关问题"><a href="#Static相关问题" class="headerlink" title="Static相关问题"></a>Static相关问题</h3><h4 id="Static关键字是什么意思？"><a href="#Static关键字是什么意思？" class="headerlink" title="Static关键字是什么意思？"></a>Static关键字是什么意思？</h4><p>Static关键字表明一个成员变量或者成员方法可以在没有所属的类的实例的情况下直接被访问。  </p>
<h4 id="是否可以override一个static的方法？"><a href="#是否可以override一个static的方法？" class="headerlink" title="是否可以override一个static的方法？"></a>是否可以override一个static的方法？</h4><p>不能被覆盖，因为方法覆盖是基于运行时动态绑定的，而static方法是编译时静态绑定的。  </p>
<h4 id="一个static方法内部调用非static方法？"><a href="#一个static方法内部调用非static方法？" class="headerlink" title="一个static方法内部调用非static方法？"></a>一个static方法内部调用非static方法？</h4><p>不可以。因为非static方法是要与对象关联在一起的，须创建一个对象的实例后，才可以在该对象上进行方法调用。而static方法被调用时不需要创建对象，可以直接调用，也就是说，当一个static方法被调用时，可能还没有创建任何实例对象。如果从一个static方法中发出对非static方法的调用，那个非static方法是关联到哪个对象上的呢？这个逻辑无法成立。所以，一个static方法内部发出对非static方法的调用。  </p>
<h4 id="是否可以在static环境中访问非static变量"><a href="#是否可以在static环境中访问非static变量" class="headerlink" title="是否可以在static环境中访问非static变量"></a>是否可以在static环境中访问非static变量</h4><p>同上。  </p>
<h2 id="单例模式-Singleton"><a href="#单例模式-Singleton" class="headerlink" title="单例模式  Singleton"></a>单例模式  Singleton</h2><p>Java中单例模式定义：“一个类有且仅有一个实例，并且自行实例化向整个系统提供。”  </p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="comment">// do something</span></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">SingletonHolder</span> </span>&#123;</div><div class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Singleton INSTANCE = <span class="keyword">new</span> Singleton();</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Singleton <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> SingletonHolder.INSTANCE;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>多选题注意</strong>  </p>
<ul>
<li>一是单例模式的类只提供私有的构造函数</li>
<li>二是类定义中含有一个该类的静态私有对象</li>
<li>三是该类提供一个静态的公有的函数用于创建或获取它本身的静态私有对象  </li>
</ul>
<h2 id="equals-与-hashcode"><a href="#equals-与-hashcode" class="headerlink" title="equals() 与 hashcode()"></a>equals() 与 hashcode()</h2><h3 id="equals"><a href="#equals" class="headerlink" title="equals"></a>equals</h3><p>如果需要比较对象的值，就要equal方法。JDK中equal方法的实现：<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object obj)</span></span>&#123;</div><div class="line">    <span class="keyword">return</span>(<span class="keyword">this</span>==obj);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>也就是说，默认情况下比较的还是对象的地址，所以如果把对象放入Set中等操作，就要重写equal方法。重写之后的equals()比较的就是对象的内容了。  </p>
<h3 id="和equal的区别"><a href="#和equal的区别" class="headerlink" title="== 和equal的区别"></a>== 和equal的区别</h3><ul>
<li>==比较引用的地址  </li>
<li>equal比较引用的内容（Object类本身除外）</li>
</ul>
<figure class="highlight vhdl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">String</span> obj1 = <span class="keyword">new</span> <span class="built_in">String</span>(“xyz”);</div><div class="line"><span class="built_in">String</span> obj2 = <span class="keyword">new</span> <span class="built_in">String</span>(“xyz”);</div><div class="line"></div><div class="line">// <span class="keyword">If</span> <span class="built_in">String</span> obj2 = obj1, the output will be <span class="literal">true</span></div><div class="line"></div><div class="line"><span class="keyword">if</span>(obj1 == obj2)</div><div class="line">System.<span class="keyword">out</span>.printlln(“obj1==obj2 <span class="keyword">is</span> <span class="literal">TRUE</span>”);</div><div class="line"><span class="keyword">else</span></div><div class="line">System.<span class="keyword">out</span>.println(“obj1==obj2 <span class="keyword">is</span> <span class="literal">FALSE</span>”);</div><div class="line"></div><div class="line">// It will print obj1==obj2 <span class="keyword">is</span> <span class="literal">False</span></div><div class="line">// <span class="keyword">If</span> <span class="built_in">String</span> obj2 = obj1, the output will be <span class="literal">true</span></div></pre></td></tr></table></figure>
<p>默认的, equals() 方法实际上和 “==” 在 object 类里是一样的. 但是这个方法在每一个子类里都会被覆写用来比较引用的内容 (因为每个类都继承了 object 类并覆写了这个方法)<br><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">String</span> obj1 = <span class="keyword">new</span> <span class="built_in">String</span>(“xyz”);</div><div class="line"><span class="built_in">String</span> obj2 = <span class="keyword">new</span> <span class="built_in">String</span>(“xyz”);</div><div class="line"></div><div class="line"><span class="keyword">if</span>(obj1.equals(obj2))</div><div class="line">System.<span class="keyword">out</span>.printlln(“obj1==obj2 <span class="keyword">is</span> <span class="literal">TRUE</span>”);</div><div class="line"><span class="keyword">else</span></div><div class="line">System.<span class="keyword">out</span>.println(“obj1==obj2 <span class="keyword">is</span> <span class="literal">FALSE</span>”);</div><div class="line"></div><div class="line">Resultat: obj1==obj2 <span class="keyword">is</span> <span class="literal">TRUE</span></div></pre></td></tr></table></figure></p>
<h2 id="所有类的基类是哪个类？"><a href="#所有类的基类是哪个类？" class="headerlink" title="所有类的基类是哪个类？"></a>所有类的基类是哪个类？</h2><p>java.lang.Object  </p>
<h2 id="Java支持多继承吗？"><a href="#Java支持多继承吗？" class="headerlink" title="Java支持多继承吗？"></a>Java支持多继承吗？</h2><p>Java不支持多继承。  </p>
<h2 id="Path与Classpath"><a href="#Path与Classpath" class="headerlink" title="Path与Classpath"></a>Path与Classpath</h2><p>Path和Classpath是操作系统的环境变量  </p>
<ul>
<li>Path定义了系统可以在哪里找到可执行文件（.exe）  </li>
<li>calsspath定义了.class文件的位置</li>
</ul>
<h2 id="反射机制"><a href="#反射机制" class="headerlink" title="反射机制"></a>反射机制</h2><p>Java反射机制是在运行状态中，对于任意一个类，都能够知道这个类的所有属性和方法；对于任意一个对象，都能够调用它的任意一个方法和属性；这种动态获取的信息以及动态调用对象的方法的功能称为Java语言的反射机制。    </p>
<p><strong>主要作用</strong>  </p>
<ul>
<li>运行时去得类的方法和字段的相关信息  </li>
<li>创建某个类的新实例（.newInstance()）</li>
<li>取得字段引用直接获取和设置对象字段，无论访问修饰符是什么  </li>
</ul>
<p><strong>用处如下</strong>  </p>
<ul>
<li>观察或操作应用程序的运行时行为</li>
<li>调试或测试程序，因为可以直接访问方法、构造函数和成员字段</li>
<li>通过名字调用不知道的方法并使用该信息来创建对象和调用方法  </li>
</ul>
<h2 id="final关键字"><a href="#final关键字" class="headerlink" title="final关键字"></a>final关键字</h2><p>final类是不能被继承的，这个类就是最终的了，不需要再被继承，比如很多Java标准库就是final类。<br>final方法不能被子方法重写，fianl+static变量表示常量  </p>
<h3 id="一个-Java源文件是否可以包含多个类"><a href="#一个-Java源文件是否可以包含多个类" class="headerlink" title="一个.Java源文件是否可以包含多个类"></a>一个.Java源文件是否可以包含多个类</h3><p>可以的，但只能有一个是public的类而且这个public类必须与文件名一样  </p>
<h2 id="amp-与-amp-amp"><a href="#amp-与-amp-amp" class="headerlink" title="&amp;与&amp;&amp;"></a>&amp;与&amp;&amp;</h2><p>都可以表示逻辑与and，但是&amp;&amp;具有短路功能，第一个表达式错了，第二个就被忽略。&amp;的表达式是先计算后求与。  </p>
<p>除此之外&amp;可以用作位运算。<br>| 也有类似差异。  </p>
<h2 id="int与integer"><a href="#int与integer" class="headerlink" title="int与integer"></a>int与integer</h2><p>int是数据类型，integer是int的封装。  </p>
<p>int默认值为0，integer默认值为null，所以integer可以用来判断变量是否赋值，即null和0的区别。  </p>
<h3 id="integer通过与-比较"><a href="#integer通过与-比较" class="headerlink" title="integer通过与==比较"></a>integer通过与==比较</h3><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">Integer</span> a=<span class="number">10</span>;</div><div class="line"><span class="built_in">Integer</span> b=<span class="number">10</span>;</div><div class="line"><span class="built_in">Integer</span> c=<span class="keyword">new</span> <span class="built_in">Integer</span>(<span class="number">10</span>);</div><div class="line"><span class="built_in">Integer</span> d=<span class="keyword">new</span> <span class="built_in">Integer</span>(<span class="number">10</span>);</div><div class="line"></div><div class="line">System.<span class="keyword">out</span>.println(a==b);</div><div class="line">System.<span class="keyword">out</span>.println(c==d);</div><div class="line"></div><div class="line">System.<span class="keyword">out</span>.println(a.equals(b));</div><div class="line">System.<span class="keyword">out</span>.println(c.equals(d));</div><div class="line"></div><div class="line">System.<span class="keyword">out</span>.println(a.equals(c));</div></pre></td></tr></table></figure>
<p>结果：<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="literal">true</span></div><div class="line"><span class="literal">false</span></div><div class="line"><span class="literal">true</span></div><div class="line"><span class="literal">true</span></div><div class="line"><span class="literal">true</span></div></pre></td></tr></table></figure></p>
<p>==比较的是对象的引用<br>当且仅当比较的两个引用指向同一对象才返回true  </p>
<figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">Integer a = <span class="number">127</span><span class="comment">;</span></div><div class="line">Integer <span class="keyword">b </span>= <span class="number">127</span><span class="comment">;</span></div><div class="line">Integer c = <span class="number">128</span><span class="comment">;</span></div><div class="line">Integer d = <span class="number">128</span><span class="comment">;</span></div><div class="line">System.out.println(a == <span class="keyword">b);</span></div><div class="line"><span class="keyword">System.out.println(c </span>== d)<span class="comment">;</span></div></pre></td></tr></table></figure>
<p>结果：<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="literal">true</span></div><div class="line"><span class="literal">false</span></div></pre></td></tr></table></figure></p>
<p>Integer i = XXX<br>看看Integer的源代码就知道了，其实就是Integer吧-128-127（一个字节的二进制补码）之间的每个值都建立了一个对应的Integer对象，类似一个缓存，由于Integer是不可变类，因此这些缓存的Integer对象可以安全的重复使用。  </p>
<p>Integer i= XXX，就是Integer i=Integer.valueOf(XXX),首先判断XXX是否在-128-127之间，如果是直接return已经存在的对象，所以是同一个引用，否则就只能new一个了，那就是不同的引用了。  </p>
<h2 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h2><p>异常是指Java程序运行时（非编译）所发生的非正常情况或错误。Java使用面向对象的方式来处理异常，它把程序中发生的每个异常也都分别封装到一个对象来表示的，该对象中包含有异常的信息。。Java对异常进行了分类，所有异常的根类为java.lang.Throwable,Throwable下面又派生了两个子类：Error和Exception。  </p>
<h3 id="error和exception"><a href="#error和exception" class="headerlink" title="error和exception"></a>error和exception</h3><p>Error表示应用程序本身无法克服和恢复的一种严重问题，程序只有死的份。<br>例如，说内存溢出和线程死锁等系统问题。Exception表示程序还能够克服和恢复的问题，比如一个输入参数不对引起的异常，其中又分为系统异常和普通异常。</p>
<h3 id="Checked异常与Runtime异常"><a href="#Checked异常与Runtime异常" class="headerlink" title="Checked异常与Runtime异常"></a>Checked异常与Runtime异常</h3><ul>
<li>Runtime exceptions是runtime阶段碰到的异常，在编译的时候不需要检查，例如：  </li>
</ul>
<p>数组脚本越界，空指针异常，类转换异常。  </p>
<ul>
<li>Checked exception是在编译阶段的异常，并且强制检查。  </li>
</ul>
<p>编译器强制checked异常必须try..catch处理或用throws声明继续抛给上层调用方法处理，这就是为什么叫checked异常，而runtime异常可以处理也可以不处理，所以，编译器不强制用try..catch处理或用throws声明，所以Runtime异常也称为unchecked异常。  </p>
<h3 id="把对象声明成异常"><a href="#把对象声明成异常" class="headerlink" title="把对象声明成异常"></a>把对象声明成异常</h3><ul>
<li>如果想要一个对象作为一个异常对象被抛出，应该怎么做？  </li>
</ul>
<p>继承Exception类，或者继承exception类里面的子类，这样可以更加具体的表明哪一类异常。  </p>
<ul>
<li>如果我的类已经继承了其他的类，那应该怎么做？  </li>
</ul>
<p>这样其实就没有办法，Java不支持多继承，目前版本的JDK没有相关的接口。  </p>
<h3 id="处理异常的方法"><a href="#处理异常的方法" class="headerlink" title="处理异常的方法"></a>处理异常的方法</h3><ul>
<li>try catch</li>
<li>throws</li>
</ul>
<p>这两种方法有什么区别：</p>
<p>第一种方法是自己处理异常。<br>第二种异常是把异常抛给调用这个方法的模块去处理。一般Java的库就是这么处理的。  </p>
<h3 id="每一个try都必须有一个catch吗"><a href="#每一个try都必须有一个catch吗" class="headerlink" title="每一个try都必须有一个catch吗?"></a>每一个try都必须有一个catch吗?</h3><p>不是必须的，至少要有一个catch或者finally块。  </p>
<h3 id="try模块里的return"><a href="#try模块里的return" class="headerlink" title="try模块里的return"></a>try模块里的return</h3><ul>
<li>如果在try模块里最后加了个return，finally模块还会执行吗？  </li>
</ul>
<p>是的，finally模块会先执行再return。  </p>
<ul>
<li>如果换成system.exit(0)?</li>
</ul>
<p>那就不会了，System.exit(0)时。会立马跳出程序。  </p>
<ul>
<li>try catch finally的执行顺序  </li>
</ul>
<p>特殊情况就是里面加return。</p>
<p>举个例子理解：  </p>
<figure class="highlight abnf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">public int getNumber() &#123;</div><div class="line"></div><div class="line">int a = <span class="number">0</span><span class="comment">;</span></div><div class="line"></div><div class="line">try &#123;</div><div class="line">String s = “t”<span class="comment">; ————————（1）</span></div><div class="line"><span class="attribute">a</span> = Integer.parseInt(s)<span class="comment">;———–（2）</span></div><div class="line">return a<span class="comment">;</span></div><div class="line">&#125; catch (NumberFormatException e) &#123;</div><div class="line"><span class="attribute">a</span> = <span class="number">1</span><span class="comment">;———————————–（3）</span></div><div class="line">return a<span class="comment">;——————————-（4）</span></div><div class="line">&#125; finally &#123;</div><div class="line"><span class="attribute">a</span> = <span class="number">2</span><span class="comment">;———————————–（5）</span></div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>1、程序中标记的代码的执行顺序？<br>2、改程序的最后返回值（外部调用时）？<br>程序按顺序从上到下执行到（2），字符”t”转换成整数失败，产生异常并被捕获，<br>于是对a赋值成1，并将此值作为此方法的返回值（可以这么认为，该方法有一个存放返回值的空间，此时将1放在此处）。由于存在finally块，在返回前将该方法的内部变量a修改成2。<br>所以程序将按标记的顺序执行，外部调用该方法时得到的结果是1  </p>
<p>先执行try或catch里里面的代码，然后再执行finally，再执行try或catch里面的return.  </p>
<h2 id="final，finally，finalize的区别"><a href="#final，finally，finalize的区别" class="headerlink" title="final，finally，finalize的区别"></a>final，finally，finalize的区别</h2><ul>
<li>final用于声明属性，方法和类，分别表示属性不可变，方法不可覆盖，类不可继承。  </li>
<li>finally是异常处理语句结构的一部分，表示总是在执行。  </li>
<li>finalize是Object类的一个方法，在垃圾收集器执行的时候会被调用被回收对象的此方法，可以覆盖此方法提供垃圾收集时的其他资源回收，例如关闭文件等。JVM不保证此方法总被调用。  </li>
</ul>
<h2 id="垃圾回收-Gabage-Collection"><a href="#垃圾回收-Gabage-Collection" class="headerlink" title="垃圾回收 Gabage Collection"></a>垃圾回收 Gabage Collection</h2><h3 id="什么是GC？"><a href="#什么是GC？" class="headerlink" title="什么是GC？"></a>什么是GC？</h3><p>GC是垃圾收集的意思，内存处理是编程人员容易出现问题的地方，忘记或者错误的内存回收会导致程序或系统的不稳定甚至崩溃。Java提供的GC功能可以自动检测对象是否超过作用域从而达到自动回收内存的目的，Java语言没有提供释放已分配内存的显示操作方法。  </p>
<h3 id="垃圾回收器的基本原理是什么？"><a href="#垃圾回收器的基本原理是什么？" class="headerlink" title="垃圾回收器的基本原理是什么？"></a>垃圾回收器的基本原理是什么？</h3><p>当程序员创建对象时，GC就开始监控这个对象的地址、大小以及使用情况。<br>通常，GC采用有向图的方式记录和管理堆（heap）中的所有对象。通过这种方式确定哪些对象是“可达的”，哪些对象是”不可达的”。当GC确定一些对象为“不可达”时（比如设置为null），GC就有责任回收这些内存空间。  </p>
<h3 id="有什么办法主动通知虚拟机进行垃圾回收？"><a href="#有什么办法主动通知虚拟机进行垃圾回收？" class="headerlink" title="有什么办法主动通知虚拟机进行垃圾回收？"></a>有什么办法主动通知虚拟机进行垃圾回收？</h3><p>可以，程序员可以手动执行System.gc()，通知GC运行，但是Java语言规范并不保证GC一定会执行，这个选择题的时候有考。   </p>
<h3 id="heap和stack"><a href="#heap和stack" class="headerlink" title="heap和stack"></a>heap和stack</h3><p>Java的内存分为两类：  </p>
<ul>
<li>堆内存heap</li>
<li>栈内存stack</li>
</ul>
<p><strong>stack</strong>是指程序进入一个方法时，会为这个方法单独分配一块私属存储空间，用于存储这个方法内部的局部变量。当这个方法结束时，分配给这个方法的栈会释放，这个栈中的变量也将随之释放。  </p>
<p><strong>heap</strong>一般用于存放不放在当前方法栈中的那些数据。例如，使用new创建的对象都放在堆里，所以，它不会随方法的结束而消失。方法中的局部变量使用final修饰后，放在堆中，而不是栈。  </p>
<h3 id="GC就一定能保证内存不溢出吗？"><a href="#GC就一定能保证内存不溢出吗？" class="headerlink" title="GC就一定能保证内存不溢出吗？"></a>GC就一定能保证内存不溢出吗？</h3><p>No。程序员可能创建一个对象，以后一直不再使用这个对象，这个对象却一直被引用，这个对象无用但是却无法被垃圾回收器回收的。  </p>
<h2 id="字节流与字符流"><a href="#字节流与字符流" class="headerlink" title="字节流与字符流"></a>字节流与字符流</h2><ul>
<li>字节流继承于InputStream OutputStream  </li>
<li>字符流继承于InputStreamReader OutputStreamWriter  </li>
</ul>
<p>字符流使用了缓冲区（buffer），而字节流没有使用缓冲区。<br>底层设备永远只接受字节数据。<br>字符是字节通过不同的编码的包装。<br>字符向字节转换时，要注意编码的问题。  </p>
<h2 id="Collection"><a href="#Collection" class="headerlink" title="Collection"></a>Collection</h2><p>Collection的子类是List和Set。  </p>
<h3 id="ArrayList和Vector"><a href="#ArrayList和Vector" class="headerlink" title="ArrayList和Vector"></a>ArrayList和Vector</h3><p>这两个类都实现了List接口（List接口继承了Collection接口）<br>他们都是有序列集合，即存储在这两个集合中的元素的位置都是有顺序的，相当于一种动态的数组。并且其中的数据是允许重复的。<br>ArrayList和Vector的区别：  </p>
<ul>
<li>Vector是线程安全的，也就是线程同步的，而ArrayList是线程不安全的。对于Vector&amp;ArrayList，Hashtable&amp;HashMap，要记住线程安全的问题。记住Vector与HashMap是旧的，是Java一诞生就提供了的。它们是线程安全的，ArrayList与HashMap是Java2时才提供的，它们是线程不安全的。  </li>
<li>ArrayList与Vector都有一个初始的容量大小，当存储进它们里面的元素的个数超过了容量时，就需要增加ArrayList与Vector的存储空间。Vector默认增长为原来两倍，而ArrayList的增长策略在文档中没有明确规定。ArrayList与Vector都可以设置初始的空间大小，Vector还可以设置增长的空间大小，而ArrayList没有提供设置增长空间的方法。  </li>
</ul>
<p>**总结：即vector增长原来的一倍，ArrayList增加原来的0.5倍。Vector线程安全，ArrayList不是。  </p>
<h3 id="HashMap和Hashtable"><a href="#HashMap和Hashtable" class="headerlink" title="HashMap和Hashtable"></a>HashMap和Hashtable</h3><p>Hashtable是基于陈旧的Dictionary类的，HashMap是Java1.2引进的Map接口的一个实现。  </p>
<p>Hashtable是线程安全的，也就是说是同步的。而HashMap是线程不安全的，不是同步的。  </p>
<p>只有HashMap可以让你将空值NULL作为一个表的条目的key或value。但是HashTable不允许。  </p>
<h3 id="HashMap-HashTable-LinkedHashMap-TreeMap"><a href="#HashMap-HashTable-LinkedHashMap-TreeMap" class="headerlink" title="HashMap HashTable LinkedHashMap TreeMap"></a>HashMap HashTable LinkedHashMap TreeMap</h3><p>不允许键重复，值可以重复。  </p>
<p>HashMap是一个最常用的Map, 它根据键的hashCode值存储数据,根据键可以直接获取它的值,具有很快的访问速度.HashMap最多只允许一条记录的键为null,不允许多条记录的值为null.HashMap不支持线程的同步,如果需要同步,可以用Collections.synchronizedMap(HashMap map)方法使HashMap具有同步的能力.  </p>
<p>Hashtable与HashMap类似,不同的是:它不允许记录的键或者值为空;它支持线程的同步.</p>
<p>LinkedHashMap保存了记录的插入顺序,在用Iteraor遍历LinkedHashMap时,先得到的记录肯定是先插入的.在遍历的时候会比HashMap慢.有HashMap的全部特性.  </p>
<p>TreeMap能够把它保存的记录根据键排序,默认是按升序排序,也可以指定排序的比较器.当用Iteraor遍历TreeMap时,得到的记录是排过序的.TreeMap的键和值都不能为空.  </p>
<h3 id="Collection相关问题"><a href="#Collection相关问题" class="headerlink" title="Collection相关问题"></a>Collection相关问题</h3><p><strong>题目一</strong><br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">题目一</div><div class="line"></div><div class="line">You need <span class="keyword">to</span> store elements <span class="keyword">in</span> a collection that guarantees that <span class="literal">no</span> duplicates are stored <span class="keyword">and</span> all elements can be access <span class="keyword">in</span> nature order, which<span class="built_in"> interface </span>provies that capabiliy?</div><div class="line">A. java.util.Map</div><div class="line">B. java.util.Collection</div><div class="line">C. java.util.List</div><div class="line">D. java.util.Set</div><div class="line">答案 D</div></pre></td></tr></table></figure></p>
<p><strong>题目二</strong>  </p>
<ul>
<li>List，Set，Map是否继承自Collection接口，它们有什么区别？  </li>
</ul>
<p>List，Set是，Map不是。  </p>
<p>区别：<br>Set不允许有重复的元素，且没有顺路Set取元素时，没法说取第几个，只能以Iterator接口取得所有的元素,再逐一遍历各个元素.  </p>
<p>List表示有先后顺序的集合并且允许重复。  </p>
<p>Map与List和Set不同，存储一对key/value，不能存储重复的key.  </p>
<p><strong>题目三</strong>  </p>
<figure class="highlight lasso"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> static <span class="literal">void</span> main()&#123;</div><div class="line">    <span class="built_in">Map</span>&lt;<span class="built_in">String</span>,<span class="built_in">String</span>&gt; <span class="built_in">map</span> = <span class="literal">new</span> HashMap&lt;<span class="built_in">String</span>,<span class="built_in">String</span>&gt;();</div><div class="line">    <span class="built_in">map</span>.out(<span class="built_in">String</span>.valueOf(System.currentTimeMillis())+<span class="string">"a"</span>,<span class="number">1</span>);</div><div class="line">    <span class="built_in">map</span>.out(<span class="built_in">String</span>.valueOf(System.currentTimeMillis())+<span class="string">"a"</span>,<span class="number">2</span>);</div><div class="line">    <span class="built_in">map</span>.out(<span class="built_in">String</span>.valueOf(System.currentTimeMillis())+<span class="string">"a"</span>,<span class="number">3</span>);</div><div class="line">    for(<span class="built_in">Map</span>.Entry&lt;<span class="built_in">String</span>,<span class="built_in">String</span>&gt; entry : <span class="built_in">map</span>.entrySet())&#123;</div><div class="line">        System.out.printf(entry.getValue());</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">输出顺序是 <span class="number">123</span>顺序无法确定. <span class="built_in">Map</span> 中的键是 <span class="built_in">Set</span>. <span class="built_in">Set</span> 顺序是随机的.</div></pre></td></tr></table></figure>
<h2 id="Multi-Thread-多线程"><a href="#Multi-Thread-多线程" class="headerlink" title="Multi-Thread 多线程"></a>Multi-Thread 多线程</h2><h3 id="sleep（）和wait-的区别"><a href="#sleep（）和wait-的区别" class="headerlink" title="sleep（）和wait()的区别"></a>sleep（）和wait()的区别</h3><p>举个例子：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="title">sleep</span><span class="params">(<span class="number">1000</span>)</span></span></div></pre></td></tr></table></figure></p>
<p>会把线程放到一边，直到整整一秒之后才再次启动。  </p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="title">wait</span><span class="params">(<span class="number">1000</span>)</span></span></div></pre></td></tr></table></figure>
<p>则是把线程放到一边至多一秒。如果碰到notify（）或者notifyAll（）就会提前启动。<br>而且wait（）方法是在Object类里。而sleep()是在Thread类里。  </p>
<h3 id="同步-synchronized"><a href="#同步-synchronized" class="headerlink" title="同步 synchronized"></a>同步 synchronized</h3><p>举个例子：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Synchronized</span> <span class="title">Counter</span> </span>&#123;</div><div class="line"><span class="keyword">private</span> <span class="keyword">int</span> c = <span class="number">0</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">increment</span><span class="params">()</span> </span>&#123;</div><div class="line">c++;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">decrement</span><span class="params">()</span> </span>&#123;</div><div class="line">c–;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">int</span> <span class="title">value</span><span class="params">()</span> </span>&#123;</div><div class="line"><span class="keyword">return</span> c;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>如果 count 是这个类的实例化将有两个效果:  </p>
<ul>
<li>不可能同时调用同一个对象的同一个方法, 防止造成冲突.同一时间只有一个线程可以调用这对象的同步方法.比如在一个账户里同时存钱和转当一个同步方法退出时,账.</li>
<li>它会和随后一个同步方法的调用自动建立happens-before关系. 这保证了所有线程都知道对象的状态改变了.  </li>
</ul>
<h2 id="如何实现muliti-Thread？"><a href="#如何实现muliti-Thread？" class="headerlink" title="如何实现muliti-Thread？"></a>如何实现muliti-Thread？</h2><ul>
<li>继承Thread类  </li>
<li>实现Runable接口  </li>
</ul>
<h3 id="Thread与Runable？"><a href="#Thread与Runable？" class="headerlink" title="Thread与Runable？"></a>Thread与Runable？</h3><p>实现Runable接口比继承Thread类所具有的优势：  </p>
<ul>
<li>适合多个相同的程序代码的线程去处理同一个资源  </li>
<li>可以避免Java中的单继承的限制</li>
<li>增加程序的健壮性，代码可以被多个线程共享，代码和数据独立  </li>
</ul>
<h3 id="Transient-关键字"><a href="#Transient-关键字" class="headerlink" title="Transient 关键字"></a>Transient 关键字</h3><p>当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。  </p>
<h3 id="preemptive-scheduling-和-time-slicing"><a href="#preemptive-scheduling-和-time-slicing" class="headerlink" title="preemptive scheduling 和 time slicing?"></a>preemptive scheduling 和 time slicing?</h3><p>preemptive scheduling,优先级别最高的任务会被执行,除非它进入等待状态或者死了或者一个更高优先权的任务进来.  </p>
<h3 id="一个线程的初始状态是什么？"><a href="#一个线程的初始状态是什么？" class="headerlink" title="一个线程的初始状态是什么？"></a>一个线程的初始状态是什么？</h3><p>一个线程被创建和开始之后是“Ready”状态。  </p>
<h3 id="守护线程daemon-Thread"><a href="#守护线程daemon-Thread" class="headerlink" title="守护线程daemon Thread"></a>守护线程daemon Thread</h3><p>守护线程,是指在程序运行的时候在后台提供一种通用服务的线程,比如垃圾回收线程就是一个很称职的守护者,并且这种线程并不属于程序中不可或缺的部分.因此,当所有的非守护线程结束时,程序也就终止了,同时会杀死进程中的所有守护线程.反过来说,只要任何非守护线程还在运行,程序就不会终止.  </p>
<p>用户线程和守护线程两者几乎没有区别,唯一的不同之处就在于虚拟机的离开:如果用户线程已经全部退出运行了,只剩下守护线程存在了,虚拟机也就退出了.将线程转换为守护线程可以通过调用Thread对象的setDaemon(true)方法来实现.  </p>
<h3 id="所有的线程都必须实现那个方法？"><a href="#所有的线程都必须实现那个方法？" class="headerlink" title="所有的线程都必须实现那个方法？"></a>所有的线程都必须实现那个方法？</h3><p>run方法，不管是继承Thread还是实现Runable接口。  </p>
<h2 id="StringBuffer相关问题"><a href="#StringBuffer相关问题" class="headerlink" title="StringBuffer相关问题"></a>StringBuffer相关问题</h2><p><strong>题目一</strong>  </p>
<p>StringBuffer和StringBuilder  </p>
<ul>
<li>StringBuilder比StringBuffer快  </li>
<li>当需要保证线程安全的时候用StringBuffer</li>
<li>StringBuffer是synchroinzed,StringBuilder不是  </li>
</ul>
<p>String类一般被认为是不可改变的。如果需要对一个string做许多修改就需要使用StringBuilder或StringBuffer。<br>另外需要注意，String类是final类不可以被继承，有时候会在考察final关键字的时候考这个。  </p>
<h2 id="序列化-serialization"><a href="#序列化-serialization" class="headerlink" title="序列化 serialization"></a>序列化 serialization</h2><p>Java 提供了一种对象序列化的机制，该机制中，一个对象可以被表示为一个字节序列，该字节序列包括该对象的数据、有关对象的类型的信息和存储在对象中数据的类型。<br>将序列化对象写入文件之后，可以从文件中读取出来，并且对它进行反序列化，也就是说，对象的类型信息、对象的数据，还有对象中的数据类型可以用来在内存中新建对象。<br>整个过程都是 Java 虚拟机（JVM）独立的，也就是说，在一个平台上序列化的对象可以在另一个完全不同的平台上反序列化该对象。  </p>
<p>类 ObjectInputStream 和 ObjectOutputStream 是高层次的数据流，它们包含反序列化和序列化对象的方法。<br>Java中实现serialization主要靠两个类：  </p>
<ul>
<li>ObjectOutputStream  </li>
<li>ObjectInputStream  </li>
</ul>
<p>他们是Java IO系统里的OutputStream和InputStream的子类  </p>
<h3 id="如何序列化一个对象到一个文件？"><a href="#如何序列化一个对象到一个文件？" class="headerlink" title="如何序列化一个对象到一个文件？"></a>如何序列化一个对象到一个文件？</h3><p>要被序列化的实例所对应的类必须实现 Serializable接口。然后你可以把实例传递给ObjectOutputStream，同时ObjectOutputStream也必须连接至fileoutputstream。这样就会把一个对象存储到一个文件里。  </p>
<h3 id="必须实现Serializable接口的哪个方法？"><a href="#必须实现Serializable接口的哪个方法？" class="headerlink" title="必须实现Serializable接口的哪个方法？"></a>必须实现Serializable接口的哪个方法？</h3><p>Serializable 接口是一个空接口.所以我们不实现它的任何方法.  </p>
<h2 id="初始化和清理"><a href="#初始化和清理" class="headerlink" title="初始化和清理"></a>初始化和清理</h2><p><strong>构造器初始化</strong>  </p>
<p>初始化顺序  </p>
<p>类内部变量定义的先后顺序决定了其初始化的顺序，并且会在任何方法被调用之前也会得到初始化。对于静态对象与非静态对象：先初始话静态对象，然后是非静态对象。  </p>
<p>静态数据的初始化  </p>
<p>静态数据只占用一份存储区域，static关键字不能用于局部变量，因为它只能作用于域。如果一个域是静态的基本类型域且未对其进行初始化，那么它就会获得基本类型的标准初值；如果是一个对象引用，则初始化为null.  </p>
<p>静态初始化只有在必要时才会进行，且只被初始化一次，即如果不创建相应的对象或是引用相应的静态对象，那么则不会被初始化。  </p>
<p>对象创建的过程：  </p>
<ul>
<li>构造器实际上也是静态方法，Java解释器首先查找类路径定位相应class文件。</li>
<li>载入class文件，执行静态初始化，静态初始化只在类对象首次加载的时候进行一次。  </li>
<li>使用new创建对象时首先将在堆上为对象分配足够的存储空间。  </li>
<li>存储空间清零，故其所有基本类型数据置为默认值。  </li>
<li>执行所有定义处的初始化动作。  </li>
<li>执行构造器。  </li>
</ul>
<h2 id="Java-Data-Type-Java数据类型"><a href="#Java-Data-Type-Java数据类型" class="headerlink" title="Java Data Type -Java数据类型"></a>Java Data Type -Java数据类型</h2><p>JVM可以操作的数据类型分为两类：primitive types和 reference types.类型检查通常在编译期完成，不同指令操作数的类型可以通过虚拟机的字节码指令本身确定。  </p>
<h3 id="Primitive-type"><a href="#Primitive-type" class="headerlink" title="Primitive type"></a>Primitive type</h3><p>JVM所支持的基本数据类型有：数值类型，布尔类型和returnAddress类型。其中数值类型又可以分为整型和浮点型两种。  </p>
<ul>
<li>整型：byte(8 bit), short(16 bit), int(32 bit), long(64 bit), char(16 bit unsigned)  </li>
<li>浮点型：float（32 bit),double(64 bit)  </li>
<li>布尔型：boolean 通常用 int 型表示，Oracle 中用 byte 表示</li>
<li>returnAddress：一条字节码指令的操作码  </li>
</ul>
<h3 id="Reference-type"><a href="#Reference-type" class="headerlink" title="Reference type"></a>Reference type</h3><p>引用类型分为三种：Class Types, Array Types 和 Interface Types, 这些引用类型的值分别由类实例、数组实例和实现了某个接口的类实例或者数组实例动态创建。引用类型中有一特殊的值null, 引用类型的默认值就是 null.  </p>
<h3 id="形式参数传递"><a href="#形式参数传递" class="headerlink" title="形式参数传递"></a>形式参数传递</h3><p>基本类型作为形式参数传递不会改变实际参数，引用类型作为形式参数传递会改变实际参数。JDK1.5之后含有基本类型的包装类型，即自动拆装箱的功能，故将基本类型的相应对象作为参数传递时会自动拆箱为基本类型，故也不改变实际参数的值。  </p>
<h2 id="Run-Time-Data-Area-运行时数据区域"><a href="#Run-Time-Data-Area-运行时数据区域" class="headerlink" title="Run-Time Data Area-运行时数据区域"></a>Run-Time Data Area-运行时数据区域</h2><p>JVM运行时会有几个运行时数据区域，如下图所示。<br><img src="https://upload-images.jianshu.io/upload_images/2847713-0f92f3abda0c670f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png">  </p>
<h3 id="程序计数器"><a href="#程序计数器" class="headerlink" title="程序计数器"></a>程序计数器</h3><p>线程私有内存，保存 <strong>当前线程所执行的字节码的行号指示器</strong>，这里和计算机组成原理中的计数器不太一样，计组中的PC指的是下一条要执行的指令的地址。JVM中常有多个线程执行，故每条线程都需要有一个独立的程序计数器。<br>如果线程执行的是Java方法，哪儿计数器记录的就是正在执行的虚拟机字节码指令的地址；如果执行的是 Native 方法，这个计数器则为空。<br>P.S. 这块内存无OutOfMemoryError</p>
<h3 id="虚拟机栈"><a href="#虚拟机栈" class="headerlink" title="虚拟机栈"></a>虚拟机栈</h3><p>线程私有，虚拟机栈描述的是Java方法执行的内存模型，每个方法在执行时会创建一个栈帧，栈帧中保存有局部变量表、操作数栈、动态链接和方法出口。粗略来讲Java内存区分为堆和栈，实际上栈指的往往是虚拟机栈中的局部变量表部分。<br>局部变量表中存放了编译期可知的各种基本数据类型、对象引用类型和returnAddress类型。方法运行期间局部变量表大小不变。  </p>
<h3 id="本地方法栈"><a href="#本地方法栈" class="headerlink" title="本地方法栈"></a>本地方法栈</h3><p>和虚拟机类似，不过区别在于虚拟机栈为Java方法（字节码）服务，而本地方法栈为Native方法服务。  </p>
<h3 id="堆"><a href="#堆" class="headerlink" title="堆"></a>堆</h3><p>堆是被所有线程共享的一块内存区域。一般来说所有的对象实例和数组都要在堆上分配，但一些优化技术导致不一定所有对象实例都在堆上分配。  </p>
<h3 id="方法区"><a href="#方法区" class="headerlink" title="方法区"></a>方法区</h3><p>各线程共享的一块内存区域，和操作系统中进程中的文本段有些类似，用于存储虚拟机加载的类信息、常量、静态常量和即时编译后的代码数据等。  </p>
<h3 id="运行时常量池"><a href="#运行时常量池" class="headerlink" title="运行时常量池"></a>运行时常量池</h3><p>这一部分是方法区的一部分，用于保存Class文件中编译期生成的字面值和符号引用。  </p>
<h3 id="直接内存"><a href="#直接内存" class="headerlink" title="直接内存"></a>直接内存</h3><p>这一部分并不是虚拟机运行时的数据区域，用于Native函数分配堆外内存，提高性能。  </p>
<h2 id="J2EE应用的四个部分"><a href="#J2EE应用的四个部分" class="headerlink" title="J2EE应用的四个部分"></a>J2EE应用的四个部分</h2><ul>
<li>客户端层  </li>
<li>web层（Servlet and JSP）</li>
<li>业务层（JavaBeans）</li>
<li>企业信息系统层</li>
</ul>
<h2 id="什么是事务"><a href="#什么是事务" class="headerlink" title="什么是事务"></a>什么是事务</h2><p>事务是应用程序中一系列严密的操作，所有操作必须成功完成，否则在每个操作中所做的所有更改都会被撤销。</p>
<h2 id="什么是servlet"><a href="#什么是servlet" class="headerlink" title="什么是servlet"></a>什么是servlet</h2><p>Servlets是服务器端的部件，是纯的Java对象，设计用于多种协议，特别是HTTP。  </p>
<h3 id="创建servlet"><a href="#创建servlet" class="headerlink" title="创建servlet"></a>创建servlet</h3><p>Servlet在容器中运行时，其实例的创建以及销毁等是由容器进行控制。  </p>
<p>Servlet的创建有两种方法。  </p>
<ul>
<li>客户端请求对应的Servlet时，创建Servlet实例。大部分Servlet都是这种Servlet、  </li>
<li>通过在web.xml中设置loaf-on-startup来创建servlet实例，这种实例在Web应用启东时，立即创建Servlet实例。  </li>
</ul>
<h3 id="Servlet必须实现什么接口？"><a href="#Servlet必须实现什么接口？" class="headerlink" title="Servlet必须实现什么接口？"></a>Servlet必须实现什么接口？</h3><p>Servlet Interface  </p>
<h3 id="servlet生命周期"><a href="#servlet生命周期" class="headerlink" title="servlet生命周期"></a>servlet生命周期</h3><ul>
<li>读取Servlet类</li>
<li>创建Servlet实例</li>
<li>Web容器调用Servlet的init()方法</li>
<li>响应客户端请求通过Servlet中service（）方法中相应的doXXX()方法</li>
<li>调用Servlet的destroy  </li>
</ul>
<h2 id="什么是Spring"><a href="#什么是Spring" class="headerlink" title="什么是Spring"></a>什么是Spring</h2><p>Spring是Java EE的一个轻量级的开源框架，使J2EE开发更容易。<br>通过实现基于POJO的编程模型，Spring的核心design pattern是IOC  </p>
<h2 id="什么是Spring的配置文件"><a href="#什么是Spring的配置文件" class="headerlink" title="什么是Spring的配置文件"></a>什么是Spring的配置文件</h2><p>Spring的配置文件是一个XML文件，这个文件包含类的或者说bean的信息以及它们是如何配置的。  </p>
<h2 id="IOC有什么好处"><a href="#IOC有什么好处" class="headerlink" title="IOC有什么好处"></a>IOC有什么好处</h2><ul>
<li>减少代码 </li>
<li>适应于更容易测试 </li>
</ul>
<h2 id="什么是Spring-Beans"><a href="#什么是Spring-Beans" class="headerlink" title="什么是Spring Beans"></a>什么是Spring Beans</h2><p>一个Bean是被实例化，组装，以及由Spring IoC容器管理的对象  </p>
<h2 id="Singleton-bean-是线程安全吗"><a href="#Singleton-bean-是线程安全吗" class="headerlink" title="Singleton bean 是线程安全吗"></a>Singleton bean 是线程安全吗</h2><p>不是。  </p>
<p><strong>什么叫线程安全</strong><br>一段代码，同时几个线程同时使用，结果都是正确的，就叫线程安全。<br>比如我们打开百度知道的首页，全世界很多人都在打开，都是正确的，证明百度知道首页的那段代码是线程安全的。  </p>
<h2 id="Spring-MVC理解"><a href="#Spring-MVC理解" class="headerlink" title="Spring MVC理解"></a>Spring MVC理解</h2><p><strong>Model（模型）</strong>是应用程序中用于处理应用程序数据逻辑的部分。通常模型对象负责在数据库中存取数据。  </p>
<p><strong>View（视图）</strong>是应用程序中处理数据显示的部分。通常视图是依据模型数据创建的。  </p>
<p><strong>Controller（控制器）</strong>是应用程序中处理用户交互的部分。通常控制器负责从视图读取数据，控制用户输入，并向模型发送数据。  </p>
<p><strong>MVC处理过程</strong>：对于每一个用户输入的请求，先被控制器接收，并决定由哪个模型来进行处理，然后模型通过业务逻辑层处理用户的请求并返回数据，最后控制器用相应的视图格式化模型返回的数据，并通过显示页面呈现给用户。  </p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;站在巨人的肩膀上，好记性不如烂键盘。  &lt;/p&gt;
&lt;p&gt;All from &lt;a href=&quot;https://love2.io/@hakukata/doc/Java-Interview-Question/java/what_ate_object-oriented_features.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;java面试笔记&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="https://x-nicolo.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Java" scheme="https://x-nicolo.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>我的秋招进度表</title>
    <link href="https://x-nicolo.github.io/2018/07/07/%E6%88%91%E7%9A%84%E7%A7%8B%E6%8B%9B%E8%BF%9B%E5%BA%A6%E8%A1%A8/"/>
    <id>https://x-nicolo.github.io/2018/07/07/我的秋招进度表/</id>
    <published>2018-07-07T03:06:46.000Z</published>
    <updated>2018-06-15T03:06:46.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">密码不能告诉你</h3><link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css"> <link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css"> <script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <script src="//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js"></script> <div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none">  </div>]]></content>
    
    <summary type="html">
    
      私密博客，秋招后解禁
    
    </summary>
    
      <category term="随笔" scheme="https://x-nicolo.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="找工作" scheme="https://x-nicolo.github.io/tags/%E6%89%BE%E5%B7%A5%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>Python3五行代码实现缩短网址功能</title>
    <link href="https://x-nicolo.github.io/2018/07/04/%E4%BA%94%E8%A1%8C%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0Python%E7%BC%A9%E7%9F%AD%E7%BD%91%E5%9D%80%E5%8A%9F%E8%83%BD/"/>
    <id>https://x-nicolo.github.io/2018/07/04/五行代码实现Python缩短网址功能/</id>
    <published>2018-07-04T03:51:05.000Z</published>
    <updated>2018-07-04T03:51:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>折腾了一晚上，百度和新浪的都试了，都不太好用。感谢国外的<a href="https://pythontips.com/2013/08/03/a-url-shortener-in-python/" target="_blank" rel="external">大牛</a>。<br><a id="more"></a>  </p>
<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>最近一直在更新校招微信机器人，详情看这里<a href="https://x-nicolo.github.io/2018/06/13/%E6%8B%9B%E8%81%98%E4%BC%9A%E4%BF%A1%E6%81%AF%E6%8F%90%E9%86%92%E4%B9%8B%E5%BE%AE%E4%BF%A1%E6%9C%BA%E5%99%A8%E4%BA%BA/">叮！你的校招提醒微信机器人已上线！</a><br>其中爬取的招聘信息链接太长了，本人是个强迫狂魔，这看起来太不美观了，必须缩短！<br><figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">『睿思校园招聘信息，机器喵自动获取，仅供参考』</div><div class="line">阿里巴巴数据技术及产品部-校园交流﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951547&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">阿里-菜鸟<span class="number">2018</span>年网络测试开发工程师部门直招﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951510&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">（散金币）百度搜索公司SRE团队<span class="number">2019</span>年校招提前批﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951473&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">错投男儿胎，找个家教兼职都这么难（都要求女生）﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951464&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">阿里巴巴菜鸟 测试开发工程师 内推招聘﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951463&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">乐馨托管招聘作业辅导老师一名﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951461&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">[散金币]  西安葡萄城信息技术有限公司<span class="number">2019</span>校园招聘﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951451&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">西安诺瓦科技<span class="number">2019</span>届提前批校招开始啦，与独角兽一起开疆拓土~~~~~﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951338&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">平安租赁招实习生啦﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951331&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">新校区附近寻找初中家教找初中家教﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951299&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">拼多多技术校招内推﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951283&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">百度招实习生﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951276&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">【散金币】西安闻泰电子科技有限公司人力资源<span class="number">2018</span>校园招聘﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951258&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">拼多多<span class="number">2019</span>届 校招开始啦！﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951250&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">乐馨托管招作业辅导老师一名﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951246&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">【找家教】给高一的两个孩子找家教﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951235&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">「商务运营实习」「网联」「央行、阿里、腾讯、京东入股企业」「北京」﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951189&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">老校区附近想找份家教工作，初高中数学理综均可﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951184&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">招女生家教﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951181&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">招募一名会微信小程序的同学开发一个公众号，报酬丰厚﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951140&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">【金币】【招兼职老师】短期老师﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951096&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">【散金币】+家教咯，初三英语、数学、物理、化学﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951023&amp;extra=page%3D1&amp;mobile=2</span></div></pre></td></tr></table></figure></p>
<h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>在网上看了一大堆原理和各种API，然而用python3实现的不多，凑巧看到国外大神的，站在巨人肩膀搞定！看代码。<br>先来导入包和使用try，保证鲁棒性。<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> contextlib</div><div class="line"><span class="keyword">try</span>:</div><div class="line">    <span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlencode</div><div class="line"><span class="keyword">except</span> <span class="type">ImportError</span>:</div><div class="line">    <span class="keyword">from</span> urllib <span class="keyword">import</span> urlencode</div><div class="line"><span class="keyword">try</span>:</div><div class="line">    <span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlopen</div><div class="line"><span class="keyword">except</span> <span class="type">ImportError</span>:</div><div class="line">    <span class="keyword">from</span> urllib2 <span class="keyword">import</span> urlopen</div><div class="line"><span class="keyword">import</span> sys</div></pre></td></tr></table></figure></p>
<p>剩下的就是五行代码了。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">make_tiny</span><span class="params">(url)</span>:</span></div><div class="line">    request_url = (<span class="string">'http://tinyurl.com/api-create.php?'</span> + </div><div class="line">    urlencode(&#123;<span class="string">'url'</span>:url&#125;))</div><div class="line">    <span class="keyword">with</span> contextlib.closing(urlopen(request_url)) <span class="keyword">as</span> response:</div><div class="line">        <span class="keyword">return</span> response.read().decode(<span class="string">'utf-8'</span>)</div></pre></td></tr></table></figure></p>
<p>测试一下：<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">print(<span class="name">make_tiny</span>(<span class="string">"http://rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951443"</span>))</div></pre></td></tr></table></figure></p>
<p>输出：<br><figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/y7we9xnu</span></div></pre></td></tr></table></figure></p>
<p>用浏览器打开ok，完美！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;折腾了一晚上，百度和新浪的都试了，都不太好用。感谢国外的&lt;a href=&quot;https://pythontips.com/2013/08/03/a-url-shortener-in-python/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;大牛&lt;/a&gt;。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="https://x-nicolo.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Python" scheme="https://x-nicolo.github.io/tags/Python/"/>
    
      <category term="爬虫" scheme="https://x-nicolo.github.io/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>叮！你的校招提醒微信机器人已上线！</title>
    <link href="https://x-nicolo.github.io/2018/06/13/%E6%8B%9B%E8%81%98%E4%BC%9A%E4%BF%A1%E6%81%AF%E6%8F%90%E9%86%92%E4%B9%8B%E5%BE%AE%E4%BF%A1%E6%9C%BA%E5%99%A8%E4%BA%BA/"/>
    <id>https://x-nicolo.github.io/2018/06/13/招聘会信息提醒之微信机器人/</id>
    <published>2018-06-13T07:33:26.000Z</published>
    <updated>2018-07-15T07:33:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>招聘季即将到来，如何实时的得知招聘信息呢？自然是爬虫+微信了。<br><a id="more"></a><br>这几日在票圈和各微信群看到大家疯狂刷“京东”、“腾讯”等秋招类的“广告”，我对这些营销方式存怀疑态度，觉得一定不是官方的！总感觉有恶意营销在里面。<br>有需求就有市场，为什么不自己写一个校招提醒机器人呢？简单的想了下，爬虫+微信模式应该是最好的搭配了。 </p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>先说使用方法，再讲原理。<br><img src="https://upload-images.jianshu.io/upload_images/2847713-0df71c32cd18bc36.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="386754908630342029.jpg"></p>
<ul>
<li>打开微信扫一扫，扫描上方二维码</li>
<li>添加它为好友</li>
<li>接受它发出的群聊邀请(自动邀请功能暂时取消，请告诉它要进哪个群，后面统一拉)</li>
<li>每日更新招聘会信息（现阶段仅支持西电就业信息网招聘会信息）</li>
</ul>
<h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p><img src="https://upload-images.jianshu.io/upload_images/2847713-0df204fa527c2b96.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="微信图片_20180613201454.jpg"></p>
<p>这是一个西电求职交流群，大家有更好的招聘信息也可以甩到群里。  </p>
<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>原理主要分为两部分：爬虫+微信机器人。  </p>
<h3 id="爬虫"><a href="#爬虫" class="headerlink" title="爬虫"></a>爬虫</h3><p>讲道理西电就业信息应该挺好爬的吧，网站虽然丑一点，但是内容才是最重要的。就用最简单的请求方式去获取网站内容，居然Forbidden了。<br><img src="https://upload-images.jianshu.io/upload_images/2847713-3b281e954e9b5859.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="26475337410507141.png"><br>那好吧，只能伪装浏览器了。<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">headers = &#123;<span class="string">'User-Agent'</span> : <span class="string">'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:29.0) Gecko/20100101 Firefox/29.0'</span>&#125;  </div><div class="line">    req = urllib<span class="selector-class">.request</span><span class="selector-class">.Request</span>(url=url,headers=headers)</div></pre></td></tr></table></figure></p>
<p>这样就ok。  </p>
<p>完整的抓取网站信息代码：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">getPageContent</span><span class="params">(url)</span>:</span></div><div class="line">    headers = &#123;<span class="string">'User-Agent'</span> : <span class="string">'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:29.0) Gecko/20100101 Firefox/29.0'</span>&#125;  </div><div class="line">    req = urllib.request.Request(url=url,headers=headers)</div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        res = urllib.request.urlopen(req)</div><div class="line">    <span class="keyword">except</span> urllib.error.URLError <span class="keyword">as</span> e:</div><div class="line">        <span class="keyword">return</span> e</div><div class="line">    page_content = res.read()</div><div class="line">    page_content=BeautifulSoup(page_content,<span class="string">"lxml"</span>)</div><div class="line">    <span class="keyword">return</span> page_content</div></pre></td></tr></table></figure></p>
<p>就业信息网长这样：<br><img src="https://upload-images.jianshu.io/upload_images/2847713-5b062097ea604b31.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>北校区招聘会信息的table长这样：<br><img src="https://upload-images.jianshu.io/upload_images/2847713-caa3d1b099e85ff0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>找到标签那就剥洋葱的爬呗：<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">getJobInfo</span><span class="params">(page_content)</span></span><span class="symbol">:</span></div><div class="line">    job_content = page_content.find(<span class="string">"table"</span>, &#123;<span class="string">"class"</span>: <span class="string">"zphTable"</span>&#125;)</div><div class="line">    rows = job_content.findAll(<span class="string">"tr"</span>)[<span class="number">1</span><span class="symbol">:</span>]</div><div class="line">    job_info=[]</div><div class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> <span class="symbol">rows:</span></div><div class="line">        <span class="keyword">for</span> cell <span class="keyword">in</span> row.findAll(<span class="string">'td'</span>)<span class="symbol">:</span></div><div class="line">            info=cell.get_text()</div><div class="line">            job_info.append(info)</div><div class="line">    <span class="keyword">return</span> job_info</div></pre></td></tr></table></figure></p>
<p>南校区的信息结构和北校区一样，同样试用上面的程序。  </p>
<p>对于爬虫的招聘会信息还需做处理，用于后面微信发送。<br>处理的代码：<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">xdjob</span><span class="params">(jobinfo)</span></span><span class="symbol">:</span></div><div class="line">    urlN = <span class="string">'http://job.xidian.edu.cn/html/zpxx/bxqzph/'</span></div><div class="line">    urlS = <span class="string">'http://job.xidian.edu.cn/html/zpxx/nxqzph/'</span></div><div class="line">    page_contentN=getPageContent(urlN)</div><div class="line">    page_contentS=getPageContent(urlS)</div><div class="line">    job_infoN=[<span class="string">"【北校区招聘会信息】"</span>]+getJobInfo(page_contentN)</div><div class="line">    job_infoS=[<span class="string">"【南校区招聘会信息】"</span>]+getJobInfo(page_contentS)</div><div class="line">    job_info = job_infoS+job_infoN</div><div class="line">    jobinfo=<span class="string">'『本条由机器喵自动发出，是个机器人大家勿撩哦』'</span>+<span class="string">"\n"</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="symbol">job_info:</span></div><div class="line">        jobinfo=jobinfo+ <span class="string">"\n"</span> +i</div><div class="line">    <span class="keyword">return</span> jobinfo</div></pre></td></tr></table></figure></p>
<p>至此，爬虫的工作已完成。  </p>
<h3 id="微信机器人"><a href="#微信机器人" class="headerlink" title="微信机器人"></a>微信机器人</h3><p>之前微信<a href="https://x-nicolo.github.io/2017/10/23/Python%E5%BE%AE%E4%BF%A1%E5%A5%BD%E5%8F%8B%E5%88%86%E6%9E%90/">好友分析</a>使用过itchat，真的是非常好的一个库。  </p>
<p>这次要做的工作简单点，找到指定的群聊名，将爬取的就业信息发送即可。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">wx</span><span class="params">(jobinfo2)</span>:</span></div><div class="line"></div><div class="line">    itchat.auto_login(hotReload = <span class="keyword">True</span>)<span class="comment"># 可设置hotReload = True</span></div><div class="line">    i=itchat.get_chatrooms(update=<span class="keyword">True</span>)</div><div class="line">    name = <span class="string">"西电求职交流群"</span></div><div class="line">    iRoom = itchat.search_chatrooms(name)</div><div class="line">    <span class="keyword">for</span> room <span class="keyword">in</span> iRoom:</div><div class="line">        <span class="keyword">if</span> room[<span class="string">'NickName'</span>] == name:</div><div class="line">            userName = room[<span class="string">'UserName'</span>]</div><div class="line">        <span class="keyword">break</span></div><div class="line">    itchat.send_msg(jobinfo2, userName)</div></pre></td></tr></table></figure></p>
<p>具体的工作流程为：</p>
<ul>
<li>登录微信</li>
<li>获取所有群聊名称</li>
<li>匹配要发送信息的微信群</li>
<li>发送指定信息</li>
</ul>
<p>至此爬虫+微信机器人的工作均已完成。<br>可是总不能天天手动去运行程序吧，那我为什么不去看就业信息网站上的信息呢。<br><strong>做程序员呢，最重要的就是一定要懒。</strong><br>设置一个定时器呗，每天运行一次。基本上就能满足需求了。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">timer</span><span class="params">(n)</span>:</span></div><div class="line">    itchat.auto_login(hotReload=<span class="keyword">True</span>)  <span class="comment"># 可设置hotReload = True</span></div><div class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">        jobinfo=<span class="string">''</span></div><div class="line">        wx(xdjob(jobinfo))</div><div class="line">        time.sleep(n)</div></pre></td></tr></table></figure></p>
<p>这样就行了，主程序运行timer(86400)，每日更新一波。最后再部署到云服务器就好了。  </p>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>这点信息总感觉太少，还望大家多多提供点靠谱的招聘信息网站，有兴趣的也可以联系我，一起把这个功能丰富起来。<br>方便他人，方便自己。</p>
<h2 id="V1-2"><a href="#V1-2" class="headerlink" title="V1.2"></a>V1.2</h2><p>同学给的几点建议：  </p>
<ul>
<li>去掉过期的招聘会信息  </li>
<li>增加交大、西工大的招聘会信息  </li>
<li>增加应届生招聘网站上的信息  </li>
</ul>
<p>我是从西电就业信息网直接爬取，网站上的信息并为做过期处理。<br>这样一想有没有可能从其他招聘网站上抓取第二手信息呢，他们应该做过处理。<br>果不其然，海投网！直接解决了第一第二点的建议。<br>上代码：<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">xdjob</span></span>(jobinfo):</div><div class="line">    urlXD = <span class="symbol">'https</span>:<span class="comment">//xjh.haitou.cc/xa/uni-29'</span></div><div class="line">    urlXJ = <span class="symbol">'https</span>:<span class="comment">//xjh.haitou.cc/xa/uni-27'</span></div><div class="line">    urlGD = <span class="symbol">'https</span>:<span class="comment">//xjh.haitou.cc/xa/uni-28'</span></div><div class="line">    urlEnterprise=<span class="symbol">'http</span>:<span class="comment">//www.yingjiesheng.com/2019/'</span></div><div class="line">    page_contentN=getPageContent(urlXD)</div><div class="line">    page_contentS=getPageContent(urlXJ)</div><div class="line">    page_contentG = getPageContent(urlGD)</div><div class="line">    job_infoXD=[<span class="string">"--------------------"</span>+<span class="string">"\n"</span>+<span class="string">"【西电招聘会信息】"</span>]+getJobInfo(page_contentN)</div><div class="line">    job_infoXJ=[<span class="string">"--------------------"</span>+<span class="string">"\n"</span>+<span class="string">"【西交招聘会信息】"</span>]+getJobInfo(page_contentS)</div><div class="line">    job_infoGD = [<span class="string">"--------------------"</span>+<span class="string">"\n"</span>+<span class="string">"【瓜大招聘会信息】"</span>] + getJobInfo(page_contentG)</div><div class="line">    job_info = job_infoXD+job_infoXJ+job_infoGD</div><div class="line">    jobinfo='『今日招聘信息，以下数据为机器喵自动获取，仅供参考。有任何问题请艾特我群主爸爸@肖洒』'+<span class="string">"\n"</span></div><div class="line">    <span class="keyword">for</span> i in job_info:</div><div class="line">        jobinfo=jobinfo+ <span class="string">"\n"</span> +i</div><div class="line">    jobinfo=jobinfo + <span class="string">"\n"</span>+<span class="string">"--------------------"</span>+<span class="string">"\n"</span>+<span class="string">"【名企2019校园招聘进度表】"</span> + getEnter(urlEnterprise)</div><div class="line">    <span class="keyword">return</span> jobinfo</div></pre></td></tr></table></figure></p>
<p>完美！<br>关于第三点，这个应届生的网站真心写的好乱。。不过不能扒的网站呢！<br>上代码：<br><figure class="highlight nix"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">def getEnter(urlEnterprise):</div><div class="line">    <span class="attr">page_content</span> = getPageContent(urlEnterprise)</div><div class="line">    <span class="attr">job_content</span> = page_content.findAll(<span class="string">"div"</span>, &#123;<span class="string">"class"</span>: <span class="string">"s_clear tit floatl"</span>&#125;)[<span class="number">2</span>:]</div><div class="line">    <span class="attr">job_info</span> = []</div><div class="line">    for div <span class="keyword">in</span> job_content:</div><div class="line">        <span class="attr">url</span> = div.a.attrs[<span class="string">"href"</span>]</div><div class="line">        <span class="keyword">if</span> url[:<span class="number">4</span>] == <span class="string">"http"</span>:</div><div class="line">            pass</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            <span class="attr">url</span> = <span class="string">"http://www.yingjiesheng.com"</span> + url</div><div class="line">        <span class="attr">info</span> = div.get_text() + <span class="string">"\n"</span>+ url</div><div class="line">        job_info.append(info)</div><div class="line">    <span class="attr">jobinfo</span> = <span class="string">""</span></div><div class="line">    for i <span class="keyword">in</span> job_info:</div><div class="line">        <span class="attr">jobinfo</span> = jobinfo + <span class="string">"\n"</span> + i</div><div class="line">    return jobinfo</div></pre></td></tr></table></figure></p>
<p>最后现在的效果：<br><img src="https://upload-images.jianshu.io/upload_images/2847713-8d498166dd2ce908.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="7213390981083791.jpg"></p>
<h2 id="V1-3"><a href="#V1-3" class="headerlink" title="V1.3"></a>V1.3</h2><h3 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h3><p>西电这几日没有招聘会信息发布，所以西电部分的爬虫抛出异常。<br>已解决，修改如下：<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">xdjob</span></span>(jobinfo):</div><div class="line">   </div><div class="line">    urlXD = <span class="symbol">'https</span>:<span class="comment">//xjh.haitou.cc/xa/uni-29'</span></div><div class="line">    urlXJ = <span class="symbol">'https</span>:<span class="comment">//xjh.haitou.cc/xa/uni-27'</span></div><div class="line">    urlGD = <span class="symbol">'https</span>:<span class="comment">//xjh.haitou.cc/xa/uni-28'</span></div><div class="line">    urlEnterprise=<span class="symbol">'http</span>:<span class="comment">//www.yingjiesheng.com/2019/'</span></div><div class="line">    <span class="keyword">try</span>: </div><div class="line">        page_contentN=getPageContent(urlXD)</div><div class="line">        job_infoXD=[<span class="string">"--------------------"</span>+<span class="string">"\n"</span>+<span class="string">"【西电招聘会信息】"</span>]+getJobInfo(page_contentN)</div><div class="line">    except:</div><div class="line">        job_infoXD=[<span class="string">"--------------------"</span>+<span class="string">"\n"</span>+<span class="string">"【西电今日无招聘会信息哦】"</span>]</div><div class="line"></div><div class="line">    <span class="keyword">try</span>:</div><div class="line"></div><div class="line">        page_contentS=getPageContent(urlXJ)</div><div class="line">        job_infoXJ=[<span class="string">"--------------------"</span>+<span class="string">"\n"</span>+<span class="string">"【西交招聘会信息】"</span>]+getJobInfo(page_contentS)</div><div class="line">    except:</div><div class="line">        job_infoXJ=[<span class="string">"--------------------"</span>+<span class="string">"\n"</span>+<span class="string">"【西交今日无招聘会信息哦】"</span>]</div><div class="line"></div><div class="line">    <span class="keyword">try</span>:</div><div class="line"></div><div class="line">        page_contentG = getPageContent(urlGD)</div><div class="line">        job_infoGD = [<span class="string">"--------------------"</span>+<span class="string">"\n"</span>+<span class="string">"【瓜大招聘会信息】"</span>] + getJobInfo(page_contentG)</div><div class="line">    except:</div><div class="line">        job_infoXJ=[<span class="string">"--------------------"</span>+<span class="string">"\n"</span>+<span class="string">"【瓜大今日无招聘会信息哦】"</span>]</div><div class="line">    job_info = job_infoXD+job_infoXJ+job_infoGD</div><div class="line">    jobinfo='『今日招聘信息，以下数据为机器喵自动获取，仅供参考。有任何问题请艾特我群主爸爸@肖洒』'+<span class="string">"\n"</span></div><div class="line">    <span class="keyword">for</span> i in job_info:</div><div class="line">        jobinfo=jobinfo+ <span class="string">"\n"</span> +i</div><div class="line">    # jobinfo=jobinfo + <span class="string">"\n"</span>+<span class="string">"--------------------"</span>+<span class="string">"\n"</span>+<span class="string">"【名企2019校园招聘进度表】"</span> + getEnter(urlEnterprise)</div><div class="line">    <span class="keyword">return</span> jobinfo</div></pre></td></tr></table></figure></p>
<h2 id="V1-4"><a href="#V1-4" class="headerlink" title="V1.4"></a>V1.4</h2><h3 id="遇到的问题-1"><a href="#遇到的问题-1" class="headerlink" title="遇到的问题"></a>遇到的问题</h3><p>由于itchat的问题，网页版微信并不能一直保持在线，导致定时发送服务总是因为掉线而抛出异常。<br>解决办法：itchat在移动端微信保持稳定登录的情况下，30分钟内是可以保证在线的。所以想到每30分钟发一次信息，保持登录的状态，每24小时给求职群里发一次招聘会信息。具体实现方法：<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">n=<span class="number">0</span></div><div class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">    itchat.auto_login(hotReload=<span class="keyword">True</span>)  # 可设置hotReload = <span class="keyword">True</span></div><div class="line">    wx(<span class="string">'TEST'</span>,<span class="string">'别玩手机哦'</span>)</div><div class="line">    timer(<span class="number">1800</span>)</div><div class="line">    n=n+<span class="number">1</span></div><div class="line">    <span class="keyword">print</span>(<span class="string">"循环到第："</span>+str(n)+<span class="string">"次，还剩"</span>+str(<span class="number">48</span>-n)+<span class="string">"次即可触发爬虫"</span>)</div><div class="line">    <span class="keyword">while</span> n == <span class="number">48</span> :</div><div class="line">        jobinfo=<span class="string">""</span></div><div class="line">        wx(<span class="string">'西电求职交流群'</span>,xdjob(jobinfo))</div><div class="line">        n=<span class="number">0</span></div></pre></td></tr></table></figure></p>
<h2 id="V2-0"><a href="#V2-0" class="headerlink" title="V2.0"></a>V2.0</h2><h3 id="增加睿思的招聘信息"><a href="#增加睿思的招聘信息" class="headerlink" title="增加睿思的招聘信息"></a>增加睿思的招聘信息</h3><p>这几天已经用获得的招聘信息疯狂投递简历了。为了丰富招聘信息，根据之前的经验和代码，整合了下，抓取睿思校园招聘板块的信息，进行处理后进行微信发送。<br>睿思板块抓取的程序：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">rs</span><span class="params">()</span>:</span></div><div class="line">    pageURL = set()</div><div class="line">    job_rs = <span class="string">'『睿思校园招聘信息，机器喵自动获取，仅供参考』'</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">2</span>):</div><div class="line">        pages = <span class="string">'http://rsbbs.xidian.edu.cn/forum.php?mod=forumdisplay&amp;fid=554&amp;page='</span> + str(i) + <span class="string">'&amp;mobile=2'</span></div><div class="line">        <span class="keyword">if</span> pages <span class="keyword">not</span> <span class="keyword">in</span> pageURL:</div><div class="line">            headers = &#123;</div><div class="line">                <span class="string">'User-Agent'</span>: <span class="string">r'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) '</span></div><div class="line">                              <span class="string">r'Chrome/45.0.2454.85 Safari/537.36 115Browser/6.0.3'</span>,</div><div class="line">                <span class="string">'Referer'</span>: <span class="string">r'http://rsbbs.xidian.edu.cn'</span>,</div><div class="line">                <span class="string">'Connection'</span>: <span class="string">'keep-alive'</span>&#125;</div><div class="line">            req = request.Request(pages, headers=headers)</div><div class="line">            html = request.urlopen(req)</div><div class="line">            bsObj = BeautifulSoup(html.read(), <span class="string">"lxml"</span>)</div><div class="line">            tiezi = bsObj.findAll(<span class="string">"ul"</span>)</div><div class="line">            <span class="keyword">for</span> tiaos <span class="keyword">in</span> tiezi:</div><div class="line">                <span class="keyword">for</span> tiao <span class="keyword">in</span> tiaos.findAll(<span class="string">'a'</span>):</div><div class="line">                    <span class="keyword">for</span> person <span class="keyword">in</span> tiao.findAll(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"by"</span>&#125;):</div><div class="line">                        T = person.get_text().strip()</div><div class="line">                        [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> tiao.findAll(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"by"</span>&#125;)]</div><div class="line">                    P = tiao.get_text().strip() + <span class="string">"﹝详细信息﹞:"</span></div><div class="line">                    job_rs = job_rs + <span class="string">"\n"</span> + str(P)</div><div class="line">                    <span class="keyword">if</span> <span class="string">'href'</span> <span class="keyword">in</span> tiao.attrs:</div><div class="line">                        <span class="keyword">try</span>:</div><div class="line">                            tiao_links = <span class="string">"http://rsbbs.xidian.edu.cn/"</span> + tiao.attrs[<span class="string">'href'</span>]</div><div class="line">                            tiao_html = urlopen(tiao_links)</div><div class="line">                            job_rs = job_rs + <span class="string">"\n"</span> + str(tiao_links)</div><div class="line">                            tiao_bsObj = BeautifulSoup(tiao_html.read(), <span class="string">"lxml"</span>)</div><div class="line">                            content = tiao_bsObj.findAll(<span class="string">"div"</span>, &#123;<span class="string">"class"</span>: <span class="string">"message"</span>&#125;)[<span class="number">0</span>]</div><div class="line">                            R = content.get_text().strip()</div><div class="line">                        <span class="keyword">except</span> (ValueError, IndexError) <span class="keyword">as</span> e:</div><div class="line">                            <span class="keyword">pass</span></div><div class="line">                        pageURL.add(pages)</div><div class="line">        time.sleep(<span class="number">3</span>)  <span class="comment"># 设置时间间隔为3秒</span></div><div class="line">        <span class="keyword">return</span> job_rs</div></pre></td></tr></table></figure></p>
<p>得到的信息如下：<br><figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">『睿思校园招聘信息，机器喵自动获取，仅供参考』</div><div class="line">阿里巴巴数据技术及产品部-校园交流﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951547&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">阿里-菜鸟<span class="number">2018</span>年网络测试开发工程师部门直招﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951510&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">（散金币）百度搜索公司SRE团队<span class="number">2019</span>年校招提前批﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951473&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">错投男儿胎，找个家教兼职都这么难（都要求女生）﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951464&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">阿里巴巴菜鸟 测试开发工程师 内推招聘﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951463&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">乐馨托管招聘作业辅导老师一名﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951461&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">[散金币]  西安葡萄城信息技术有限公司<span class="number">2019</span>校园招聘﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951451&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">西安诺瓦科技<span class="number">2019</span>届提前批校招开始啦，与独角兽一起开疆拓土~~~~~﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951338&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">平安租赁招实习生啦﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951331&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">新校区附近寻找初中家教找初中家教﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951299&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">拼多多技术校招内推﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951283&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">百度招实习生﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951276&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">【散金币】西安闻泰电子科技有限公司人力资源<span class="number">2018</span>校园招聘﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951258&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">拼多多<span class="number">2019</span>届 校招开始啦！﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951250&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">乐馨托管招作业辅导老师一名﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951246&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">【找家教】给高一的两个孩子找家教﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951235&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">「商务运营实习」「网联」「央行、阿里、腾讯、京东入股企业」「北京」﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951189&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">老校区附近想找份家教工作，初高中数学理综均可﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951184&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">招女生家教﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951181&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">招募一名会微信小程序的同学开发一个公众号，报酬丰厚﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951140&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">【金币】【招兼职老师】短期老师﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951096&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">【散金币】+家教咯，初三英语、数学、物理、化学﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951023&amp;extra=page%3D1&amp;mobile=2</span></div></pre></td></tr></table></figure></p>
<h3 id="遇到的问题-2"><a href="#遇到的问题-2" class="headerlink" title="遇到的问题"></a>遇到的问题</h3><p>之前循环时间，然后触发程序有些鸡肋。进行了新的改动。<br><figure class="highlight sqf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">while</span> <span class="literal">True</span>:</div><div class="line">    <span class="meta"># itchat.auto_login(hotReload=True)  # 可设置hotReload = True</span></div><div class="line">    jobinfo = <span class="string">""</span></div><div class="line">    time_now = <span class="built_in">time</span>.strftime(<span class="string">'%H%M'</span>,<span class="built_in">time</span>.localtime(<span class="built_in">time</span>.<span class="built_in">time</span>()))</div><div class="line">    <span class="keyword">if</span> int(time_now) == <span class="number">1000</span>:</div><div class="line">        wx(<span class="string">'西电招聘信息发布群1'</span>, xdjob(jobinfo))</div><div class="line">        <span class="built_in">time</span>.<span class="built_in">sleep</span>(<span class="number">30</span>)</div><div class="line">        wx(<span class="string">'西电招聘信息发布群1'</span>, rs())</div><div class="line">        <span class="built_in">time</span>.<span class="built_in">sleep</span>(<span class="number">30</span>)</div><div class="line">        wx(<span class="string">'西电招聘信息发布群2'</span>, xdjob(jobinfo))</div><div class="line">        <span class="built_in">time</span>.<span class="built_in">sleep</span>(<span class="number">30</span>)</div><div class="line">        wx(<span class="string">'西电招聘信息发布群2'</span>, rs())</div><div class="line">        <span class="built_in">time</span>.<span class="built_in">sleep</span>(<span class="number">30</span>)</div><div class="line">    elif int(time_now) % <span class="number">10</span> == <span class="number">0</span>:</div><div class="line">        wx(<span class="string">'TEST'</span>, time_now)</div><div class="line">        <span class="built_in">time</span>.<span class="built_in">sleep</span>(<span class="number">60</span>)</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        timer(<span class="number">60</span>)</div></pre></td></tr></table></figure></p>
<p>采用检测本地时间来进行触发。Itchat有个问题不好处理，会时长掉线，查过很多资料好像并不能很好的解决这个问题。所以，为了保证网页版微信的登录状态，每隔十分钟会给一个TEST群里发送信息。这个方法可以保证一段时间的登录状态。但是还是会一段时间后LOG OUT。现在的原因还未能知晓，此bug需要后面解决。  </p>
<h2 id="V2-1"><a href="#V2-1" class="headerlink" title="V2.1"></a>V2.1</h2><p>是什么驱动要一直去写代码，有一大部分是强迫症！！！<br>上面招聘信息的链接也太长了吧，在微信里看起来好烦。<br>所以，缩短的网址，看这里。<a href="https://x-nicolo.github.io/2018/07/04/%E4%BA%94%E8%A1%8C%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0Python%E7%BC%A9%E7%9F%AD%E7%BD%91%E5%9D%80%E5%8A%9F%E8%83%BD/">Python3五行代码实现缩短网址功能</a><br>实现的效果：<br><figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">『睿思校园招聘信息，机器喵自动获取，仅供参考』</div><div class="line">客服﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/y77mdy7q</span></div><div class="line">阿里巴巴数据技术及产品部-校园交流﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/y7vmoaqr</span></div><div class="line">阿里-菜鸟<span class="number">2018</span>年网络测试开发工程师部门直招﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/yc9xe4eu</span></div><div class="line">（散金币）百度搜索公司SRE团队<span class="number">2019</span>年校招提前批﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/y753gupt</span></div><div class="line">错投男儿胎，找个家教兼职都这么难（都要求女生）﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/y7fdybjh</span></div><div class="line">阿里巴巴菜鸟 测试开发工程师 内推招聘﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/ybwj6dq8</span></div><div class="line">乐馨托管招聘作业辅导老师一名﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/y73cuhfv</span></div><div class="line">[散金币]  西安葡萄城信息技术有限公司<span class="number">2019</span>校园招聘﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/y8w43yap</span></div><div class="line">西安诺瓦科技<span class="number">2019</span>届提前批校招开始啦，与独角兽一起开疆拓土~~~~~﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/y85atskf</span></div><div class="line">平安租赁招实习生啦﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/y77fak6z</span></div><div class="line">新校区附近寻找初中家教找初中家教﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/ya9lxcvw</span></div><div class="line">拼多多技术校招内推﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/ya2plpp7</span></div><div class="line">百度招实习生﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/y9bpe4z2</span></div><div class="line">【散金币】西安闻泰电子科技有限公司人力资源<span class="number">2018</span>校园招聘﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/ybgurcyz</span></div><div class="line">拼多多<span class="number">2019</span>届 校招开始啦！﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/y94ypr6b</span></div><div class="line">乐馨托管招作业辅导老师一名﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/yc67fjvp</span></div><div class="line">【找家教】给高一的两个孩子找家教﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/yc9lldzl</span></div><div class="line">「商务运营实习」「网联」「央行、阿里、腾讯、京东入股企业」「北京」﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/ycvh4qdc</span></div><div class="line">老校区附近想找份家教工作，初高中数学理综均可﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/y9tbfxkv</span></div><div class="line">招女生家教﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/y7u63n68</span></div><div class="line">招募一名会微信小程序的同学开发一个公众号，报酬丰厚﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/y9c6zwkz</span></div><div class="line">【金币】【招兼职老师】短期老师﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/ybo7araq</span></div></pre></td></tr></table></figure></p>
<h2 id="V2-2-7-22"><a href="#V2-2-7-22" class="headerlink" title="V2.2  7.22"></a>V2.2  7.22</h2><h3 id="遇到的问题-3"><a href="#遇到的问题-3" class="headerlink" title="遇到的问题"></a>遇到的问题</h3><p>不能保持登录的问题。<br>我是傻子，大傻子。为什么不能分清if 和 switch的功能！！！  </p>
<p>我把测试保持登录的if 放到最前面就好了啊！！  </p>
<h2 id="V3-0"><a href="#V3-0" class="headerlink" title="V3.0"></a>V3.0</h2><p>增加了西电就业信息网的信息发布。  </p>
<figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">今日西电就业信息网信息</div><div class="line">[机器喵自动获取，仅供参考]</div><div class="line">有问题请艾特群主@肖洒</div><div class="line">更多有意思的小玩意</div><div class="line"><span class="symbol">https:</span><span class="comment">//x-nicolo.github.io/</span></div><div class="line">--------------------</div><div class="line"></div><div class="line"><span class="number">2019</span>吉利全球校园招聘秋招校园大使招募﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/y9snhhlw</span></div><div class="line">北京银通智博科技有限公司﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/yb79rxgd</span></div><div class="line">作业帮教育科技（北京）有限公司﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/ybxefd9l</span></div><div class="line">西安华线石油科技有限公司﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/y9rs7rhx</span></div><div class="line">大连探索者科技有限公司﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/y7ew69lq</span></div><div class="line">网易云音乐校园招聘﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/yb4nuuyg</span></div><div class="line">深圳零壹空间电子有限公司﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/y8b464pp</span></div><div class="line">文职招考，战略支援部队某部邀你到古城西安来﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/y8wwmhkg</span></div><div class="line">北京翔仪恒昌科技有限公司﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/ybjo2mmf</span></div><div class="line">保定市冀能电力自动化设备有限公司﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/yanj2rzg</span></div></pre></td></tr></table></figure>
<p>代码：  </p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">xdjobs</span><span class="params">()</span></span><span class="symbol">:</span></div><div class="line">    job_rs = <span class="string">'🔴就业信息网最新10条信息'</span>+<span class="string">"\n"</span>+<span class="string">'[机器喵自动获取，仅供参考]'</span>+<span class="string">"\n"</span>+<span class="string">'有问题请艾特群主@肖洒'</span>+<span class="string">"\n"</span>+<span class="string">'更多有意思的小玩意'</span>+<span class="string">"\n"</span>+<span class="string">'👉https://x-nicolo.github.io/'</span>+<span class="string">"\n"</span>+<span class="string">"--------------------"</span>+<span class="string">"\n"</span></div><div class="line">    url = <span class="string">'http://job.xidian.edu.cn/html/zpxx/jobs/'</span></div><div class="line">    headers = &#123;<span class="string">'User-Agent'</span> : <span class="string">'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:29.0) Gecko/20100101 Firefox/29.0'</span>&#125;  </div><div class="line">    req = urllib.request.Request(url=url,headers=headers)</div><div class="line">    res = urllib.request.urlopen(req)</div><div class="line">    page_content = res.read()</div><div class="line">    page_content=BeautifulSoup(page_content,<span class="string">"lxml"</span>)</div><div class="line">    job_content = page_content.find(<span class="string">"div"</span>, &#123;<span class="string">"class"</span>: <span class="string">"content"</span>&#125;)</div><div class="line">    rows = job_content.findAll(<span class="string">"span"</span>)</div><div class="line">    job_info=[]</div><div class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> <span class="symbol">rows:</span></div><div class="line">        <span class="keyword">for</span> cell <span class="keyword">in</span> row.findAll(<span class="string">'a'</span>)<span class="symbol">:</span></div><div class="line">            info=cell.get_text()</div><div class="line">            P = cell.get_text().strip() + <span class="string">"﹝详细信息﹞:"</span></div><div class="line">            job_rs = job_rs + <span class="string">"\n"</span> + str(P)</div><div class="line">            tiao_links = <span class="string">"http://job.xidian.edu.cn"</span> + cell.attrs[<span class="string">'href'</span>]</div><div class="line">            job_rs = job_rs + <span class="string">"\n"</span> +str(make_tiny(tiao_links))</div><div class="line">    <span class="keyword">return</span> job_rs</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;招聘季即将到来，如何实时的得知招聘信息呢？自然是爬虫+微信了。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="https://x-nicolo.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Python" scheme="https://x-nicolo.github.io/tags/Python/"/>
    
      <category term="爬虫" scheme="https://x-nicolo.github.io/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>Python100Days</title>
    <link href="https://x-nicolo.github.io/2018/06/05/Python100Days/"/>
    <id>https://x-nicolo.github.io/2018/06/05/Python100Days/</id>
    <published>2018-06-05T09:38:26.000Z</published>
    <updated>2018-06-05T09:38:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>这可能是我目前发现最好最好的Python教程了，故整理至我的博客。<br>原项目GitHub地址<a href="https://github.com/jackfrued/Python-100-Days" target="_blank" rel="external">https://github.com/jackfrued/Python-100-Days</a><br><a id="more"></a>  </p>
<h2 id="初识Python"><a href="#初识Python" class="headerlink" title="初识Python"></a>初识Python</h2><h3 id="Python简介"><a href="#Python简介" class="headerlink" title="Python简介"></a>Python简介</h3><h4 id="Python的历史"><a href="#Python的历史" class="headerlink" title="Python的历史"></a>Python的历史</h4><ol>
<li>1989年圣诞节：Guido von Rossum开始写Python语言的编译器。</li>
<li>1991年2月：第一个Python编译器（同时也是解释器）诞生，它是用C语言实现的（后面又出现了Java和C#实现的版本Jython和IronPython，以及PyPy、Brython、Pyston等其他实现），可以调用C语言的库函数。在最早的版本中，Python已经提供了对“类”，“函数”，“异常处理”等构造块的支持，同时提供了“列表”和“字典”等核心数据类型，同时支持以模块为基础的拓展系统。</li>
<li>1994年1月：Python 1.0正式发布。</li>
<li>2000年10月16日：Python 2.0发布，增加了实现完整的垃圾回收，并且支持Unicode。与此同时，Python的整个开发过程更加透明，社区对开发进度的影响逐渐扩大，生态圈开始慢慢形成。</li>
<li>2008年12月3日：Python 3.0发布，此版不完全兼容之前的Python代码，不过很多新特性后来也被移植到旧的Python 2.6/2.7版本，因为目前还有公司在项目和运维中使用Python 2.x版本的代码。</li>
</ol>
<p>目前我们使用的Python 3.6.x的版本是在2016年的12月23日发布的，Python的版本号分为三段，形如A.B.C。其中A表示大版本号，一般当整体重写，或出现不向后兼容的改变时，增加A；B表示功能更新，出现新功能时增加B；C表示小的改动（如修复了某个Bug），只要有修改就增加C。如果对Python的历史感兴趣，可以查看一篇名为<a href="http://www.cnblogs.com/vamei/archive/2013/02/06/2892628.html" target="_blank" rel="external">《Python简史》</a>的博文。</p>
<h4 id="Python的优缺点"><a href="#Python的优缺点" class="headerlink" title="Python的优缺点"></a>Python的优缺点</h4><p>Python的优点很多，简单的可以总结为以下几点。</p>
<ol>
<li>简单和明确，做一件事只有一种方法。</li>
<li>学习曲线低，与其他很多语言比上手更容易。</li>
<li>开放源代码，拥有强大的社区和生态圈。</li>
<li>解释型语言，完美的平台可移植性。</li>
<li>支持两种主流的编程范式，可以使用面向对象和函数式编程。</li>
<li>可扩展性和可嵌入性，可以调用C/C++代码也可以在C/C++中调用。</li>
<li>代码规范程度高，可读性强，适合有代码洁癖和强迫症的人群。</li>
</ol>
<p>Python的缺点主要集中在以下几点。</p>
<ol>
<li>执行效率低下，因此计算密集型任务可以由C/C++编写。</li>
<li>代码无法加密，但是现在的公司很多都不是卖软件而是卖服务，这个问题慢慢会淡化。</li>
<li>在开发时可以选择的框架太多，有选择的地方就有错误。</li>
</ol>
<h4 id="Python的应用领域"><a href="#Python的应用领域" class="headerlink" title="Python的应用领域"></a>Python的应用领域</h4><p>目前Python在云基础设施、DevOps、网络爬虫开发、数据分析挖掘、机器学习等领域都有着广泛的应用，因此也产生了服务器开发、数据接口开发、自动化运维、科学计算和数据可视化、聊天机器人开发、图像识别和处理等一系列的职位。</p>
<h3 id="搭建编程环境"><a href="#搭建编程环境" class="headerlink" title="搭建编程环境"></a>搭建编程环境</h3><h4 id="Windows环境"><a href="#Windows环境" class="headerlink" title="Windows环境"></a>Windows环境</h4><p>可以在<a href="https://www.python.org" target="_blank" rel="external">Python的官方网站</a>下载到Python的Windows安装程序（exe文件），需要注意的是如果在Windows 7环境下安装需要先安装Service Pack 1补丁包（可以通过一些工具软件自动安装系统补丁的功能来安装），安装过程建议勾选“Add Python 3.6 to PATH”（将Python 3.6添加到PATH环境变量）并选择自定义安装，在设置“Optional Features”界面最好将“pip”、“tcl/tk”、“Python test suite”等项全部勾选上。强烈建议使用自定义的安装路径并保证路径中没有中文。安装完成会看到“Setup was successful”的提示，但是在启动Python环境时可能会因为缺失一些动态链接库文件而导致Python解释器无法运行，常见的问题主要是api-ms-win-crt*.dll缺失以及更新DirectX之后导致某些动态链接库文件缺失，前者可以参照<a href="">《api-ms-win-crt*.dll缺失原因分析和解决方法》</a>一文讲解的方法进行处理或者直接在<a href="https://www.microsoft.com/zh-cn/download/details.aspx?id=48145" target="_blank" rel="external">微软官网</a>下载Visual C++ Redistributable for Visual Studio 2015文件进行修复，后者可以下载一个DirectX修复工具进行修复。</p>
<h4 id="Linux环境"><a href="#Linux环境" class="headerlink" title="Linux环境"></a>Linux环境</h4><p>Linux环境自带了Python 2.x版本，但是如果要更新到3.x的版本，可以在<a href="https://www.python.org" target="_blank" rel="external">Python的官方网站</a>下载Python的源代码并通过源代码构建安装的方式进行安装，具体的步骤如下所示。</p>
<p>安装依赖库（因为没有这些依赖库可能在源代码构件安装时因为缺失底层依赖库而失败）。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum -y install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel</div></pre></td></tr></table></figure>
<p>下载Python源代码并解压缩到指定目录。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">wget https://www.python.org/ftp/python/3.6.1/Python-3.6.1.tar.xz</div><div class="line">xz -d Python-3.6.1.tar.xz</div><div class="line">tar -xvf Python-3.6.1.tar</div></pre></td></tr></table></figure>
<p>切换至Python源代码目录并执行下面的命令进行配置和安装。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">cd Python-3.6.1</div><div class="line">./configure --prefix=/usr/local/python3.6 --enable-optimizations</div><div class="line">make &amp;&amp; make install</div></pre></td></tr></table></figure>
<p>创建软链接，这样就可以直接通过python3直接启动Python解释器。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ln -s /usr/local/python3.6/bin/python3 /usr/bin/python3</div></pre></td></tr></table></figure>
<h4 id="MacOS环境"><a href="#MacOS环境" class="headerlink" title="MacOS环境"></a>MacOS环境</h4><p>MacOS也是自带了Python 2.x版本的，可以通过<a href="https://www.python.org" target="_blank" rel="external">Python的官方网站</a>提供的安装文件（pkg文件）安装3.x的版本。默认安装完成后，可以通过在终端执行python命令来启动2.x版本的Python解释器，可以通过执行python3命令来启动3.x版本的Python解释器，当然也可以通过重新设置软链接来修改启动Python解释器的命令。</p>
<h3 id="从终端运行Python程序"><a href="#从终端运行Python程序" class="headerlink" title="从终端运行Python程序"></a>从终端运行Python程序</h3><h4 id="确认Python的版本"><a href="#确认Python的版本" class="headerlink" title="确认Python的版本"></a>确认Python的版本</h4><p>在终端或命令行提示符中键入下面的命令。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">python --version</div></pre></td></tr></table></figure>
<p>当然也可以先输入python进入交互式环境，再执行以下的代码检查Python的版本。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> sys</div><div class="line"></div><div class="line">print(sys.version_info)</div><div class="line">print(sys.version)</div></pre></td></tr></table></figure>
<h4 id="编写Python源代码"><a href="#编写Python源代码" class="headerlink" title="编写Python源代码"></a>编写Python源代码</h4><p>可以用文本编辑工具（推荐使用Sublime、Atom、TextMate、VSCode等高级文本编辑工具）编写Python源代码并将其命名为hello.py保存起来，代码内容如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">print(<span class="string">'hello, world!'</span>)</div></pre></td></tr></table></figure>
<h4 id="运行程序"><a href="#运行程序" class="headerlink" title="运行程序"></a>运行程序</h4><p>切换到源代码所在的目录并执行下面的命令，看看屏幕上是否输出了”hello, world!”。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">python hello.py</div></pre></td></tr></table></figure>
<h3 id="代码中的注释"><a href="#代码中的注释" class="headerlink" title="代码中的注释"></a>代码中的注释</h3><p>注释是编程语言的一个重要组成部分，用于在源代码中解释代码的作用从而增强程序的可读性和可维护性，当然也可以将源代码中不需要参与运行的代码段通过注释来去掉，这一点在调试程序的时候经常用到。注释在随源代码进入预处理器或编译时会被移除，不会在目标代码中保留也不会影响程序的执行结果。</p>
<ol>
<li>单行注释 - 以#和空格开头的部分</li>
<li>多行注释 - 三个引号开头，三个引号结尾</li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">第一个Python程序 - hello, world!</span></div><div class="line"><span class="string">向伟大的Dennis M. Ritchie先生致敬</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">Version: 0.1</span></div><div class="line"><span class="string">Author: 骆昊</span></div><div class="line"><span class="string">Date: 2018-02-26</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line">print(<span class="string">'hello, world!'</span>)</div><div class="line"><span class="comment"># print("你好,世界！")</span></div><div class="line">print(<span class="string">'你好'</span>, <span class="string">'世界'</span>)</div><div class="line">print(<span class="string">'hello'</span>, <span class="string">'world'</span>, sep=<span class="string">', '</span>, end=<span class="string">'!'</span>)</div><div class="line">print(<span class="string">'goodbye, world'</span>, end=<span class="string">'!\n'</span>)</div></pre></td></tr></table></figure>
<h3 id="其他工具介绍"><a href="#其他工具介绍" class="headerlink" title="其他工具介绍"></a>其他工具介绍</h3><h4 id="IDLE-自带的集成开发工具"><a href="#IDLE-自带的集成开发工具" class="headerlink" title="IDLE - 自带的集成开发工具"></a>IDLE - 自带的集成开发工具</h4><p>IDLE是安装Python环境时自带的集成开发工具，但是由于IDLE的用户体验并不是那么好所以很少在实际开发中被采用。</p>
<h4 id="IPython-更好的交互式编程工具"><a href="#IPython-更好的交互式编程工具" class="headerlink" title="IPython - 更好的交互式编程工具"></a>IPython - 更好的交互式编程工具</h4><p>IPython是一种基于Python的交互式解释器。相较于原生的Python Shell，IPython提供了更为强大的编辑和交互功能。可以通过Python的包管理工具pip安装IPython和Jupyter，具体的操作如下所示。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install ipython jupyter</div></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">python -m pip install ipython jupyter</div></pre></td></tr></table></figure>
<p>安装成功后，可以通过下面的ipython命令启动IPython。</p>
<p>当然我们也可以通过Jupyter运行名为notebook的项目在浏览器窗口中进行交互式操作。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">jupyter notebook</div></pre></td></tr></table></figure>
<h4 id="Sublime-文本编辑神器"><a href="#Sublime-文本编辑神器" class="headerlink" title="Sublime - 文本编辑神器"></a>Sublime - 文本编辑神器</h4><ul>
<li><p>首先可以通过<a href="https://www.sublimetext.com/" target="_blank" rel="external">官方网站</a>下载安装程序安装Sublime 3或Sublime 2。</p>
</li>
<li><p>安装包管理工具。通过快捷键Ctrl+`或者在View菜单中选择Show Console打开控制台，输入下面的代码。</p>
<ul>
<li>Sublime 3</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span>  urllib.request,os;pf=<span class="string">'Package Control.sublime-package'</span>;ipp=sublime.installed_packages_path();urllib.request.install_opener(urllib.request.build_opener(urllib.request.ProxyHandler()));open(os.path.join(ipp,pf),<span class="string">'wb'</span>).write(urllib.request.urlopen(<span class="string">'http://sublime.wbond.net/'</span>+pf.replace(<span class="string">' '</span>,<span class="string">'%20'</span>)).read())</div></pre></td></tr></table></figure>
<ul>
<li>Sublime 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span>  urllib2,os;pf=<span class="string">'Package Control.sublime-package'</span>;ipp=sublime.installed_packages_path();os.makedirs(ipp)ifnotos.path.exists(ipp)elseNone;urllib2.install_opener(urllib2.build_opener(urllib2.ProxyHandler()));open(os.path.join(ipp,pf),<span class="string">'wb'</span>).write(urllib2.urlopen(<span class="string">'http://sublime.wbond.net/'</span>+pf.replace(<span class="string">' '</span>,<span class="string">'%20'</span>)).read());print(<span class="string">'Please restart Sublime Text to finish installation'</span>)</div></pre></td></tr></table></figure>
</li>
<li><p>安装插件。通过Preference菜单的Package Control或快捷键Ctrl+Shift+P打开命令面板，在面板中输入Install Package就可以找到安装插件的工具，然后再查找需要的插件。我们推荐大家安装以下几个插件。</p>
<ul>
<li>SublimeCodeIntel - 代码自动补全工具插件</li>
<li>Emmet - 前端开发代码模板插件</li>
<li>Git - 版本控制工具插件</li>
<li>Python PEP8 Autoformat - PEP8规范自动格式化插件</li>
<li>ConvertToUTF8 - 将本地编码转换为UTF-8</li>
</ul>
</li>
</ul>
<h4 id="PyCharm-Python开发神器"><a href="#PyCharm-Python开发神器" class="headerlink" title="PyCharm - Python开发神器"></a>PyCharm - Python开发神器</h4><p>PyCharm的安装、配置和使用我们在后面会进行介绍。</p>
<h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3><ol>
<li><p>在Python交互环境中下面的代码查看结果并将内容翻译成中文。</p>
 <figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> this</div><div class="line"></div><div class="line">Beautiful <span class="keyword">is</span> better than ugly.</div><div class="line">Explicit <span class="keyword">is</span> better than implicit.</div><div class="line">Simple <span class="keyword">is</span> better than complex.</div><div class="line">Complex <span class="keyword">is</span> better than complicated.</div><div class="line">Flat <span class="keyword">is</span> better than nested.</div><div class="line">Sparse <span class="keyword">is</span> better than dense.</div><div class="line">Readability counts.</div><div class="line">Special cases aren<span class="string">'t special enough to break the rules.</span></div><div class="line"><span class="string">Although practicality beats purity.</span></div><div class="line"><span class="string">Errors should never pass silently.</span></div><div class="line"><span class="string">Unless explicitly silenced.</span></div><div class="line"><span class="string">In the face of ambiguity, refuse the temptation to guess.</span></div><div class="line"><span class="string">There should be one-- and preferably only one --obvious way to do it.</span></div><div class="line"><span class="string">Although that way may not be obvious at first unless you'</span>re Dutch.</div><div class="line">Now <span class="keyword">is</span> better than never.</div><div class="line">Although never <span class="keyword">is</span> often better than *right* now.</div><div class="line">If the implementation <span class="keyword">is</span> hard to explain, it<span class="string">'s a bad idea.</span></div><div class="line"><span class="string">If the implementation is easy to explain, it may be a good idea.</span></div><div class="line"><span class="string">Namespaces are one honking great idea -- let'</span>s do more of those!</div></pre></td></tr></table></figure>
</li>
<li><p>学习使用turtle在屏幕上绘制图形。</p>
 <figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> turtle</div><div class="line"></div><div class="line">turtle.pensize(<span class="number">4</span>)</div><div class="line">turtle.pencolor(<span class="string">'red'</span>)</div><div class="line">turtle.forward(<span class="number">100</span>)</div><div class="line">turtle.right(<span class="number">90</span>)</div><div class="line">turtle.forward(<span class="number">100</span>)</div><div class="line">turtle.right(<span class="number">90</span>)</div><div class="line">turtle.forward(<span class="number">100</span>)</div><div class="line">turtle.right(<span class="number">90</span>)</div><div class="line">turtle.forward(<span class="number">100</span>)</div><div class="line">turtle.mainloop()</div></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="语言元素"><a href="#语言元素" class="headerlink" title="语言元素"></a>语言元素</h2><h3 id="指令和程序"><a href="#指令和程序" class="headerlink" title="指令和程序"></a>指令和程序</h3><p>计算机的硬件系统通常由五大部件构成，包括：运算器、控制器、存储器、输入设备和输出设备。其中，运算器和控制器放在一起就是我们通常所说的中央处理器，它的功能是执行各种运算和控制指令以及处理计算机软件中的数据。我们通常所说的程序实际上就是指令的集合，我们程序就是将一系列的指令按照某种方式组织到一起，然后通过这些指令去控制计算机做我们想让它做的事情。今天我们使用的计算机虽然器件做工越来越精密，处理能力越来越强大，但究其本质来说仍然属于<a href="https://zh.wikipedia.org/wiki/%E5%86%AF%C2%B7%E8%AF%BA%E4%BC%8A%E6%9B%BC%E7%BB%93%E6%9E%84" target="_blank" rel="external">“冯·诺依曼结构”</a>的计算机。“冯·诺依曼结构”有两个关键点，一是提出了将存储设备与中央处理器分开，二是提出了将数据以二进制方式编码。二进制是一种“逢二进一”的计数法，跟我们人类使用的“逢十进一”的计数法没有实质性的区别，人类因为有十根手指所以使用了十进制（因为在数数时十根手指用完之后就只能进位了，当然凡事都有例外，玛雅人可能是因为长年光着脚的原因把脚趾头也算上了，于是他们使用了二十进制的计数法，在这种计数法的指导下玛雅人的历法就与我们的不太一致，而按照玛雅人的历法，2012年是上一个所谓的“太阳纪”的最后一年，而2013年则是新的“太阳纪”的开始，后来这件事情被以讹传讹的方式误传为2012年就是玛雅人预言的世界末日这种荒诞的说法，今天我们可以大胆的猜测，玛雅文明之所以发展缓慢估计也与使用了二十进制有关），对于计算机来说，二进制在物理器件上来说是最容易实现的（高电压表示1，低电压表示0），于是在“冯·诺依曼结构”的计算机都使用了二进制。虽然我们并不需要每个程序员都能够使用二进制的思维方式来工作，但是了解二进制以及它与我们生活中的十进制之间的转换关系，以及二进制与八进制和十六进制的转换关系还是有必要的。如果你对这一点不熟悉，可以自行使用<a href="https://zh.wikipedia.org/wiki/%E4%BA%8C%E8%BF%9B%E5%88%B6" target="_blank" rel="external">维基百科</a>或者<a href="https://www.baidu.com" target="_blank" rel="external">度娘</a>科普一下。</p>
<h3 id="变量和类型"><a href="#变量和类型" class="headerlink" title="变量和类型"></a>变量和类型</h3><p>在程序设计中，变量是一种存储数据的载体。计算机中的变量是实际存在的数据或者说是存储器中存储数据的一块内存空间，变量的值可以被读取和修改，这是所有计算和控制的基础。计算机能处理的数据有很多中类型，除了数值之外还可以处理文本、图形、音频、视频等各种各样的数据，那么不同的数据就需要定义不同的存储类型。Python中的数据类型很多，而且也允许我们自定义新的数据类型（这一点在后面会讲到），我们先介绍几种常用的数据类型。</p>
<ul>
<li>整型：Python中可以处理任意大小的整数（Python 2.x中有int和long两种类型的整数，但这种区分对Python来说意义不大，因此在Python 3.x中整数只有int这一种了），而且支持二进制（如<code>0b100</code>，换算成十进制是4）、八进制（如<code>0o100</code>，换算成十进制是64）、十进制（<code>100</code>）和十六进制（<code>0x100</code>，换算成十进制是256）的表示法。</li>
<li>浮点型：浮点数也就是小数，之所以称为浮点数，是因为按照科学记数法表示时，一个浮点数的小数点位置是可变的，浮点数除了数学写法（如<code>123.456</code>）之外还支持科学计数法（如<code>1.23456e2</code>）。</li>
<li>字符串型：字符串是以单引号或双引号括起来的任意文本，比如<code>&#39;hello&#39;</code>和<code>&quot;hello&quot;</code>,字符串还有原始字符串表示法、字节字符串表示法、Unicode字符串表示法，而且可以书写成多行的形式（用三个单引号或三个双引号开头，三个单引号或三个双引号结尾）。</li>
<li>布尔型：布尔值只有<code>True</code>、<code>False</code>两种值，要么是<code>True</code>，要么是<code>False</code>，在Python中，可以直接用<code>True</code>、<code>False</code>表示布尔值（请注意大小写），也可以通过布尔运算计算出来（例如<code>3 &lt; 5</code>会产生布尔值<code>True</code>，而<code>2 == 1</code>会产生布尔值<code>False</code>）。</li>
<li>复数型：形如<code>3+5j</code>，跟数学上的复数表示一样，唯一不同的是虚部的i换成了j。</li>
</ul>
<h3 id="变量命名"><a href="#变量命名" class="headerlink" title="变量命名"></a>变量命名</h3><p>对于每个变量我们需要给它取一个名字，就如同我们每个人都有属于自己的响亮的名字一样。在Python中，变量命名需要遵循以下这些必须遵守硬性规则和强烈建议遵守的非硬性规则。</p>
<ul>
<li>硬性规则：<ul>
<li>变量名由字母（广义的Unicode字符，不包括特殊字符）、数字和下划线构成，数字不能开头。</li>
<li>大小写敏感（大写的<code>a</code>和小写的<code>A</code>是两个不同的变量）。</li>
<li>不要跟关键字（有特殊含义的单词，后面会讲到）和系统保留字（如函数、模块等的名字）冲突。</li>
</ul>
</li>
<li>PEP 8要求：<ul>
<li>用小写字母拼写，多个单词用下划线连接。</li>
<li>受保护的实例属性用单个下划线开头（后面会讲到）。</li>
<li>私有的实例属性用两个下划线开头（后面会讲到）。</li>
</ul>
</li>
</ul>
<p>当然，作为一个专业的程序员，给变量（事实上应该是所有的标识符）命名做到见名知意也是非常重要的。</p>
<h3 id="变量的使用"><a href="#变量的使用" class="headerlink" title="变量的使用"></a>变量的使用</h3><p>下面通过几个例子来说明变量的类型和变量使用。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">使用变量保存数据并进行算术运算</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">Version: 0.1</span></div><div class="line"><span class="string">Author: 骆昊</span></div><div class="line"><span class="string">Date: 2018-02-27</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line">a = <span class="number">321</span></div><div class="line">b = <span class="number">123</span></div><div class="line">print(a + b)</div><div class="line">print(a - b)</div><div class="line">print(a * b)</div><div class="line">print(a / b)</div><div class="line">print(a // b)</div><div class="line">print(a % b)</div><div class="line">print(a ** b)</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">使用input函数输入</span></div><div class="line"><span class="string">使用int()进行类型转换</span></div><div class="line"><span class="string">用占位符格式化输出的字符串</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">Version: 0.1</span></div><div class="line"><span class="string">Author: 骆昊</span></div><div class="line"><span class="string">Date: 2018-02-27</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line">a = int(input(<span class="string">'a = '</span>))</div><div class="line">b = int(input(<span class="string">'b = '</span>))</div><div class="line">print(<span class="string">'%d + %d = %d'</span> % (a, b, a + b))</div><div class="line">print(<span class="string">'%d - %d = %d'</span> % (a, b, a - b))</div><div class="line">print(<span class="string">'%d * %d = %d'</span> % (a, b, a * b))</div><div class="line">print(<span class="string">'%d / %d = %f'</span> % (a, b, a / b))</div><div class="line">print(<span class="string">'%d // %d = %d'</span> % (a, b, a // b))</div><div class="line">print(<span class="string">'%d %% %d = %d'</span> % (a, b, a % b))</div><div class="line">print(<span class="string">'%d ** %d = %d'</span> % (a, b, a ** b))</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">使用type()检查变量的类型</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">Version: 0.1</span></div><div class="line"><span class="string">Author: 骆昊</span></div><div class="line"><span class="string">Date: 2018-02-27</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line">a = <span class="number">100</span></div><div class="line">b = <span class="number">12.345</span></div><div class="line">c = <span class="number">1</span> + <span class="number">5j</span></div><div class="line">d = <span class="string">'hello, world'</span></div><div class="line">e = <span class="keyword">True</span></div><div class="line">print(type(a))</div><div class="line">print(type(b))</div><div class="line">print(type(c))</div><div class="line">print(type(d))</div><div class="line">print(type(e))</div></pre></td></tr></table></figure>
<p>在对变量类型进行转换时可以使用Python的内置函数（准确的说下面列出的并不是真正意义上的函数，而是后面我们要讲到的创建对象的构造方法）。</p>
<ul>
<li>int()：将一个数值或字符串转换成整数，可以指定进制。</li>
<li>float()：将一个字符串转换成浮点数。</li>
<li>str()：将指定的对象转换成字符串形式，可以指定编码。</li>
<li>chr()：将整数转换成该编码对应的字符串（一个字符）。</li>
<li>ord()：将字符串（一个字符）转换成对应的编码（整数）。</li>
</ul>
<h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><p>Python支持多种运算符，下表大致按照优先级从高到低的顺序列出了所有的运算符，我们会陆续使用到它们。</p>
<table>
<thead>
<tr>
<th>运算符</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>[]</code> <code>[:]</code></td>
<td>下标，切片</td>
</tr>
<tr>
<td><code>**</code></td>
<td>指数</td>
</tr>
<tr>
<td><code>~</code> <code>+</code> <code>-</code></td>
<td>按位取反, 正负号</td>
</tr>
<tr>
<td><code>*</code> <code>/</code> <code>%</code> <code>//</code></td>
<td>乘，除，模，整除</td>
</tr>
<tr>
<td><code>+</code> <code>-</code></td>
<td>加，减</td>
</tr>
<tr>
<td><code>&gt;&gt;</code> <code>&lt;&lt;</code></td>
<td>右移，左移</td>
</tr>
<tr>
<td><code>&amp;</code></td>
<td>按位与</td>
</tr>
<tr>
<td><code>^</code> `</td>
<td>`</td>
<td>按位异或，按位或</td>
</tr>
<tr>
<td><code>&lt;=</code> <code>&lt;</code> <code>&gt;</code> <code>&gt;=</code></td>
<td>小于等于，小于，大于，大于等于</td>
</tr>
<tr>
<td><code>==</code> <code>!=</code></td>
<td>等于，不等于</td>
</tr>
<tr>
<td><code>is</code>  <code>is not</code></td>
<td>身份运算符</td>
</tr>
<tr>
<td><code>in</code> <code>not in</code></td>
<td>成员运算符</td>
</tr>
<tr>
<td><code>not</code> <code>or</code> <code>and</code></td>
<td>逻辑运算符</td>
</tr>
<tr>
<td><code>=</code> <code>+=</code> <code>-=</code> <code>*=</code> <code>/=</code> <code>%=</code> <code>//=</code> <code>**=</code> <code>&amp;=</code> `</td>
<td>=<code>`^=</code> <code>&gt;&gt;=</code> <code>&lt;&lt;=</code></td>
<td>（复合）赋值运算符</td>
</tr>
</tbody>
</table>
<blockquote>
<p><strong>说明：</strong>在实际开发中，如果搞不清楚优先级可以使用括号来确保运算的执行顺序。</p>
</blockquote>
<p>下面的例子演示了运算符的使用。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">运算符的使用</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">Version: 0.1</span></div><div class="line"><span class="string">Author: 骆昊</span></div><div class="line"><span class="string">Date: 2018-02-27</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line">a = <span class="number">5</span></div><div class="line">b = <span class="number">10</span></div><div class="line">c = <span class="number">3</span></div><div class="line">d = <span class="number">4</span></div><div class="line">e = <span class="number">5</span></div><div class="line">a += b</div><div class="line">a -= c</div><div class="line">a *= d</div><div class="line">a /= e</div><div class="line">print(<span class="string">"a = "</span>, a)</div><div class="line"></div><div class="line">flag1 = <span class="number">3</span> &gt; <span class="number">2</span></div><div class="line">flag2 = <span class="number">2</span> &lt; <span class="number">1</span></div><div class="line">flag3 = flag1 <span class="keyword">and</span> flag2</div><div class="line">flag4 = flag1 <span class="keyword">or</span> flag2</div><div class="line">flag5 = <span class="keyword">not</span> flag1</div><div class="line">print(<span class="string">"flag1 = "</span>, flag1)</div><div class="line">print(<span class="string">"flag2 = "</span>, flag2)</div><div class="line">print(<span class="string">"flag3 = "</span>, flag3)</div><div class="line">print(<span class="string">"flag4 = "</span>, flag4)</div><div class="line">print(<span class="string">"flag5 = "</span>, flag5)</div><div class="line">print(flag1 <span class="keyword">is</span> <span class="keyword">True</span>)</div><div class="line">print(flag2 <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">False</span>)</div></pre></td></tr></table></figure>
<h3 id="练习-1"><a href="#练习-1" class="headerlink" title="练习"></a>练习</h3><h4 id="练习1：华氏温度转摄氏温度。"><a href="#练习1：华氏温度转摄氏温度。" class="headerlink" title="练习1：华氏温度转摄氏温度。"></a>练习1：华氏温度转摄氏温度。</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">将华氏温度转换为摄氏温度</span></div><div class="line"><span class="string">F = 1.8C + 32</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">Version: 0.1</span></div><div class="line"><span class="string">Author: 骆昊</span></div><div class="line"><span class="string">Date: 2018-02-27</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line">f = float(input(<span class="string">'请输入华氏温度: '</span>))</div><div class="line">c = (f - <span class="number">32</span>) / <span class="number">1.8</span></div><div class="line">print(<span class="string">'%.1f华氏度 = %.1f摄氏度'</span> % (f, c))</div></pre></td></tr></table></figure>
<h4 id="练习2：输入圆的半径计算计算周长和面积。"><a href="#练习2：输入圆的半径计算计算周长和面积。" class="headerlink" title="练习2：输入圆的半径计算计算周长和面积。"></a>练习2：输入圆的半径计算计算周长和面积。</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">输入半径计算圆的周长和面积</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">Version: 0.1</span></div><div class="line"><span class="string">Author: 骆昊</span></div><div class="line"><span class="string">Date: 2018-02-27</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> math</div><div class="line"></div><div class="line">radius = float(input(<span class="string">'请输入圆的半径: '</span>))</div><div class="line">perimeter = <span class="number">2</span> * math.pi * radius</div><div class="line">area = math.pi * radius * radius</div><div class="line">print(<span class="string">'周长: %.2f'</span> % perimeter)</div><div class="line">print(<span class="string">'面积: %.2f'</span> % area)</div></pre></td></tr></table></figure>
<h4 id="练习3：输入年份判断是不是闰年。"><a href="#练习3：输入年份判断是不是闰年。" class="headerlink" title="练习3：输入年份判断是不是闰年。"></a>练习3：输入年份判断是不是闰年。</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">输入年份 如果是闰年输出True 否则输出False</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">Version: 0.1</span></div><div class="line"><span class="string">Author: 骆昊</span></div><div class="line"><span class="string">Date: 2018-02-27</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line">year = int(input(<span class="string">'请输入年份: '</span>))</div><div class="line"><span class="comment"># 如果代码太长写成一行不便于阅读 可以使用\或()折行</span></div><div class="line">is_leap = (year % <span class="number">4</span> == <span class="number">0</span> <span class="keyword">and</span> year % <span class="number">100</span> != <span class="number">0</span> <span class="keyword">or</span></div><div class="line">           year % <span class="number">400</span> == <span class="number">0</span>)</div><div class="line">print(is_leap)</div></pre></td></tr></table></figure>
<h2 id="分支结构"><a href="#分支结构" class="headerlink" title="分支结构"></a>分支结构</h2><h3 id="分支结构的应用场景"><a href="#分支结构的应用场景" class="headerlink" title="分支结构的应用场景"></a>分支结构的应用场景</h3><p>迄今为止，我们写的Python代码都是一条一条语句顺序执行，这种结构的代码我们称之为顺序结构。然而仅有顺序结构并不能解决所有的问题，比如我们设计一个游戏，游戏第一关的通关条件是玩家获得1000分，那么在完成本局游戏后我们要根据玩家得到分数来决定究竟是进入第二关还是告诉玩家“Game Over”，这里就会产生两个分支，而且这两个分支只有一个会被执行，这就是程序中分支结构。类似的场景还有很多，给大家一分钟的时间，你应该可以想到至少5个以上这样的例子，赶紧试一试。</p>
<h3 id="if语句的使用"><a href="#if语句的使用" class="headerlink" title="if语句的使用"></a>if语句的使用</h3><p>在Python中，要构造分支结构可以使用<code>if</code>、<code>elif</code>和<code>else</code>关键字。所谓关键字就是有特殊含义的单词，像<code>if</code>和<code>else</code>就是专门用于构造分支结构的关键字，很显然你不能够使用它作为变量名（事实上，用作其他的标识符也是不可以）。下面的例子中演示了如何构造一个分支结构。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">用户身份验证</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">Version: 0.1</span></div><div class="line"><span class="string">Author: 骆昊</span></div><div class="line"><span class="string">Date: 2018-02-28</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line">username = input(<span class="string">'请输入用户名: '</span>)</div><div class="line">password = input(<span class="string">'请输入口令: '</span>)</div><div class="line"><span class="comment"># 如果希望输入口令时 终端中没有回显 可以使用getpass模块的getpass函数</span></div><div class="line"><span class="comment"># import getpass</span></div><div class="line"><span class="comment"># password = getpass.getpass('请输入口令: ')</span></div><div class="line"><span class="keyword">if</span> username == <span class="string">'admin'</span> <span class="keyword">and</span> password == <span class="string">'123456'</span>:</div><div class="line">    print(<span class="string">'身份验证成功!'</span>)</div><div class="line"><span class="keyword">else</span>:</div><div class="line">    print(<span class="string">'身份验证失败!'</span>)</div></pre></td></tr></table></figure>
<p>唯一需要说明的是和C/C++、Java等语言不同，Python中没有用花括号来构造代码块而是使用了缩进的方式来设置代码的层次结构，如果<code>if</code>条件成立的情况下需要执行多条语句，只要保持多条语句具有相同的缩进就可以了，换句话说连续的代码如果又保持了相同的缩进那么它们属于同一个代码块，相当于是一个执行的整体。</p>
<p>当然如果要构造出更多的分支，可以使用<code>if…elif…else…</code>结构，例如下面的分段函数求值。</p>
<p>$$f(x)=\begin{cases} 3x-5&amp;\text{(x&gt;1)}\x+2&amp;\text{(-1}\leq\text{x}\leq\text{1)}\5x+3&amp;\text {(x&lt;-1)}\end{cases}$$</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">分段函数求值</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">        3x - 5  (x &gt; 1)</span></div><div class="line"><span class="string">f(x) =  x + 2   (-1 &lt;= x &lt;= 1)</span></div><div class="line"><span class="string">        5x + 3  (x &lt; -1)</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">Version: 0.1</span></div><div class="line"><span class="string">Author: 骆昊</span></div><div class="line"><span class="string">Date: 2018-02-28</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line">x = float(input(<span class="string">'x = '</span>))</div><div class="line"><span class="keyword">if</span> x &gt; <span class="number">1</span>:</div><div class="line">    y = <span class="number">3</span> * x - <span class="number">5</span></div><div class="line"><span class="keyword">elif</span> x &gt;= <span class="number">-1</span>:</div><div class="line">    y = x + <span class="number">2</span></div><div class="line"><span class="keyword">else</span>:</div><div class="line">    y = <span class="number">5</span> * x + <span class="number">3</span></div><div class="line">print(<span class="string">'f(%.2f) = %.2f'</span> % (x, y))</div></pre></td></tr></table></figure>
<p>当然根据实际开发的需要，分支结构是可以嵌套的，例如判断是否通关以后还要根据你获得的宝物或者道具的数量对你的表现给出等级（比如点亮两颗或三颗星星），那么我们就需要在<code>if</code>的内部构造出一个新的分支结构，同理<code>elif</code>和<code>else</code>中也可以再构造新的分支，我们称之为嵌套的分支结构，也就是说上面的代码也可以写成下面的样子。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">分段函数求值</span></div><div class="line"><span class="string">        3x - 5  (x &gt; 1)</span></div><div class="line"><span class="string">f(x) =  x + 2   (-1 &lt;= x &lt;= 1)</span></div><div class="line"><span class="string">        5x + 3  (x &lt; -1)</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">Version: 0.1</span></div><div class="line"><span class="string">Author: 骆昊</span></div><div class="line"><span class="string">Date: 2018-02-28</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line">x = float(input(<span class="string">'x = '</span>))</div><div class="line"><span class="keyword">if</span> x &gt; <span class="number">1</span>:</div><div class="line">    y = <span class="number">3</span> * x - <span class="number">5</span></div><div class="line"><span class="keyword">else</span>:</div><div class="line">    <span class="keyword">if</span> x &gt;= <span class="number">-1</span>:</div><div class="line">        y = x + <span class="number">2</span></div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        y = <span class="number">5</span> * x + <span class="number">3</span></div><div class="line">print(<span class="string">'f(%.2f) = %.2f'</span> % (x, y))</div></pre></td></tr></table></figure>
<blockquote>
<p><strong>说明：</strong>大家可以自己感受一下这两种写法到底是哪一种更好。在之前我们提到的Python之禅中有这么一句话“Flat is bettern than nested.”，之所以提出这个观点是因为嵌套结构的嵌套层次多了之后会严重的影响代码的可读性，如果可以使用扁平化的结构就不要去用嵌套，因此之前的写法是更好的做法。</p>
</blockquote>
<h3 id="练习-2"><a href="#练习-2" class="headerlink" title="练习"></a>练习</h3><h4 id="练习1：英制单位与公制单位互换"><a href="#练习1：英制单位与公制单位互换" class="headerlink" title="练习1：英制单位与公制单位互换"></a>练习1：英制单位与公制单位互换</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">英制单位英寸和公制单位厘米互换</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">Version: 0.1</span></div><div class="line"><span class="string">Author: 骆昊</span></div><div class="line"><span class="string">Date: 2018-02-28</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line">value = float(input(<span class="string">'请输入长度: '</span>))</div><div class="line">unit = input(<span class="string">'请输入单位: '</span>)</div><div class="line"><span class="keyword">if</span> unit == <span class="string">'in'</span> <span class="keyword">or</span> unit == <span class="string">'英寸'</span>:</div><div class="line">    print(<span class="string">'%f英寸 = %f厘米'</span> % (value, value * <span class="number">2.54</span>))</div><div class="line"><span class="keyword">elif</span> unit == <span class="string">'cm'</span> <span class="keyword">or</span> unit == <span class="string">'厘米'</span>:</div><div class="line">    print(<span class="string">'%f厘米 = %f英寸'</span> % (value, value / <span class="number">2.54</span>))</div><div class="line"><span class="keyword">else</span>:</div><div class="line">    print(<span class="string">'请输入有效的单位'</span>)</div></pre></td></tr></table></figure>
<h4 id="练习2：掷骰子决定做什么"><a href="#练习2：掷骰子决定做什么" class="headerlink" title="练习2：掷骰子决定做什么"></a>练习2：掷骰子决定做什么</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">掷骰子决定做什么事情</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">Version: 0.1</span></div><div class="line"><span class="string">Author: 骆昊</span></div><div class="line"><span class="string">Date: 2018-02-28</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</div><div class="line"></div><div class="line">face = randint(<span class="number">1</span>, <span class="number">6</span>)</div><div class="line"><span class="keyword">if</span> face == <span class="number">1</span>:</div><div class="line">    result = <span class="string">'唱首歌'</span></div><div class="line"><span class="keyword">elif</span> face == <span class="number">2</span>:</div><div class="line">    result = <span class="string">'跳个舞'</span></div><div class="line"><span class="keyword">elif</span> face == <span class="number">3</span>:</div><div class="line">    result = <span class="string">'学狗叫'</span></div><div class="line"><span class="keyword">elif</span> face == <span class="number">4</span>:</div><div class="line">    result = <span class="string">'做俯卧撑'</span></div><div class="line"><span class="keyword">elif</span> face == <span class="number">5</span>:</div><div class="line">    result = <span class="string">'念绕口令'</span></div><div class="line"><span class="keyword">else</span>:</div><div class="line">    result = <span class="string">'讲冷笑话'</span></div><div class="line">print(result)</div></pre></td></tr></table></figure>
<blockquote>
<p><strong>说明：</strong>上面的代码中使用了random模块的randint函数生成指定范围的随机数来模拟掷骰子。</p>
</blockquote>
<h4 id="练习3：百分制成绩转等级制"><a href="#练习3：百分制成绩转等级制" class="headerlink" title="练习3：百分制成绩转等级制"></a>练习3：百分制成绩转等级制</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">百分制成绩转等级制成绩</span></div><div class="line"><span class="string">90分以上    --&gt; A</span></div><div class="line"><span class="string">80分~89分    --&gt; B</span></div><div class="line"><span class="string">70分~79分    --&gt; C</span></div><div class="line"><span class="string">60分~69分    --&gt; D</span></div><div class="line"><span class="string">60分以下    --&gt; E</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">Version: 0.1</span></div><div class="line"><span class="string">Author: 骆昊</span></div><div class="line"><span class="string">Date: 2018-02-28</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line">score = float(input(<span class="string">'请输入成绩: '</span>))</div><div class="line"><span class="keyword">if</span> score &gt;= <span class="number">90</span>:</div><div class="line">    grade = <span class="string">'A'</span></div><div class="line"><span class="keyword">elif</span> score &gt;= <span class="number">80</span>:</div><div class="line">    grade = <span class="string">'B'</span></div><div class="line"><span class="keyword">elif</span> score &gt;= <span class="number">70</span>:</div><div class="line">    grade = <span class="string">'C'</span></div><div class="line"><span class="keyword">elif</span> score &gt;= <span class="number">60</span>:</div><div class="line">    grade = <span class="string">'D'</span></div><div class="line"><span class="keyword">else</span>:</div><div class="line">    grade = <span class="string">'E'</span></div><div class="line">print(<span class="string">'对应的等级是:'</span>, grade)</div></pre></td></tr></table></figure>
<h4 id="练习4：输入三条边长如果能构成三角形就计算周长和面积"><a href="#练习4：输入三条边长如果能构成三角形就计算周长和面积" class="headerlink" title="练习4：输入三条边长如果能构成三角形就计算周长和面积"></a>练习4：输入三条边长如果能构成三角形就计算周长和面积</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">判断输入的边长能否构成三角形</span></div><div class="line"><span class="string">如果能则计算出三角形的周长和面积</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">Version: 0.1</span></div><div class="line"><span class="string">Author: 骆昊</span></div><div class="line"><span class="string">Date: 2018-02-28</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> math</div><div class="line"></div><div class="line">a = float(input(<span class="string">'a = '</span>))</div><div class="line">b = float(input(<span class="string">'b = '</span>))</div><div class="line">c = float(input(<span class="string">'c = '</span>))</div><div class="line"><span class="keyword">if</span> a + b &gt; c <span class="keyword">and</span> a + c &gt; b <span class="keyword">and</span> b + c &gt; a:</div><div class="line">    print(<span class="string">'周长: %f'</span> % (a + b + c))</div><div class="line">    p = (a + b + c) / <span class="number">2</span></div><div class="line">    area = math.sqrt(p * (p - a) * (p - b) * (p - c))</div><div class="line">    print(<span class="string">'面积: %f'</span> % (area))</div><div class="line"><span class="keyword">else</span>:</div><div class="line">    print(<span class="string">'不能构成三角形'</span>)</div></pre></td></tr></table></figure>
<blockquote>
<p><strong>说明：</strong>上面的代码中使用了<code>math</code>模块的<code>sqrt</code>函数来计算平方根。用边长计算三角形面积的公式叫做<a href="https://zh.wikipedia.org/zh-hans/海伦公式" target="_blank" rel="external">海伦公式</a>。</p>
</blockquote>
<h4 id="练习5：实现一个个人所得税计算器。"><a href="#练习5：实现一个个人所得税计算器。" class="headerlink" title="练习5：实现一个个人所得税计算器。"></a>练习5：实现一个个人所得税计算器。</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">输入月收入和五险一金计算个人所得税</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">Version: 0.1</span></div><div class="line"><span class="string">Author: 骆昊</span></div><div class="line"><span class="string">Date: 2018-02-28</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line">salary = float(input(<span class="string">'本月收入: '</span>))</div><div class="line">insurance = float(input(<span class="string">'五险一金: '</span>))</div><div class="line">diff = salary - insurance - <span class="number">3500</span></div><div class="line"><span class="keyword">if</span> diff &lt;= <span class="number">0</span>:</div><div class="line">    rate = <span class="number">0</span></div><div class="line">    deduction = <span class="number">0</span></div><div class="line"><span class="keyword">elif</span> diff &lt; <span class="number">1500</span>:</div><div class="line">    rate = <span class="number">0.03</span></div><div class="line">    deduction = <span class="number">0</span></div><div class="line"><span class="keyword">elif</span> diff &lt; <span class="number">4500</span>:</div><div class="line">    rate = <span class="number">0.1</span></div><div class="line">    deduction = <span class="number">105</span></div><div class="line"><span class="keyword">elif</span> diff &lt; <span class="number">9000</span>:</div><div class="line">    rate = <span class="number">0.2</span></div><div class="line">    deduction = <span class="number">555</span></div><div class="line"><span class="keyword">elif</span> diff &lt; <span class="number">35000</span>:</div><div class="line">    rate = <span class="number">0.25</span></div><div class="line">    deduction = <span class="number">1005</span></div><div class="line"><span class="keyword">elif</span> diff &lt; <span class="number">55000</span>:</div><div class="line">    rate = <span class="number">0.3</span></div><div class="line">    deduction = <span class="number">2755</span></div><div class="line"><span class="keyword">elif</span> diff &lt; <span class="number">80000</span>:</div><div class="line">    rate = <span class="number">0.35</span></div><div class="line">    deduction = <span class="number">5505</span></div><div class="line"><span class="keyword">else</span>:</div><div class="line">    rate = <span class="number">0.45</span></div><div class="line">    deduction = <span class="number">13505</span></div><div class="line">tax = abs(diff * rate - deduction)</div><div class="line">print(<span class="string">'个人所得税: ￥%.2f元'</span> % tax)</div><div class="line">print(<span class="string">'实际到手收入: ￥%.2f元'</span> % (diff + <span class="number">3500</span> - tax))</div></pre></td></tr></table></figure>
<blockquote>
<p><strong>说明：</strong>上面的代码中使用了Python内置的<code>abs()</code>函数取绝对值来处理<code>-0</code>的问题。</p>
</blockquote>
<h2 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h2><h3 id="循环结构的应用场景"><a href="#循环结构的应用场景" class="headerlink" title="循环结构的应用场景"></a>循环结构的应用场景</h3><p>如果在程序中我们需要重复的执行某条或某些指令，例如用程序控制机器人踢足球，如果机器人持球而且还没有进入射门范围，那么我们就要一直发出让机器人向球门方向奔跑的指令。当然你可能已经注意到了，刚才的描述中其实不仅仅有需要重复的动作，还有我们上一个章节讲到的分支结构。再举一个简单的例子，比如在我们的程序中要实现每隔1秒中在屏幕上打印一个&quot;hello, world&quot;这样的字符串并持续一个小时，我们肯定不能够将<code>print(&#39;hello, world&#39;)</code>这句代码写上3600遍，如果真的需要这样做那么我们的工作就太无聊了。因此，我们需要循环结构，使用循环结构我们就可以轻松的控制某件事或者某些事重复、重复、再重复的发生。在Python中构造循环结构有两种做法，一种是<code>for-in</code>循环，一种是<code>while</code>循环。</p>
<h3 id="for-in循环"><a href="#for-in循环" class="headerlink" title="for-in循环"></a>for-in循环</h3><p>如果明确的知道循环执行的次数或者是要对一个容器进行迭代（后面会讲到），那么我们推荐使用<code>for-in</code>循环，例如下面代码中计算$\sum_{n=1}^{100}n$。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">用for循环实现1~100求和</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">Version: 0.1</span></div><div class="line"><span class="string">Author: 骆昊</span></div><div class="line"><span class="string">Date: 2018-03-01</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line">sum = <span class="number">0</span></div><div class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">101</span>):</div><div class="line">    sum += x</div><div class="line">print(sum)</div></pre></td></tr></table></figure>
<p>需要说明的是上面代码中的<code>range</code>类型，<code>range</code>可以用来产生一个不变的数值序列，而且这个序列通常都是用在循环中的，例如：</p>
<ul>
<li><code>range(101)</code>可以产生一个0到100的整数序列。</li>
<li><code>range(1, 100)</code>可以产生一个1到99的整数序列。</li>
<li><code>range(1, 100, 2)</code>可以产生一个1到99的奇数序列，其中的2是步长，即数值序列的增量。</li>
</ul>
<p>知道了这一点，我们可以用下面的代码来实现1~100之间的偶数求和。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">用for循环实现1~100之间的偶数求和</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">Version: 0.1</span></div><div class="line"><span class="string">Author: 骆昊</span></div><div class="line"><span class="string">Date: 2018-03-01</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line">sum = <span class="number">0</span></div><div class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">2</span>, <span class="number">101</span>, <span class="number">2</span>):</div><div class="line">    sum += x</div><div class="line">print(sum)</div></pre></td></tr></table></figure>
<p>也可以通过在循环中使用分支结构的方式来实现相同的功能，代码如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">用for循环实现1~100之间的偶数求和</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">Version: 0.1</span></div><div class="line"><span class="string">Author: 骆昊</span></div><div class="line"><span class="string">Date: 2018-03-01</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line">sum = <span class="number">0</span></div><div class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">101</span>):</div><div class="line">    <span class="keyword">if</span> x % <span class="number">2</span> == <span class="number">0</span>:</div><div class="line">        sum += x</div><div class="line">print(sum)</div></pre></td></tr></table></figure>
<h3 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h3><p>如果要构造不知道具体循环次数的循环结构，我们推荐使用<code>while</code>循环，<code>while</code>循环通过一个能够产生或转换出<code>bool</code>值的表达式来控制循环，表达式的值为<code>True</code>循环继续，表达式的值为<code>False</code>循环结束。下面我们通过一个“猜数字”的小游戏（计算机出一个1~100之间的随机数，人输入自己猜的数字，计算机给出对应的提示信息，直到人猜出计算机出的数字）来看看如何使用<code>while</code>循环。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">猜数字游戏</span></div><div class="line"><span class="string">计算机出一个1~100之间的随机数由人来猜</span></div><div class="line"><span class="string">计算机根据人猜的数字分别给出提示大一点/小一点/猜对了</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">Version: 0.1</span></div><div class="line"><span class="string">Author: 骆昊</span></div><div class="line"><span class="string">Date: 2018-03-01</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> random</div><div class="line"></div><div class="line">answer = random.randint(<span class="number">1</span>, <span class="number">100</span>)</div><div class="line">counter = <span class="number">0</span></div><div class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">    counter += <span class="number">1</span></div><div class="line">    number = int(input(<span class="string">'请输入: '</span>))</div><div class="line">    <span class="keyword">if</span> number &lt; answer:</div><div class="line">        print(<span class="string">'大一点'</span>)</div><div class="line">    <span class="keyword">elif</span> number &gt; answer:</div><div class="line">        print(<span class="string">'小一点'</span>)</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        print(<span class="string">'恭喜你猜对了!'</span>)</div><div class="line">        <span class="keyword">break</span></div><div class="line">print(<span class="string">'你总共猜了%d次'</span> % counter)</div><div class="line"><span class="keyword">if</span> counter &gt; <span class="number">7</span>:</div><div class="line">    print(<span class="string">'你的智商余额明显不足'</span>)</div></pre></td></tr></table></figure>
<blockquote>
<p><strong>说明：</strong>上面的代码中使用了<code>break</code>关键字来提前终止循环，需要注意的是<code>break</code>只能终止它所在的那个循环，这一点在使用嵌套的循环结构（下面会讲到）需要引起注意。除了<code>break</code>之外，还有另一个关键字是<code>continue</code>，它可以用来放弃本次循环后续的代码直接让循环进入下一轮。</p>
</blockquote>
<p>和分支结构一样，循环结构也是可以嵌套的，也就是说在循环中还可以构造循环结构。下面的例子演示了如何通过嵌套的循环来输出一个九九乘法表。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">输出乘法口诀表(九九表)</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">Version: 0.1</span></div><div class="line"><span class="string">Author: 骆昊</span></div><div class="line"><span class="string">Date: 2018-03-01</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">10</span>):</div><div class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>, i + <span class="number">1</span>):</div><div class="line">        print(<span class="string">'%d*%d=%d'</span> % (i, j, i * j), end=<span class="string">'\t'</span>)</div><div class="line">    print()</div></pre></td></tr></table></figure>
<h3 id="练习-3"><a href="#练习-3" class="headerlink" title="练习"></a>练习</h3><h4 id="练习1：输入一个数判断是不是素数。"><a href="#练习1：输入一个数判断是不是素数。" class="headerlink" title="练习1：输入一个数判断是不是素数。"></a>练习1：输入一个数判断是不是素数。</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">输入一个正整数判断它是不是素数</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">Version: 0.1</span></div><div class="line"><span class="string">Author: 骆昊</span></div><div class="line"><span class="string">Date: 2018-03-01</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line"><span class="keyword">from</span> math <span class="keyword">import</span> sqrt</div><div class="line"></div><div class="line">num = int(input(<span class="string">'请输入一个正整数: '</span>))</div><div class="line">end = int(sqrt(num))</div><div class="line">is_prime = <span class="keyword">True</span></div><div class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">2</span>, end + <span class="number">1</span>):</div><div class="line">    <span class="keyword">if</span> num % x == <span class="number">0</span>:</div><div class="line">        is_prime = <span class="keyword">False</span></div><div class="line">        <span class="keyword">break</span></div><div class="line"><span class="keyword">if</span> is_prime <span class="keyword">and</span> num != <span class="number">1</span>:</div><div class="line">    print(<span class="string">'%d是素数'</span> % num)</div><div class="line"><span class="keyword">else</span>:</div><div class="line">    print(<span class="string">'%d不是素数'</span> % num)</div></pre></td></tr></table></figure>
<h4 id="练习2：输入两个正整数，计算最大公约数和最小公倍数。"><a href="#练习2：输入两个正整数，计算最大公约数和最小公倍数。" class="headerlink" title="练习2：输入两个正整数，计算最大公约数和最小公倍数。"></a>练习2：输入两个正整数，计算最大公约数和最小公倍数。</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">输入两个正整数计算最大公约数和最小公倍数</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">Version: 0.1</span></div><div class="line"><span class="string">Author: 骆昊</span></div><div class="line"><span class="string">Date: 2018-03-01</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line">x = int(input(<span class="string">'x = '</span>))</div><div class="line">y = int(input(<span class="string">'y = '</span>))</div><div class="line"><span class="keyword">if</span> x &gt; y:</div><div class="line">    (x, y) = (y, x)</div><div class="line"><span class="keyword">for</span> factor <span class="keyword">in</span> range(x, <span class="number">0</span>, <span class="number">-1</span>):</div><div class="line">    <span class="keyword">if</span> x % factor == <span class="number">0</span> <span class="keyword">and</span> y % factor == <span class="number">0</span>:</div><div class="line">        print(<span class="string">'%d和%d的最大公约数是%d'</span> % (x, y, factor))</div><div class="line">        print(<span class="string">'%d和%d的最小公倍数是%d'</span> % (x, y, x * y // factor))</div><div class="line">        <span class="keyword">break</span></div></pre></td></tr></table></figure>
<h4 id="练习3：打印三角形图案。"><a href="#练习3：打印三角形图案。" class="headerlink" title="练习3：打印三角形图案。"></a>练习3：打印三角形图案。</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">打印各种三角形图案</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">*</span></div><div class="line"><span class="string">**</span></div><div class="line"><span class="string">***</span></div><div class="line"><span class="string">****</span></div><div class="line"><span class="string">*****</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">    *</span></div><div class="line"><span class="string">   **</span></div><div class="line"><span class="string">  ***</span></div><div class="line"><span class="string"> ****</span></div><div class="line"><span class="string">*****</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">    *</span></div><div class="line"><span class="string">   ***</span></div><div class="line"><span class="string">  *****</span></div><div class="line"><span class="string"> *******</span></div><div class="line"><span class="string">*********</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">Version: 0.1</span></div><div class="line"><span class="string">Author: 骆昊</span></div><div class="line"><span class="string">Date: 2018-03-01</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line">row = int(input(<span class="string">'请输入行数: '</span>))</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(row):</div><div class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(i + <span class="number">1</span>):</div><div class="line">        print(<span class="string">'*'</span>, end=<span class="string">''</span>)</div><div class="line">    print()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(row):</div><div class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(row):</div><div class="line">        <span class="keyword">if</span> j &lt; row - i - <span class="number">1</span>:</div><div class="line">            print(<span class="string">' '</span>, end=<span class="string">''</span>)</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            print(<span class="string">'*'</span>, end=<span class="string">''</span>)</div><div class="line">    print()</div><div class="line"></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(row):</div><div class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(row - i - <span class="number">1</span>):</div><div class="line">        print(<span class="string">' '</span>, end=<span class="string">''</span>)</div><div class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">2</span> * i + <span class="number">1</span>):</div><div class="line">        print(<span class="string">'*'</span>, end=<span class="string">''</span>)</div><div class="line">    print()</div></pre></td></tr></table></figure>
<h2 id="函数和模块的使用"><a href="#函数和模块的使用" class="headerlink" title="函数和模块的使用"></a>函数和模块的使用</h2><p>在讲解本章节的内容之前，我们先来研究一道数学题，请说出下面的方程有多少组正整数解。</p>
<p>$$x_1 + x_2 + x_3 + x_4 = 8$$</p>
<p>事实上，上面的问题等同于将8个苹果分成四组每组至少一个苹果有多少种方案。想到这一点问题的答案就呼之欲出了。</p>
<p>$$C_M^N =\frac{M!}{N!(M-N)!}, \text{(M=7, N=3)} $$</p>
<p>可以用Python的程序来计算出这个值，代码如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">输入M和N计算C(M,N)</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line">m = int(input(<span class="string">'m = '</span>))</div><div class="line">n = int(input(<span class="string">'n = '</span>))</div><div class="line">fm = <span class="number">1</span></div><div class="line"><span class="keyword">for</span> num <span class="keyword">in</span> range(<span class="number">1</span>, m + <span class="number">1</span>):</div><div class="line">    fm *= num</div><div class="line">fn = <span class="number">1</span></div><div class="line"><span class="keyword">for</span> num <span class="keyword">in</span> range(<span class="number">1</span>, n + <span class="number">1</span>):</div><div class="line">    fn *= num</div><div class="line">fmn = <span class="number">1</span></div><div class="line"><span class="keyword">for</span> num <span class="keyword">in</span> range(<span class="number">1</span>, m - n + <span class="number">1</span>):</div><div class="line">    fmn *= num</div><div class="line">print(fm // fn // fmn)</div></pre></td></tr></table></figure>
<h3 id="函数的作用"><a href="#函数的作用" class="headerlink" title="函数的作用"></a>函数的作用</h3><p>不知道大家是否注意到，在上面的代码中，我们做了3次求阶乘，这样的代码实际上就是重复代码。编程大师Martin Fowler先生曾经说过：“代码有很多种坏味道，重复是最坏的一种！”，要写出高质量的代码首先要解决的就是重复代码的问题。对于上面的代码来说，我们可以将计算阶乘的功能封装到一个称之为“函数”的功能模块中，在需要计算阶乘的地方，我们只需要“调用”这个“函数”就可以了。</p>
<h3 id="定义函数"><a href="#定义函数" class="headerlink" title="定义函数"></a>定义函数</h3><p>在Python中可以使用<code>def</code>关键字来定义函数，和变量一样每个函数也有一个响亮的名字，而且命名规则跟变量的命名规则是一致的。在函数名后面的圆括号中可以放置传递给函数的参数，这一点和数学上的函数非常相似，程序中函数的参数就相当于是数学上说的函数的自变量，而函数执行完成后我们可以通过<code>return</code>关键字来返回一个值，这相当于数学上说的函数的因变量。</p>
<p>在了解了如何定义函数后，我们可以对上面的代码进行重构，所谓重构就是在不影响代码执行结果的前提下对代码的结构进行调整，重构之后的代码如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">factorial</span><span class="params">(num)</span>:</span></div><div class="line">    <span class="string">"""</span></div><div class="line"><span class="string">    求阶乘</span></div><div class="line"><span class="string">    </span></div><div class="line"><span class="string">    :param num: 非负整数</span></div><div class="line"><span class="string">    </span></div><div class="line"><span class="string">    :return: num的阶乘</span></div><div class="line"><span class="string">    """</span></div><div class="line">    result = <span class="number">1</span></div><div class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> range(<span class="number">1</span>, num + <span class="number">1</span>):</div><div class="line">        result *= n</div><div class="line">    <span class="keyword">return</span> result</div><div class="line"></div><div class="line"></div><div class="line">m = int(input(<span class="string">'m = '</span>))</div><div class="line">n = int(input(<span class="string">'n = '</span>))</div><div class="line"><span class="comment"># 当需要计算阶乘的时候不用再写循环求阶乘而是直接调用已经定义好的函数</span></div><div class="line">print(factorial(m) // factorial(n) // factorial(m - n))</div></pre></td></tr></table></figure>
<blockquote>
<p><strong>说明：</strong>Python的math模块中其实已经有一个factorial函数了，事实上要计算阶乘可以直接使用这个现成的函数而不用自己定义。下面例子中的某些函数其实Python中也是内置了，我们这里是为了讲解函数的定义和使用才把它们又实现了一遍，实际开发中不建议做这种低级的重复性的工作。</p>
</blockquote>
<h3 id="函数的参数"><a href="#函数的参数" class="headerlink" title="函数的参数"></a>函数的参数</h3><p>函数是绝大多数编程语言中都支持的一个代码的“构建块”，但是Python中的函数与其他语言中的函数还是有很多不太相同的地方，其中一个显著的区别就是Python对函数参数的处理。在Python中，函数的参数可以有默认值，也支持使用可变参数，所以Python并不需要像其他语言一样支持<a href="https://zh.wikipedia.org/wiki/%E5%87%BD%E6%95%B0%E9%87%8D%E8%BD%BD" target="_blank" rel="external">函数的重载</a>，因为我们在定义一个函数的时候可以让它有多种不同的使用方式，下面是两个小例子。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">roll_dice</span><span class="params">(n=<span class="number">2</span>)</span>:</span></div><div class="line">    <span class="string">"""</span></div><div class="line"><span class="string">    摇色子</span></div><div class="line"><span class="string">    </span></div><div class="line"><span class="string">    :param n: 色子的个数</span></div><div class="line"><span class="string">    </span></div><div class="line"><span class="string">    :return: n颗色子点数之和</span></div><div class="line"><span class="string">    """</span></div><div class="line">    total = <span class="number">0</span></div><div class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(n):</div><div class="line">        total += randint(<span class="number">1</span>, <span class="number">6</span>)</div><div class="line">    <span class="keyword">return</span> total</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(a=<span class="number">0</span>, b=<span class="number">0</span>, c=<span class="number">0</span>)</span>:</span></div><div class="line">    <span class="keyword">return</span> a + b + c</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 如果没有指定参数那么使用默认值摇两颗色子</span></div><div class="line">print(roll_dice())</div><div class="line"><span class="comment"># 摇三颗色子</span></div><div class="line">print(roll_dice(<span class="number">3</span>))</div><div class="line">print(add())</div><div class="line">print(add(<span class="number">1</span>))</div><div class="line">print(add(<span class="number">1</span>, <span class="number">2</span>))</div><div class="line">print(add(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>))</div><div class="line"><span class="comment"># 传递参数时可以不按照设定的顺序进行传递</span></div><div class="line">print(add(c=<span class="number">50</span>, a=<span class="number">100</span>, b=<span class="number">200</span>))</div></pre></td></tr></table></figure>
<p>我们给上面两个函数的参数都设定了默认值，这也就意味着如果在调用函数的时候如果没有传入对应参数的值时将使用该参数的默认值，所以在上面的代码中我们可以用各种不同的方式去调用<code>add</code>函数，这跟其他很多语言中函数重载的效果是一致的。</p>
<p>其实上面的<code>add</code>函数还有更好的实现方案，因为我们可能会对0个或多个参数进行加法运算，而具体有多少个参数是由调用者来决定，我们作为函数的设计者对这一点是一无所知的，因此在不确定参数个数的时候，我们可以使用可变参数，代码如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 在参数前使用*表示args是可变参数</span></div><div class="line"><span class="comment"># 也就是说调用add函数时传入的参数个数可以是0个或多个</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(*args)</span>:</span></div><div class="line">    total = <span class="number">0</span></div><div class="line">    <span class="keyword">for</span> val <span class="keyword">in</span> args:</div><div class="line">        total += val</div><div class="line">    <span class="keyword">return</span> total</div><div class="line"></div><div class="line"></div><div class="line">print(add())</div><div class="line">print(add(<span class="number">1</span>))</div><div class="line">print(add(<span class="number">1</span>, <span class="number">2</span>))</div><div class="line">print(add(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>))</div><div class="line">print(add(<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>))</div></pre></td></tr></table></figure>
<h3 id="用模块管理函数"><a href="#用模块管理函数" class="headerlink" title="用模块管理函数"></a>用模块管理函数</h3><p>对于任何一种编程语言来说，给变量、函数这样的标识符起名字都是一个让人头疼的问题，因为我们会遇到命名冲突这种尴尬的情况。最简单的场景就是在同一个.py文件中定义了两个同名函数，由于Python没有函数重载的概念，那么后面的定义会覆盖之前的定义，也就意味着两个函数同名函数实际上只有一个是存在的。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">()</span>:</span></div><div class="line">    print(<span class="string">'hello, world!'</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">()</span>:</span></div><div class="line">    print(<span class="string">'goodbye, world!'</span>)</div><div class="line"></div><div class="line"></div><div class="line">foo()   <span class="comment"># 输出goodbye, world!</span></div></pre></td></tr></table></figure>
<p>当然上面的这种情况我们很容易就能避免，但是如果项目是由多人协作进行团队开发的时候，团队中可能有多个程序员都定义了名为<code>foo</code>的函数，那么怎么解决这种命名冲突呢？答案其实很简单，Python中每个文件就代表了一个模块（module），我们在不同的模块中可以有同名的函数，在使用函数的时候我们通过<code>import</code>关键字导入指定的模块就可以区分到底要使用的是哪个模块中的<code>foo</code>函数，代码如下所示。</p>
<p>module1.py</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">()</span>:</span></div><div class="line">    print(<span class="string">'hello, world!'</span>)</div></pre></td></tr></table></figure>
<p>module2.py</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">()</span>:</span></div><div class="line">    print(<span class="string">'goodbye, world!'</span>)</div></pre></td></tr></table></figure>
<p>test.py</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> module1 <span class="keyword">import</span> foo</div><div class="line"></div><div class="line">foo()   <span class="comment"># 输出hello, world!</span></div><div class="line"></div><div class="line"><span class="keyword">from</span> module2 <span class="keyword">import</span> foo</div><div class="line"></div><div class="line">foo()   <span class="comment"># 输出goodbye, world!</span></div></pre></td></tr></table></figure>
<p>也可以按照如下所示的方式来区分到底要使用哪一个<code>foo</code>函数。</p>
<p>test.py</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> module1 <span class="keyword">as</span> m1</div><div class="line"><span class="keyword">import</span> module2 <span class="keyword">as</span> m2</div><div class="line"></div><div class="line">m1.foo()</div><div class="line">m2.foo()</div></pre></td></tr></table></figure>
<p>但是如果将代码写成了下面的样子，那么程序中调用的是最后导入的那个<code>foo</code>，因为后导入的foo覆盖了之前导入的<code>foo</code>。</p>
<p>test.py</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> module1 <span class="keyword">import</span> foo</div><div class="line"><span class="keyword">from</span> module2 <span class="keyword">import</span> foo</div><div class="line"></div><div class="line">foo()   <span class="comment"># 输出goodbye, world!</span></div></pre></td></tr></table></figure>
<p>test.py</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> module2 <span class="keyword">import</span> foo</div><div class="line"><span class="keyword">from</span> module1 <span class="keyword">import</span> foo</div><div class="line"></div><div class="line">foo()   <span class="comment"># 输出hello, world!</span></div></pre></td></tr></table></figure>
<p>需要说明的是，如果我们导入的模块除了定义函数之外还中有可以执行代码，那么Python解释器在导入这个模块时就会执行这些代码，事实上我们可能并不希望如此，因此如果我们在模块中编写了执行代码，最好是将这些执行代码放入如下所示的条件中，这样的话除非直接运行该模块，if条件下的这些代码是不会执行的，因为只有直接执行的模块的名字才是“__main__”。</p>
<p>module3.py</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">()</span>:</span></div><div class="line">    <span class="keyword">pass</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">bar</span><span class="params">()</span>:</span></div><div class="line">    <span class="keyword">pass</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># __name__是Python中一个隐含的变量它代表了模块的名字</span></div><div class="line"><span class="comment"># 只有被Python解释器直接执行的模块的名字才是__main__</span></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    print(<span class="string">'call foo()'</span>)</div><div class="line">    foo()</div><div class="line">    print(<span class="string">'call bar()'</span>)</div><div class="line">    bar()</div></pre></td></tr></table></figure>
<p>test.py</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> module3</div><div class="line"></div><div class="line"><span class="comment"># 导入module3时 不会执行模块中if条件成立时的代码 因为模块的名字是module3而不是__main__</span></div></pre></td></tr></table></figure>
<h3 id="练习-4"><a href="#练习-4" class="headerlink" title="练习"></a>练习</h3><h4 id="练习1：实现计算求最大公约数和最小公倍数的函数。"><a href="#练习1：实现计算求最大公约数和最小公倍数的函数。" class="headerlink" title="练习1：实现计算求最大公约数和最小公倍数的函数。"></a>练习1：实现计算求最大公约数和最小公倍数的函数。</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">gcd</span><span class="params">(x, y)</span>:</span></div><div class="line">    (x, y) = (y, x) <span class="keyword">if</span> x &gt; y <span class="keyword">else</span> (x, y)</div><div class="line">    <span class="keyword">for</span> factor <span class="keyword">in</span> range(x, <span class="number">0</span>, <span class="number">-1</span>):</div><div class="line">        <span class="keyword">if</span> x % factor == <span class="number">0</span> <span class="keyword">and</span> y % factor == <span class="number">0</span>:</div><div class="line">            <span class="keyword">return</span> factor</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">lcm</span><span class="params">(x, y)</span>:</span></div><div class="line">    <span class="keyword">return</span> x * y // gcd(x, y)</div></pre></td></tr></table></figure>
<h4 id="练习2：实现判断一个数是不是回文数的函数。"><a href="#练习2：实现判断一个数是不是回文数的函数。" class="headerlink" title="练习2：实现判断一个数是不是回文数的函数。"></a>练习2：实现判断一个数是不是回文数的函数。</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_palindrome</span><span class="params">(num)</span>:</span></div><div class="line">    temp = num</div><div class="line">    total = <span class="number">0</span></div><div class="line">    <span class="keyword">while</span> temp &gt; <span class="number">0</span>:</div><div class="line">        total = total * <span class="number">10</span> + temp % <span class="number">10</span></div><div class="line">        temp //= <span class="number">10</span></div><div class="line">    <span class="keyword">return</span> total == num</div></pre></td></tr></table></figure>
<h4 id="练习3：实现判断一个数是不是素数的函数。"><a href="#练习3：实现判断一个数是不是素数的函数。" class="headerlink" title="练习3：实现判断一个数是不是素数的函数。"></a>练习3：实现判断一个数是不是素数的函数。</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_prime</span><span class="params">(num)</span>:</span></div><div class="line">    <span class="keyword">for</span> factor <span class="keyword">in</span> range(<span class="number">2</span>, num):</div><div class="line">        <span class="keyword">if</span> num % factor == <span class="number">0</span>:</div><div class="line">            <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">    <span class="keyword">return</span> <span class="keyword">True</span> <span class="keyword">if</span> num != <span class="number">1</span> <span class="keyword">else</span> <span class="keyword">False</span></div></pre></td></tr></table></figure>
<h4 id="练习4：写一个程序判断输入的正整数是不是回文素数。"><a href="#练习4：写一个程序判断输入的正整数是不是回文素数。" class="headerlink" title="练习4：写一个程序判断输入的正整数是不是回文素数。"></a>练习4：写一个程序判断输入的正整数是不是回文素数。</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    num = int(input(<span class="string">'请输入正整数: '</span>))</div><div class="line">    <span class="keyword">if</span> is_palindrome(num) <span class="keyword">and</span> is_prime(num):</div><div class="line">        print(<span class="string">'%d是回文素数'</span> % num)</div></pre></td></tr></table></figure>
<p>通过上面的程序可以看出，当我们将代码中重复出现的和相对独立的功能抽取成函数后，我们可以组合使用这些函数来解决更为复杂的问题，这也是我们为什么要定义和使用函数的一个非常重要的原因。</p>
<p>最后，我们来讨论一下Python中有关变量作用域的问题。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">()</span>:</span></div><div class="line">    b = <span class="string">'hello'</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">bar</span><span class="params">()</span>:</span>  <span class="comment"># Python中可以在函数内部再定义函数</span></div><div class="line">        c = <span class="keyword">True</span></div><div class="line">        print(a)</div><div class="line">        print(b)</div><div class="line">        print(c)</div><div class="line"></div><div class="line">    bar()</div><div class="line">    <span class="comment"># print(c)  # NameError: name 'c' is not defined</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    a = <span class="number">100</span></div><div class="line">    <span class="comment"># print(b)  # NameError: name 'b' is not defined</span></div><div class="line">    foo()</div></pre></td></tr></table></figure>
<p>上面的代码能够顺利的执行并且打印出100和“hello”，但我们注意到了，在<code>bar</code>函数的内部并没有定义<code>a</code>和<code>b</code>两个变量，那么<code>a</code>和<code>b</code>是从哪里来的。我们在上面代码的<code>if</code>分支中定义了一个变量<code>a</code>，这是一个全局变量（global variable），属于全局作用域，因为它没有定义在任何一个函数中。在上面的<code>foo</code>函数中我们定义了变量<code>b</code>，这是一个定义在函数中的局部变量（local variable），属于局部作用域，在<code>foo</code>函数的外部并不能访问到它；但对于<code>foo</code>函数内部的<code>bar</code>函数来说，变量<code>b</code>属于嵌套作用域，在<code>bar</code>函数中我们是可以访问到它的。<code>bar</code>函数中的变量<code>c</code>属于局部作用域，在<code>bar</code>函数之外是无法访问的。事实上，Python查找一个变量时会按照“局部作用域”、“嵌套作用域”、“全局作用域”和“内置作用域”的顺序进行搜索，前三者我们在上面的代码中已经看到了，所谓的“内置作用域”就是Python内置的那些隐含标识符<code>min</code>、<code>len</code>等都属于内置作用域）。</p>
<p>再看看下面这段代码，我们希望通过函数调用修改全局变量<code>a</code>的值，但实际上下面的代码是做不到的。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">()</span>:</span></div><div class="line">    a = <span class="number">200</span></div><div class="line">    print(a)  <span class="comment"># 200</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    a = <span class="number">100</span></div><div class="line">    foo()</div><div class="line">    print(a)  <span class="comment"># 100</span></div></pre></td></tr></table></figure>
<p>在调用<code>foo</code>函数后，我们发现<code>a</code>的值仍然是100，这是因为当我们在函数<code>foo</code>中写<code>a = 200</code>的时候，是重新定义了一个名字为<code>a</code>的局部变量，它跟全局作用域的<code>a</code>并不是同一个变量，因为局部作用域中有了自己的变量<code>a</code>，因此<code>foo</code>函数不再搜索全局作用域中的<code>a</code>。如果我们希望在<code>foo</code>函数中修改全局作用域中的<code>a</code>，代码如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">()</span>:</span></div><div class="line">    <span class="keyword">global</span> a</div><div class="line">    a = <span class="number">200</span></div><div class="line">    print(a)  <span class="comment"># 200</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    a = <span class="number">100</span></div><div class="line">    foo()</div><div class="line">    print(a)  <span class="comment"># 200</span></div></pre></td></tr></table></figure>
<p>我们可以使用<code>global</code>关键字来指示<code>foo</code>函数中的变量<code>a</code>来自于全局作用域，如果全局作用域中没有<code>a</code>，那么下面一行的代码就会定义变量<code>a</code>并将其置于全局作用域。同理，如果我们希望函数内部的函数能够修改嵌套作用域中的变量，可以使用<code>nonlocal</code>关键字来指示变量来自于嵌套作用域，请大家自行试验。</p>
<p>在实际开发中，我们应该尽量减少对全局变量的使用，因为全局变量的作用域和影响过于广泛，可能会发生意料之外的修改和使用，除此之外全局变量比局部变量拥有更长的生命周期，可能导致对象占用的内存长时间无法被<a href="https://zh.wikipedia.org/wiki/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6_(%E8%A8%88%E7%AE%97%E6%A9%9F%E7%A7%91%E5%AD%B8" target="_blank" rel="external">垃圾回收</a>)。事实上，减少对全局变量的使用，也是降低代码之间耦合度的一个重要举措，同时也是对<a href="https://zh.wikipedia.org/zh-hans/%E5%BE%97%E5%A2%A8%E5%BF%92%E8%80%B3%E5%AE%9A%E5%BE%8B" target="_blank" rel="external">迪米特法则</a>的践行。减少全局变量的使用就意味着我们应该尽量让变量的作用域在函数的内部，但是如果我们希望将一个局部变量的生命周期延长，使其在函数调用结束后依然可以访问，这时候就需要使用<a href="https://zh.wikipedia.org/wiki/%E9%97%AD%E5%8C%85_(%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6" target="_blank" rel="external">闭包</a>)，这个我们在后续的内容中进行讲解。</p>
<blockquote>
<p><strong>说明</strong>：很多人经常会将“闭包”一词和<a href="https://zh.wikipedia.org/wiki/%E5%8C%BF%E5%90%8D%E5%87%BD%E6%95%B0" target="_blank" rel="external">“匿名函数”</a>混为一谈，但实际上它们是不同的概念，如果想提前了解这个概念，推荐看看<a href="https://zh.wikipedia.org/wiki/" target="_blank" rel="external">维基百科</a>或者<a href="https://www.zhihu.com/" target="_blank" rel="external">知乎</a>上对这个概念的讨论。</p>
</blockquote>
<p>说了那么多，其实结论很简单，从现在开始我们可以将Python代码按照下面的格式进行书写，这一点点的改进其实就是在我们理解了函数和作用域的基础上跨出的巨大的一步。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    <span class="comment"># <span class="doctag">Todo:</span> Add your code here</span></div><div class="line">    <span class="keyword">pass</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h2 id="字符串和常用数据结构"><a href="#字符串和常用数据结构" class="headerlink" title="字符串和常用数据结构"></a>字符串和常用数据结构</h2><h3 id="使用字符串"><a href="#使用字符串" class="headerlink" title="使用字符串"></a>使用字符串</h3><p>第二次世界大战促使了现代电子计算机的诞生，当初的想法很简单，就是用计算机来计算导弹的弹道，因此在计算机刚刚诞生的那个年代，计算机处理的信息主要是数值，而世界上的第一台电子计算机ENIAC每秒钟能够完成约5000次浮点运算。随着时间的推移，虽然对数值运算仍然是计算机日常工作中最为重要的事情之一，但是今天的计算机处理得更多的数据都是以文本信息的方式存在的，而Python表示文本信息的方式我们在很早以前就说过了，那就是字符串类型。所谓<strong>字符串</strong>，就是由零个或多个字符组成的有限序列，一般记为<a href="https://wikimedia.org/api/rest_v1/media/math/render/svg/e29bf631b090323edd6889f810e6cff29538b161" target="_blank" rel="external">$${\displaystyle s=a<em>{1}a</em>{2}\dots a_{n}(0\leq n \leq \infty)}$$</a>。</p>
<p>我们可以通过下面的代码来了解字符串的使用。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    str1 = <span class="string">'hello, world!'</span></div><div class="line">    <span class="comment"># 通过len函数计算字符串的长度</span></div><div class="line">    print(len(str1))  <span class="comment"># 13</span></div><div class="line">    <span class="comment"># 获得字符串首字母大写的拷贝</span></div><div class="line">    print(str1.capitalize())  <span class="comment"># Hello, world!</span></div><div class="line">    <span class="comment"># 获得字符串变大写后的拷贝</span></div><div class="line">    print(str1.upper())  <span class="comment"># HELLO, WORLD!</span></div><div class="line">    <span class="comment"># 从字符串中查找子串所在位置</span></div><div class="line">    print(str1.find(<span class="string">'or'</span>))  <span class="comment"># 8</span></div><div class="line">    print(str1.find(<span class="string">'shit'</span>))  <span class="comment"># -1</span></div><div class="line">    <span class="comment"># 与find类似但找不到子串时会引发异常</span></div><div class="line">    <span class="comment"># print(str1.index('or'))</span></div><div class="line">    <span class="comment"># print(str1.index('shit'))</span></div><div class="line">    <span class="comment"># 检查字符串是否以指定的字符串开头</span></div><div class="line">    print(str1.startswith(<span class="string">'He'</span>))  <span class="comment"># False</span></div><div class="line">    print(str1.startswith(<span class="string">'hel'</span>))  <span class="comment"># True</span></div><div class="line">    <span class="comment"># 检查字符串是否以指定的字符串结尾</span></div><div class="line">    print(str1.endswith(<span class="string">'!'</span>))  <span class="comment"># True</span></div><div class="line">    <span class="comment"># 将字符串以指定的宽度居中并在两侧填充指定的字符</span></div><div class="line">    print(str1.center(<span class="number">50</span>, <span class="string">'*'</span>))</div><div class="line">    <span class="comment"># 将字符串以指定的宽度靠右放置左侧填充指定的字符</span></div><div class="line">    print(str1.rjust(<span class="number">50</span>, <span class="string">' '</span>))</div><div class="line">    str2 = <span class="string">'abc123456'</span></div><div class="line">    <span class="comment"># 从字符串中取出指定位置的字符(下标运算)</span></div><div class="line">    print(str2[<span class="number">2</span>])  <span class="comment"># c</span></div><div class="line">    <span class="comment"># 字符串切片(从指定的开始索引到指定的结束索引)</span></div><div class="line">    print(str2[<span class="number">2</span>:<span class="number">5</span>])  <span class="comment"># c12</span></div><div class="line">    print(str2[<span class="number">2</span>:])  <span class="comment"># c123456</span></div><div class="line">    print(str2[<span class="number">2</span>::<span class="number">2</span>])  <span class="comment"># c246</span></div><div class="line">    print(str2[::<span class="number">2</span>])  <span class="comment"># ac246</span></div><div class="line">    print(str2[::<span class="number">-1</span>])  <span class="comment"># 654321cba</span></div><div class="line">    print(str2[<span class="number">-3</span>:<span class="number">-1</span>])  <span class="comment"># 45</span></div><div class="line">    <span class="comment"># 检查字符串是否由数字构成</span></div><div class="line">    print(str2.isdigit())  <span class="comment"># False</span></div><div class="line">    <span class="comment"># 检查字符串是否以字母构成</span></div><div class="line">    print(str2.isalpha())  <span class="comment"># False</span></div><div class="line">    <span class="comment"># 检查字符串是否以数字和字母构成</span></div><div class="line">    print(str2.isalnum())  <span class="comment"># True</span></div><div class="line">    str3 = <span class="string">'  jackfrued@126.com '</span></div><div class="line">    print(str3)</div><div class="line">    <span class="comment"># 获得字符串修剪左右两侧空格的拷贝</span></div><div class="line">    print(str3.strip())</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>除了字符串，Python还内置了多种类型的数据结构，如果要在程序中保存和操作数据，绝大多数时候可以利用现有的数据结构来实现，最常用的包括列表、元组、集合和字典。</p>
<h3 id="使用列表"><a href="#使用列表" class="headerlink" title="使用列表"></a>使用列表</h3><p>下面的代码演示了如何定义列表、使用下标访问列表元素以及添加和删除元素的操作。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    list1 = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">100</span>]</div><div class="line">    print(list1)</div><div class="line">    list2 = [<span class="string">'hello'</span>] * <span class="number">5</span></div><div class="line">    print(list2)</div><div class="line">    <span class="comment"># 计算列表长度(元素个数)</span></div><div class="line">    print(len(list1))</div><div class="line">    <span class="comment"># 下标(索引)运算</span></div><div class="line">    print(list1[<span class="number">0</span>])</div><div class="line">    print(list1[<span class="number">4</span>])</div><div class="line">    <span class="comment"># print(list1[5])  # IndexError: list index out of range</span></div><div class="line">    print(list1[<span class="number">-1</span>])</div><div class="line">    print(list1[<span class="number">-3</span>])</div><div class="line">    list1[<span class="number">2</span>] = <span class="number">300</span></div><div class="line">    print(list1)</div><div class="line">    <span class="comment"># 添加元素</span></div><div class="line">    list1.append(<span class="number">200</span>)</div><div class="line">    list1.insert(<span class="number">1</span>, <span class="number">400</span>)</div><div class="line">    list1 += [<span class="number">1000</span>, <span class="number">2000</span>]</div><div class="line">    print(list1)</div><div class="line">    print(len(list1))</div><div class="line">    <span class="comment"># 删除元素</span></div><div class="line">    list1.remove(<span class="number">3</span>)</div><div class="line">    <span class="keyword">if</span> <span class="number">1234</span> <span class="keyword">in</span> list1:</div><div class="line">        list1.remove(<span class="number">1234</span>)</div><div class="line">    <span class="keyword">del</span> list1[<span class="number">0</span>]</div><div class="line">    print(list1)</div><div class="line">    <span class="comment"># 清空列表元素</span></div><div class="line">    list1.clear()</div><div class="line">    print(list1)</div><div class="line">    </div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>和字符串一样，列表也可以做切片操作，通过切片操作我们可以实现对列表的复制或者将列表中的一部分取出来创建出新的列表，代码如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    fruits = [<span class="string">'grape'</span>, <span class="string">'apple'</span>, <span class="string">'strawberry'</span>, <span class="string">'waxberry'</span>]</div><div class="line">    fruits += [<span class="string">'pitaya'</span>, <span class="string">'pear'</span>, <span class="string">'mango'</span>]</div><div class="line">    <span class="comment"># 循环遍历列表元素</span></div><div class="line">    <span class="keyword">for</span> fruit <span class="keyword">in</span> fruits:</div><div class="line">        print(fruit.title(), end=<span class="string">' '</span>)</div><div class="line">    print()</div><div class="line">    <span class="comment"># 列表切片</span></div><div class="line">    fruits2 = fruits[<span class="number">1</span>:<span class="number">4</span>]</div><div class="line">    print(fruits2)</div><div class="line">    <span class="comment"># fruit3 = fruits  # 没有复制列表只创建了新的引用</span></div><div class="line">    <span class="comment"># 可以通过完整切片操作来复制列表</span></div><div class="line">    fruits3 = fruits[:]</div><div class="line">    print(fruits3)</div><div class="line">    fruits4 = fruits[<span class="number">-3</span>:<span class="number">-1</span>]</div><div class="line">    print(fruits4)</div><div class="line">    <span class="comment"># 可以通过反向切片操作来获得倒转后的列表的拷贝</span></div><div class="line">    fruits5 = fruits[::<span class="number">-1</span>]</div><div class="line">    print(fruits5)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>下面的代码实现了对列表的排序操作。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    list1 = [<span class="string">'orange'</span>, <span class="string">'apple'</span>, <span class="string">'zoo'</span>, <span class="string">'internationalization'</span>, <span class="string">'blueberry'</span>]</div><div class="line">    list2 = sorted(list1)</div><div class="line">    <span class="comment"># sorted函数返回列表排序后的拷贝不会修改传入的列表</span></div><div class="line">    <span class="comment"># 函数的设计就应该像sorted函数一样尽可能不产生副作用</span></div><div class="line">    list3 = sorted(list1, reverse=<span class="keyword">True</span>)</div><div class="line">    <span class="comment"># 通过key关键字参数指定根据字符串长度进行排序而不是默认的字母表顺序</span></div><div class="line">    list4 = sorted(list1, key=len)</div><div class="line">    print(list1)</div><div class="line">    print(list2)</div><div class="line">    print(list3)</div><div class="line">    print(list4)</div><div class="line">    <span class="comment"># 给列表对象发出排序消息直接在列表对象上进行排序</span></div><div class="line">    list1.sort(reverse=<span class="keyword">True</span>)</div><div class="line">    print(list1)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>我们还可以使用列表的生成式语法来创建列表，代码如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> sys</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    f = [x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">10</span>)]</div><div class="line">    print(f)</div><div class="line">    f = [x + y <span class="keyword">for</span> x <span class="keyword">in</span> <span class="string">'ABCDE'</span> <span class="keyword">for</span> y <span class="keyword">in</span> <span class="string">'1234567'</span>]</div><div class="line">    print(f)</div><div class="line">    <span class="comment"># 用列表的生成表达式语法创建列表容器</span></div><div class="line">    <span class="comment"># 用这种语法创建列表之后元素已经准备就绪所以需要耗费较多的内存空间</span></div><div class="line">    f = [x ** <span class="number">2</span> <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1000</span>)]</div><div class="line">    print(sys.getsizeof(f))  <span class="comment"># 查看对象占用内存的字节数</span></div><div class="line">    print(f)</div><div class="line">    <span class="comment"># 请注意下面的代码创建的不是一个列表而是一个生成器对象</span></div><div class="line">    <span class="comment"># 通过生成器可以获取到数据但它不占用额外的空间存储数据</span></div><div class="line">    <span class="comment"># 每次需要数据的时候就通过内部的运算得到数据(需要花费额外的时间)</span></div><div class="line">    f = (x ** <span class="number">2</span> <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1000</span>))</div><div class="line">    print(sys.getsizeof(f))  <span class="comment"># 相比生成式生成器不占用存储数据的空间</span></div><div class="line">    print(f)</div><div class="line">    <span class="keyword">for</span> val <span class="keyword">in</span> f:</div><div class="line">        print(val)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>除了上面提到的生成器语法，Python中还有另外一种定义生成器的方式，就是通过<code>yield</code>关键字将一个普通函数改造成生成器函数。下面的代码演示了如何实现一个生成<a href="https://zh.wikipedia.org/wiki/%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97" target="_blank" rel="external">斐波拉切数列</a>的生成器。所谓斐波拉切数列可以通过下面<a href="https://zh.wikipedia.org/wiki/%E9%80%92%E5%BD%92" target="_blank" rel="external">递归</a>的方法来进行定义：</p>
<p>$${\displaystyle F_{0}=0}$$</p>
<p>$${\displaystyle F_{1}=1}$$</p>
<p>$${\displaystyle F<em>{n}=F</em>{n-1}+F_{n-2}}({n}\geq{2})$$</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">fib</span><span class="params">(n)</span>:</span></div><div class="line">    a, b = <span class="number">0</span>, <span class="number">1</span></div><div class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(n):</div><div class="line">        a, b = b, a + b</div><div class="line">        <span class="keyword">yield</span> a</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    <span class="keyword">for</span> val <span class="keyword">in</span> fib(<span class="number">20</span>):</div><div class="line">        print(val)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h3 id="使用元组"><a href="#使用元组" class="headerlink" title="使用元组"></a>使用元组</h3><p>Python 的元组与列表类似，不同之处在于元组的元素不能修改，在前面的代码中我们已经不止一次使用过元组了。顾名思义，我们把多个元素组合到一起就形成了一个元组，所以它和列表一样可以保存多条数据。下面的代码演示了如何定义和使用元组。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    <span class="comment"># 定义元组</span></div><div class="line">    t = (<span class="string">'骆昊'</span>, <span class="number">38</span>, <span class="keyword">True</span>, <span class="string">'四川成都'</span>)</div><div class="line">    print(t)</div><div class="line">    <span class="comment"># 获取元组中的元素</span></div><div class="line">    print(t[<span class="number">0</span>])</div><div class="line">    print(t[<span class="number">3</span>])</div><div class="line">    <span class="comment"># 遍历元组中的值</span></div><div class="line">    <span class="keyword">for</span> member <span class="keyword">in</span> t:</div><div class="line">        print(member)</div><div class="line">    <span class="comment"># 重新给元组赋值</span></div><div class="line">    <span class="comment"># t[0] = '王大锤'  # TypeError</span></div><div class="line">    <span class="comment"># 变量t重新引用了新的元组原来的元组将被垃圾回收</span></div><div class="line">    t = (<span class="string">'王大锤'</span>, <span class="number">20</span>, <span class="keyword">True</span>, <span class="string">'云南昆明'</span>)</div><div class="line">    print(t)</div><div class="line">    <span class="comment"># 将元组转换成列表</span></div><div class="line">    person = list(t)</div><div class="line">    print(person)</div><div class="line">    <span class="comment"># 列表是可以修改它的元素的</span></div><div class="line">    person[<span class="number">0</span>] = <span class="string">'李小龙'</span></div><div class="line">    person[<span class="number">1</span>] = <span class="number">25</span></div><div class="line">    print(person)</div><div class="line">    <span class="comment"># 将列表转换成元组</span></div><div class="line">    fruits_list = [<span class="string">'apple'</span>, <span class="string">'banana'</span>, <span class="string">'orange'</span>]</div><div class="line">    fruits_tuple = tuple(fruits_list)</div><div class="line">    print(fruits_tuple)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>这里有一个非常值得探讨的问题，我们已经有了列表这种数据结构，为什么还需要元组这样的类型呢？</p>
<ol>
<li>元组中的元素是无法修改的，事实上我们在项目中尤其是<a href="https://zh.wikipedia.org/zh-hans/%E5%A4%9A%E7%BA%BF%E7%A8%8B" target="_blank" rel="external">多线程</a>环境（后面会讲到）中可能更喜欢使用的是那些不变对象（一方面因为对象状态不能修改，所以可以避免由此引起的不必要的程序错误，简单的说就是一个不变的对象要比可变的对象更加容易维护；另一方面因为没有任何一个线程能够修改不变对象的内部状态，一个不变对象自动就是线程安全的，这样就可以省掉处理同步化的开销。一个不变对象可以方便的被共享访问）。所以结论就是：如果不需要对元素进行添加、删除、修改的时候，可以考虑使用元组，当然如果一个方法要返回多个值，使用元组也是不错的选择。</li>
<li>元组在创建时间和占用的空间上面都优于列表。我们可以使用sys模块的getsizeof函数来检查存储同样的元素的元组和列表各自占用了多少内存空间，这个很容易做到。我们也可以在ipython中使用魔法指令%timeit来分析创建同样内容的元组和列表所花费的时间.</li>
</ol>
<p>!</p>
<h3 id="使用集合"><a href="#使用集合" class="headerlink" title="使用集合"></a>使用集合</h3><p>Python中的集合跟数学上的集合是一致的，不允许有重复元素，而且可以进行交集、并集、差集等运算。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    set1 = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">2</span>&#125;</div><div class="line">    print(set1)</div><div class="line">    print(<span class="string">'Length ='</span>, len(set1))</div><div class="line">    set2 = set(range(<span class="number">1</span>, <span class="number">10</span>))</div><div class="line">    print(set2)</div><div class="line">    set1.add(<span class="number">4</span>)</div><div class="line">    set1.add(<span class="number">5</span>)</div><div class="line">    set2.update([<span class="number">11</span>, <span class="number">12</span>])</div><div class="line">    print(set1)</div><div class="line">    print(set2)</div><div class="line">    set2.discard(<span class="number">5</span>)</div><div class="line">    <span class="comment"># remove的元素如果不存在会引发KeyError</span></div><div class="line">    <span class="keyword">if</span> <span class="number">4</span> <span class="keyword">in</span> set2:</div><div class="line">        set2.remove(<span class="number">4</span>)</div><div class="line">    print(set2)</div><div class="line">    <span class="comment"># 遍历集合容器</span></div><div class="line">    <span class="keyword">for</span> elem <span class="keyword">in</span> set2:</div><div class="line">        print(elem ** <span class="number">2</span>, end=<span class="string">' '</span>)</div><div class="line">    print()</div><div class="line">    <span class="comment"># 将元组转换成集合</span></div><div class="line">    set3 = set((<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>))</div><div class="line">    print(set3.pop())</div><div class="line">    print(set3)</div><div class="line">    <span class="comment"># 集合的交集、并集、差集、对称差运算</span></div><div class="line">    print(set1 &amp; set2)</div><div class="line">    <span class="comment"># print(set1.intersection(set2))</span></div><div class="line">    print(set1 | set2)</div><div class="line">    <span class="comment"># print(set1.union(set2))</span></div><div class="line">    print(set1 - set2)</div><div class="line">    <span class="comment"># print(set1.difference(set2))</span></div><div class="line">    print(set1 ^ set2)</div><div class="line">    <span class="comment"># print(set1.symmetric_difference(set2))</span></div><div class="line">    <span class="comment"># 判断子集和超集</span></div><div class="line">    print(set2 &lt;= set1)</div><div class="line">    <span class="comment"># print(set2.issubset(set1))</span></div><div class="line">    print(set3 &lt;= set1)</div><div class="line">    <span class="comment"># print(set3.issubset(set1))</span></div><div class="line">    print(set1 &gt;= set2)</div><div class="line">    <span class="comment"># print(set1.issuperset(set2))</span></div><div class="line">    print(set1 &gt;= set3)</div><div class="line">    <span class="comment"># print(set1.issuperset(set3))</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<blockquote>
<p><strong>说明</strong>：Python中允许通过一些特殊的方法来为某种类型或数据结构自定义运算符（后面的章节中会讲到），上面的代码中我们对集合进行运算的时候可以调用集合对象的方法，也可以直接使用对应的运算符，例如<code>&amp;</code>运算符跟intersection方法的作用就是一样的，但是使用运算符让代码更加直观。</p>
</blockquote>
<h3 id="使用字典"><a href="#使用字典" class="headerlink" title="使用字典"></a>使用字典</h3><p>字典是另一种可变容器模型，类似于我们生活中使用的字典，它可以存储任意类型对象，与列表、集合不同的是，字典的每个元素都是由一个键和一个值组成的“键值对”，键和值通过冒号分开。下面的代码演示了如何定义和使用字典。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    scores = &#123;<span class="string">'骆昊'</span>: <span class="number">95</span>, <span class="string">'白元芳'</span>: <span class="number">78</span>, <span class="string">'狄仁杰'</span>: <span class="number">82</span>&#125;</div><div class="line">    <span class="comment"># 通过键可以获取字典中对应的值</span></div><div class="line">    print(scores[<span class="string">'骆昊'</span>])</div><div class="line">    print(scores[<span class="string">'狄仁杰'</span>])</div><div class="line">    <span class="comment"># 对字典进行遍历(遍历的其实是键再通过键取对应的值)</span></div><div class="line">    <span class="keyword">for</span> elem <span class="keyword">in</span> scores:</div><div class="line">        print(<span class="string">'%s\t---&gt;\t%d'</span> % (elem, scores[elem]))</div><div class="line">    <span class="comment"># 更新字典中的元素</span></div><div class="line">    scores[<span class="string">'白元芳'</span>] = <span class="number">65</span></div><div class="line">    scores[<span class="string">'诸葛王朗'</span>] = <span class="number">71</span></div><div class="line">    scores.update(冷面=<span class="number">67</span>, 方启鹤=<span class="number">85</span>)</div><div class="line">    print(scores)</div><div class="line">    <span class="keyword">if</span> <span class="string">'武则天'</span> <span class="keyword">in</span> scores:</div><div class="line">        print(scores[<span class="string">'武则天'</span>])</div><div class="line">    print(scores.get(<span class="string">'武则天'</span>))</div><div class="line">    <span class="comment"># get方法也是通过键获取对应的值但是可以设置默认值</span></div><div class="line">    print(scores.get(<span class="string">'武则天'</span>, <span class="number">60</span>))</div><div class="line">    <span class="comment"># 删除字典中的元素</span></div><div class="line">    print(scores.popitem())</div><div class="line">    print(scores.popitem())</div><div class="line">    print(scores.pop(<span class="string">'骆昊'</span>, <span class="number">100</span>))</div><div class="line">    <span class="comment"># 清空字典</span></div><div class="line">    scores.clear()</div><div class="line">    print(scores)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h3 id="练习-5"><a href="#练习-5" class="headerlink" title="练习"></a>练习</h3><h4 id="练习1：在屏幕上显示跑马灯文字"><a href="#练习1：在屏幕上显示跑马灯文字" class="headerlink" title="练习1：在屏幕上显示跑马灯文字"></a>练习1：在屏幕上显示跑马灯文字</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> os</div><div class="line"><span class="keyword">import</span> time</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    content = <span class="string">'北京欢迎你为你开天辟地…………'</span></div><div class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">        <span class="comment"># 清理屏幕上的输出</span></div><div class="line">        os.system(<span class="string">'cls'</span>)  <span class="comment"># os.system('clear')</span></div><div class="line">        print(content)</div><div class="line">        <span class="comment"># 休眠200毫秒</span></div><div class="line">        time.sleep(<span class="number">0.2</span>)</div><div class="line">        content = content[<span class="number">1</span>:] + content[<span class="number">0</span>]</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h4 id="练习2：设计一个函数产生指定长度的验证码，验证码由大小写字母和数字构成。"><a href="#练习2：设计一个函数产生指定长度的验证码，验证码由大小写字母和数字构成。" class="headerlink" title="练习2：设计一个函数产生指定长度的验证码，验证码由大小写字母和数字构成。"></a>练习2：设计一个函数产生指定长度的验证码，验证码由大小写字母和数字构成。</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> random</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">generate_code</span><span class="params">(code_len=<span class="number">4</span>)</span>:</span></div><div class="line">    <span class="string">"""</span></div><div class="line"><span class="string">    生成指定长度的验证码</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">    :param code_len: 验证码的长度(默认4个字符)</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">    :return: 由大小写英文字母和数字构成的随机验证码</span></div><div class="line"><span class="string">    """</span></div><div class="line">    all_chars = <span class="string">'0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'</span></div><div class="line">    last_pos = len(all_chars) - <span class="number">1</span></div><div class="line">    code = <span class="string">''</span></div><div class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(code_len):</div><div class="line">        index = random.randint(<span class="number">0</span>, last_pos)</div><div class="line">        code += all_chars[index]</div><div class="line">    <span class="keyword">return</span> code</div></pre></td></tr></table></figure>
<h4 id="练习3：设计一个函数返回给定文件名的后缀名。"><a href="#练习3：设计一个函数返回给定文件名的后缀名。" class="headerlink" title="练习3：设计一个函数返回给定文件名的后缀名。"></a>练习3：设计一个函数返回给定文件名的后缀名。</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_suffix</span><span class="params">(filename, has_dot=False)</span>:</span></div><div class="line">    <span class="string">"""</span></div><div class="line"><span class="string">    获取文件名的后缀名</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">    :param filename: 文件名</span></div><div class="line"><span class="string">    :param has_dot: 返回的后缀名是否需要带点</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">    :return: 文件的后缀名</span></div><div class="line"><span class="string">    """</span></div><div class="line">    pos = filename.rfind(<span class="string">'.'</span>)</div><div class="line">    <span class="keyword">if</span> <span class="number">0</span> &lt; pos &lt; len(filename) - <span class="number">1</span>:</div><div class="line">        index = pos <span class="keyword">if</span> has_dot <span class="keyword">else</span> pos + <span class="number">1</span></div><div class="line">        <span class="keyword">return</span> filename[index:]</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        <span class="keyword">return</span> <span class="string">''</span></div></pre></td></tr></table></figure>
<h4 id="练习4：设计一个函数返回传入的列表中最大和第二大的元素的值。"><a href="#练习4：设计一个函数返回传入的列表中最大和第二大的元素的值。" class="headerlink" title="练习4：设计一个函数返回传入的列表中最大和第二大的元素的值。"></a>练习4：设计一个函数返回传入的列表中最大和第二大的元素的值。</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">max2</span><span class="params">(x)</span>:</span></div><div class="line">    m1, m2 = (x[<span class="number">0</span>], x[<span class="number">1</span>]) <span class="keyword">if</span> x[<span class="number">0</span>] &gt; x[<span class="number">1</span>] <span class="keyword">else</span> (x[<span class="number">1</span>], x[<span class="number">0</span>])</div><div class="line">    <span class="keyword">for</span> index <span class="keyword">in</span> range(<span class="number">2</span>, len(x)):</div><div class="line">        <span class="keyword">if</span> x[index] &gt; m1:</div><div class="line">            m2 = m1</div><div class="line">            m1 = x[index]</div><div class="line">        <span class="keyword">elif</span> x[index] &gt; m2:</div><div class="line">            m2 = x[index]</div><div class="line">    <span class="keyword">return</span> m1, m2</div></pre></td></tr></table></figure>
<h4 id="练习5：计算指定的年月日是这一年的第几天"><a href="#练习5：计算指定的年月日是这一年的第几天" class="headerlink" title="练习5：计算指定的年月日是这一年的第几天"></a>练习5：计算指定的年月日是这一年的第几天</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_leap_year</span><span class="params">(year)</span>:</span></div><div class="line">    <span class="string">"""</span></div><div class="line"><span class="string">    判断指定的年份是不是闰年</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">    :param year: 年份</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">    :return: 闰年返回True平年返回False</span></div><div class="line"><span class="string">    """</span></div><div class="line">    <span class="keyword">return</span> year % <span class="number">4</span> == <span class="number">0</span> <span class="keyword">and</span> year % <span class="number">100</span> != <span class="number">0</span> <span class="keyword">or</span> year % <span class="number">400</span> == <span class="number">0</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">which_day</span><span class="params">(year, month, date)</span>:</span></div><div class="line">    <span class="string">"""</span></div><div class="line"><span class="string">    计算传入的日期是这一年的第几天</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">    :param year: 年</span></div><div class="line"><span class="string">    :param month: 月</span></div><div class="line"><span class="string">    :param date: 日</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">    :return: 第几天</span></div><div class="line"><span class="string">    """</span></div><div class="line">    days_of_month = [</div><div class="line">        [<span class="number">31</span>, <span class="number">28</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>],</div><div class="line">        [<span class="number">31</span>, <span class="number">29</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>]</div><div class="line">    ][is_leap_year(year)]</div><div class="line">    total = <span class="number">0</span></div><div class="line">    <span class="keyword">for</span> index <span class="keyword">in</span> range(month - <span class="number">1</span>):</div><div class="line">        total += days_of_month[index]</div><div class="line">    <span class="keyword">return</span> total + date</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    print(which_day(<span class="number">1980</span>, <span class="number">11</span>, <span class="number">28</span>))</div><div class="line">    print(which_day(<span class="number">1981</span>, <span class="number">12</span>, <span class="number">31</span>))</div><div class="line">    print(which_day(<span class="number">2018</span>, <span class="number">1</span>, <span class="number">1</span>))</div><div class="line">    print(which_day(<span class="number">2016</span>, <span class="number">3</span>, <span class="number">1</span>))</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h4 id="练习6：打印杨辉三角。"><a href="#练习6：打印杨辉三角。" class="headerlink" title="练习6：打印杨辉三角。"></a>练习6：打印<a href="https://zh.wikipedia.org/wiki/%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92%E5%BD%A2" target="_blank" rel="external">杨辉三角</a>。</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    num = int(input(<span class="string">'Number of rows: '</span>))</div><div class="line">    yh = [[]] * num</div><div class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> range(len(yh)):</div><div class="line">        yh[row] = [<span class="keyword">None</span>] * (row + <span class="number">1</span>)</div><div class="line">        <span class="keyword">for</span> col <span class="keyword">in</span> range(len(yh[row])):</div><div class="line">            <span class="keyword">if</span> col == <span class="number">0</span> <span class="keyword">or</span> col == row:</div><div class="line">                yh[row][col] = <span class="number">1</span></div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                yh[row][col] = yh[row - <span class="number">1</span>][col] + yh[row - <span class="number">1</span>][col - <span class="number">1</span>]</div><div class="line">            print(yh[row][col], end=<span class="string">'\t'</span>)</div><div class="line">        print()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h3 id="综合案例"><a href="#综合案例" class="headerlink" title="综合案例"></a>综合案例</h3><h4 id="案例1：双色球选号"><a href="#案例1：双色球选号" class="headerlink" title="案例1：双色球选号"></a>案例1：双色球选号</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randrange, randint, sample</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">display</span><span class="params">(balls)</span>:</span></div><div class="line">    <span class="string">"""</span></div><div class="line"><span class="string">    输出列表中的双色球号码</span></div><div class="line"><span class="string">    """</span></div><div class="line">    <span class="keyword">for</span> index, ball <span class="keyword">in</span> enumerate(balls):</div><div class="line">        <span class="keyword">if</span> index == len(balls) - <span class="number">1</span>:</div><div class="line">            print(<span class="string">'|'</span>, end=<span class="string">' '</span>)</div><div class="line">        print(<span class="string">'%02d'</span> % ball, end=<span class="string">' '</span>)</div><div class="line">    print()</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">random_select</span><span class="params">()</span>:</span></div><div class="line">    <span class="string">"""</span></div><div class="line"><span class="string">    随机选择一组号码</span></div><div class="line"><span class="string">    """</span></div><div class="line">    red_balls = [x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">34</span>)]</div><div class="line">    selected_balls = []</div><div class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">6</span>):</div><div class="line">        index = randrange(len(red_balls))</div><div class="line">        selected_balls.append(red_balls[index])</div><div class="line">        <span class="keyword">del</span> red_balls[index]</div><div class="line">    <span class="comment"># 上面的for循环也可以写成下面这行代码</span></div><div class="line">    <span class="comment"># sample函数是random模块下的函数</span></div><div class="line">    <span class="comment"># selected_balls = sample(red_balls, 6)</span></div><div class="line">    selected_balls.sort()</div><div class="line">    selected_balls.append(randint(<span class="number">1</span>, <span class="number">16</span>))</div><div class="line">    <span class="keyword">return</span> selected_balls</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    n = int(input(<span class="string">'机选几注: '</span>))</div><div class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(n):</div><div class="line">        display(random_select())</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<blockquote>
<p><strong>说明</strong>：可以使用random模块的sample函数来实现从列表中选择不重复的n个元素。</p>
</blockquote>
<h4 id="综合案例2：约瑟夫环问题"><a href="#综合案例2：约瑟夫环问题" class="headerlink" title="综合案例2：约瑟夫环问题"></a>综合案例2：<a href="https://zh.wikipedia.org/wiki/%E7%BA%A6%E7%91%9F%E5%A4%AB%E6%96%AF%E9%97%AE%E9%A2%98" target="_blank" rel="external">约瑟夫环问题</a></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">《幸运的基督徒》</span></div><div class="line"><span class="string">有15个基督徒和15个非基督徒在海上遇险，为了能让一部分人活下来不得不将其中15个人扔到海里面去，有个人想了个办法就是大家围成一个圈，由某个人开始从1报数，报到9的人就扔到海里面，他后面的人接着从1开始报数，报到9的人继续扔到海里面，直到扔掉15个人。由于上帝的保佑，15个基督徒都幸免于难，问这些人最开始是怎么站的，哪些位置是基督徒哪些位置是非基督徒。</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    persons = [<span class="keyword">True</span>] * <span class="number">30</span></div><div class="line">    counter, index, number = <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span></div><div class="line">    <span class="keyword">while</span> counter &lt; <span class="number">15</span>:</div><div class="line">        <span class="keyword">if</span> persons[index]:</div><div class="line">            number += <span class="number">1</span></div><div class="line">            <span class="keyword">if</span> number == <span class="number">9</span>:</div><div class="line">                persons[index] = <span class="keyword">False</span></div><div class="line">                counter += <span class="number">1</span></div><div class="line">                number = <span class="number">0</span></div><div class="line">        index += <span class="number">1</span></div><div class="line">        index %= <span class="number">30</span></div><div class="line">    <span class="keyword">for</span> person <span class="keyword">in</span> persons:</div><div class="line">        print(<span class="string">'基'</span> <span class="keyword">if</span> person <span class="keyword">else</span> <span class="string">'非'</span>, end=<span class="string">''</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h4 id="综合案例3：井字棋游戏"><a href="#综合案例3：井字棋游戏" class="headerlink" title="综合案例3：井字棋游戏"></a>综合案例3：<a href="https://zh.wikipedia.org/wiki/%E4%BA%95%E5%AD%97%E6%A3%8B" target="_blank" rel="external">井字棋</a>游戏</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> os</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_board</span><span class="params">(board)</span>:</span></div><div class="line">    print(board[<span class="string">'TL'</span>] + <span class="string">'|'</span> + board[<span class="string">'TM'</span>] + <span class="string">'|'</span> + board[<span class="string">'TR'</span>])</div><div class="line">    print(<span class="string">'-+-+-'</span>)</div><div class="line">    print(board[<span class="string">'ML'</span>] + <span class="string">'|'</span> + board[<span class="string">'MM'</span>] + <span class="string">'|'</span> + board[<span class="string">'MR'</span>])</div><div class="line">    print(<span class="string">'-+-+-'</span>)</div><div class="line">    print(board[<span class="string">'BL'</span>] + <span class="string">'|'</span> + board[<span class="string">'BM'</span>] + <span class="string">'|'</span> + board[<span class="string">'BR'</span>])</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    init_board = &#123;</div><div class="line">        <span class="string">'TL'</span>: <span class="string">' '</span>, <span class="string">'TM'</span>: <span class="string">' '</span>, <span class="string">'TR'</span>: <span class="string">' '</span>,</div><div class="line">        <span class="string">'ML'</span>: <span class="string">' '</span>, <span class="string">'MM'</span>: <span class="string">' '</span>, <span class="string">'MR'</span>: <span class="string">' '</span>,</div><div class="line">        <span class="string">'BL'</span>: <span class="string">' '</span>, <span class="string">'BM'</span>: <span class="string">' '</span>, <span class="string">'BR'</span>: <span class="string">' '</span></div><div class="line">    &#125;</div><div class="line">    begin = <span class="keyword">True</span></div><div class="line">    <span class="keyword">while</span> begin:</div><div class="line">        curr_board = init_board.copy()</div><div class="line">        begin = <span class="keyword">False</span></div><div class="line">        turn = <span class="string">'x'</span></div><div class="line">        counter = <span class="number">0</span></div><div class="line">        os.system(<span class="string">'clear'</span>)</div><div class="line">        print_board(curr_board)</div><div class="line">        <span class="keyword">while</span> counter &lt; <span class="number">9</span>:</div><div class="line">            move = input(<span class="string">'轮到%s走棋, 请输入位置: '</span> % turn)</div><div class="line">            <span class="keyword">if</span> curr_board[move] == <span class="string">' '</span>:</div><div class="line">                counter += <span class="number">1</span></div><div class="line">                curr_board[move] = turn</div><div class="line">                <span class="keyword">if</span> turn == <span class="string">'x'</span>:</div><div class="line">                    turn = <span class="string">'o'</span></div><div class="line">                <span class="keyword">else</span>:</div><div class="line">                    turn = <span class="string">'x'</span></div><div class="line">            os.system(<span class="string">'clear'</span>)</div><div class="line">            print_board(curr_board)</div><div class="line">        choice = input(<span class="string">'再玩一局?(yes|no)'</span>)</div><div class="line">        begin = choice == <span class="string">'yes'</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<blockquote>
<p><strong>说明</strong>：最后这个案例来自<a href="https://item.jd.com/11943853.html" target="_blank" rel="external">《Python编程快速上手:让繁琐工作自动化》</a>一书（这本书对有编程基础想迅速使用Python将日常工作自动化的人来说还是不错的教材），对代码做了一点点的调整。  </p>
</blockquote>
<h2 id="面向对象编程基础"><a href="#面向对象编程基础" class="headerlink" title="面向对象编程基础"></a>面向对象编程基础</h2><p>活在当下的程序员应该都听过“面向对象编程”一词，也经常有人问能不能用一句话解释下什么是“面向对象编程”，我们先来看看比较正式的说法。</p>
<blockquote>
<p>把一组数据结构和处理它们的方法组成对象（object），把相同行为的对象归纳为类（class），通过类的封装（encapsulation）隐藏内部细节，通过继承（inheritance）实现类的特化（specialization）和泛化（generalization），通过多态（polymorphism）实现基于对象类型的动态分派。</p>
</blockquote>
<p>之前我们说过“程序是指令的集合”，我们在程序中书写的语句在执行时会变成一条或多条指令然后由CPU去执行。当然为了简化程序的设计，我们引入了函数的概念，把相对独立且经常重复使用的代码放置到函数中，在需要使用这些功能的时候只要调用函数即可；如果一个函数的功能过于复杂和臃肿，我们又可以进一步将函数继续切分为子函数来降低系统的复杂性。但是说了这么多，不知道大家是否发现，所谓编程就是程序员按照计算机的工作方式控制计算机完成各种任务。但是，计算机的工作方式与正常人类的思维模式是不同的，如果编程就必须得抛弃人类正常的思维方式去迎合计算机，编程的乐趣就少了很多，“每个人都应该学习编程”这样的豪言壮语就只能说说而已。当然，这些还不是最重要的，最重要的是当我们需要开发一个复杂的系统时，代码的复杂性会让开发和维护工作都变得举步维艰，所以在上世纪60年代末期，“<a href="https://zh.wikipedia.org/wiki/%E8%BD%AF%E4%BB%B6%E5%8D%B1%E6%9C%BA" target="_blank" rel="external">软件危机</a>”、“<a href="https://zh.wikipedia.org/wiki/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B" target="_blank" rel="external">软件工程</a>”等一系列的概念开始在行业中出现。</p>
<p>当然，程序员圈子内的人都知道，现实中并没有解决上面所说的这些问题的“<a href="https://zh.wikipedia.org/wiki/%E6%B2%A1%E6%9C%89%E9%93%B6%E5%BC%B9" target="_blank" rel="external">银弹</a>”，真正让软件开发者看到希望的是上世纪70年代诞生的<a href="https://zh.wikipedia.org/wiki/Smalltalk" target="_blank" rel="external">Smalltalk</a>编程语言中引入的面向对象的编程思想（面向对象编程的雏形可以追溯到更早期的<a href="https://zh.wikipedia.org/wiki/Simula" target="_blank" rel="external">Simula</a>语言）。按照这种编程理念，程序中的数据和操作数据的函数是一个逻辑上的整体，我们称之为“对象”，而我们解决问题的方式就是创建出需要的对象并向对象发出各种各样的消息，多个对象的协同工作最终可以让我们构造出复杂的系统来解决现实中的问题。</p>
<blockquote>
<p><strong>说明</strong>：当然面向对象也不是解决软件开发中所有问题的最后的“银弹”，所以今天的高级程序设计语言几乎都提供了对多种编程范式的支持，Python也不例外。</p>
</blockquote>
<h3 id="类和对象"><a href="#类和对象" class="headerlink" title="类和对象"></a>类和对象</h3><p>简单的说，类是对象的蓝图和模板，而对象是类的实例。这个解释虽然有点像用概念在解释概念，但是从这句话我们至少可以看出，类是抽象的概念，而对象是具体的东西。在面向对象编程的世界中，一切皆为对象，对象都有属性和行为，每个对象都是独一无二的，而且对象一定属于某个类（型）。当我们把一大堆拥有共同特征的对象的静态特征（属性）和动态特征（行为）都抽取出来后，就可以定义出一个叫做“类”的东西。</p>
<h3 id="定义类"><a href="#定义类" class="headerlink" title="定义类"></a>定义类</h3><p>在Python中可以使用<code>class</code>关键字定义类，然后在类中通过之前学习过的函数来定义方法，这样就可以将对象的动态特征描述出来，代码如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">(object)</span>:</span></div><div class="line"></div><div class="line">    <span class="comment"># __init__是一个特殊方法用于在创建对象时进行初始化操作</span></div><div class="line">    <span class="comment"># 通过这个方法我们可以为学生对象绑定name和age两个属性</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, age)</span>:</span></div><div class="line">        self.name = name</div><div class="line">        self.age = age</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">study</span><span class="params">(self, course_name)</span>:</span></div><div class="line">        print(<span class="string">'%s正在学习%s.'</span> % (self.name, course_name))</div><div class="line"></div><div class="line">    <span class="comment"># PEP 8要求标识符的名字用全小写多个单词用下划线连接</span></div><div class="line">    <span class="comment"># 但是很多程序员和公司更倾向于使用驼峰命名法(驼峰标识)</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">watch_av</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">if</span> self.age &lt; <span class="number">18</span>:</div><div class="line">            print(<span class="string">'%s只能观看《熊出没》.'</span> % self.name)</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            print(<span class="string">'%s正在观看岛国爱情动作片.'</span> % self.name)</div></pre></td></tr></table></figure>
<blockquote>
<p><strong>说明</strong>：写在类中的函数，我们通常称之为（对象的）方法，这些方法就是对象可以接收的消息。</p>
</blockquote>
<h3 id="创建和使用对象"><a href="#创建和使用对象" class="headerlink" title="创建和使用对象"></a>创建和使用对象</h3><p>当我们定义好一个类之后，可以通过下面的方式来创建对象并给对象发消息。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    <span class="comment"># 创建学生对象并指定姓名和年龄</span></div><div class="line">    stu1 = Student(<span class="string">'骆昊'</span>, <span class="number">38</span>)</div><div class="line">    <span class="comment"># 给对象发study消息</span></div><div class="line">    stu1.study(<span class="string">'Python程序设计'</span>)</div><div class="line">    <span class="comment"># 给对象发watch_av消息</span></div><div class="line">    stu1.watch_av()</div><div class="line">    stu2 = Student(<span class="string">'王大锤'</span>, <span class="number">15</span>)</div><div class="line">    stu2.study(<span class="string">'思想品德'</span>)</div><div class="line">    stu2.watch_av()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h3 id="访问可见性问题"><a href="#访问可见性问题" class="headerlink" title="访问可见性问题"></a>访问可见性问题</h3><p>对于上面的代码，有C++、Java、C#等编程经验的程序员可能会问，我们给<code>Student</code>对象绑定的<code>name</code>和<code>age</code>属性到底具有怎样的访问权限（也称为可见性）。因为在很多面向对象编程语言中，我们通常会将对象的属性设置为私有的（private）或受保护的（protected），简单的说就是不允许外界访问，而对象的方法通常都是公开的（public），因为公开的方法就是对象能够接受的消息。在Python中，属性和方法的访问权限只有两种，也就是公开的和私有的，如果希望属性是私有的，在给属性命名时可以用两个下划线作为开头，下面的代码可以验证这一点。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, foo)</span>:</span></div><div class="line">        self.__foo = foo</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__bar</span><span class="params">(self)</span>:</span></div><div class="line">        print(self.__foo)</div><div class="line">        print(<span class="string">'__bar'</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    test = Test(<span class="string">'hello'</span>)</div><div class="line">    <span class="comment"># AttributeError: 'Test' object has no attribute '__bar'</span></div><div class="line">    test.__bar()</div><div class="line">    <span class="comment"># AttributeError: 'Test' object has no attribute '__foo'</span></div><div class="line">    print(test.__foo)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>但是，Python并没有从语法上严格保证私有属性或方法的私密性，它只是给私有的属性和方法换了一个名字来“妨碍”对它们的访问，事实上如果你知道更换名字的规则仍然可以访问到它们，下面的代码就可以验证这一点。之所以这样设定，可以用这样一句名言加以解释，就是“We are all consenting adults here”。因为绝大多数程序员都认为开放比封闭要好，而且程序员要自己为自己的行为负责。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, foo)</span>:</span></div><div class="line">        self.__foo = foo</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__bar</span><span class="params">(self)</span>:</span></div><div class="line">        print(self.__foo)</div><div class="line">        print(<span class="string">'__bar'</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    test = Test(<span class="string">'hello'</span>)</div><div class="line">    test._Test__bar()</div><div class="line">    print(test._Test__foo)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>在实际开发中，我们并不建议将属性设置为私有的，因为这会导致子类无法访问（后面会讲到）。所以大多数Python程序员会遵循一种命名惯例就是让属性名以单下划线开头来表示属性是受保护的，本类之外的代码在访问这样的属性时应该要保持慎重。这种做法并不是语法上的规则，单下划线开头的属性和方法外界仍然是可以访问的，所以更多的时候它是一种暗示或隐喻，关于这一点可以看看我的<a href="http://blog.csdn.net/jackfrued/article/details/79521404" target="_blank" rel="external">《Python - 那些年我们踩过的那些坑》</a>文章中的讲解。</p>
<h3 id="面向对象的支柱"><a href="#面向对象的支柱" class="headerlink" title="面向对象的支柱"></a>面向对象的支柱</h3><p>面向对象有三大支柱：封装、继承和多态。后面两个概念在下一个章节中进行详细的说明，这里我们先说一下什么是封装。我自己对封装的理解是“隐藏一切可以隐藏的实现细节，只向外界暴露（提供）简单的编程接口”。我们在类中定义的方法其实就是把数据和对数据的操作封装起来了，在我们创建了对象之后，只需要给对象发送一个消息（调用方法）就可以执行方法中的代码，也就是说我们只需要知道方法的名字和传入的参数（方法的外部视图），而不需要知道方法内部的实现细节（方法的内部视图）。</p>
<h3 id="练习-6"><a href="#练习-6" class="headerlink" title="练习"></a>练习</h3><h4 id="练习1：定义一个类描述数字时钟"><a href="#练习1：定义一个类描述数字时钟" class="headerlink" title="练习1：定义一个类描述数字时钟"></a>练习1：定义一个类描述数字时钟</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Clock</span><span class="params">(object)</span>:</span></div><div class="line">    <span class="string">"""</span></div><div class="line"><span class="string">    数字时钟</span></div><div class="line"><span class="string">    """</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, hour=<span class="number">0</span>, minute=<span class="number">0</span>, second=<span class="number">0</span>)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line"><span class="string">        构造器</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">        :param hour: 时</span></div><div class="line"><span class="string">        :param minute: 分</span></div><div class="line"><span class="string">        :param second: 秒</span></div><div class="line"><span class="string">        """</span></div><div class="line">        self._hour = hour</div><div class="line">        self._minute = minute</div><div class="line">        self._second = second</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="string">"""走字"""</span></div><div class="line">        self._second += <span class="number">1</span></div><div class="line">        <span class="keyword">if</span> self._second == <span class="number">60</span>:</div><div class="line">            self._second = <span class="number">0</span></div><div class="line">            self._minute += <span class="number">1</span></div><div class="line">            <span class="keyword">if</span> self._minute == <span class="number">60</span>:</div><div class="line">                self._minute = <span class="number">0</span></div><div class="line">                self._hour += <span class="number">1</span></div><div class="line">                <span class="keyword">if</span> self._hour == <span class="number">24</span>:</div><div class="line">                    self._hour = <span class="number">0</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="string">"""显示时间"""</span></div><div class="line">        <span class="keyword">return</span> <span class="string">'%02d:%02d:%02d'</span> % \</div><div class="line">               (self._hour, self._minute, self._second)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    clock = Clock(<span class="number">23</span>, <span class="number">59</span>, <span class="number">58</span>)</div><div class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">        print(clock)</div><div class="line">        sleep(<span class="number">1</span>)</div><div class="line">        clock.run()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h4 id="练习2：定义一个类描述平面上的点并提供移动点和计算到另一个点距离的方法。"><a href="#练习2：定义一个类描述平面上的点并提供移动点和计算到另一个点距离的方法。" class="headerlink" title="练习2：定义一个类描述平面上的点并提供移动点和计算到另一个点距离的方法。"></a>练习2：定义一个类描述平面上的点并提供移动点和计算到另一个点距离的方法。</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> math <span class="keyword">import</span> sqrt</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Point</span><span class="params">(object)</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, x=<span class="number">0</span>, y=<span class="number">0</span>)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line"><span class="string">        构造器</span></div><div class="line"><span class="string">        </span></div><div class="line"><span class="string">        :param x: 横坐标</span></div><div class="line"><span class="string">        :param y: 纵坐标</span></div><div class="line"><span class="string">        """</span></div><div class="line">        self.x = x</div><div class="line">        self.y = y</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">move_to</span><span class="params">(self, x, y)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line"><span class="string">        移动到指定位置</span></div><div class="line"><span class="string">        </span></div><div class="line"><span class="string">        :param x: 新的横坐标</span></div><div class="line"><span class="string">        "param y: 新的纵坐标</span></div><div class="line"><span class="string">        """</span></div><div class="line">        self.x = x</div><div class="line">        self.y = y</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">move_by</span><span class="params">(self, dx, dy)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line"><span class="string">        移动指定的增量</span></div><div class="line"><span class="string">        </span></div><div class="line"><span class="string">        :param dx: 横坐标的增量</span></div><div class="line"><span class="string">        "param dy: 纵坐标的增量</span></div><div class="line"><span class="string">        """</span></div><div class="line">        self.x += dx</div><div class="line">        self.y += dy</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">distance_to</span><span class="params">(self, other)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line"><span class="string">        计算与另一个点的距离</span></div><div class="line"><span class="string">        </span></div><div class="line"><span class="string">        :param other: 另一个点</span></div><div class="line"><span class="string">        """</span></div><div class="line">        dx = self.x - other.x</div><div class="line">        dy = self.y - other.y</div><div class="line">        <span class="keyword">return</span> sqrt(dx ** <span class="number">2</span> + dy ** <span class="number">2</span>)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> <span class="string">'(%s, %s)'</span> % (str(self.x), str(self.y))</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    p1 = Point(<span class="number">3</span>, <span class="number">5</span>)</div><div class="line">    p2 = Point()</div><div class="line">    print(p1)</div><div class="line">    print(p2)</div><div class="line">    p2.move_by(<span class="number">-1</span>, <span class="number">2</span>)</div><div class="line">    print(p2)</div><div class="line">    print(p1.distance_to(p2))</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<blockquote>
<p><strong>说明</strong>：本章中的插图来自于Grady Booch等著作的<a href="https://item.jd.com/20476561918.html" target="_blank" rel="external">《面向对象分析与设计》</a>一书，该书是讲解面向对象编程的经典著作，有兴趣的读者可以购买和阅读这本书来了解更多的面向对象的相关知识。  </p>
</blockquote>
<h2 id="面向对象进阶"><a href="#面向对象进阶" class="headerlink" title="面向对象进阶"></a>面向对象进阶</h2><p>在前面的章节我们已经了解了面向对象的入门知识，知道了如何定义类，如何创建对象以及如何给对象发消息。为了能够更好的使用面向对象编程思想进行程序开发，我们还需要对Python中的面向对象编程进行更为深入的了解。</p>
<h3 id="property装饰器"><a href="#property装饰器" class="headerlink" title="@property装饰器"></a>@property装饰器</h3><p>之前我们讨论过Python中属性和方法访问权限的问题，虽然我们不建议将属性设置为私有的，但是如果直接将属性暴露给外界也是有问题的，比如我们没有办法检查赋给属性的值是否有效。我们之前的建议是将属性命名以单下划线开头，通过这种方式来暗示属性是受保护的，不建议外界直接访问，那么如果想访问属性可以通过属性的getter（访问器）和setter（修改器）方法进行对应的操作。如果要做到这点，就可以考虑使用@property包装器来包装getter和setter方法，使得对属性的访问既安全又方便，代码如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">(object)</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, age)</span>:</span></div><div class="line">        self._name = name</div><div class="line">        self._age = age</div><div class="line"></div><div class="line">    <span class="comment"># 访问器 - getter方法</span></div><div class="line"><span class="meta">    @property</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">name</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self._name</div><div class="line"></div><div class="line">    <span class="comment"># 访问器 - getter方法</span></div><div class="line"><span class="meta">    @property</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">age</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self._age</div><div class="line"></div><div class="line">    <span class="comment"># 修改器 - setter方法</span></div><div class="line"><span class="meta">    @age.setter</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">age</span><span class="params">(self, age)</span>:</span></div><div class="line">        self._age = age</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">play</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">if</span> self._age &lt;= <span class="number">16</span>:</div><div class="line">            print(<span class="string">'%s正在玩飞行棋.'</span> % self._name)</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            print(<span class="string">'%s正在玩斗地主.'</span> % self._name)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    person = Person(<span class="string">'王大锤'</span>, <span class="number">12</span>)</div><div class="line">    person.play()</div><div class="line">    person.age = <span class="number">22</span></div><div class="line">    person.play()</div><div class="line">    <span class="comment"># person.name = '白元芳'  # AttributeError: can't set attribute</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h3 id="slots-魔法"><a href="#slots-魔法" class="headerlink" title="__slots__魔法"></a>__slots__魔法</h3><p>我们讲到这里，不知道大家是否已经意识到，Python是一门<a href="https://zh.wikipedia.org/wiki/%E5%8A%A8%E6%80%81%E8%AF%AD%E8%A8%80" target="_blank" rel="external">动态语言</a>。通常，动态语言允许我们在程序运行时给对象绑定新的属性或方法，当然也可以对已经绑定的属性和方法进行解绑定。但是如果我们需要限定自定义类型的对象只能绑定某些属性，可以通过在类中定义__slots__变量来进行限定。需要注意的是__slots__的限定只对当前类的对象生效，对子类并不起任何作用。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">(object)</span>:</span></div><div class="line"></div><div class="line">    <span class="comment"># 限定Person对象只能绑定_name, _age和_gender属性</span></div><div class="line">    __slots__ = (<span class="string">'_name'</span>, <span class="string">'_age'</span>, <span class="string">'_gender'</span>)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, age)</span>:</span></div><div class="line">        self._name = name</div><div class="line">        self._age = age</div><div class="line"></div><div class="line"><span class="meta">    @property</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">name</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self._name</div><div class="line"></div><div class="line"><span class="meta">    @property</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">age</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self._age</div><div class="line"></div><div class="line"><span class="meta">    @age.setter</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">age</span><span class="params">(self, age)</span>:</span></div><div class="line">        self._age = age</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">play</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">if</span> self._age &lt;= <span class="number">16</span>:</div><div class="line">            print(<span class="string">'%s正在玩飞行棋.'</span> % self._name)</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            print(<span class="string">'%s正在玩斗地主.'</span> % self._name)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    person = Person(<span class="string">'王大锤'</span>, <span class="number">22</span>)</div><div class="line">    person.play()</div><div class="line">    person._gender = <span class="string">'男'</span></div><div class="line">    <span class="comment"># AttributeError: 'Person' object has no attribute '_is_gay'</span></div><div class="line">    <span class="comment"># person._is_gay = True</span></div></pre></td></tr></table></figure>
<h3 id="静态方法和类方法"><a href="#静态方法和类方法" class="headerlink" title="静态方法和类方法"></a>静态方法和类方法</h3><p>之前，我们在类中定义的方法都是对象方法，也就是说这些方法都是发送给对象的消息。实际上，我们写在类中的方法并不需要都是对象方法，例如我们定义一个“三角形”类，通过传入三条边长来构造三角形，并提供计算周长和面积的方法，但是传入的三条边长未必能构造出三角形对象，因此我们可以先写一个方法来验证三条边长是否可以构成三角形，这个方法很显然就不是对象方法，因为在调用这个方法时三角形对象尚未创建出来（因为都不知道三条边能不能构成三角形），所以这个方法是属于三角形类而并不属于三角形对象的。我们可以使用静态方法来解决这类问题，代码如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> math <span class="keyword">import</span> sqrt</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Triangle</span><span class="params">(object)</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, a, b, c)</span>:</span></div><div class="line">        self._a = a</div><div class="line">        self._b = b</div><div class="line">        self._c = c</div><div class="line"></div><div class="line"><span class="meta">    @staticmethod</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">is_valid</span><span class="params">(a, b, c)</span>:</span></div><div class="line">        <span class="keyword">return</span> a + b &gt; c <span class="keyword">and</span> b + c &gt; a <span class="keyword">and</span> a + c &gt; b</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">perimeter</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self._a + self._b + self._c</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">area</span><span class="params">(self)</span>:</span></div><div class="line">        half = self.perimeter() / <span class="number">2</span></div><div class="line">        <span class="keyword">return</span> sqrt(half * (half - self._a) *</div><div class="line">                    (half - self._b) * (half - self._c))</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    a, b, c = <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span></div><div class="line">    <span class="comment"># 静态方法和类方法都是通过给类发消息来调用的</span></div><div class="line">    <span class="keyword">if</span> Triangle.is_valid(a, b, c):</div><div class="line">        t = Triangle(a, b, c)</div><div class="line">        print(t.perimeter())</div><div class="line">        <span class="comment"># 也可以通过给类发消息来调用对象方法但是要传入接收消息的对象作为参数</span></div><div class="line">        <span class="comment"># print(Triangle.perimeter(t))</span></div><div class="line">        print(t.area())</div><div class="line">        <span class="comment"># print(Triangle.area(t))</span></div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        print(<span class="string">'无法构成三角形.'</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>和静态方法比较类似，Python还可以在类中定义类方法，类方法的第一个参数约定名为cls，它代表的是当前类相关的信息的对象（类本身也是一个对象，有的地方也称之为类的元数据对象），通过这个参数我们可以获取和类相关的信息并且可以创建出类的对象，代码如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time, localtime, sleep</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Clock</span><span class="params">(object)</span>:</span></div><div class="line">    <span class="string">"""数字时钟"""</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, hour=<span class="number">0</span>, minute=<span class="number">0</span>, second=<span class="number">0</span>)</span>:</span></div><div class="line">        self._hour = hour</div><div class="line">        self._minute = minute</div><div class="line">        self._second = second</div><div class="line"></div><div class="line"><span class="meta">    @classmethod</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">now</span><span class="params">(cls)</span>:</span></div><div class="line">        ctime = localtime(time())</div><div class="line">        <span class="keyword">return</span> cls(ctime.tm_hour, ctime.tm_min, ctime.tm_sec)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="string">"""走字"""</span></div><div class="line">        self._second += <span class="number">1</span></div><div class="line">        <span class="keyword">if</span> self._second == <span class="number">60</span>:</div><div class="line">            self._second = <span class="number">0</span></div><div class="line">            self._minute += <span class="number">1</span></div><div class="line">            <span class="keyword">if</span> self._minute == <span class="number">60</span>:</div><div class="line">                self._minute = <span class="number">0</span></div><div class="line">                self._hour += <span class="number">1</span></div><div class="line">                <span class="keyword">if</span> self._hour == <span class="number">24</span>:</div><div class="line">                    self._hour = <span class="number">0</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="string">"""显示时间"""</span></div><div class="line">        <span class="keyword">return</span> <span class="string">'%02d:%02d:%02d'</span> % \</div><div class="line">               (self._hour, self._minute, self._second)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    <span class="comment"># 通过类方法创建对象并获取系统时间</span></div><div class="line">    clock = Clock.now()</div><div class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">        print(clock.show())</div><div class="line">        sleep(<span class="number">1</span>)</div><div class="line">        clock.run()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h3 id="类之间的关系"><a href="#类之间的关系" class="headerlink" title="类之间的关系"></a>类之间的关系</h3><p>简单的说，类和类之间的关系有三种：is-a、has-a和use-a关系。</p>
<ul>
<li>is-a关系也叫继承或泛化，比如学生和人的关系、手机和电子产品的关系都属于继承关系。</li>
<li>has-a关系通常称之为关联，比如部门和员工的关系，汽车和引擎的关系都属于关联关系；关联关系如果是整体和部分的关联，那么我们称之为聚合关系；如果整体进一步负责了部分的生命周期（整体和部分是不可分割的，同时同在也同时消亡），那么这种就是最强的关联关系，我们称之为合成关系。</li>
<li>use-a关系通常称之为依赖，比如司机有一个驾驶的行为（方法），其中（的参数）使用到了汽车，那么司机和汽车的关系就是依赖关系。</li>
</ul>
<p>我们可以使用一种叫做<a href="https://zh.wikipedia.org/wiki/%E7%BB%9F%E4%B8%80%E5%BB%BA%E6%A8%A1%E8%AF%AD%E8%A8%80" target="_blank" rel="external">UML</a>（统一建模语言）的东西来进行面向对象建模，其中一项重要的工作就是把类和类之间的关系用标准化的图形符号描述出来。关于UML我们在这里不做详细的介绍，有兴趣的读者可以自行阅读<a href="https://e.jd.com/30392949.html" target="_blank" rel="external">《UML面向对象设计基础》</a>一书。</p>
<p>利用类之间的这些关系，我们可以在已有类的基础上来完成某些操作，也可以在已有类的基础上创建新的类，这些都是实现代码复用的重要手段。复用现有的代码不仅可以减少开发的工作量，也有利于代码的管理和维护，这是我们在日常工作中都会使用到的技术手段。</p>
<h3 id="继承和多态"><a href="#继承和多态" class="headerlink" title="继承和多态"></a>继承和多态</h3><p>刚才我们提到了，可以在已有类的基础上创建新类，这其中的一种做法就是让一个类从另一个类那里将属性和方法直接继承下来，从而减少重复代码的编写。提供继承信息的我们称之为父类，也叫超类或基类；得到继承信息的我们称之为子类，也叫派生类或衍生类。子类除了继承父类提供的属性和方法，还可以定义自己特有的属性和方法，所以子类比父类拥有的更多的能力，在实际开发中，我们经常会用子类对象去替换掉一个父类对象，这是面向对象编程中一个常见的行为，对应的原则称之为<a href="https://zh.wikipedia.org/wiki/%E9%87%8C%E6%B0%8F%E6%9B%BF%E6%8D%A2%E5%8E%9F%E5%88%99" target="_blank" rel="external">里氏替换原则</a>。下面我们先看一个继承的例子。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">(object)</span>:</span></div><div class="line">    <span class="string">"""人"""</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, age)</span>:</span></div><div class="line">        self._name = name</div><div class="line">        self._age = age</div><div class="line"></div><div class="line"><span class="meta">    @property</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">name</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self._name</div><div class="line"></div><div class="line"><span class="meta">    @property</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">age</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self._age</div><div class="line"></div><div class="line"><span class="meta">    @age.setter</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">age</span><span class="params">(self, age)</span>:</span></div><div class="line">        self._age = age</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">play</span><span class="params">(self)</span>:</span></div><div class="line">        print(<span class="string">'%s正在愉快的玩耍.'</span> % self._name)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">watch_av</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">if</span> self._age &gt;= <span class="number">18</span>:</div><div class="line">            print(<span class="string">'%s正在观看爱情动作片.'</span> % self._name)</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            print(<span class="string">'%s只能观看《熊出没》.'</span> % self._name)</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">(Person)</span>:</span></div><div class="line">    <span class="string">"""学生"""</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, age, grade)</span>:</span></div><div class="line">        super().__init__(name, age)</div><div class="line">        self._grade = grade</div><div class="line"></div><div class="line"><span class="meta">    @property</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">grade</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self._grade</div><div class="line"></div><div class="line"><span class="meta">    @grade.setter</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">grade</span><span class="params">(self, grade)</span>:</span></div><div class="line">        self._grade = grade</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">study</span><span class="params">(self, course)</span>:</span></div><div class="line">        print(<span class="string">'%s的%s正在学习%s.'</span> % (self._grade, self._name, course))</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Teacher</span><span class="params">(Person)</span>:</span></div><div class="line">    <span class="string">"""老师"""</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, age, title)</span>:</span></div><div class="line">        super().__init__(name, age)</div><div class="line">        self._title = title</div><div class="line"></div><div class="line"><span class="meta">    @property</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">title</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self._title</div><div class="line"></div><div class="line"><span class="meta">    @title.setter</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">title</span><span class="params">(self, title)</span>:</span></div><div class="line">        self._title = title</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">teach</span><span class="params">(self, course)</span>:</span></div><div class="line">        print(<span class="string">'%s%s正在讲%s.'</span> % (self._name, self._title, course))</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    stu = Student(<span class="string">'王大锤'</span>, <span class="number">15</span>, <span class="string">'初三'</span>)</div><div class="line">    stu.study(<span class="string">'数学'</span>)</div><div class="line">    stu.watch_av()</div><div class="line">    t = Teacher(<span class="string">'骆昊'</span>, <span class="number">38</span>, <span class="string">'老叫兽'</span>)</div><div class="line">    t.teach(<span class="string">'Python程序设计'</span>)</div><div class="line">    t.watch_av()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>子类在继承了父类的方法后，可以对父类已有的方法给出新的实现版本，这个动作称之为方法重写（override）。通过方法重写我们可以让父类的同一个行为在子类中拥有不同的实现版本，当我们调用这个经过子类重写的方法时，不同的子类对象会表现出不同的行为，这个就是多态（poly-morphism）。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> abc <span class="keyword">import</span> ABCMeta, abstractmethod</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Pet</span><span class="params">(object, metaclass=ABCMeta)</span>:</span></div><div class="line">    <span class="string">"""宠物"""</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, nickname)</span>:</span></div><div class="line">        self._nickname = nickname</div><div class="line"></div><div class="line"><span class="meta">    @abstractmethod</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">make_voice</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="string">"""发出声音"""</span></div><div class="line">        <span class="keyword">pass</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span><span class="params">(Pet)</span>:</span></div><div class="line">    <span class="string">"""狗"""</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">make_voice</span><span class="params">(self)</span>:</span></div><div class="line">        print(<span class="string">'%s: 汪汪汪...'</span> % self._nickname)</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span><span class="params">(Pet)</span>:</span></div><div class="line">    <span class="string">"""猫"""</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">make_voice</span><span class="params">(self)</span>:</span></div><div class="line">        print(<span class="string">'%s: 喵...喵...'</span> % self._nickname)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    pets = [Dog(<span class="string">'旺财'</span>), Cat(<span class="string">'凯蒂'</span>), Dog(<span class="string">'大黄'</span>)]</div><div class="line">    <span class="keyword">for</span> pet <span class="keyword">in</span> pets:</div><div class="line">        pet.make_voice()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>在上面的代码中，我们将<code>Pet</code>类处理成了一个抽象类，所谓抽象类就是不能够创建对象的类，这种类的存在就是专门为了让其他类去继承它。Python从语法层面并没有像Java或C#那样提供对抽象类的支持，但是我们可以通过<code>abc</code>模块的<code>ABCMeta</code>元类和<code>abstractmethod</code>包装器来达到抽象类的效果，如果一个类中存在抽象方法那么这个类就不能够实例化（创建对象）。上面的代码中，<code>Dog</code>和<code>Cat</code>两个子类分别对<code>Pet</code>类中的<code>make_voice</code>抽象方法进行了重写并给出了不同的实现版本，当我们在<code>main</code>函数中调用该方法时，这个方法就表现出了多态行为（同样的方法做了不同的事情）。</p>
<h3 id="综合案例-1"><a href="#综合案例-1" class="headerlink" title="综合案例"></a>综合案例</h3><h4 id="案例1：奥特曼打小怪兽"><a href="#案例1：奥特曼打小怪兽" class="headerlink" title="案例1：奥特曼打小怪兽"></a>案例1：奥特曼打小怪兽</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> abc <span class="keyword">import</span> ABCMeta, abstractmethod</div><div class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint, randrange</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Fighter</span><span class="params">(object, metaclass=ABCMeta)</span>:</span></div><div class="line">    <span class="string">"""战斗者"""</span></div><div class="line"></div><div class="line">    <span class="comment"># 通过__slots__魔法限定对象可以绑定的成员变量</span></div><div class="line">    __slots__ = (<span class="string">'_name'</span>, <span class="string">'_hp'</span>)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, hp)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line"><span class="string">        初始化方法</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">        :param name: 名字</span></div><div class="line"><span class="string">        :param hp: 生命值</span></div><div class="line"><span class="string">        """</span></div><div class="line">        self._name = name</div><div class="line">        self._hp = hp</div><div class="line"></div><div class="line"><span class="meta">    @property</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">name</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self._name</div><div class="line"></div><div class="line"><span class="meta">    @property</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">hp</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self._hp</div><div class="line"></div><div class="line"><span class="meta">    @hp.setter</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">hp</span><span class="params">(self, hp)</span>:</span></div><div class="line">        self._hp = hp <span class="keyword">if</span> hp &gt;= <span class="number">0</span> <span class="keyword">else</span> <span class="number">0</span></div><div class="line"></div><div class="line"><span class="meta">    @property</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">alive</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self._hp &gt; <span class="number">0</span></div><div class="line"></div><div class="line"><span class="meta">    @abstractmethod</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">attack</span><span class="params">(self, other)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line"><span class="string">        攻击</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">        :param other: 被攻击的对象</span></div><div class="line"><span class="string">        """</span></div><div class="line">        <span class="keyword">pass</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Ultraman</span><span class="params">(Fighter)</span>:</span></div><div class="line">    <span class="string">"""奥特曼"""</span></div><div class="line"></div><div class="line">    __slots__ = (<span class="string">'_name'</span>, <span class="string">'_hp'</span>, <span class="string">'_mp'</span>)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, hp, mp)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line"><span class="string">        初始化方法</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">        :param name: 名字</span></div><div class="line"><span class="string">        :param hp: 生命值</span></div><div class="line"><span class="string">        :param mp: 魔法值</span></div><div class="line"><span class="string">        """</span></div><div class="line">        super().__init__(name, hp)</div><div class="line">        self._mp = mp</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">attack</span><span class="params">(self, other)</span>:</span></div><div class="line">        other.hp -= randint(<span class="number">15</span>, <span class="number">25</span>)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">huge_attack</span><span class="params">(self, other)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line"><span class="string">        究极必杀技(打掉对方至少50点或四分之三的血)</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">        :param other: 被攻击的对象</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">        :return: 使用成功返回True否则返回False</span></div><div class="line"><span class="string">        """</span></div><div class="line">        <span class="keyword">if</span> self._mp &gt;= <span class="number">50</span>:</div><div class="line">            self._mp -= <span class="number">50</span></div><div class="line">            injury = other.hp * <span class="number">3</span> // <span class="number">4</span></div><div class="line">            injury = injury <span class="keyword">if</span> injury &gt;= <span class="number">50</span> <span class="keyword">else</span> <span class="number">50</span></div><div class="line">            other.hp -= injury</div><div class="line">            <span class="keyword">return</span> <span class="keyword">True</span></div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            self.attack(other)</div><div class="line">            <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">magic_attack</span><span class="params">(self, others)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line"><span class="string">        魔法攻击</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">        :param others: 被攻击的群体</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">        :return: 使用魔法成功返回True否则返回False</span></div><div class="line"><span class="string">        """</span></div><div class="line">        <span class="keyword">if</span> self._mp &gt;= <span class="number">20</span>:</div><div class="line">            self._mp -= <span class="number">20</span></div><div class="line">            <span class="keyword">for</span> temp <span class="keyword">in</span> others:</div><div class="line">                <span class="keyword">if</span> temp.alive:</div><div class="line">                    temp.hp -= randint(<span class="number">10</span>, <span class="number">15</span>)</div><div class="line">            <span class="keyword">return</span> <span class="keyword">True</span></div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">resume</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="string">"""恢复魔法值"""</span></div><div class="line">        incr_point = randint(<span class="number">1</span>, <span class="number">10</span>)</div><div class="line">        self._mp += incr_point</div><div class="line">        <span class="keyword">return</span> incr_point</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> <span class="string">'~~~%s奥特曼~~~\n'</span> % self._name + \</div><div class="line">            <span class="string">'生命值: %d\n'</span> % self._hp + \</div><div class="line">            <span class="string">'魔法值: %d\n'</span> % self._mp</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Monster</span><span class="params">(Fighter)</span>:</span></div><div class="line">    <span class="string">"""小怪兽"""</span></div><div class="line"></div><div class="line">    __slots__ = (<span class="string">'_name'</span>, <span class="string">'_hp'</span>)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">attack</span><span class="params">(self, other)</span>:</span></div><div class="line">        other.hp -= randint(<span class="number">10</span>, <span class="number">20</span>)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> <span class="string">'~~~%s小怪兽~~~\n'</span> % self._name + \</div><div class="line">            <span class="string">'生命值: %d\n'</span> % self._hp</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_any_alive</span><span class="params">(monsters)</span>:</span></div><div class="line">    <span class="string">"""判断有没有小怪兽是活着的"""</span></div><div class="line">    <span class="keyword">for</span> monster <span class="keyword">in</span> monsters:</div><div class="line">        <span class="keyword">if</span> monster.alive &gt; <span class="number">0</span>:</div><div class="line">            <span class="keyword">return</span> <span class="keyword">True</span></div><div class="line">    <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">select_alive_one</span><span class="params">(monsters)</span>:</span></div><div class="line">    <span class="string">"""选中一只活着的小怪兽"""</span></div><div class="line">    monsters_len = len(monsters)</div><div class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">        index = randrange(monsters_len)</div><div class="line">        monster = monsters[index]</div><div class="line">        <span class="keyword">if</span> monster.alive &gt; <span class="number">0</span>:</div><div class="line">            <span class="keyword">return</span> monster</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">display_info</span><span class="params">(ultraman, monsters)</span>:</span></div><div class="line">    <span class="string">"""显示奥特曼和小怪兽的信息"""</span></div><div class="line">    print(ultraman)</div><div class="line">    <span class="keyword">for</span> monster <span class="keyword">in</span> monsters:</div><div class="line">        print(monster, end=<span class="string">''</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    u = Ultraman(<span class="string">'骆昊'</span>, <span class="number">1000</span>, <span class="number">120</span>)</div><div class="line">    m1 = Monster(<span class="string">'舒小玲'</span>, <span class="number">250</span>)</div><div class="line">    m2 = Monster(<span class="string">'白元芳'</span>, <span class="number">500</span>)</div><div class="line">    m3 = Monster(<span class="string">'王大锤'</span>, <span class="number">750</span>)</div><div class="line">    ms = [m1, m2, m3]</div><div class="line">    fight_round = <span class="number">1</span></div><div class="line">    <span class="keyword">while</span> u.alive <span class="keyword">and</span> is_any_alive(ms):</div><div class="line">        print(<span class="string">'========第%02d回合========'</span> % fight_round)</div><div class="line">        m = select_alive_one(ms)  <span class="comment"># 选中一只小怪兽</span></div><div class="line">        skill = randint(<span class="number">1</span>, <span class="number">10</span>)   <span class="comment"># 通过随机数选择使用哪种技能</span></div><div class="line">        <span class="keyword">if</span> skill &lt;= <span class="number">6</span>:  <span class="comment"># 60%的概率使用普通攻击</span></div><div class="line">            print(<span class="string">'%s使用普通攻击打了%s.'</span> % (u.name, m.name))</div><div class="line">            u.attack(m)</div><div class="line">            print(<span class="string">'%s的魔法值恢复了%d点.'</span> % (u.name, u.resume()))</div><div class="line">        <span class="keyword">elif</span> skill &lt;= <span class="number">9</span>:  <span class="comment"># 30%的概率使用魔法攻击(可能因魔法值不足而失败)</span></div><div class="line">            <span class="keyword">if</span> u.magic_attack(ms):</div><div class="line">                print(<span class="string">'%s使用了魔法攻击.'</span> % u.name)</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                print(<span class="string">'%s使用魔法失败.'</span> % u.name)</div><div class="line">        <span class="keyword">else</span>:  <span class="comment"># 10%的概率使用究极必杀技(如果魔法值不足则使用普通攻击)</span></div><div class="line">            <span class="keyword">if</span> u.huge_attack(m):</div><div class="line">                print(<span class="string">'%s使用究极必杀技虐了%s.'</span> % (u.name, m.name))</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                print(<span class="string">'%s使用普通攻击打了%s.'</span> % (u.name, m.name))</div><div class="line">                print(<span class="string">'%s的魔法值恢复了%d点.'</span> % (u.name, u.resume()))</div><div class="line">        <span class="keyword">if</span> m.alive &gt; <span class="number">0</span>:  <span class="comment"># 如果选中的小怪兽没有死就回击奥特曼</span></div><div class="line">            print(<span class="string">'%s回击了%s.'</span> % (m.name, u.name))</div><div class="line">            m.attack(u)</div><div class="line">        display_info(u, ms)  <span class="comment"># 每个回合结束后显示奥特曼和小怪兽的信息</span></div><div class="line">        fight_round += <span class="number">1</span></div><div class="line">    print(<span class="string">'\n========战斗结束!========\n'</span>)</div><div class="line">    <span class="keyword">if</span> u.alive &gt; <span class="number">0</span>:</div><div class="line">        print(<span class="string">'%s奥特曼胜利!'</span> % u.name)</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        print(<span class="string">'小怪兽胜利!'</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h4 id="案例2：扑克游戏"><a href="#案例2：扑克游戏" class="headerlink" title="案例2：扑克游戏"></a>案例2：扑克游戏</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randrange</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Card</span><span class="params">(object)</span>:</span></div><div class="line">    <span class="string">"""一张牌"""</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, suite, face)</span>:</span></div><div class="line">        self._suite = suite</div><div class="line">        self._face = face</div><div class="line"></div><div class="line"><span class="meta">    @property</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">face</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self._face</div><div class="line"></div><div class="line"><span class="meta">    @property</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">suite</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self._suite</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></div><div class="line">        all_suites = (<span class="string">'♠'</span>, <span class="string">'♥'</span>, <span class="string">'♣'</span>, <span class="string">'♦'</span>)</div><div class="line">        <span class="keyword">if</span> self._face == <span class="number">1</span>:</div><div class="line">            face_str = <span class="string">'A'</span></div><div class="line">        <span class="keyword">elif</span> self._face == <span class="number">11</span>:</div><div class="line">            face_str = <span class="string">'J'</span></div><div class="line">        <span class="keyword">elif</span> self._face == <span class="number">12</span>:</div><div class="line">            face_str = <span class="string">'Q'</span></div><div class="line">        <span class="keyword">elif</span> self._face == <span class="number">13</span>:</div><div class="line">            face_str = <span class="string">'K'</span></div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            face_str = str(self._face)</div><div class="line">        <span class="keyword">return</span> <span class="string">'%s%s'</span> % (all_suites[self._suite], face_str)</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Poker</span><span class="params">(object)</span>:</span></div><div class="line">    <span class="string">"""一副牌"""</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></div><div class="line">        self._cards = []</div><div class="line">        self._current = <span class="number">0</span></div><div class="line">        <span class="keyword">for</span> suite <span class="keyword">in</span> range(<span class="number">4</span>):</div><div class="line">            <span class="keyword">for</span> face <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">14</span>):</div><div class="line">                card = Card(suite, face)</div><div class="line">                self._cards.append(card)</div><div class="line"></div><div class="line"><span class="meta">    @property</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">cards</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self._cards</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">shuffle</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="string">"""洗牌(随机乱序)"""</span></div><div class="line">        self._current = <span class="number">0</span></div><div class="line">        cards_len = len(self._cards)</div><div class="line">        <span class="keyword">for</span> index <span class="keyword">in</span> range(cards_len):</div><div class="line">            pos = randrange(cards_len)</div><div class="line">            self._cards[index], self._cards[pos] = \</div><div class="line">                self._cards[pos], self._cards[index]</div><div class="line"></div><div class="line"><span class="meta">    @property</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">next</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="string">"""发牌"""</span></div><div class="line">        card = self._cards[self._current]</div><div class="line">        self._current += <span class="number">1</span></div><div class="line">        <span class="keyword">return</span> card</div><div class="line"></div><div class="line"><span class="meta">    @property</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">has_next</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="string">"""还有没有牌"""</span></div><div class="line">        <span class="keyword">return</span> self._current &lt; len(self._cards)</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Player</span><span class="params">(object)</span>:</span></div><div class="line">    <span class="string">"""玩家"""</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name)</span>:</span></div><div class="line">        self._name = name</div><div class="line">        self._cards_on_hand = []</div><div class="line"></div><div class="line"><span class="meta">    @property</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">name</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self._name</div><div class="line"></div><div class="line"><span class="meta">    @property</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">cards_on_hand</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self._cards_on_hand</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, card)</span>:</span></div><div class="line">        <span class="string">"""摸牌"""</span></div><div class="line">        self._cards_on_hand.append(card)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">arrange</span><span class="params">(self, card_key)</span>:</span></div><div class="line">        <span class="string">"""玩家整理手上的牌"""</span></div><div class="line">        self._cards_on_hand.sort(key=card_key)</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 排序规则-先根据花色再根据点数排序</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_key</span><span class="params">(card)</span>:</span></div><div class="line">    <span class="keyword">return</span> (card.suite, card.face)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    p = Poker()</div><div class="line">    p.shuffle()</div><div class="line">    players = [Player(<span class="string">'东邪'</span>), Player(<span class="string">'西毒'</span>), Player(<span class="string">'南帝'</span>), Player(<span class="string">'北丐'</span>)]</div><div class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">13</span>):</div><div class="line">        <span class="keyword">for</span> player <span class="keyword">in</span> players:</div><div class="line">            player.get(p.next)</div><div class="line">    <span class="keyword">for</span> player <span class="keyword">in</span> players:</div><div class="line">        print(player.name + <span class="string">':'</span>, end=<span class="string">' '</span>)</div><div class="line">        player.arrange(get_key)</div><div class="line">        <span class="keyword">for</span> card <span class="keyword">in</span> player.cards_on_hand:</div><div class="line">            print(card, end=<span class="string">' '</span>)</div><div class="line">        print()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<blockquote>
<p><strong>说明</strong>：大家可以自己尝试在上面代码的基础上写一个简单的扑克游戏，例如21点(Black Jack)，游戏的规则可以自己在网上找一找。</p>
</blockquote>
<h4 id="案例3：工资结算系统"><a href="#案例3：工资结算系统" class="headerlink" title="案例3：工资结算系统"></a>案例3：工资结算系统</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">某公司有三种类型的员工 分别是部门经理、程序员和销售员</span></div><div class="line"><span class="string">需要设计一个工资结算系统 根据提供的员工信息来计算月薪</span></div><div class="line"><span class="string">部门经理的月薪是每月固定15000元</span></div><div class="line"><span class="string">程序员的月薪按本月工作时间计算 每小时150元</span></div><div class="line"><span class="string">销售员的月薪是1200元的底薪加上销售额5%的提成</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"><span class="keyword">from</span> abc <span class="keyword">import</span> ABCMeta, abstractmethod</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Employee</span><span class="params">(object, metaclass=ABCMeta)</span>:</span></div><div class="line">    <span class="string">"""员工"""</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line"><span class="string">        初始化方法</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">        :param name: 姓名</span></div><div class="line"><span class="string">        """</span></div><div class="line">        self._name = name</div><div class="line"></div><div class="line"><span class="meta">    @property</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">name</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self._name</div><div class="line"></div><div class="line"><span class="meta">    @abstractmethod</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_salary</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line"><span class="string">        获得月薪</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">        :return: 月薪</span></div><div class="line"><span class="string">        """</span></div><div class="line">        <span class="keyword">pass</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Manager</span><span class="params">(Employee)</span>:</span></div><div class="line">    <span class="string">"""部门经理"""</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_salary</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> <span class="number">15000.0</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Programmer</span><span class="params">(Employee)</span>:</span></div><div class="line">    <span class="string">"""程序员"""</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, working_hour=<span class="number">0</span>)</span>:</span></div><div class="line">        super().__init__(name)</div><div class="line">        self._working_hour = working_hour</div><div class="line"></div><div class="line"><span class="meta">    @property</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">working_hour</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self._working_hour</div><div class="line"></div><div class="line"><span class="meta">    @working_hour.setter</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">working_hour</span><span class="params">(self, working_hour)</span>:</span></div><div class="line">        self._working_hour = working_hour <span class="keyword">if</span> working_hour &gt; <span class="number">0</span> <span class="keyword">else</span> <span class="number">0</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_salary</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> <span class="number">150.0</span> * self._working_hour</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Salesman</span><span class="params">(Employee)</span>:</span></div><div class="line">    <span class="string">"""销售员"""</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, sales=<span class="number">0</span>)</span>:</span></div><div class="line">        super().__init__(name)</div><div class="line">        self._sales = sales</div><div class="line"></div><div class="line"><span class="meta">    @property</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sales</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self._sales</div><div class="line"></div><div class="line"><span class="meta">    @sales.setter</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sales</span><span class="params">(self, sales)</span>:</span></div><div class="line">        self._sales = sales <span class="keyword">if</span> sales &gt; <span class="number">0</span> <span class="keyword">else</span> <span class="number">0</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_salary</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> <span class="number">1200.0</span> + self._sales * <span class="number">0.05</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    emps = [</div><div class="line">        Manager(<span class="string">'刘备'</span>), Programmer(<span class="string">'诸葛亮'</span>),</div><div class="line">        Manager(<span class="string">'曹操'</span>), Salesman(<span class="string">'荀彧'</span>),</div><div class="line">        Salesman(<span class="string">'吕布'</span>), Programmer(<span class="string">'张辽'</span>),</div><div class="line">        Programmer(<span class="string">'赵云'</span>)</div><div class="line">    ]</div><div class="line">    <span class="keyword">for</span> emp <span class="keyword">in</span> emps:</div><div class="line">        <span class="keyword">if</span> isinstance(emp, Programmer):</div><div class="line">            emp.working_hour = int(input(<span class="string">'请输入%s本月工作时间: '</span> % emp.name))</div><div class="line">        <span class="keyword">elif</span> isinstance(emp, Salesman):</div><div class="line">            emp.sales = float(input(<span class="string">'请输入%s本月销售额: '</span> % emp.name))</div><div class="line">        <span class="comment"># 同样是接收get_salary这个消息但是不同的员工表现出了不同的行为(多态)</span></div><div class="line">        print(<span class="string">'%s本月工资为: ￥%s元'</span> %</div><div class="line">              (emp.name, emp.get_salary()))</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h2 id="图形用户界面和游戏开发"><a href="#图形用户界面和游戏开发" class="headerlink" title="图形用户界面和游戏开发"></a>图形用户界面和游戏开发</h2><h3 id="基于tkinter模块的GUI"><a href="#基于tkinter模块的GUI" class="headerlink" title="基于tkinter模块的GUI"></a>基于tkinter模块的GUI</h3><p>GUI是图形用户界面的缩写，图形化的用户界面对使用过计算机的人来说应该都不陌生，在此也无需进行赘述。Python默认的GUI开发模块是tkinter（在Python 3以前的版本中名为Tkinter），从这个名字就可以看出它是基于Tk的，Tk是一个工具包，最初是为Tcl设计的，后来被移植到很多其他的脚本语言中，它提供了跨平台的GUI控件。当然Tk并不是最新和最好的选择，也没有功能特别强大的GUI控件，事实上，开发GUI应用并不是Python最擅长的工作，如果真的需要使用Python开发GUI应用，wxPython、PyQt、PyGTK等模块都是不错的选择。</p>
<p>基本上使用tkinter来开发GUI应用需要以下5个步骤：</p>
<ol>
<li>导入tkinter模块中我们需要的东西。</li>
<li>创建一个顶层窗口对象并用它来承载整个GUI应用。</li>
<li>在顶层窗口对象上添加GUI组件。</li>
<li>通过代码将这些GUI组件的功能组织起来。</li>
<li>进入主事件循环(main loop)。</li>
</ol>
<p>下面的代码演示了如何使用tkinter做一个简单的GUI应用。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> tkinter</div><div class="line"><span class="keyword">import</span> tkinter.messagebox</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    flag = <span class="keyword">True</span></div><div class="line"></div><div class="line">    <span class="comment"># 修改标签上的文字</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">change_label_text</span><span class="params">()</span>:</span></div><div class="line">        <span class="keyword">nonlocal</span> flag</div><div class="line">        flag = <span class="keyword">not</span> flag</div><div class="line">        color, msg = (<span class="string">'red'</span>, <span class="string">'Hello, world!'</span>)\</div><div class="line">            <span class="keyword">if</span> flag <span class="keyword">else</span> (<span class="string">'blue'</span>, <span class="string">'Goodbye, world!'</span>)</div><div class="line">        label.config(text=msg, fg=color)</div><div class="line"></div><div class="line">    <span class="comment"># 确认退出</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">confirm_to_quit</span><span class="params">()</span>:</span></div><div class="line">        <span class="keyword">if</span> tkinter.messagebox.askokcancel(<span class="string">'温馨提示'</span>, <span class="string">'确定要退出吗?'</span>):</div><div class="line">            top.quit()</div><div class="line"></div><div class="line">    <span class="comment"># 创建顶层窗口</span></div><div class="line">    top = tkinter.Tk()</div><div class="line">    <span class="comment"># 设置窗口大小</span></div><div class="line">    top.geometry(<span class="string">'240x160'</span>)</div><div class="line">    <span class="comment"># 设置窗口标题</span></div><div class="line">    top.title(<span class="string">'小游戏'</span>)</div><div class="line">    <span class="comment"># 创建标签对象并添加到顶层窗口</span></div><div class="line">    label = tkinter.Label(top, text=<span class="string">'Hello, world!'</span>, font=<span class="string">'Arial -32'</span>, fg=<span class="string">'red'</span>)</div><div class="line">    label.pack(expand=<span class="number">1</span>)</div><div class="line">    <span class="comment"># 创建一个装按钮的容器</span></div><div class="line">    panel = tkinter.Frame(top)</div><div class="line">    <span class="comment"># 创建按钮对象 指定添加到哪个容器中 通过command参数绑定事件回调函数</span></div><div class="line">    button1 = tkinter.Button(panel, text=<span class="string">'修改'</span>, command=change_label_text)</div><div class="line">    button1.pack(side=<span class="string">'left'</span>)</div><div class="line">    button2 = tkinter.Button(panel, text=<span class="string">'退出'</span>, command=confirm_to_quit)</div><div class="line">    button2.pack(side=<span class="string">'right'</span>)</div><div class="line">    panel.pack(side=<span class="string">'bottom'</span>)</div><div class="line">    <span class="comment"># 开启主事件循环</span></div><div class="line">    tkinter.mainloop()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>需要说明的是，GUI应用通常是事件驱动式的，之所以要进入主事件循环就是要监听鼠标、键盘等各种事件的发生并执行对应的代码对事件进行处理，因为事件会持续的发生，所以需要这样的一个循环一直运行着等待下一个事件的发生。另一方面，Tk为控件的摆放提供了三种布局管理器，通过布局管理器可以对控件进行定位，这三种布局管理器分别是：Placer（开发者提供控件的大小和摆放位置）、Packer（自动将控件填充到合适的位置）和Grid（基于网格坐标来摆放控件），此处不进行赘述。</p>
<h3 id="使用Pygame进行游戏开发"><a href="#使用Pygame进行游戏开发" class="headerlink" title="使用Pygame进行游戏开发"></a>使用Pygame进行游戏开发</h3><p>Pygame是一个开源的Python模块，专门用于多媒体应用（如电子游戏）的开发，其中包含对图像、声音、视频、事件、碰撞等的支持。Pygame建立在<a href="https://zh.wikipedia.org/wiki/SDL" target="_blank" rel="external">SDL</a>的基础上，SDL是一套跨平台的多媒体开发库，用C语言实现，被广泛的应用于游戏、模拟器、播放器等的开发。而Pygame让游戏开发者不再被底层语言束缚，可以更多的关注游戏的功能和逻辑。</p>
<p>下面我们来完成一个简单的小游戏，游戏的名字叫“大球吃小球”，当然完成这个游戏并不是重点，学会使用Pygame也不是重点，最重要的我们要在这个过程中体会如何使用前面讲解的面向对象程序设计，学会用这种编程思想去解决现实中的问题。</p>
<h4 id="制作游戏窗口"><a href="#制作游戏窗口" class="headerlink" title="制作游戏窗口"></a>制作游戏窗口</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> pygame</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    <span class="comment"># 初始化导入的pygame中的模块</span></div><div class="line">    pygame.init()</div><div class="line">    <span class="comment"># 初始化用于显示的窗口并设置窗口尺寸</span></div><div class="line">    screen = pygame.display.set_mode((<span class="number">800</span>, <span class="number">600</span>))</div><div class="line">    <span class="comment"># 设置当前窗口的标题</span></div><div class="line">    pygame.display.set_caption(<span class="string">'大球吃小球'</span>)</div><div class="line">    running = <span class="keyword">True</span></div><div class="line">    <span class="comment"># 开启一个事件循环处理发生的事件</span></div><div class="line">    <span class="keyword">while</span> running:</div><div class="line">        <span class="comment"># 从消息队列中获取事件并对事件进行处理</span></div><div class="line">        <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get():</div><div class="line">            <span class="keyword">if</span> event.type == pygame.QUIT:</div><div class="line">                running = <span class="keyword">False</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h4 id="在窗口中绘图"><a href="#在窗口中绘图" class="headerlink" title="在窗口中绘图"></a>在窗口中绘图</h4><p>可以通过pygame中draw模块的函数在窗口上绘图，可以绘制的图形包括：线条、矩形、多边形、圆、椭圆、圆弧等。需要说明的是，屏幕坐标系是将屏幕左上角设置为坐标原点<code>(0, 0)</code>，向右是x轴的正向，向下是y轴的正向，在表示位置或者设置尺寸的时候，我们默认的单位都是<a href="https://zh.wikipedia.org/wiki/%E5%83%8F%E7%B4%A0" target="_blank" rel="external">像素</a>。所谓像素就是屏幕上的一个点，你可以用浏览图片的软件试着将一张图片放大若干倍，就可以看到这些点。pygame中表示颜色用的是色光<a href="https://zh.wikipedia.org/wiki/%E5%8E%9F%E8%89%B2" target="_blank" rel="external">三原色</a>表示法，即通过一个元组或列表来指定颜色的RGB值，每个值都在0~255之间，因为是每种原色都用一个8位（bit）的值来表示，三种颜色相当于一共由24位构成，这也就是常说的“24位颜色表示法”。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> pygame</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    <span class="comment"># 初始化导入的pygame中的模块</span></div><div class="line">    pygame.init()</div><div class="line">    <span class="comment"># 初始化用于显示的窗口并设置窗口尺寸</span></div><div class="line">    screen = pygame.display.set_mode((<span class="number">800</span>, <span class="number">600</span>))</div><div class="line">    <span class="comment"># 设置当前窗口的标题</span></div><div class="line">    pygame.display.set_caption(<span class="string">'大球吃小球'</span>)</div><div class="line">    <span class="comment"># 设置窗口的背景色(颜色是由红绿蓝三原色构成的元组)</span></div><div class="line">    screen.fill((<span class="number">242</span>, <span class="number">242</span>, <span class="number">242</span>))</div><div class="line">    <span class="comment"># 绘制一个圆(参数分别是: 屏幕, 颜色, 圆心位置, 半径, 0表示填充圆)</span></div><div class="line">    pygame.draw.circle(screen, (<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>,), (<span class="number">100</span>, <span class="number">100</span>), <span class="number">30</span>, <span class="number">0</span>)</div><div class="line">    <span class="comment"># 刷新当前窗口(渲染窗口将绘制的图像呈现出来)</span></div><div class="line">    pygame.display.flip()</div><div class="line">    running = <span class="keyword">True</span></div><div class="line">    <span class="comment"># 开启一个事件循环处理发生的事件</span></div><div class="line">    <span class="keyword">while</span> running:</div><div class="line">        <span class="comment"># 从消息队列中获取事件并对事件进行处理</span></div><div class="line">        <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get():</div><div class="line">            <span class="keyword">if</span> event.type == pygame.QUIT:</div><div class="line">                running = <span class="keyword">False</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h4 id="加载图像"><a href="#加载图像" class="headerlink" title="加载图像"></a>加载图像</h4><p>如果需要直接加载图像到窗口上，可以使用pygame中image模块的函数来加载图像，再通过之前获得的窗口对象的<code>blit</code>方法渲染图像，代码如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> pygame</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    <span class="comment"># 初始化导入的pygame中的模块</span></div><div class="line">    pygame.init()</div><div class="line">    <span class="comment"># 初始化用于显示的窗口并设置窗口尺寸</span></div><div class="line">    screen = pygame.display.set_mode((<span class="number">800</span>, <span class="number">600</span>))</div><div class="line">    <span class="comment"># 设置当前窗口的标题</span></div><div class="line">    pygame.display.set_caption(<span class="string">'大球吃小球'</span>)</div><div class="line">    <span class="comment"># 设置窗口的背景色(颜色是由红绿蓝三原色构成的元组)</span></div><div class="line">    screen.fill((<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>))</div><div class="line">    <span class="comment"># 通过指定的文件名加载图像</span></div><div class="line">    ball_image = pygame.image.load(<span class="string">'./res/ball.png'</span>)</div><div class="line">    <span class="comment"># 在窗口上渲染图像</span></div><div class="line">    screen.blit(ball_image, (<span class="number">50</span>, <span class="number">50</span>))</div><div class="line">    <span class="comment"># 刷新当前窗口(渲染窗口将绘制的图像呈现出来)</span></div><div class="line">    pygame.display.flip()</div><div class="line">    running = <span class="keyword">True</span></div><div class="line">    <span class="comment"># 开启一个事件循环处理发生的事件</span></div><div class="line">    <span class="keyword">while</span> running:</div><div class="line">        <span class="comment"># 从消息队列中获取事件并对事件进行处理</span></div><div class="line">        <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get():</div><div class="line">            <span class="keyword">if</span> event.type == pygame.QUIT:</div><div class="line">                running = <span class="keyword">False</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h4 id="实现动画效果"><a href="#实现动画效果" class="headerlink" title="实现动画效果"></a>实现动画效果</h4><p>说到<a href="https://zh.wikipedia.org/wiki/%E5%8A%A8%E7%94%BB" target="_blank" rel="external">动画</a>这个词大家都不会陌生，事实上要实现动画效果，本身的原理也非常简单，就是将不连续的图片连续的播放，只要每秒钟达到了一定的帧数，那么就可以做出比较流畅的动画效果。如果要让上面代码中的小球动起来，可以将小球的位置用变量来表示，并在循环中修改小球的位置再刷新整个窗口即可。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> pygame</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    <span class="comment"># 初始化导入的pygame中的模块</span></div><div class="line">    pygame.init()</div><div class="line">    <span class="comment"># 初始化用于显示的窗口并设置窗口尺寸</span></div><div class="line">    screen = pygame.display.set_mode((<span class="number">800</span>, <span class="number">600</span>))</div><div class="line">    <span class="comment"># 设置当前窗口的标题</span></div><div class="line">    pygame.display.set_caption(<span class="string">'大球吃小球'</span>)</div><div class="line">    <span class="comment"># 定义变量来表示小球在屏幕上的位置</span></div><div class="line">    x, y = <span class="number">50</span>, <span class="number">50</span></div><div class="line">    running = <span class="keyword">True</span></div><div class="line">    <span class="comment"># 开启一个事件循环处理发生的事件</span></div><div class="line">    <span class="keyword">while</span> running:</div><div class="line">        <span class="comment"># 从消息队列中获取事件并对事件进行处理</span></div><div class="line">        <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get():</div><div class="line">            <span class="keyword">if</span> event.type == pygame.QUIT:</div><div class="line">                running = <span class="keyword">False</span></div><div class="line">        screen.fill((<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>))</div><div class="line">        pygame.draw.circle(screen, (<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>,), (x, y), <span class="number">30</span>, <span class="number">0</span>)</div><div class="line">        pygame.display.flip()</div><div class="line">        <span class="comment"># 每隔50毫秒就改变小球的位置再刷新窗口</span></div><div class="line">        pygame.time.delay(<span class="number">50</span>)</div><div class="line">        x, y = x + <span class="number">5</span>, y + <span class="number">5</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h4 id="碰撞检测"><a href="#碰撞检测" class="headerlink" title="碰撞检测"></a>碰撞检测</h4><p>通常一个游戏中会有很多对象出现，而这些对象之间的“碰撞”在所难免，比如炮弹击中了飞机、箱子撞到了地面等。碰撞检测在绝大多数的游戏中都是一个必须得处理的至关重要的问题，pygame的sprite（动画精灵）模块就提供了对碰撞检测的支持，这里我们暂时不介绍sprite模块提供的功能，因为要检测两个小球有没有碰撞其实非常简单，只需要检查球心的距离有没有小于两个球的半径之和。为了制造出更多的小球，我们可以通过对鼠标事件的处理，在点击鼠标的位置创建颜色、大小和移动速度都随机的小球，当然要做到这一点，我们可以把之前学习到的面向对象的知识应用起来。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> enum <span class="keyword">import</span> Enum, unique</div><div class="line"><span class="keyword">from</span> math <span class="keyword">import</span> sqrt</div><div class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</div><div class="line"></div><div class="line"><span class="keyword">import</span> pygame</div><div class="line"></div><div class="line"></div><div class="line"><span class="meta">@unique</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Color</span><span class="params">(Enum)</span>:</span></div><div class="line">    <span class="string">"""颜色"""</span></div><div class="line"></div><div class="line">    RED = (<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>)</div><div class="line">    GREEN = (<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>)</div><div class="line">    BLUE = (<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>)</div><div class="line">    BLACK = (<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>)</div><div class="line">    WHITE = (<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>)</div><div class="line">    GRAY = (<span class="number">242</span>, <span class="number">242</span>, <span class="number">242</span>)</div><div class="line"></div><div class="line"><span class="meta">    @staticmethod</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">random_color</span><span class="params">()</span>:</span></div><div class="line">        <span class="string">"""获得随机颜色"""</span></div><div class="line">        r = randint(<span class="number">0</span>, <span class="number">255</span>)</div><div class="line">        g = randint(<span class="number">0</span>, <span class="number">255</span>)</div><div class="line">        b = randint(<span class="number">0</span>, <span class="number">255</span>)</div><div class="line">        <span class="keyword">return</span> (r, g, b)</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Ball</span><span class="params">(object)</span>:</span></div><div class="line">    <span class="string">"""球"""</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, x, y, radius, sx, sy, color=Color.RED)</span>:</span></div><div class="line">        <span class="string">"""初始化方法"""</span></div><div class="line">        self.x = x</div><div class="line">        self.y = y</div><div class="line">        self.radius = radius</div><div class="line">        self.sx = sx</div><div class="line">        self.sy = sy</div><div class="line">        self.color = color</div><div class="line">        self.alive = <span class="keyword">True</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">move</span><span class="params">(self, screen)</span>:</span></div><div class="line">        <span class="string">"""移动"""</span></div><div class="line">        self.x += self.sx</div><div class="line">        self.y += self.sy</div><div class="line">        <span class="keyword">if</span> self.x - self.radius &lt;= <span class="number">0</span> <span class="keyword">or</span> \</div><div class="line">                self.x + self.radius &gt;= screen.get_width():</div><div class="line">            self.sx = -self.sx</div><div class="line">        <span class="keyword">if</span> self.y - self.radius &lt;= <span class="number">0</span> <span class="keyword">or</span> \</div><div class="line">                self.y + self.radius &gt;= screen.get_height():</div><div class="line">            self.sy = -self.sy</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">eat</span><span class="params">(self, other)</span>:</span></div><div class="line">        <span class="string">"""吃其他球"""</span></div><div class="line">        <span class="keyword">if</span> self.alive <span class="keyword">and</span> other.alive <span class="keyword">and</span> self != other:</div><div class="line">            dx, dy = self.x - other.x, self.y - other.y</div><div class="line">            distance = sqrt(dx ** <span class="number">2</span> + dy ** <span class="number">2</span>)</div><div class="line">            <span class="keyword">if</span> distance &lt; self.radius + other.radius \</div><div class="line">                    <span class="keyword">and</span> self.radius &gt; other.radius:</div><div class="line">                other.alive = <span class="keyword">False</span></div><div class="line">               a self.radius = self.radius + int(other.radius * <span class="number">0.146</span>)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">draw</span><span class="params">(self, screen)</span>:</span></div><div class="line">        <span class="string">"""在窗口上绘制球"""</span></div><div class="line">        pygame.draw.circle(screen, self.color,</div><div class="line">                           (self.x, self.y), self.radius, <span class="number">0</span>)</div></pre></td></tr></table></figure>
<h4 id="事件处理"><a href="#事件处理" class="headerlink" title="事件处理"></a>事件处理</h4><p>可以在事件循环中对鼠标事件进行处理，通过事件对象的<code>type</code>属性可以判定事件类型，再通过<code>pos</code>属性就可以获得鼠标点击的位置。如果要处理键盘事件也是在这个地方，做法与处理鼠标事件类似。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    <span class="comment"># 定义用来装所有球的容器</span></div><div class="line">    balls = []</div><div class="line">    <span class="comment"># 初始化导入的pygame中的模块</span></div><div class="line">    pygame.init()</div><div class="line">    <span class="comment"># 初始化用于显示的窗口并设置窗口尺寸</span></div><div class="line">    screen = pygame.display.set_mode((<span class="number">800</span>, <span class="number">600</span>))</div><div class="line">    <span class="comment"># 设置当前窗口的标题</span></div><div class="line">    pygame.display.set_caption(<span class="string">'大球吃小球'</span>)</div><div class="line">    running = <span class="keyword">True</span></div><div class="line">    <span class="comment"># 开启一个事件循环处理发生的事件</span></div><div class="line">    <span class="keyword">while</span> running:</div><div class="line">        <span class="comment"># 从消息队列中获取事件并对事件进行处理</span></div><div class="line">        <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get():</div><div class="line">            <span class="keyword">if</span> event.type == pygame.QUIT:</div><div class="line">                running = <span class="keyword">False</span></div><div class="line">            <span class="comment"># 处理鼠标事件的代码</span></div><div class="line">            <span class="keyword">if</span> event.type == pygame.MOUSEBUTTONDOWN <span class="keyword">and</span> event.button == <span class="number">1</span>:</div><div class="line">                <span class="comment"># 获得点击鼠标的位置</span></div><div class="line">                x, y = event.pos</div><div class="line">                radius = randint(<span class="number">10</span>, <span class="number">100</span>)</div><div class="line">                sx, sy = randint(<span class="number">-10</span>, <span class="number">10</span>), randint(<span class="number">-10</span>, <span class="number">10</span>)</div><div class="line">                color = Color.random_color()</div><div class="line">                <span class="comment"># 在点击鼠标的位置创建一个球(大小、速度和颜色随机)</span></div><div class="line">                ball = Ball(x, y, radius, sx, sy, color)</div><div class="line">                <span class="comment"># 将球添加到列表容器中</span></div><div class="line">                balls.append(ball)</div><div class="line">        screen.fill((<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>))</div><div class="line">        <span class="comment"># 取出容器中的球 如果没被吃掉就绘制 被吃掉了就移除</span></div><div class="line">        <span class="keyword">for</span> ball <span class="keyword">in</span> balls:</div><div class="line">            <span class="keyword">if</span> ball.alive:</div><div class="line">                ball.draw(screen)</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                balls.remove(ball)</div><div class="line">        pygame.display.flip()</div><div class="line">        <span class="comment"># 每隔50毫秒就改变球的位置再刷新窗口</span></div><div class="line">        pygame.time.delay(<span class="number">50</span>)</div><div class="line">        <span class="keyword">for</span> ball <span class="keyword">in</span> balls:</div><div class="line">            ball.move(screen)</div><div class="line">            <span class="comment"># 检查球有没有吃到其他的球</span></div><div class="line">            <span class="keyword">for</span> other <span class="keyword">in</span> balls:</div><div class="line">                ball.eat(other)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>上面的两段代码合在一起，我们就完成了“大球吃小球”的游戏（如下图所示），准确的说它算不上一个游戏，但是做一个小游戏的基本知识我们已经通过这个例子告诉大家了，有了这些知识已经可以开始你的小游戏开发之旅了。其实上面的代码中还有很多值得改进的地方，比如刷新窗口以及让球移动起来的代码并不应该放在事件循环中，等学习了多线程的知识后，用一个后台线程来处理这些事可能是更好的选择。如果希望获得更好的用户体验，我们还可以在游戏中加入背景音乐以及在球与球发生碰撞时播放音效，利用pygame的mixer和music模块，我们可以很容易的做到这一点，大家可以自行了解这方面的知识。事实上，想了解更多的关于pygame的知识，最好的教程是<a href="https://www.pygame.org/news" target="_blank" rel="external">pygame的官方网站</a>，如果英语没毛病就可以赶紧去看看啦。 如果想开发<a href="https://zh.wikipedia.org/wiki/3D%E6%B8%B8%E6%88%8F" target="_blank" rel="external">3D游戏</a>，pygame就显得力不从心了，对3D游戏开发如果有兴趣的读者不妨看看<a href="https://www.panda3d.org/" target="_blank" rel="external">Panda3D</a>。</p>
<h2 id="文件和异常"><a href="#文件和异常" class="headerlink" title="文件和异常"></a>文件和异常</h2><p>在实际开发中，常常需要对程序中的数据进行<a href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96" target="_blank" rel="external">持久化</a>操作，而实现数据持久化最直接简单的方式就是将数据保存到文件中。说到“文件”这个词，可能需要先科普一下关于<a href="https://zh.wikipedia.org/wiki/%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F" target="_blank" rel="external">文件系统</a>的知识，对于这个概念，维基百科上给出了很好的诠释，这里不再浪费笔墨。</p>
<p>在Python中实现文件的读写操作其实非常简单，通过Python内置的<code>open</code>函数，我们可以指定文件名、操作模式、编码信息等来获得操作文件的对象，接下来就可以对文件进行读写操作了。这里所说的操作模式是指要打开什么样的文件（字符文件还是二进制文件）以及做什么样的操作（读、写还是追加），具体的如下表所示。</p>
<table>
<thead>
<tr>
<th>操作模式</th>
<th>具体含义</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&#39;r&#39;</code></td>
<td>读取 （默认）</td>
</tr>
<tr>
<td><code>&#39;w&#39;</code></td>
<td>写入（会先截断之前的内容）</td>
</tr>
<tr>
<td><code>&#39;x&#39;</code></td>
<td>写入，如果文件已经存在会产生异常</td>
</tr>
<tr>
<td><code>&#39;a&#39;</code></td>
<td>追加，将内容写入到已有文件的末尾</td>
</tr>
<tr>
<td><code>&#39;b&#39;</code></td>
<td>二进制模式</td>
</tr>
<tr>
<td><code>&#39;t&#39;</code></td>
<td>文本模式（默认）</td>
</tr>
<tr>
<td><code>&#39;+&#39;</code></td>
<td>更新（既可以读又可以写）</td>
</tr>
</tbody>
</table>
<h3 id="读写文本文件"><a href="#读写文本文件" class="headerlink" title="读写文本文件"></a>读写文本文件</h3><p>读取文本文件时，需要在使用<code>open</code>函数时指定好带路径的文件名（可以使用相对路径或绝对路径）并将文件模式设置为<code>&#39;r&#39;</code>（如果不指定，默认值也是<code>&#39;r&#39;</code>），然后通过<code>encoding</code>参数指定编码（如果不指定，默认值是None，那么在读取文件时使用的是操作系统默认的编码），如果不能保证保存文件时使用的编码方式与encoding参数指定的编码方式是一致的，那么就可能因无法解码字符而导致读取失败。下面的例子演示了如何读取一个纯文本文件。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    f = open(<span class="string">'致橡树.txt'</span>, <span class="string">'r'</span>, encoding=<span class="string">'utf-8'</span>)</div><div class="line">    print(f.read())</div><div class="line">    f.close()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>请注意上面的代码，如果<code>open</code>函数指定的文件并不存在或者无法打开，那么将引发异常状况导致程序崩溃。为了让代码有一定的健壮性和容错性，我们可以使用Python的异常机制对可能在运行时发生状况的代码进行适当的处理，如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    f = <span class="keyword">None</span></div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        f = open(<span class="string">'致橡树.txt'</span>, <span class="string">'r'</span>, encoding=<span class="string">'utf-8'</span>)</div><div class="line">        print(f.read())</div><div class="line">    <span class="keyword">except</span> FileNotFoundError:</div><div class="line">        print(<span class="string">'无法打开指定的文件!'</span>)</div><div class="line">    <span class="keyword">except</span> LookupError:</div><div class="line">        print(<span class="string">'指定了未知的编码!'</span>)</div><div class="line">    <span class="keyword">except</span> UnicodeDecodeError:</div><div class="line">        print(<span class="string">'读取文件时解码错误!'</span>)</div><div class="line">    <span class="keyword">finally</span>:</div><div class="line">        <span class="keyword">if</span> f:</div><div class="line">            f.close()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>在Python中，我们可以将那些在运行时可能会出现状况的代码放在<code>try</code>代码块中，在<code>try</code>代码块的后面可以跟上一个或多个<code>except</code>来捕获可能出现的异常状况。例如在上面读取文件的过程中，文件找不到会引发<code>FileNotFoundError</code>，指定了未知的编码会引发<code>LookupError</code>，而如果读取文件时无法按指定方式解码会引发<code>UnicodeDecodeError</code>，我们在<code>try</code>后面跟上了三个<code>except</code>分别处理这三种不同的异常状况。最后我们使用<code>finally</code>代码块来关闭打开的文件，释放掉程序中获取的外部资源，由于<code>finally</code>块的代码不论程序正常还是异常都会执行到（甚至是调用了<code>sys</code>模块的<code>exit</code>函数退出Python环境，<code>finally</code>块都会被执行，因为<code>exit</code>函数实质上是引发了<code>SystemExit</code>异常），因此我们通常把<code>finally</code>块称为“总是执行代码块”，它最适合用来做释放外部资源的操作。如果不愿意在<code>finally</code>代码块中关闭文件对象释放资源，也可以使用上下文语法，通过<code>with</code>关键字指定文件对象的上下文环境并在离开上下文环境时自动释放文件资源，代码如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        <span class="keyword">with</span> open(<span class="string">'致橡树.txt'</span>, <span class="string">'r'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</div><div class="line">            print(f.read())</div><div class="line">    <span class="keyword">except</span> FileNotFoundError:</div><div class="line">        print(<span class="string">'无法打开指定的文件!'</span>)</div><div class="line">    <span class="keyword">except</span> LookupError:</div><div class="line">        print(<span class="string">'指定了未知的编码!'</span>)</div><div class="line">    <span class="keyword">except</span> UnicodeDecodeError:</div><div class="line">        print(<span class="string">'读取文件时解码错误!'</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>除了使用文件对象的<code>read</code>方法读取文件之外，还可以使用<code>for-in</code>循环逐行读取或者用<code>readlines</code>方法将文件按行读取到一个列表容器中，代码如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> time</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    <span class="comment"># 一次性读取整个文件内容</span></div><div class="line">    <span class="keyword">with</span> open(<span class="string">'致橡树.txt'</span>, <span class="string">'r'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</div><div class="line">        print(f.read())</div><div class="line"></div><div class="line">    <span class="comment"># 通过for-in循环逐行读取</span></div><div class="line">    <span class="keyword">with</span> open(<span class="string">'致橡树.txt'</span>, mode=<span class="string">'r'</span>) <span class="keyword">as</span> f:</div><div class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> f:</div><div class="line">            print(line, end=<span class="string">''</span>)</div><div class="line">            time.sleep(<span class="number">0.5</span>)</div><div class="line">    print()</div><div class="line"></div><div class="line">    <span class="comment"># 读取文件按行读取到列表中</span></div><div class="line">    <span class="keyword">with</span> open(<span class="string">'致橡树.txt'</span>) <span class="keyword">as</span> f:</div><div class="line">        lines = f.readlines()</div><div class="line">    print(lines)</div><div class="line">    </div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>要将文本信息写入文件文件也非常简单，在使用<code>open</code>函数时指定好文件名并将文件模式设置为<code>&#39;w&#39;</code>即可。注意如果需要对文件内容进行追加式写入，应该将模式设置为<code>&#39;a&#39;</code>。如果要写入的文件不存在会自动创建文件而不是引发异常。下面的例子演示了如何将1~9999直接的素数分别写入三个文件中（1~99之间的素数保存在a.txt中，100~999之间的素数保存在b.txt中，1000~9999之间的素数保存在c.txt中）。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> math <span class="keyword">import</span> sqrt</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_prime</span><span class="params">(n)</span>:</span></div><div class="line">    <span class="string">"""判断素数的函数"""</span></div><div class="line">    <span class="keyword">assert</span> n &gt; <span class="number">0</span></div><div class="line">    <span class="keyword">for</span> factor <span class="keyword">in</span> range(<span class="number">2</span>, int(sqrt(n)) + <span class="number">1</span>):</div><div class="line">        <span class="keyword">if</span> n % factor == <span class="number">0</span>:</div><div class="line">            <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">    <span class="keyword">return</span> <span class="keyword">True</span> <span class="keyword">if</span> n != <span class="number">1</span> <span class="keyword">else</span> <span class="keyword">False</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    filenames = (<span class="string">'a.txt'</span>, <span class="string">'b.txt'</span>, <span class="string">'c.txt'</span>)</div><div class="line">    fs_list = []</div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        <span class="keyword">for</span> filename <span class="keyword">in</span> filenames:</div><div class="line">            fs_list.append(open(filename, <span class="string">'w'</span>, encoding=<span class="string">'utf-8'</span>))</div><div class="line">        <span class="keyword">for</span> number <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">10000</span>):</div><div class="line">            <span class="keyword">if</span> is_prime(number):</div><div class="line">                <span class="keyword">if</span> number &lt; <span class="number">100</span>:</div><div class="line">                    fs_list[<span class="number">0</span>].write(str(number) + <span class="string">'\n'</span>)</div><div class="line">                <span class="keyword">elif</span> number &lt; <span class="number">1000</span>:</div><div class="line">                    fs_list[<span class="number">1</span>].write(str(number) + <span class="string">'\n'</span>)</div><div class="line">                <span class="keyword">else</span>:</div><div class="line">                    fs_list[<span class="number">2</span>].write(str(number) + <span class="string">'\n'</span>)</div><div class="line">    <span class="keyword">except</span> IOError <span class="keyword">as</span> ex:</div><div class="line">        print(ex)</div><div class="line">        print(<span class="string">'写文件时发生错误!'</span>)</div><div class="line">    <span class="keyword">finally</span>:</div><div class="line">        <span class="keyword">for</span> fs <span class="keyword">in</span> fs_list:</div><div class="line">            fs.close()</div><div class="line">    print(<span class="string">'操作完成!'</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h3 id="读写二进制文件"><a href="#读写二进制文件" class="headerlink" title="读写二进制文件"></a>读写二进制文件</h3><p>知道了如何读写文本文件要读写二进制文件也就很简单了，下面的代码实现了复制图片文件的功能。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        <span class="keyword">with</span> open(<span class="string">'guido.jpg'</span>, <span class="string">'rb'</span>) <span class="keyword">as</span> fs1:</div><div class="line">            data = fs1.read()</div><div class="line">            print(type(data))  <span class="comment"># &lt;class 'bytes'&gt;</span></div><div class="line">        <span class="keyword">with</span> open(<span class="string">'吉多.jpg'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> fs2:</div><div class="line">            fs2.write(data)</div><div class="line">    <span class="keyword">except</span> FileNotFoundError <span class="keyword">as</span> e:</div><div class="line">        print(<span class="string">'指定的文件无法打开.'</span>)</div><div class="line">    <span class="keyword">except</span> IOError <span class="keyword">as</span> e:</div><div class="line">        print(<span class="string">'读写文件时出现错误.'</span>)</div><div class="line">    print(<span class="string">'程序执行结束.'</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h3 id="读写JSON文件"><a href="#读写JSON文件" class="headerlink" title="读写JSON文件"></a>读写JSON文件</h3><p>通过上面的讲解，我们已经知道如何将文本数据和二进制数据保存到文件中，那么这里还有一个问题，如果希望把一个列表或者一个字典中的数据保存到文件中又该怎么做呢？答案是将数据以JSON格式进行保存。JSON是“JavaScript Object Notation”的缩写，它本来是JavaScript语言中创建对象的一种字面量语法，现在已经被广泛的应用于跨平台跨语言的数据交换，原因很简单，因为JSON也是纯文本，任何系统任何编程语言处理纯文本都是没有问题的。目前JSON基本上已经取代了XML作为异构系统间交换数据的事实标准。关于JSON的知识，更多的可以参考<a href="http://json.org" target="_blank" rel="external">JSON的官方网站</a>，从这个网站也可以了解到每种语言处理JSON数据格式可以使用的工具或三方库，下面是一个JSON的简单例子。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    'name': '骆昊',</div><div class="line">    'age': 38,</div><div class="line">    'qq': 957658,</div><div class="line">    'friends': ['王大锤', '白元芳'],</div><div class="line">    'cars': [</div><div class="line">        &#123;'brand': 'BYD', 'max_speed': 180&#125;,</div><div class="line">        &#123;'brand': 'Audi', 'max_speed': 280&#125;,</div><div class="line">        &#123;'brand': 'Benz', 'max_speed': 320&#125;</div><div class="line">    ]</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>可能大家已经注意到了，上面的JSON跟Python中的字典其实是一样一样的，事实上JSON的数据类型和Python的数据类型是很容易找到对应关系的，如下面两张表所示。</p>
<table>
<thead>
<tr>
<th>JSON</th>
<th>Python</th>
</tr>
</thead>
<tbody>
<tr>
<td>object</td>
<td>dict</td>
</tr>
<tr>
<td>array</td>
<td>list</td>
</tr>
<tr>
<td>string</td>
<td>str</td>
</tr>
<tr>
<td>number (int / real)</td>
<td>int / float</td>
</tr>
<tr>
<td>true / false</td>
<td>True / False</td>
</tr>
<tr>
<td>null</td>
<td>None</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>Python</th>
<th>JSON</th>
</tr>
</thead>
<tbody>
<tr>
<td>dict</td>
<td>object</td>
</tr>
<tr>
<td>list, tuple</td>
<td>array</td>
</tr>
<tr>
<td>str</td>
<td>string</td>
</tr>
<tr>
<td>int, float, int- &amp; float-derived Enums</td>
<td>number</td>
</tr>
<tr>
<td>True / False</td>
<td>true / false</td>
</tr>
<tr>
<td>None</td>
<td>null</td>
</tr>
</tbody>
</table>
<p>我们使用Python中的json模块就可以将字典或列表以JSON格式保存到文件中，代码如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> json</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    mydict = &#123;</div><div class="line">        <span class="string">'name'</span>: <span class="string">'骆昊'</span>,</div><div class="line">        <span class="string">'age'</span>: <span class="number">38</span>,</div><div class="line">        <span class="string">'qq'</span>: <span class="number">957658</span>,</div><div class="line">        <span class="string">'friends'</span>: [<span class="string">'王大锤'</span>, <span class="string">'白元芳'</span>],</div><div class="line">        <span class="string">'cars'</span>: [</div><div class="line">            &#123;<span class="string">'brand'</span>: <span class="string">'BYD'</span>, <span class="string">'max_speed'</span>: <span class="number">180</span>&#125;,</div><div class="line">            &#123;<span class="string">'brand'</span>: <span class="string">'Audi'</span>, <span class="string">'max_speed'</span>: <span class="number">280</span>&#125;,</div><div class="line">            &#123;<span class="string">'brand'</span>: <span class="string">'Benz'</span>, <span class="string">'max_speed'</span>: <span class="number">320</span>&#125;</div><div class="line">        ]</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        <span class="keyword">with</span> open(<span class="string">'data.json'</span>, <span class="string">'w'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> fs:</div><div class="line">            json.dump(mydict, fs)</div><div class="line">    <span class="keyword">except</span> IOError <span class="keyword">as</span> e:</div><div class="line">        print(e)</div><div class="line">    print(<span class="string">'保存数据完成!'</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>json模块主要有四个比较重要的函数，分别是：</p>
<ul>
<li>dump - 将Python对象按照JSON格式序列化到文件中</li>
<li>dumps - 将Python对象处理成JSON格式的字符串</li>
<li>load - 将文件中的JSON数据反序列化成对象</li>
<li>loads - 将字符串的内容反序列化成Python对象</li>
</ul>
<p>这里出现了两个概念，一个叫序列化，一个叫反序列化。自由的百科全书<a href="https://zh.wikipedia.org/" target="_blank" rel="external">维基百科</a>上对这两个概念是这样解释的：“序列化（serialization）在计算机科学的数据处理中，是指将数据结构或对象状态转换为可以存储或传输的形式，这样在需要的时候能够恢复到原先的状态，而且通过序列化的数据重新获取字节时，可以利用这些字节来产生原始对象的副本（拷贝）。与这个过程相反的动作，即从一系列字节中提取数据结构的操作，就是反序列化（deserialization）”。</p>
<p>目前绝大多数网络数据服务（或称之为网络API）都是基于<a href="https://zh.wikipedia.org/wiki/%E8%B6%85%E6%96%87%E6%9C%AC%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE" target="_blank" rel="external">HTTP协议</a>提供JSON格式的数据，关于HTTP协议的相关知识，可以看看阮一峰老师的<a href="http://www.ruanyifeng.com/blog/2016/08/http.html" target="_blank" rel="external">《HTTP协议入门》</a>，如果想了解国内的网络数据服务，可以看看<a href="https://www.juhe.cn/" target="_blank" rel="external">聚合数据</a>和<a href="http://www.avatardata.cn/" target="_blank" rel="external">阿凡达数据</a>等网站，国外的可以看看<a href="http://apis.io/" target="_blank" rel="external">{API}Search</a>网站。下面的例子演示了如何使用requests模块（封装得足够好的第三方网络访问模块）访问网络API获取国内新闻，如何通过json模块解析JSON数据并显示新闻标题，这个例子使用了<a href="https://www.tianapi.com/" target="_blank" rel="external">天行数据</a>提供的国内新闻数据接口，其中的APIKey需要自己到该网站申请。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> json</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    resp = requests.get(<span class="string">'http://api.tianapi.com/guonei/?key=APIKey&amp;num=10'</span>)</div><div class="line">    data_model = json.loads(resp.text)</div><div class="line">    <span class="keyword">for</span> news <span class="keyword">in</span> data_model[<span class="string">'newslist'</span>]:</div><div class="line">        print(news[<span class="string">'title'</span>])</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>在Python中要实现序列化和反序列化除了使用json模块之外，还可以使用pickle和shelve模块，但是这两个模块是使用特有的序列化协议来序列化数据，因此序列化后的数据只能被Python识别。关于这两个模块的相关知识可以自己看看网络上的资料。另外，如果要了解更多的关于Python异常机制的知识，可以看看segmentfault上面的文章<a href="https://segmentfault.com/a/1190000007736783" target="_blank" rel="external">《总结：Python中的异常处理》</a>，这篇文章不仅介绍了Python中异常机制的使用，还总结了一系列的最佳实践，很值得一读。  </p>
<h2 id="使用正则表达式"><a href="#使用正则表达式" class="headerlink" title="使用正则表达式"></a>使用正则表达式</h2><h3 id="正则表达式相关知识"><a href="#正则表达式相关知识" class="headerlink" title="正则表达式相关知识"></a>正则表达式相关知识</h3><p>在编写处理字符串的程序或网页时，经常会有查找符合某些复杂规则的字符串的需要，正则表达式就是用于描述这些规则的工具，换句话说正则表达式是一种工具，它定义了字符串的匹配模式（如何检查一个字符串是否有跟某种模式匹配的部分或者从一个字符串中将与模式匹配的部分提取出来或者替换掉）。如果你在Windows操作系统中使用过文件查找并且在指定文件名时使用过通配符（*和?），那么正则表达式也是与之类似的用来进行文本匹配的工具，只不过比起通配符正则表达式更强大，它能更精确地描述你的需求（当然你付出的代价是书写一个正则表达式比打出一个通配符要复杂得多，要知道任何给你带来好处的东西都是有代价的，就如同学习一门编程语言一样），比如你可以编写一个正则表达式，用来查找所有以0开头，后面跟着2-3个数字，然后是一个连字号“-”，最后是7或8位数字的字符串（像028-12345678或0813-7654321），这不就是国内的座机号码吗。最初计算机是为了做数学运算而诞生的，处理的信息基本上都是数值，而今天我们在日常工作中处理的信息基本上都是文本数据，我们希望计算机能够识别和处理符合某些模式的文本，正则表达式就显得非常重要了。今天几乎所有的编程语言都提供了对正则表达式操作的支持，Python通过标准库中的re模块来支持正则表达式操作。</p>
<p>我们可以考虑下面一个问题：我们从某个地方（可能是一个文本文件，也可能是网络上的一则新闻）获得了一个字符串，希望在字符串中找出手机号和座机号。当然我们可以设定手机号是11位的数字（注意并不是随机的11位数字，因为你没有见过“25012345678”这样的手机号吧）而座机号跟上一段中描述的模式相同，如果不使用正则表达式要完成这个任务就会很麻烦。</p>
<p>关于正则表达式的相关知识，大家可以阅读一篇非常有名的博客叫<a href="https://deerchao.net/tutorials/regex/regex.htm" target="_blank" rel="external">《正则表达式30分钟入门教程》</a>，读完这篇文章后你就可以看懂下面的表格，这是我们对正则表达式中的一些基本符号进行的扼要总结。</p>
<table>
<thead>
<tr>
<th>符号</th>
<th>解释</th>
<th>示例</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>.</td>
<td>匹配任意字符</td>
<td>b.t</td>
<td>可以匹配bat / but / b#t / b1t等</td>
</tr>
<tr>
<td>\w</td>
<td>匹配字母/数字/下划线</td>
<td>b\wt</td>
<td>可以匹配bat / b1t / b_t等<br>但不能匹配b#t</td>
</tr>
<tr>
<td>\s</td>
<td>匹配空白字符（包括\r、\n、\t等）</td>
<td>love\syou</td>
<td>可以匹配love you</td>
</tr>
<tr>
<td>\d</td>
<td>匹配数字</td>
<td>\d\d</td>
<td>可以匹配01 / 23 / 99等</td>
</tr>
<tr>
<td>\b</td>
<td>匹配单词的边界</td>
<td>\bThe\b</td>
<td></td>
</tr>
<tr>
<td>^</td>
<td>匹配字符串的开始</td>
<td>^The</td>
<td>可以匹配The开头的字符串</td>
</tr>
<tr>
<td>$</td>
<td>匹配字符串的结束</td>
<td>.exe$</td>
<td>可以匹配.exe结尾的字符串</td>
</tr>
<tr>
<td>\W</td>
<td>匹配非字母/数字/下划线</td>
<td>b\Wt</td>
<td>可以匹配b#t / b@t等<br>但不能匹配but / b1t / b_t等</td>
</tr>
<tr>
<td>\S</td>
<td>匹配非空白字符</td>
<td>love\Syou</td>
<td>可以匹配love#you等<br>但不能匹配love you</td>
</tr>
<tr>
<td>\D</td>
<td>匹配非数字</td>
<td>\d\D</td>
<td>可以匹配9a / 3# / 0F等</td>
</tr>
<tr>
<td>\B</td>
<td>匹配非单词边界</td>
<td>\Bio\B</td>
<td></td>
</tr>
<tr>
<td>[]</td>
<td>匹配来自字符集的任意单一字符</td>
<td>[aeiou]</td>
<td>可以匹配任一元音字母字符</td>
</tr>
<tr>
<td>[^]</td>
<td>匹配不在字符集中的任意单一字符</td>
<td>[^aeiou]</td>
<td>可以匹配任一非元音字母字符</td>
</tr>
<tr>
<td>*</td>
<td>匹配0次或多次</td>
<td>\w*</td>
<td></td>
</tr>
<tr>
<td>+</td>
<td>匹配1次或多次</td>
<td>\w+</td>
<td></td>
</tr>
<tr>
<td>?</td>
<td>匹配0次或1次</td>
<td>\w?</td>
<td></td>
</tr>
<tr>
<td>{N}</td>
<td>匹配N次</td>
<td>\w{3}</td>
<td></td>
</tr>
<tr>
<td>{M,}</td>
<td>匹配至少M次</td>
<td>\w{3,}</td>
<td></td>
</tr>
<tr>
<td>{M,N}</td>
<td>匹配至少M次至多N次</td>
<td>\w{3,6}</td>
<td></td>
</tr>
<tr>
<td>\</td>
<td></td>
<td>分支</td>
<td>foo\</td>
<td>bar</td>
<td>可以匹配foo或者bar</td>
</tr>
<tr>
<td>(?#)</td>
<td>注释</td>
<td></td>
<td></td>
</tr>
<tr>
<td>(exp)</td>
<td>匹配exp并捕获到自动命名的组中</td>
<td></td>
<td></td>
</tr>
<tr>
<td>(?&lt;name&gt;exp)</td>
<td>匹配exp并捕获到名为name的组中</td>
<td></td>
<td></td>
</tr>
<tr>
<td>(?:exp)</td>
<td>匹配exp但是不捕获匹配的文本</td>
<td></td>
<td></td>
</tr>
<tr>
<td>(?=exp)</td>
<td>匹配exp前面的位置</td>
<td>\b\w+(?=ing)</td>
<td>可以匹配I’m dancing中的danc</td>
</tr>
<tr>
<td>(?&lt;=exp)</td>
<td>匹配exp后面的位置</td>
<td>(?&lt;=\bdanc)\w+\b</td>
<td>可以匹配I love dancing and reading中的第一个ing</td>
</tr>
<tr>
<td>(?!exp)</td>
<td>匹配后面不是exp的位置</td>
<td></td>
<td></td>
</tr>
<tr>
<td>(?&lt;!exp)</td>
<td>匹配前面不是exp的位置</td>
<td></td>
<td></td>
</tr>
<tr>
<td>*?</td>
<td>重复任意次，但尽可能少重复</td>
<td>a.*b<br>a.*?b</td>
<td>将正则表达式应用于aabab，前者会匹配整个字符串aabab，后者会匹配aab和ab两个字符串</td>
</tr>
<tr>
<td>+?</td>
<td>重复1次或多次，但尽可能少重复</td>
<td></td>
<td></td>
</tr>
<tr>
<td>??</td>
<td>重复0次或1次，但尽可能少重复</td>
<td></td>
<td></td>
</tr>
<tr>
<td>{M,N}?</td>
<td>重复M到N次，但尽可能少重复</td>
<td></td>
<td></td>
</tr>
<tr>
<td>{M,}?</td>
<td>重复M次以上，但尽可能少重复</td>
<td></td>
</tr>
</tbody>
</table>
<blockquote>
<p><strong>说明：</strong>如果需要匹配的字符是正则表达式中的特殊字符，那么可以使用\进行转义处理，例如想匹配小数点可以写成\.就可以了，因为直接写.会匹配任意字符；同理，想匹配圆括号必须写成\(和\)，否则圆括号被视为正则表达式中的分组。</p>
</blockquote>
<h3 id="Python对正则表达式的支持"><a href="#Python对正则表达式的支持" class="headerlink" title="Python对正则表达式的支持"></a>Python对正则表达式的支持</h3><p>Python提供了re模块来支持正则表达式相关操作，下面是re模块中的核心函数。</p>
<table>
<thead>
<tr>
<th>函数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>compile(pattern, flags=0)</td>
<td>编译正则表达式返回正则表达式对象</td>
</tr>
<tr>
<td>match(pattern, string, flags=0)</td>
<td>用正则表达式匹配字符串 成功返回匹配对象 否则返回None</td>
</tr>
<tr>
<td>search(pattern, string, flags=0)</td>
<td>搜索字符串中第一次出现正则表达式的模式 成功返回匹配对象 否则返回None</td>
</tr>
<tr>
<td>split(pattern, string, maxsplit=0, flags=0)</td>
<td>用正则表达式指定的模式分隔符拆分字符串 返回列表</td>
</tr>
<tr>
<td>sub(pattern, repl, string, count=0, flags=0)</td>
<td>用指定的字符串替换原字符串中与正则表达式匹配的模式 可以用count指定替换的次数</td>
</tr>
<tr>
<td>fullmatch(pattern, string, flags=0)</td>
<td>match函数的完全匹配（从字符串开头到结尾）版本</td>
</tr>
<tr>
<td>findall(pattern, string, flags=0)</td>
<td>查找字符串所有与正则表达式匹配的模式 返回字符串的列表</td>
</tr>
<tr>
<td>finditer(pattern, string, flags=0)</td>
<td>查找字符串所有与正则表达式匹配的模式 返回一个迭代器</td>
</tr>
<tr>
<td>purge()</td>
<td>清除隐式编译的正则表达式的缓存</td>
</tr>
<tr>
<td>re.I / re.IGNORECASE</td>
<td>忽略大小写匹配标记</td>
</tr>
<tr>
<td>re.M / re.MULTILINE</td>
<td>多行匹配标记</td>
</tr>
</tbody>
</table>
<blockquote>
<p><strong>说明：</strong>上面提到的re模块中的这些函数，实际开发中也可以用正则表达式对象的方法替代对这些函数的使用，如果一个正则表达式需要重复的使用，那么先通过compile函数编译正则表达式并创建出正则表达式对象无疑是更为明智的选择。</p>
</blockquote>
<p>下面我们通过一系列的例子来告诉大家在Python中如何使用正则表达式。</p>
<h4 id="例子1：验证输入用户名和QQ号是否有效并给出对应的提示信息。"><a href="#例子1：验证输入用户名和QQ号是否有效并给出对应的提示信息。" class="headerlink" title="例子1：验证输入用户名和QQ号是否有效并给出对应的提示信息。"></a>例子1：验证输入用户名和QQ号是否有效并给出对应的提示信息。</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">验证输入用户名和QQ号是否有效并给出对应的提示信息</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">要求：</span></div><div class="line"><span class="string">用户名必须由字母、数字或下划线构成且长度在6~20个字符之间</span></div><div class="line"><span class="string">QQ号是5~12的数字且首位不能为0</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> re</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    username = input(<span class="string">'请输入用户名: '</span>)</div><div class="line">    qq = input(<span class="string">'请输入QQ号: '</span>)</div><div class="line">    <span class="comment"># match函数的第一个参数是正则表达式字符串或正则表达式对象</span></div><div class="line">    <span class="comment"># 第二个参数是要跟正则表达式做匹配的字符串对象</span></div><div class="line">    m1 = re.match(<span class="string">r'^[0-9a-zA-Z_]&#123;6,20&#125;$'</span>, username)</div><div class="line">    <span class="keyword">if</span> <span class="keyword">not</span> m1:</div><div class="line">        print(<span class="string">'请输入有效的用户名.'</span>)</div><div class="line">    m2 = re.match(<span class="string">r'^[1-9]\d&#123;4,11&#125;$'</span>, qq)</div><div class="line">    <span class="keyword">if</span> <span class="keyword">not</span> m2:</div><div class="line">        print(<span class="string">'请输入有效的QQ号.'</span>)</div><div class="line">    <span class="keyword">if</span> m1 <span class="keyword">and</span> m2:</div><div class="line">        print(<span class="string">'你输入的信息是有效的!'</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<blockquote>
<p><strong>提示</strong>：上面在书写正则表达式时使用了“原始字符串”的写法（在字符串前面加上了r），所谓“原始字符串”就是字符串中的每个字符都是它原始的意义，说得更直接一点就是字符串中没有所谓的转义字符啦。因为正则表达式中有很多元字符和需要进行转义的地方，如果不使用原始字符串就需要将反斜杠写作\\，例如表示数字的\d得书写成\\d，这样不仅写起来不方便，阅读的时候也会很吃力。</p>
</blockquote>
<h4 id="例子2：从一段文字中提取出国内手机号码。"><a href="#例子2：从一段文字中提取出国内手机号码。" class="headerlink" title="例子2：从一段文字中提取出国内手机号码。"></a>例子2：从一段文字中提取出国内手机号码。</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> re</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    <span class="comment"># 创建正则表达式对象 使用了前瞻和回顾来保证手机号前后不应该出现数字</span></div><div class="line">    pattern = re.compile(<span class="string">r'(?&lt;=\D)1[34578]\d&#123;9&#125;(?=\D)'</span>)</div><div class="line">    sentence = <span class="string">'''</span></div><div class="line"><span class="string">    重要的事情说8130123456789遍，我的手机号是13512346789这个靓号，</span></div><div class="line"><span class="string">    不是15600998765，也是110或119，王大锤的手机号才是15600998765。</span></div><div class="line"><span class="string">    '''</span></div><div class="line">    <span class="comment"># 查找所有匹配并保存到一个列表中</span></div><div class="line">    mylist = re.findall(pattern, sentence)</div><div class="line">    print(mylist)</div><div class="line">    print(<span class="string">'--------华丽的分隔线--------'</span>)</div><div class="line">    <span class="comment"># 通过迭代器取出匹配对象并获得匹配的内容</span></div><div class="line">    <span class="keyword">for</span> temp <span class="keyword">in</span> pattern.finditer(sentence):</div><div class="line">        print(temp.group())</div><div class="line">    print(<span class="string">'--------华丽的分隔线--------'</span>)</div><div class="line">    <span class="comment"># 通过search函数指定搜索位置找出所有匹配</span></div><div class="line">    m = pattern.search(sentence)</div><div class="line">    <span class="keyword">while</span> m:</div><div class="line">        print(m.group())</div><div class="line">        m = pattern.search(sentence, m.end())</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<blockquote>
<p><strong>说明</strong>：上面匹配国内手机号的正则表达式并不够好，因为像14开头的号码只有145或147，而上面的正则表达式并没有考虑这种情况，要匹配国内手机号，更好的正则表达式的写法是：<code>(?&lt;=\D)(1[38]\d{9}|14[57]\d{8}|15[0-35-9]\d{8}|17[678]\d{8})(?=\D)</code>，国内最近好像有19和16开头的手机号了，但是这个暂时不在我们考虑之列。</p>
</blockquote>
<h4 id="例子3：替换字符串中的不良内容"><a href="#例子3：替换字符串中的不良内容" class="headerlink" title="例子3：替换字符串中的不良内容"></a>例子3：替换字符串中的不良内容</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> re</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    sentence = <span class="string">'你丫是傻叉吗? 我操你大爷的. Fuck you.'</span></div><div class="line">    purified = re.sub(<span class="string">'[操肏艹草曹]|fuck|shit|傻[比屄逼叉缺吊屌]|煞笔'</span>,</div><div class="line">                      <span class="string">'*'</span>, sentence, flags=re.IGNORECASE)</div><div class="line">    print(purified)  <span class="comment"># 你丫是*吗? 我*你大爷的. * you.</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<blockquote>
<p><strong>说明</strong>：re模块的正则表达式相关函数中都有一个flags参数，它代表了正则表达式的匹配标记，可以通过该标记来指定匹配时是否忽略大小写、是否进行多行匹配、是否显示调试信息等。如果需要为flags参数指定多个值，可以使用<a href="http://www.runoob.com/python/python-operators.html#ysf5" target="_blank" rel="external">按位或运算符</a>进行叠加，如<code>flags=re.I | re.M</code>。</p>
</blockquote>
<h4 id="例子4：拆分长字符串"><a href="#例子4：拆分长字符串" class="headerlink" title="例子4：拆分长字符串"></a>例子4：拆分长字符串</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> re</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    poem = <span class="string">'窗前明月光，疑是地上霜。举头望明月，低头思故乡。'</span></div><div class="line">    sentence_list = re.split(<span class="string">r'[，。, .]'</span>, poem)</div><div class="line">    <span class="keyword">while</span> <span class="string">''</span> <span class="keyword">in</span> sentence_list:</div><div class="line">        sentence_list.remove(<span class="string">''</span>)</div><div class="line">    print(sentence_list)  <span class="comment"># ['窗前明月光', '疑是地上霜', '举头望明月', '低头思故乡']</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h3 id="后话"><a href="#后话" class="headerlink" title="后话"></a>后话</h3><p>如果要从事爬虫类应用的开发，那么正则表达式一定是一个非常好的助手，因为它可以帮助我们迅速的从网页代码中发现某种我们指定的模式并提取出我们需要的信息，当然对于初学者来收，要编写一个正确的适当的正则表达式可能并不是一件容易的事情（当然有些常用的正则表达式可以直接在网上找找），所以实际开发爬虫应用的时候，有很多人会选择<a href="https://www.crummy.com/software/BeautifulSoup/" target="_blank" rel="external">Beautiful Soup</a>或<a href="http://lxml.de/" target="_blank" rel="external">Lxml</a>来进行匹配和信息的提取，前者简单方便但是性能较差，后者既好用性能也好，但是安装稍嫌麻烦，这些内容我们会在后期的爬虫专题中为大家介绍。  </p>
<h2 id="进程和线程"><a href="#进程和线程" class="headerlink" title="进程和线程"></a>进程和线程</h2><p>今天我们使用的计算机早已进入多CPU或多核时代，而我们使用的操作系统都是支持“多任务”的操作系统，这使得我们可以同时运行多个程序，也可以将一个程序分解为若干个相对独立的子任务，让多个子任务并发的执行，从而缩短程序的执行时间，同时也让用户获得更好的体验。因此在当下不管是用什么编程语言进行开发，实现让程序同时执行多个任务也就是常说的“并发编程”，应该是程序员必备技能之一。为此，我们需要先讨论两个概念，一个叫进程，一个叫线程。</p>
<h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>进程就是操作系统中执行的一个程序，操作系统以进程为单位分配存储空间，每个进程都有自己的地址空间、数据栈以及其他用于跟踪进程执行的辅助数据，操作系统管理所有进程的执行，为它们合理的分配资源。进程可以通过fork或spawn的方式来创建新的进程来执行其他的任务，不过新的进程也有自己独立的内存空间，因此必须通过进程间通信机制（IPC，Inter-Process Communication）来实现数据共享，具体的方式包括管道、信号、套接字、共享内存区等。</p>
<p>一个进程还可以拥有多个并发的执行线索，简单的说就是拥有多个可以获得CPU调度的执行单元，这就是所谓的线程。由于线程在同一个进程下，它们可以共享相同的上下文，因此相对于进程而言，线程间的信息共享和通信更加容易。当然在单核CPU系统中，真正的并发是不可能的，因为在某个时刻能够获得CPU的只有唯一的一个线程，多个线程共享了CPU的执行时间。使用多线程实现并发编程为程序带来的好处是不言而喻的，最主要的体现在提升程序的性能和改善用户体验，今天我们使用的软件几乎都用到了多线程技术，这一点可以利用系统自带的进程监控工具（如macOS中的“活动监视器”、Windows中的“任务管理器”）来证实.</p>
<p>当然多线程也并不是没有坏处，站在其他进程的角度，多线程的程序对其他程序并不友好，因为它占用了更多的CPU执行时间，导致其他程序无法获得足够的CPU执行时间；另一方面，站在开发者的角度，编写和调试多线程的程序都对开发者有较高的要求，对于初学者来说更加困难。</p>
<p>Python既支持多进程又支持多线程，因此使用Python实现并发编程主要有3种方式：多进程、多线程、多进程+多线程。</p>
<h3 id="Python中的多进程"><a href="#Python中的多进程" class="headerlink" title="Python中的多进程"></a>Python中的多进程</h3><p>Unix和Linux操作系统上提供了<code>fork()</code>系统调用来创建进程，调用<code>fork()</code>函数的是父进程，创建出的是子进程，子进程是父进程的一个拷贝，但是子进程拥有自己的PID。<code>fork()</code>函数非常特殊它会返回两次，父进程中可以通过<code>fork()</code>函数的返回值得到子进程的PID，而子进程中的返回值永远都是0。Python的os模块提供了<code>fork()</code>函数。由于Windows系统没有<code>fork()</code>调用，因此要实现跨平台的多进程编程，可以使用multiprocessing模块的<code>Process</code>类来创建子进程，而且该模块还提供了更高级的封装，例如批量启动进程的进程池（<code>Pool</code>）、用于进程间通信的队列（<code>Queue</code>）和管道（<code>Pipe</code>）等。</p>
<p>下面用一个下载文件的例子来说明使用多进程和不使用多进程到底有什么差别，先看看下面的代码。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</div><div class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time, sleep</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">download_task</span><span class="params">(filename)</span>:</span></div><div class="line">    print(<span class="string">'开始下载%s...'</span> % filename)</div><div class="line">    time_to_download = randint(<span class="number">5</span>, <span class="number">10</span>)</div><div class="line">    sleep(time_to_download)</div><div class="line">    print(<span class="string">'%s下载完成! 耗费了%d秒'</span> % (filename, time_to_download))</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    start = time()</div><div class="line">    download_task(<span class="string">'Python从入门到住院.pdf'</span>)</div><div class="line">    download_task(<span class="string">'Peking Hot.avi'</span>)</div><div class="line">    end = time()</div><div class="line">    print(<span class="string">'总共耗费了%.2f秒.'</span> % (end - start))</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>下面是运行程序得到的一次运行结果。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">开始下载Python从入门到住院.pdf...</div><div class="line">Python从入门到住院.pdf下载完成! 耗费了6秒</div><div class="line">开始下载Peking Hot.avi...</div><div class="line">Peking Hot.avi下载完成! 耗费了7秒</div><div class="line">总共耗费了13.01秒.</div></pre></td></tr></table></figure>
<p>从上面的例子可以看出，如果程序中的代码只能按顺序一点点的往下执行，那么即使执行两个毫不相关的下载任务，也需要先等待一个文件下载完成后才能开始下一个下载任务，很显然这并不合理也没有效率。接下来我们使用多进程的方式将两个下载任务放到不同的进程中，代码如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Process</div><div class="line"><span class="keyword">from</span> os <span class="keyword">import</span> getpid</div><div class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</div><div class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time, sleep</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">download_task</span><span class="params">(filename)</span>:</span></div><div class="line">    print(<span class="string">'启动下载进程，进程号[%d].'</span> % getpid())</div><div class="line">    print(<span class="string">'开始下载%s...'</span> % filename)</div><div class="line">    time_to_download = randint(<span class="number">5</span>, <span class="number">10</span>)</div><div class="line">    sleep(time_to_download)</div><div class="line">    print(<span class="string">'%s下载完成! 耗费了%d秒'</span> % (filename, time_to_download))</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    start = time()</div><div class="line">    p1 = Process(target=download_task, args=(<span class="string">'Python从入门到住院.pdf'</span>, ))</div><div class="line">    p1.start()</div><div class="line">    p2 = Process(target=download_task, args=(<span class="string">'Peking Hot.avi'</span>, ))</div><div class="line">    p2.start()</div><div class="line">    p1.join()</div><div class="line">    p2.join()</div><div class="line">    end = time()</div><div class="line">    print(<span class="string">'总共耗费了%.2f秒.'</span> % (end - start))</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>在上面的代码中，我们通过<code>Process</code>类创建了进程对象，通过<code>target</code>参数我们传入一个函数来表示进程启动后要执行的代码，后面的<code>args</code>是一个元组，它代表了传递给函数的参数。<code>Process</code>对象的<code>start</code>方法用来启动进程，而<code>join</code>方法表示等待进程执行结束。运行上面的代码可以明显发现两个下载任务“同时”启动了，而且程序的执行时间将大大缩短，不再是两个任务的时间总和。下面是程序的一次执行结果。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">启动下载进程，进程号[1530].</div><div class="line">开始下载Python从入门到住院.pdf...</div><div class="line">启动下载进程，进程号[1531].</div><div class="line">开始下载Peking Hot.avi...</div><div class="line">Peking Hot.avi下载完成! 耗费了7秒</div><div class="line">Python从入门到住院.pdf下载完成! 耗费了10秒</div><div class="line">总共耗费了10.01秒.</div></pre></td></tr></table></figure>
<p>我们也可以使用subprocess模块中的类和函数来创建和启动子进程，然后通过管道来和子进程通信，这些内容我们不在此进行讲解，有兴趣的读者可以自己了解这些知识。接下来我们将重点放在如何实现两个进程间的通信。我们启动两个进程，一个输出Ping，一个输出Pong，两个进程输出的Ping和Pong加起来一共10个。听起来很简单吧，但是如果这样写可是错的哦。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Process</div><div class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</div><div class="line"></div><div class="line">counter = <span class="number">0</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sub_task</span><span class="params">(string)</span>:</span></div><div class="line">    <span class="keyword">global</span> counter</div><div class="line">    <span class="keyword">while</span> counter &lt; <span class="number">10</span>:</div><div class="line">        print(string, end=<span class="string">''</span>, flush=<span class="keyword">True</span>)</div><div class="line">        counter += <span class="number">1</span></div><div class="line">        sleep(<span class="number">0.01</span>)</div><div class="line"></div><div class="line">        </div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    Process(target=sub_task, args=(<span class="string">'Ping'</span>, )).start()</div><div class="line">    Process(target=sub_task, args=(<span class="string">'Pong'</span>, )).start()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>看起来没毛病，但是最后的结果是Ping和Pong各输出了10个，Why？当我们在程序中创建进程的时候，子进程复制了父进程及其所有的数据结构，每个子进程有自己独立的内存空间，这也就意味着两个子进程中各有一个<code>counter</code>变量，所以结果也就可想而知了。要解决这个问题比较简单的办法是使用multiprocessing模块中的<code>Queue</code>类，它是可以被多个进程共享的队列，底层是通过管道和<a href="">信号量（semaphore）</a>机制来实现的，有兴趣的读者可以自己尝试一下。</p>
<h3 id="Python中的多线程"><a href="#Python中的多线程" class="headerlink" title="Python中的多线程"></a>Python中的多线程</h3><p>在Python早期的版本中就引入了thread模块（现在名为_thread）来实现多线程编程，然而该模块过于底层，而且很多功能都没有提供，因此目前的多线程开发我们推荐使用threading模块，该模块对多线程编程提供了更好的面向对象的封装。我们把刚才下载文件的例子用多线程的方式来实现一遍。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</div><div class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</div><div class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time, sleep</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">download</span><span class="params">(filename)</span>:</span></div><div class="line">    print(<span class="string">'开始下载%s...'</span> % filename)</div><div class="line">    time_to_download = randint(<span class="number">5</span>, <span class="number">10</span>)</div><div class="line">    sleep(time_to_download)</div><div class="line">    print(<span class="string">'%s下载完成! 耗费了%d秒'</span> % (filename, time_to_download))</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    start = time()</div><div class="line">    t1 = Thread(target=download, args=(<span class="string">'Python从入门到住院.pdf'</span>,))</div><div class="line">    t1.start()</div><div class="line">    t2 = Thread(target=download, args=(<span class="string">'Peking Hot.avi'</span>,))</div><div class="line">    t2.start()</div><div class="line">    t1.join()</div><div class="line">    t2.join()</div><div class="line">    end = time()</div><div class="line">    print(<span class="string">'总共耗费了%.3f秒'</span> % (end - start))</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>我们可以直接使用threading模块的<code>Thread</code>类来创建线程，但是我们之前讲过一个非常重要的概念叫“继承”，我们可以从已有的类创建新类，因此也可以通过继承<code>Thread</code>类的方式来创建自定义的线程类，然后再创建线程对象并启动线程。代码如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</div><div class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</div><div class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time, sleep</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">DownloadTask</span><span class="params">(Thread)</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, filename)</span>:</span></div><div class="line">        super().__init__()</div><div class="line">        self._filename = filename</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></div><div class="line">        print(<span class="string">'开始下载%s...'</span> % self._filename)</div><div class="line">        time_to_download = randint(<span class="number">5</span>, <span class="number">10</span>)</div><div class="line">        sleep(time_to_download)</div><div class="line">        print(<span class="string">'%s下载完成! 耗费了%d秒'</span> % (self._filename, time_to_download))</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    start = time()</div><div class="line">    t1 = DownloadTask(<span class="string">'Python从入门到住院.pdf'</span>)</div><div class="line">    t1.start()</div><div class="line">    t2 = DownloadTask(<span class="string">'Peking Hot.avi'</span>)</div><div class="line">    t2.start()</div><div class="line">    t1.join()</div><div class="line">    t2.join()</div><div class="line">    end = time()</div><div class="line">    print(<span class="string">'总共耗费了%.2f秒.'</span> % (end - start))</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>因为多个线程可以共享进程的内存空间，因此要实现多个线程间的通信相对简单，大家能想到的最直接的办法就是设置一个全局变量，多个线程共享这个全局变量即可。但是当多个线程共享同一个变量（我们通常称之为“资源”）的时候，很有可能产生不可控的结果从而导致程序失效甚至崩溃。如果一个资源被多个线程竞争使用，那么我们通常称之为“临界资源”，对“临界资源”的访问需要加上保护，否则资源会处于“混乱”的状态。下面的例子演示了100个线程向同一个银行账户转账（转入1元钱）的场景，在这个例子中，银行账户就是一个临界资源，在没有保护的情况下我们很有可能会得到错误的结果。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</div><div class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Account</span><span class="params">(object)</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></div><div class="line">        self._balance = <span class="number">0</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">deposit</span><span class="params">(self, money)</span>:</span></div><div class="line">        <span class="comment"># 计算存款后的余额</span></div><div class="line">        new_balance = self._balance + money</div><div class="line">        <span class="comment"># 模拟受理存款业务需要0.01秒的时间</span></div><div class="line">        sleep(<span class="number">0.01</span>)</div><div class="line">        <span class="comment"># 修改账户余额</span></div><div class="line">        self._balance = new_balance</div><div class="line"></div><div class="line"><span class="meta">    @property</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">balance</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self._balance</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">AddMoneyThread</span><span class="params">(Thread)</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, account, money)</span>:</span></div><div class="line">        super().__init__()</div><div class="line">        self._account = account</div><div class="line">        self._money = money</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></div><div class="line">        self._account.deposit(self._money)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    account = Account()</div><div class="line">    threads = []</div><div class="line">    <span class="comment"># 创建100个存款的线程向同一个账户中存钱</span></div><div class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">100</span>):</div><div class="line">        t = AddMoneyThread(account, <span class="number">1</span>)</div><div class="line">        threads.append(t)</div><div class="line">        t.start()</div><div class="line">    <span class="comment"># 等所有存款的线程都执行完毕</span></div><div class="line">    <span class="keyword">for</span> t <span class="keyword">in</span> threads:</div><div class="line">        t.join()</div><div class="line">    print(<span class="string">'账户余额为: ￥%d元'</span> % account.balance)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>运行上面的程序，结果让人大跌眼镜，100个线程分别向账户中转入1元钱，结果居然远远小于100元。之所以出现这种情况是因为我们没有对银行账户这个“临界资源”加以保护，多个线程同时向账户中存钱时，会一起执行到<code>new_balance = self._balance + money</code>这行代码，多个线程得到的账户余额都是初始状态下的<code>0</code>，所以都是<code>0</code>上面做了+1的操作，因此得到了错误的结果。在这种情况下，“锁”就可以派上用场了。我们可以通过“锁”来保护“临界资源”，只有获得“锁”的线程才能访问“临界资源”，而其他没有得到“锁”的线程只能被阻塞起来，直到获得“锁”的线程释放了“锁”，其他线程才有机会获得“锁”，进而访问被保护的“临界资源”。下面的代码演示了如何使用“锁”来保护对银行账户的操作，从而获得正确的结果。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</div><div class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread, Lock</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Account</span><span class="params">(object)</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></div><div class="line">        self._balance = <span class="number">0</span></div><div class="line">        self._lock = Lock()</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">deposit</span><span class="params">(self, money)</span>:</span></div><div class="line">        <span class="comment"># 先获取锁才能执行后续的代码</span></div><div class="line">        self._lock.acquire()</div><div class="line">        <span class="keyword">try</span>:</div><div class="line">            new_balance = self._balance + money</div><div class="line">            sleep(<span class="number">0.01</span>)</div><div class="line">            self._balance = new_balance</div><div class="line">        <span class="keyword">finally</span>:</div><div class="line">            <span class="comment"># 在finally中执行释放锁的操作保证正常异常锁都能释放</span></div><div class="line">            self._lock.release()</div><div class="line"></div><div class="line"><span class="meta">    @property</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">balance</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self._balance</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">AddMoneyThread</span><span class="params">(Thread)</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, account, money)</span>:</span></div><div class="line">        super().__init__()</div><div class="line">        self._account = account</div><div class="line">        self._money = money</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></div><div class="line">        self._account.deposit(self._money)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    account = Account()</div><div class="line">    threads = []</div><div class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">100</span>):</div><div class="line">        t = AddMoneyThread(account, <span class="number">1</span>)</div><div class="line">        threads.append(t)</div><div class="line">        t.start()</div><div class="line">    <span class="keyword">for</span> t <span class="keyword">in</span> threads:</div><div class="line">        t.join()</div><div class="line">    print(<span class="string">'账户余额为: ￥%d元'</span> % account.balance)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>比较遗憾的一件事情是Python的多线程并不能发挥CPU的多核特性，这一点只要启动几个执行死循环的线程就可以得到证实了。之所以如此，是因为Python的解释器有一个“全局解释器锁”（GIL）的东西，任何线程执行前必须先获得GIL锁，然后每执行100条字节码，解释器就自动释放GIL锁，让别的线程有机会执行，这是一个历史遗留问题，但是即便如此，就如我们之前举的例子，使用多线程在提升执行效率和改善用户体验方面仍然是有积极意义的。</p>
<h3 id="多进程还是多线程"><a href="#多进程还是多线程" class="headerlink" title="多进程还是多线程"></a>多进程还是多线程</h3><p>无论是多进程还是多线程，只要数量一多，效率肯定上不去，为什么呢？我们打个比方，假设你不幸正在准备中考，每天晚上需要做语文、数学、英语、物理、化学这5科的作业，每项作业耗时1小时。如果你先花1小时做语文作业，做完了，再花1小时做数学作业，这样，依次全部做完，一共花5小时，这种方式称为单任务模型。如果你打算切换到多任务模型，可以先做1分钟语文，再切换到数学作业，做1分钟，再切换到英语，以此类推，只要切换速度足够快，这种方式就和单核CPU执行多任务是一样的了，以旁观者的角度来看，你就正在同时写5科作业。</p>
<p>但是，切换作业是有代价的，比如从语文切到数学，要先收拾桌子上的语文书本、钢笔（这叫保存现场），然后，打开数学课本、找出圆规直尺（这叫准备新环境），才能开始做数学作业。操作系统在切换进程或者线程时也是一样的，它需要先保存当前执行的现场环境（CPU寄存器状态、内存页等），然后，把新任务的执行环境准备好（恢复上次的寄存器状态，切换内存页等），才能开始执行。这个切换过程虽然很快，但是也需要耗费时间。如果有几千个任务同时进行，操作系统可能就主要忙着切换任务，根本没有多少时间去执行任务了，这种情况最常见的就是硬盘狂响，点窗口无反应，系统处于假死状态。所以，多任务一旦多到一个限度，反而会使得系统性能急剧下降，最终导致所有任务都做不好。</p>
<p>是否采用多任务的第二个考虑是任务的类型，可以把任务分为计算密集型和I/O密集型。计算密集型任务的特点是要进行大量的计算，消耗CPU资源，比如对视频进行编码解码或者格式转换等等，这种任务全靠CPU的运算能力，虽然也可以用多任务完成，但是任务越多，花在任务切换的时间就越多，CPU执行任务的效率就越低。计算密集型任务由于主要消耗CPU资源，这类任务用Python这样的脚本语言去执行效率通常很低，最能胜任这类任务的是C语言，我们之前提到了Python中有嵌入C/C++代码的机制。</p>
<p>除了计算密集型任务，其他的涉及到网络、存储介质I/O的任务都可以视为I/O密集型任务，这类任务的特点是CPU消耗很少，任务的大部分时间都在等待I/O操作完成（因为I/O的速度远远低于CPU和内存的速度）。对于I/O密集型任务，如果启动多任务，就可以减少I/O等待时间从而让CPU高效率的运转。有一大类的任务都属于I/O密集型任务，这其中包括了我们很快会涉及到的网络应用和Web应用。</p>
<blockquote>
<p><strong>说明：</strong>上面的内容和例子来自于<a href="https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000" target="_blank" rel="external">廖雪峰官方网站的《Python教程》</a>，因为对作者文中的某些观点持有不同的看法，对原文的文字描述做了适当的调整。</p>
</blockquote>
<h3 id="单线程-异步I-O"><a href="#单线程-异步I-O" class="headerlink" title="单线程+异步I/O"></a>单线程+异步I/O</h3><p>现代操作系统对I/O操作的改进中最为重要的就是支持异步I/O。如果充分利用操作系统提供的异步I/O支持，就可以用单进程单线程模型来执行多任务，这种全新的模型称为事件驱动模型。Nginx就是支持异步I/O的Web服务器，它在单核CPU上采用单进程模型就可以高效地支持多任务。在多核CPU上，可以运行多个进程（数量与CPU核心数相同），充分利用多核CPU。用Node.js开发的服务器端程序也使用了这种工作模式，这也是当下实现多任务编程的一种趋势。</p>
<p>在Python语言中，单线程+异步I/O的编程模型称为协程，有了协程的支持，就可以基于事件驱动编写高效的多任务程序。协程最大的优势就是极高的执行效率，因为子程序切换不是线程切换，而是由程序自身控制，因此，没有线程切换的开销。协程的第二个优势就是不需要多线程的锁机制，因为只有一个线程，也不存在同时写变量冲突，在协程中控制共享资源不用加锁，只需要判断状态就好了，所以执行效率比多线程高很多。如果想要充分利用CPU的多核特性，最简单的方法是多进程+协程，既充分利用多核，又充分发挥协程的高效率，可获得极高的性能。关于这方面的内容，我稍后会做一个专题来进行讲解。</p>
<h3 id="应用案例"><a href="#应用案例" class="headerlink" title="应用案例"></a>应用案例</h3><h4 id="例子1：将耗时间的任务放到线程中以获得更好的用户体验。"><a href="#例子1：将耗时间的任务放到线程中以获得更好的用户体验。" class="headerlink" title="例子1：将耗时间的任务放到线程中以获得更好的用户体验。"></a>例子1：将耗时间的任务放到线程中以获得更好的用户体验。</h4><p>如下所示的界面中，有“下载”和“关于”两个按钮，用休眠的方式模拟点击“下载”按钮会联网下载文件需要耗费10秒的时间，如果不使用“多线程”，我们会发现，当点击“下载”按钮后整个程序的其他部分都被这个耗时间的任务阻塞而无法执行了，这显然是非常糟糕的用户体验，代码如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> time</div><div class="line"><span class="keyword">import</span> tkinter</div><div class="line"><span class="keyword">import</span> tkinter.messagebox</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">download</span><span class="params">()</span>:</span></div><div class="line">    <span class="comment"># 模拟下载任务需要花费10秒钟时间</span></div><div class="line">    time.sleep(<span class="number">10</span>)</div><div class="line">    tkinter.messagebox.showinfo(<span class="string">'提示'</span>, <span class="string">'下载完成!'</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_about</span><span class="params">()</span>:</span></div><div class="line">    tkinter.messagebox.showinfo(<span class="string">'关于'</span>, <span class="string">'作者: 骆昊(v1.0)'</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    top = tkinter.Tk()</div><div class="line">    top.title(<span class="string">'单线程'</span>)</div><div class="line">    top.geometry(<span class="string">'200x150'</span>)</div><div class="line">    top.wm_attributes(<span class="string">'-topmost'</span>, <span class="keyword">True</span>)</div><div class="line"></div><div class="line">    panel = tkinter.Frame(top)</div><div class="line">    button1 = tkinter.Button(panel, text=<span class="string">'下载'</span>, command=download)</div><div class="line">    button1.pack(side=<span class="string">'left'</span>)</div><div class="line">    button2 = tkinter.Button(panel, text=<span class="string">'关于'</span>, command=show_about)</div><div class="line">    button2.pack(side=<span class="string">'right'</span>)</div><div class="line">    panel.pack(side=<span class="string">'bottom'</span>)</div><div class="line"></div><div class="line">    tkinter.mainloop()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>如果使用多线程将耗时间的任务放到一个独立的线程中执行，这样就不会因为执行耗时间的任务而阻塞了主线程，修改后的代码如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> time</div><div class="line"><span class="keyword">import</span> tkinter</div><div class="line"><span class="keyword">import</span> tkinter.messagebox</div><div class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line"></div><div class="line">    <span class="class"><span class="keyword">class</span> <span class="title">DownloadTaskHandler</span><span class="params">(Thread)</span>:</span></div><div class="line"></div><div class="line">        <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></div><div class="line">            time.sleep(<span class="number">10</span>)</div><div class="line">            tkinter.messagebox.showinfo(<span class="string">'提示'</span>, <span class="string">'下载完成!'</span>)</div><div class="line">            <span class="comment"># 启用下载按钮</span></div><div class="line">            button1.config(state=tkinter.NORMAL)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">download</span><span class="params">()</span>:</span></div><div class="line">        <span class="comment"># 禁用下载按钮</span></div><div class="line">        button1.config(state=tkinter.DISABLED)</div><div class="line">        <span class="comment"># 通过daemon参数将线程设置为守护线程(主程序退出就不再保留执行)</span></div><div class="line">        <span class="comment"># 在线程中处理耗时间的下载任务</span></div><div class="line">        DownloadTaskHandler(daemon=<span class="keyword">True</span>).start()</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_about</span><span class="params">()</span>:</span></div><div class="line">        tkinter.messagebox.showinfo(<span class="string">'关于'</span>, <span class="string">'作者: 骆昊(v1.0)'</span>)</div><div class="line"></div><div class="line">    top = tkinter.Tk()</div><div class="line">    top.title(<span class="string">'单线程'</span>)</div><div class="line">    top.geometry(<span class="string">'200x150'</span>)</div><div class="line">    top.wm_attributes(<span class="string">'-topmost'</span>, <span class="number">1</span>)</div><div class="line"></div><div class="line">    panel = tkinter.Frame(top)</div><div class="line">    button1 = tkinter.Button(panel, text=<span class="string">'下载'</span>, command=download)</div><div class="line">    button1.pack(side=<span class="string">'left'</span>)</div><div class="line">    button2 = tkinter.Button(panel, text=<span class="string">'关于'</span>, command=show_about)</div><div class="line">    button2.pack(side=<span class="string">'right'</span>)</div><div class="line">    panel.pack(side=<span class="string">'bottom'</span>)</div><div class="line"></div><div class="line">    tkinter.mainloop()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h4 id="例子2：使用多进程对复杂任务进行“分而治之”。"><a href="#例子2：使用多进程对复杂任务进行“分而治之”。" class="headerlink" title="例子2：使用多进程对复杂任务进行“分而治之”。"></a>例子2：使用多进程对复杂任务进行“分而治之”。</h4><p>我们来完成1~100000000求和的计算密集型任务，这个问题本身非常简单，有点循环的知识就能解决，代码如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    total = <span class="number">0</span></div><div class="line">    number_list = [x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">100000001</span>)]</div><div class="line">    start = time()</div><div class="line">    <span class="keyword">for</span> number <span class="keyword">in</span> number_list:</div><div class="line">        total += number</div><div class="line">    print(total)</div><div class="line">    end = time()</div><div class="line">    print(<span class="string">'Execution time: %.3fs'</span> % (end - start))</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>在上面的代码中，我故意先去创建了一个列表容器然后填入了100000000个数，这一步其实是比较耗时间的，所以为了公平起见，当我们将这个任务分解到8个进程中去执行的时候，我们暂时也不考虑列表切片操作花费的时间，只是把做运算和合并运算结果的时间统计出来，代码如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Process, Queue</div><div class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</div><div class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">task_handler</span><span class="params">(curr_list, result_queue)</span>:</span></div><div class="line">    total = <span class="number">0</span></div><div class="line">    <span class="keyword">for</span> number <span class="keyword">in</span> curr_list:</div><div class="line">        total += number</div><div class="line">    result_queue.put(total)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    processes = []</div><div class="line">    number_list = [x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">100000001</span>)]</div><div class="line">    result_queue = Queue()</div><div class="line">    index = <span class="number">0</span></div><div class="line">    <span class="comment"># 启动8个进程将数据切片后进行运算</span></div><div class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">8</span>):</div><div class="line">        p = Process(target=task_handler,</div><div class="line">                    args=(number_list[index:index + <span class="number">12500000</span>], result_queue))</div><div class="line">        index += <span class="number">12500000</span></div><div class="line">        processes.append(p)</div><div class="line">        p.start()</div><div class="line">    <span class="comment"># 开始记录所有进程执行完成花费的时间</span></div><div class="line">    start = time()</div><div class="line">    <span class="keyword">for</span> p <span class="keyword">in</span> processes:</div><div class="line">        p.join()</div><div class="line">    <span class="comment"># 合并执行结果</span></div><div class="line">    total = <span class="number">0</span></div><div class="line">    <span class="keyword">while</span> <span class="keyword">not</span> result_queue.empty():</div><div class="line">        total += result_queue.get()</div><div class="line">    print(total)</div><div class="line">    end = time()</div><div class="line">    print(<span class="string">'Execution time: '</span>, (end - start), <span class="string">'s'</span>, sep=<span class="string">''</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>比较两段代码的执行结果（在我目前使用的MacBook上，上面的代码需要大概6秒左右的时间，而下面的代码只需要不到1秒的时间，再强调一次我们只是比较了运算的时间，不考虑列表创建及切片操作花费的时间），使用多进程后由于获得了更多的CPU执行时间以及更好的利用了CPU的多核特性，明显的减少了程序的执行时间，而且计算量越大效果越明显。当然，如果愿意还可以将多个进程部署在不同的计算机上，做成分布式进程，具体的做法就是通过multiprocessing.managers模块中提供的管理器将<code>Queue</code>对象通过网络共享出来（注册到网络上让其他计算机可以访问），这部分内容也留到爬虫的专题再进行讲解。  </p>
<h2 id="网络编程入门"><a href="#网络编程入门" class="headerlink" title="网络编程入门"></a>网络编程入门</h2><h3 id="计算机网络基础"><a href="#计算机网络基础" class="headerlink" title="计算机网络基础"></a>计算机网络基础</h3><p>计算机网络是独立自主的计算机互联而成的系统的总称，组建计算机网络最主要的目的是实现多台计算机之间的通信和资源共享。今天计算机网络中的设备和计算机网络的用户已经多得不可计数，而计算机网络也可以称得上是一个“复杂巨系统”，对于这样的系统，我们不可能用一两篇文章把它讲清楚，有兴趣的读者可以自行阅读Andrew S.Tanenbaum老师的经典之作《计算机网络》或Kurose和Ross老师合著的《计算机网络:自顶向下方法》来了解计算机网络的相关知识。</p>
<h4 id="计算机网络发展史"><a href="#计算机网络发展史" class="headerlink" title="计算机网络发展史"></a>计算机网络发展史</h4><ol>
<li>1960s - 美国国防部ARPANET项目问世，奠定了分组交换网络的基础。</li>
</ol>
<ol>
<li>1980s - 国际标准化组织（ISO）发布OSI/RM，奠定了网络技术标准化的基础。</li>
</ol>
<ol>
<li>1990s - 英国人<a href="https://zh.wikipedia.org/wiki/%E6%8F%90%E5%A7%86%C2%B7%E6%9F%8F%E5%85%A7%E8%8C%B2-%E6%9D%8E" target="_blank" rel="external">蒂姆·伯纳斯-李</a>发明了图形化的浏览器，浏览器的简单易用性使得计算机网络迅速被普及。</li>
</ol>
<h4 id="TCP-IP模型"><a href="#TCP-IP模型" class="headerlink" title="TCP/IP模型"></a>TCP/IP模型</h4><p>实现网络通信的基础是网络通信协议，这些协议通常是由<a href="https://zh.wikipedia.org/wiki/%E4%BA%92%E8%81%94%E7%BD%91%E5%B7%A5%E7%A8%8B%E4%BB%BB%E5%8A%A1%E7%BB%84" target="_blank" rel="external">互联网工程任务组</a> （IETF）制定的。所谓“协议”就是通信计算机双方必须共同遵从的一组约定，例如怎样建立连接、怎样互相识别等，网络协议的三要素是：语法、语义和时序。构成我们今天使用的Internet的基础的是TCP/IP协议族，所谓协议族就是一系列的协议及其构成的通信模型，我们通常也把这套东西称为TCP/IP模型。与国际标准化组织发布的OSI/RM这个七层模型不同，TCP/IP是一个四层模型，也就是说，该模型将我们使用的网络从逻辑上分解为四个层次，自底向上依次是：网络接口层、网络层、传输层和应用层.</p>
<p>IP通常被翻译为网际协议，它服务于网络层，主要实现了寻址和路由的功能。接入网络的每一台主机都需要有自己的IP地址，IP地址就是主机在计算机网络上的身份标识。当然由于IPv4地址的匮乏，我们平常在家里、办公室以及其他可以接入网络的公共区域上网时获得的IP地址并不是全球唯一的IP地址，而是一个<a href="https://zh.wikipedia.org/zh-hans/%E5%B1%80%E5%9F%9F%E7%BD%91" target="_blank" rel="external">局域网（LAN）</a>中的内部IP地址，通过<a href="https://zh.wikipedia.org/wiki/%E7%BD%91%E7%BB%9C%E5%9C%B0%E5%9D%80%E8%BD%AC%E6%8D%A2" target="_blank" rel="external">网络地址转换（NAT）服务</a>我们也可以实现对网络的访问。计算机网络上有大量的被我们称为“<a href="https://zh.wikipedia.org/wiki/%E8%B7%AF%E7%94%B1%E5%99%A8" target="_blank" rel="external">路由器</a>”的网络中继设备，它们会存储转发我们发送到网络上的数据分组，让从源头发出的数据最终能够找到传送到目的地通路，这项功能就是所谓的路由。</p>
<p>TCP全称传输控制协议，它是基于IP提供的寻址和路由服务而建立起来的负责实现端到端可靠传输的协议，之所以将TCP称为可靠的传输协议是因为TCP向调用者承诺了三件事情：</p>
<ol>
<li>数据不传丢不传错（利用握手、校验和重传机制可以实现）。</li>
<li>流量控制（通过滑动窗口匹配数据发送者和接收者之间的传输速度）。</li>
<li>拥塞控制（通过RTT时间以及对滑动窗口的控制缓解网络拥堵）。</li>
</ol>
<h4 id="网络应用模式"><a href="#网络应用模式" class="headerlink" title="网络应用模式"></a>网络应用模式</h4><ol>
<li>C/S模式和B/S模式。这里的C指的是Client（客户端），通常是一个需要安装到某个宿主操作系统上的应用程序；而B指的是Browser（浏览器），它几乎是所有图形化操作系统都默认安装了的一个应用软件；通过C或B都可以实现对S（服务器）的访问。关于二者的比较和讨论在网络上有一大堆的文章，在此我们就不再浪费笔墨了。</li>
<li>去中心化的网络应用模式。不管是B/S还是C/S都需要服务器的存在，服务器就是整个应用模式的中心，而去中心化的网络应用通常没有固定的服务器或者固定的客户端，所有应用的使用者既可以作为资源的提供者也可以作为资源的访问者。</li>
</ol>
<h3 id="基于HTTP协议的网络资源访问"><a href="#基于HTTP协议的网络资源访问" class="headerlink" title="基于HTTP协议的网络资源访问"></a>基于HTTP协议的网络资源访问</h3><h4 id="HTTP（超文本传输协议）"><a href="#HTTP（超文本传输协议）" class="headerlink" title="HTTP（超文本传输协议）"></a>HTTP（超文本传输协议）</h4><p>HTTP是超文本传输协议（Hyper-Text Transfer Proctol）的简称，维基百科上对HTTP的解释是：超文本传输协议是一种用于分布式、协作式和超媒体信息系统的应用层协议，它是<a href="https://zh.wikipedia.org/wiki/%E5%85%A8%E7%90%83%E8%B3%87%E8%A8%8A%E7%B6%B2" target="_blank" rel="external">万维网</a>数据通信的基础，设计HTTP最初的目的是为了提供一种发布和接收<a href="https://zh.wikipedia.org/wiki/HTML" target="_blank" rel="external">HTML</a>页面的方法，通过HTTP或者<a href="https://zh.wikipedia.org/wiki/%E8%B6%85%E6%96%87%E6%9C%AC%E4%BC%A0%E8%BE%93%E5%AE%89%E5%85%A8%E5%8D%8F%E8%AE%AE" target="_blank" rel="external">HTTPS</a>（超文本传输安全协议）请求的资源由URI（<a href="https://zh.wikipedia.org/wiki/%E7%B5%B1%E4%B8%80%E8%B3%87%E6%BA%90%E6%A8%99%E8%AD%98%E7%AC%A6" target="_blank" rel="external">统一资源标识符</a>）来标识。关于HTTP的更多内容，我们推荐阅读阮一峰老师的<a href="http://www.ruanyifeng.com/blog/2016/08/http.html" target="_blank" rel="external">《HTTP 协议入门》</a>，简单的说，通过HTTP我们可以获取网络上的（基于字符的）资源，开发中经常会用到的网络API（有的地方也称之为网络数据接口）就是基于HTTP来实现数据传输的。</p>
<h4 id="JSON格式"><a href="#JSON格式" class="headerlink" title="JSON格式"></a>JSON格式</h4><p><strong>JSON</strong>（<strong>J</strong>ava<strong>S</strong>cript <strong>O</strong>bject <strong>N</strong>otation）是一种轻量级的数据交换语言，该语言以易于让人阅读的文字（纯文本）为基础，用来传输由属性值或者序列性的值组成的数据对象。尽管JSON是最初只是Javascript中一种创建对象的字面量语法，但它在当下更是一种独立于语言的数据格式，很多编程语言都支持JSON格式数据的生成和解析，Python内置的json模块也提供了这方面的功能。由于JSON是纯文本，它和<a href="https://zh.wikipedia.org/wiki/XML" target="_blank" rel="external">XML</a>一样都适用于异构系统之间的数据交换，而相较于XML，JSON显得更加的轻便和优雅。下面是表达同样信息的XML和JSON，而JSON的优势是相当直观的。</p>
<p>XML的例子：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span><span class="meta">?&gt;</span></span></div><div class="line"><span class="tag">&lt;<span class="name">message</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">from</span>&gt;</span>Alice<span class="tag">&lt;/<span class="name">from</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">to</span>&gt;</span>Bob<span class="tag">&lt;/<span class="name">to</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">content</span>&gt;</span>Will you marry me?<span class="tag">&lt;/<span class="name">content</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">message</span>&gt;</span></div></pre></td></tr></table></figure>
<p>JSON的例子：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    'from': 'Alice',</div><div class="line">    'to': 'Bob',</div><div class="line">    'content': 'Will you marry me?'</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="requests库"><a href="#requests库" class="headerlink" title="requests库"></a>requests库</h4><p>requests是一个基于HTTP协议来使用网络的第三库，其<a href="http://cn.python-requests.org/zh_CN/latest/" target="_blank" rel="external">官方网站</a>有这样的一句介绍它的话：“Requests是唯一的一个<strong>非转基因</strong>的Python HTTP库，人类可以安全享用。”简单的说，使用requests库可以非常方便的使用HTTP，避免安全缺陷、冗余代码以及“重复发明轮子”（行业黑话，通常用在软件工程领域表示重新创造一个已有的或是早已被优化過的基本方法）。前面的文章中我们已经使用过这个库，下面我们还是通过requests来实现一个访问网络数据接口并从中获取美女图片下载链接然后下载美女图片到本地的例子程序，程序中使用了<a href="https://www.tianapi.com/" target="_blank" rel="external">天行数据</a>提供的网络API。</p>
<p>我们可以先通过pip安装requests及其依赖库。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install requests</div></pre></td></tr></table></figure>
<p>如果使用PyCharm作为开发工具，可以直接在代码中书写<code>import requests</code>，然后通过代码修复功能来自动下载安装requests。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time</div><div class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</div><div class="line"></div><div class="line"><span class="keyword">import</span> requests</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 继承Thread类创建自定义的线程类</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">DownloadHanlder</span><span class="params">(Thread)</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, url)</span>:</span></div><div class="line">        super().__init__()</div><div class="line">        self.url = url</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></div><div class="line">        filename = self.url[self.url.rfind(<span class="string">'/'</span>) + <span class="number">1</span>:]</div><div class="line">        resp = requests.get(self.url)</div><div class="line">        <span class="keyword">with</span> open(<span class="string">'/Users/Hao/'</span> + filename, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</div><div class="line">            f.write(resp.content)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    <span class="comment"># 通过requests模块的get函数获取网络资源</span></div><div class="line">    <span class="comment"># 下面的代码中使用了天行数据接口提供的网络API</span></div><div class="line">    <span class="comment"># 要使用该数据接口需要在天行数据的网站上注册</span></div><div class="line">    <span class="comment"># 然后用自己的Key替换掉下面代码的中APIKey即可</span></div><div class="line">    resp = requests.get(</div><div class="line">        <span class="string">'http://api.tianapi.com/meinv/?key=APIKey&amp;num=10'</span>)</div><div class="line">    <span class="comment"># 将服务器返回的JSON格式的数据解析为字典</span></div><div class="line">    data_model = resp.json()</div><div class="line">    <span class="keyword">for</span> mm_dict <span class="keyword">in</span> data_model[<span class="string">'newslist'</span>]:</div><div class="line">        url = mm_dict[<span class="string">'picUrl'</span>]</div><div class="line">        <span class="comment"># 通过多线程的方式实现图片下载</span></div><div class="line">        DownloadHanlder(url).start()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h3 id="基于传输层协议的套接字编程"><a href="#基于传输层协议的套接字编程" class="headerlink" title="基于传输层协议的套接字编程"></a>基于传输层协议的套接字编程</h3><p>套接字这个词对很多不了解网络编程的人来说显得非常晦涩和陌生，其实说得通俗点，套接字就是一套用<a href="https://zh.wikipedia.org/wiki/C%E8%AF%AD%E8%A8%80" target="_blank" rel="external">C语言</a>写成的应用程序开发库，主要用于实现进程间通信和网络编程，在网络应用开发中被广泛使用。在Python中也可以基于套接字来使用传输层提供的传输服务，并基于此开发自己的网络应用。实际开发中使用的套接字可以分为三类：流套接字（TCP套接字）、数据报套接字和原始套接字。</p>
<h4 id="TCP套接字"><a href="#TCP套接字" class="headerlink" title="TCP套接字"></a>TCP套接字</h4><p>所谓TCP套接字就是使用TCP协议提供的传输服务来实现网络通信的编程接口。在Python中可以通过创建socket对象并指定type属性为SOCK_STREAM来使用TCP套接字。由于一台主机可能拥有多个IP地址，而且很有可能会配置多个不同的服务，所以作为服务器端的程序，需要在创建套接字对象后将其绑定到指定的IP地址和端口上。这里的端口并不是物理设备而是对IP地址的扩展，用于区分不同的服务，例如我们通常将HTTP服务跟80端口绑定，而MySQL数据库服务默认绑定在3306端口，这样当服务器收到用户请求时就可以根据端口号来确定到底用户请求的是HTTP服务器还是数据库服务器提供的服务。端口的取值范围是0~65535，而1024以下的端口我们通常称之为“著名端口”（留给像FTP、HTTP、SMTP等“著名服务”使用的端口，有的地方也称之为“周知端口”），自定义的服务通常不使用这些端口，除非自定义的是HTTP或FTP这样的著名服务。</p>
<p>下面的代码实现了一个提供时间日期的服务器。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> socket, SOCK_STREAM, AF_INET</div><div class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    <span class="comment"># 1.创建套接字对象并指定使用哪种传输服务</span></div><div class="line">    <span class="comment"># family=AF_INET - IPv4地址</span></div><div class="line">    <span class="comment"># family=AF_INET6 - IPv6地址</span></div><div class="line">    <span class="comment"># type=SOCK_STREAM - TCP套接字</span></div><div class="line">    <span class="comment"># type=SOCK_DGRAM - UDP套接字</span></div><div class="line">    <span class="comment"># type=SOCK_RAW - 原始套接字</span></div><div class="line">    server = socket(family=AF_INET, type=SOCK_STREAM)</div><div class="line">    <span class="comment"># 2.绑定IP地址和端口(端口用于区分不同的服务)</span></div><div class="line">    <span class="comment"># 同一时间在同一个端口上只能绑定一个服务否则报错</span></div><div class="line">    server.bind((<span class="string">'192.168.1.2'</span>, <span class="number">6789</span>))</div><div class="line">    <span class="comment"># 3.开启监听 - 监听客户端连接到服务器</span></div><div class="line">    <span class="comment"># 参数512可以理解为连接队列的大小</span></div><div class="line">    server.listen(<span class="number">512</span>)</div><div class="line">    print(<span class="string">'服务器启动开始监听...'</span>)</div><div class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">        <span class="comment"># 4.通过循环接收客户端的连接并作出相应的处理(提供服务)</span></div><div class="line">        <span class="comment"># accept方法是一个阻塞方法如果没有客户端连接到服务器代码不会向下执行</span></div><div class="line">        <span class="comment"># accept方法返回一个元组其中的第一个元素是客户端对象</span></div><div class="line">        <span class="comment"># 第二个元素是连接到服务器的客户端的地址(由IP和端口两部分构成)</span></div><div class="line">        client, addr = server.accept()</div><div class="line">        print(str(addr) + <span class="string">'连接到了服务器.'</span>)</div><div class="line">        <span class="comment"># 5.发送数据</span></div><div class="line">        client.send(str(datetime.now()).encode(<span class="string">'utf-8'</span>))</div><div class="line">        <span class="comment"># 6.断开连接</span></div><div class="line">        client.close()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>运行服务器程序后我们可以通过Windows系统的telnet来访问该服务器。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">telnet 192.168.1.2 6789</div></pre></td></tr></table></figure>
<p>当然我们也可以通过Python的程序来实现TCP客户端的功能，相较于实现服务器程序，实现客户端程序就简单多了，代码如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> socket</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    <span class="comment"># 1.创建套接字对象默认使用IPv4和TCP协议</span></div><div class="line">    client = socket()</div><div class="line">    <span class="comment"># 2.连接到服务器(需要指定IP地址和端口)</span></div><div class="line">    client.connect((<span class="string">'192.168.1.2'</span>, <span class="number">6789</span>))</div><div class="line">    <span class="comment"># 3.从服务器接收数据</span></div><div class="line">    print(client.recv(<span class="number">1024</span>).decode(<span class="string">'utf-8'</span>))</div><div class="line">    client.close()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>需要注意的是，上面的服务器并没有使用多线程或者异步I/O的处理方式，这也就意味着当服务器与一个客户端处于通信状态时，其他的客户端只能排队等待。很显然，这样的服务器并不能满足我们的需求，我们需要的服务器是能够同时接纳和处理多个用户请求的。下面我们来设计一个使用多线程技术处理多个用户请求的服务器，该服务器会向连接到服务器的客户端发送一张图片。</p>
<p>服务器端代码：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> socket, SOCK_STREAM, AF_INET</div><div class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64encode</div><div class="line"><span class="keyword">from</span> json <span class="keyword">import</span> dumps</div><div class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    </div><div class="line">    <span class="comment"># 自定义线程类</span></div><div class="line">    <span class="class"><span class="keyword">class</span> <span class="title">FileTransferHandler</span><span class="params">(Thread)</span>:</span></div><div class="line"></div><div class="line">        <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, cclient)</span>:</span></div><div class="line">            super().__init__()</div><div class="line">            self.cclient = cclient</div><div class="line"></div><div class="line">        <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></div><div class="line">            my_dict = &#123;&#125;</div><div class="line">            my_dict[<span class="string">'filename'</span>] = <span class="string">'guido.jpg'</span></div><div class="line">            <span class="comment"># JSON是纯文本不能携带二进制数据</span></div><div class="line">            <span class="comment"># 所以图片的二进制数据要处理成base64编码</span></div><div class="line">            my_dict[<span class="string">'filedata'</span>] = data</div><div class="line">            <span class="comment"># 通过dumps函数将字典处理成JSON字符串</span></div><div class="line">            json_str = dumps(my_dict)</div><div class="line">            <span class="comment"># 发送JSON字符串</span></div><div class="line">            self.cclient.send(json_str.encode(<span class="string">'utf-8'</span>))</div><div class="line">            self.cclient.close()</div><div class="line"></div><div class="line">    <span class="comment"># 1.创建套接字对象并指定使用哪种传输服务</span></div><div class="line">    server = socket()</div><div class="line">    <span class="comment"># 2.绑定IP地址和端口(区分不同的服务)</span></div><div class="line">    server.bind((<span class="string">'192.168.1.2'</span>, <span class="number">5566</span>))</div><div class="line">    <span class="comment"># 3.开启监听 - 监听客户端连接到服务器</span></div><div class="line">    server.listen(<span class="number">512</span>)</div><div class="line">    print(<span class="string">'服务器启动开始监听...'</span>)</div><div class="line">    <span class="keyword">with</span> open(<span class="string">'guido.jpg'</span>, <span class="string">'rb'</span>) <span class="keyword">as</span> f:</div><div class="line">        <span class="comment"># 将二进制数据处理成base64再解码成字符串</span></div><div class="line">        data = b64encode(f.read()).decode(<span class="string">'utf-8'</span>)</div><div class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">        client, addr = server.accept()</div><div class="line">        <span class="comment"># 启动一个线程来处理客户端的请求</span></div><div class="line">        FileTransferHandler(client).start()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>客户端代码：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> socket</div><div class="line"><span class="keyword">from</span> json <span class="keyword">import</span> loads</div><div class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64decode</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    client = socket()</div><div class="line">    client.connect((<span class="string">'192.168.1.2'</span>, <span class="number">5566</span>))</div><div class="line">    <span class="comment"># 定义一个保存二进制数据的对象</span></div><div class="line">    in_data = bytes()</div><div class="line">    <span class="comment"># 由于不知道服务器发送的数据有多大每次接收1024字节</span></div><div class="line">    data = client.recv(<span class="number">1024</span>)</div><div class="line">    <span class="keyword">while</span> data:</div><div class="line">        <span class="comment"># 将收到的数据拼接起来</span></div><div class="line">        in_data += data</div><div class="line">        data = client.recv(<span class="number">1024</span>)</div><div class="line">    <span class="comment"># 将收到的二进制数据解码成JSON字符串并转换成字典</span></div><div class="line">    <span class="comment"># loads函数的作用就是将JSON字符串转成字典对象</span></div><div class="line">    my_dict = loads(in_data.decode(<span class="string">'utf-8'</span>))</div><div class="line">    filename = my_dict[<span class="string">'filename'</span>]</div><div class="line">    filedata = my_dict[<span class="string">'filedata'</span>].encode(<span class="string">'utf-8'</span>)</div><div class="line">    <span class="keyword">with</span> open(<span class="string">'/Users/Hao/'</span> + filename, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</div><div class="line">        <span class="comment"># 将base64格式的数据解码成二进制数据并写入文件</span></div><div class="line">        f.write(b64decode(filedata))</div><div class="line">    print(<span class="string">'图片已保存.'</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>在这个案例中，我们使用了JSON作为数据传输的格式（通过JSON格式对传输的数据进行了序列化和反序列化的操作），但是JSON并不能携带二进制数据，因此对图片的二进制数据进行了Base64编码的处理。Base64是一种用64个字符表示所有二进制数据的编码方式，通过将二进制数据每6位一组的方式重新组织，刚好可以使用0~9的数字、大小写字母以及“+”和“/”总共64个字符表示从<code>000000</code>到<code>111111</code>的64种状态。<a href="https://zh.wikipedia.org/wiki/Base64" target="_blank" rel="external">维基百科</a>上有关于Base64编码的详细讲解，不熟悉Base64的读者可以自行阅读。</p>
<blockquote>
<p><strong>说明</strong>：上面的代码主要为了讲解网络编程的相关内容因此并没有对异常状况进行处理，请读者自行添加异常处理代码来增强程序的健壮性。</p>
</blockquote>
<h4 id="UDP套接字"><a href="#UDP套接字" class="headerlink" title="UDP套接字"></a>UDP套接字</h4><p>传输层除了有可靠的传输协议TCP之外，还有一种非常轻便的传输协议叫做用户数据报协议，简称UDP。TCP和UDP都是提供端到端传输服务的协议，二者的差别就如同打电话和发短信的区别，后者不对传输的可靠性和可达性做出任何承诺从而避免了TCP中握手和重传的开销，所以在强调性能和而不是数据完整性的场景中（例如传输网络音视频数据），UDP可能是更好的选择。可能大家会注意到一个现象，就是在观看网络视频时，有时会出现卡顿，有时会出现花屏，这无非就是部分数据传丢或传错造成的。在Python中也可以使用UDP套接字来创建网络应用，对此我们不进行赘述，有兴趣的读者可以自行研究。</p>
<h2 id="网络应用开发"><a href="#网络应用开发" class="headerlink" title="网络应用开发"></a>网络应用开发</h2><h3 id="发送电子邮件"><a href="#发送电子邮件" class="headerlink" title="发送电子邮件"></a>发送电子邮件</h3><p>在即时通信软件如此发达的今天，电子邮件仍然是互联网上使用最为广泛的应用之一，公司向应聘者发出录用通知、网站向用户发送一个激活账号的链接、银行向客户推广它们的理财产品等几乎都是通过电子邮件来完成的，而这些任务应该都是由程序自动完成的。</p>
<p>就像我们可以用HTTP（超文本传输协议）来访问一个网站一样，发送邮件要使用SMTP（简单邮件传输协议），SMTP也是一个建立在TCP（传输控制协议）提供的可靠数据传输服务的基础上的应用级协议，它规定了邮件的发送者如何跟发送邮件的服务器进行通信的细节，而Python中的smtplib模块将这些操作简化成了几个简单的函数。</p>
<p>下面的代码演示了如何在Python发送邮件。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> smtplib <span class="keyword">import</span> SMTP</div><div class="line"><span class="keyword">from</span> email.header <span class="keyword">import</span> Header</div><div class="line"><span class="keyword">from</span> email.mime.text <span class="keyword">import</span> MIMEText</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    <span class="comment"># 请自行修改下面的邮件发送者和接收者</span></div><div class="line">    sender = <span class="string">'abcdefg@126.com'</span></div><div class="line">    receivers = [<span class="string">'uvwxyz@qq.com'</span>, <span class="string">'uvwxyz@126.com'</span>]</div><div class="line">    message = MIMEText(<span class="string">'用Python发送邮件的示例代码.'</span>, <span class="string">'plain'</span>, <span class="string">'utf-8'</span>)</div><div class="line">    message[<span class="string">'From'</span>] = Header(<span class="string">'王大锤'</span>, <span class="string">'utf-8'</span>)</div><div class="line">    message[<span class="string">'To'</span>] = Header(<span class="string">'骆昊'</span>, <span class="string">'utf-8'</span>)</div><div class="line">    message[<span class="string">'Subject'</span>] = Header(<span class="string">'示例代码实验邮件'</span>, <span class="string">'utf-8'</span>)</div><div class="line">    smtper = SMTP(<span class="string">'smtp.126.com'</span>)</div><div class="line">    <span class="comment"># 请自行修改下面的登录口令</span></div><div class="line">    smtper.login(sender, <span class="string">'secretpass'</span>)</div><div class="line">    smtper.sendmail(sender, receivers, message.as_string())</div><div class="line">    print(<span class="string">'邮件发送完成!'</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>如果要发送带有附件的邮件，那么可以按照下面的方式进行操作。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> smtplib <span class="keyword">import</span> SMTP</div><div class="line"><span class="keyword">from</span> email.header <span class="keyword">import</span> Header</div><div class="line"><span class="keyword">from</span> email.mime.text <span class="keyword">import</span> MIMEText</div><div class="line"><span class="keyword">from</span> email.mime.image <span class="keyword">import</span> MIMEImage</div><div class="line"><span class="keyword">from</span> email.mime.multipart <span class="keyword">import</span> MIMEMultipart</div><div class="line"></div><div class="line"><span class="keyword">import</span> urllib</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    <span class="comment"># 创建一个带附件的邮件消息对象</span></div><div class="line">    message = MIMEMultipart()</div><div class="line">    </div><div class="line">    <span class="comment"># 创建文本内容</span></div><div class="line">    text_content = MIMEText(<span class="string">'附件中有本月数据请查收'</span>, <span class="string">'plain'</span>, <span class="string">'utf-8'</span>)</div><div class="line">    message[<span class="string">'Subject'</span>] = Header(<span class="string">'本月数据'</span>, <span class="string">'utf-8'</span>)</div><div class="line">    <span class="comment"># 将文本内容添加到邮件消息对象中</span></div><div class="line">    message.attach(text_content)</div><div class="line"></div><div class="line">    <span class="comment"># 读取文件并将文件作为附件添加到邮件消息对象中</span></div><div class="line">    <span class="keyword">with</span> open(<span class="string">'/Users/Hao/Desktop/hello.txt'</span>, <span class="string">'rb'</span>) <span class="keyword">as</span> f:</div><div class="line">        txt = MIMEText(f.read(), <span class="string">'base64'</span>, <span class="string">'utf-8'</span>)</div><div class="line">        txt[<span class="string">'Content-Type'</span>] = <span class="string">'text/plain'</span></div><div class="line">        txt[<span class="string">'Content-Disposition'</span>] = <span class="string">'attachment; filename=hello.txt'</span></div><div class="line">        message.attach(txt)</div><div class="line">    <span class="comment"># 读取文件并将文件作为附件添加到邮件消息对象中</span></div><div class="line">    <span class="keyword">with</span> open(<span class="string">'/Users/Hao/Desktop/汇总数据.xlsx'</span>, <span class="string">'rb'</span>) <span class="keyword">as</span> f:</div><div class="line">        xls = MIMEText(f.read(), <span class="string">'base64'</span>, <span class="string">'utf-8'</span>)</div><div class="line">        xls[<span class="string">'Content-Type'</span>] = <span class="string">'application/vnd.ms-excel'</span></div><div class="line">        xls[<span class="string">'Content-Disposition'</span>] = <span class="string">'attachment; filename=month-data.xlsx'</span></div><div class="line">        message.attach(xls)</div><div class="line">    </div><div class="line">    <span class="comment"># 创建SMTP对象</span></div><div class="line">    smtper = SMTP(<span class="string">'smtp.126.com'</span>)</div><div class="line">    <span class="comment"># 开启安全连接</span></div><div class="line">    <span class="comment"># smtper.starttls()</span></div><div class="line">    sender = <span class="string">'abcdefg@126.com'</span></div><div class="line">    receivers = [<span class="string">'uvwxyz@qq.com'</span>]</div><div class="line">    <span class="comment"># 登录到SMTP服务器</span></div><div class="line">    <span class="comment"># 请注意此处不是使用密码而是邮件客户端授权码进行登录</span></div><div class="line">    <span class="comment"># 对此有疑问的读者可以联系自己使用的邮件服务器客服</span></div><div class="line">    smtper.login(sender, <span class="string">'secretpass'</span>)</div><div class="line">    <span class="comment"># 发送邮件</span></div><div class="line">    smtper.sendmail(sender, receivers, message.as_string())</div><div class="line">    <span class="comment"># 与邮件服务器断开连接</span></div><div class="line">    smtper.quit()</div><div class="line">    print(<span class="string">'发送完成!'</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h3 id="发送短信"><a href="#发送短信" class="headerlink" title="发送短信"></a>发送短信</h3><p>发送短信也是项目中常见的功能，网站的注册码、验证码、营销信息基本上都是通过短信来发送给用户的。在下面的代码中我们使用了<a href="http://www.ihuyi.com/" target="_blank" rel="external">互亿无线</a>短信平台（该平台为注册用户提供了50条免费短信以及常用开发语言发送短信的demo，可以登录该网站并在用户自服务页面中对短信进行配置）提供的API接口实现了发送短信的服务，当然国内的短信平台很多，读者可以根据自己的需要进行选择（通常会考虑费用预算、短信达到率、使用的难易程度等指标），如果需要在商业项目中使用短信服务建议购买短信平台提供的套餐服务。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> urllib.parse</div><div class="line"><span class="keyword">import</span> http.client</div><div class="line"><span class="keyword">import</span> json</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    host  = <span class="string">"106.ihuyi.com"</span></div><div class="line">    sms_send_uri = <span class="string">"/webservice/sms.php?method=Submit"</span></div><div class="line">    <span class="comment"># 下面的参数需要填入自己注册的账号和对应的密码</span></div><div class="line">    params = urllib.parse.urlencode(&#123;<span class="string">'account'</span>: <span class="string">'你自己的账号'</span>, <span class="string">'password'</span> : <span class="string">'你自己的密码'</span>, <span class="string">'content'</span>: <span class="string">'您的验证码是：147258。请不要把验证码泄露给其他人。'</span>, <span class="string">'mobile'</span>: <span class="string">'接收者的手机号'</span>, <span class="string">'format'</span>:<span class="string">'json'</span> &#125;)</div><div class="line">    print(params)</div><div class="line">    headers = &#123;<span class="string">'Content-type'</span>: <span class="string">'application/x-www-form-urlencoded'</span>, <span class="string">'Accept'</span>: <span class="string">'text/plain'</span>&#125;</div><div class="line">    conn = http.client.HTTPConnection(host, port=<span class="number">80</span>, timeout=<span class="number">30</span>)</div><div class="line">    conn.request(<span class="string">'POST'</span>, sms_send_uri, params, headers)</div><div class="line">    response = conn.getresponse()</div><div class="line">    response_str = response.read()</div><div class="line">    jsonstr = response_str.decode(<span class="string">'utf-8'</span>)</div><div class="line">    print(json.loads(jsonstr))</div><div class="line">    conn.close()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h2 id="Web前端概述"><a href="#Web前端概述" class="headerlink" title="Web前端概述"></a>Web前端概述</h2><h3 id="HTML简史"><a href="#HTML简史" class="headerlink" title="HTML简史"></a>HTML简史</h3><ol>
<li>1991年10月：一个非正式CERN（<a href="https://zh.wikipedia.org/wiki/%E6%AD%90%E6%B4%B2%E6%A0%B8%E5%AD%90%E7%A0%94%E7%A9%B6%E7%B5%84%E7%B9%94" target="_blank" rel="external">欧洲核子研究中心</a>）文件首次公开18个HTML标签，这个文件的作者是物理学家<a href="https://zh.wikipedia.org/wiki/%E8%92%82%E5%A7%86%C2%B7%E4%BC%AF%E7%BA%B3%E6%96%AF-%E6%9D%8E" target="_blank" rel="external">蒂姆·伯纳斯-李</a>，因此他是<a href="https://zh.wikipedia.org/wiki/%E4%B8%87%E7%BB%B4%E7%BD%91" target="_blank" rel="external">万维网</a>的发明者，也是<a href="https://zh.wikipedia.org/wiki/%E4%B8%87%E7%BB%B4%E7%BD%91%E8%81%94%E7%9B%9F" target="_blank" rel="external">万维网联盟</a>的主席。</li>
<li>1995年11月：HTML 2.0标准发布（RFC 1866）。</li>
<li>1997年1月：HTML 3.2作为<a href="https://zh.wikipedia.org/wiki/W3C" target="_blank" rel="external">W3C</a>推荐标准发布。</li>
<li>1997年12月：HTML 4.0作为W3C推荐标准发布。</li>
<li>1999年12月：HTML4.01作为W3C推荐标准发布。</li>
<li>2008年1月：HTML5由W3C作为工作草案发布。</li>
<li>2011年5月：W3C将HTML5推进至“最终征求”（Last Call）阶段。</li>
<li>2012年12月：W3C指定HTML5作为“候选推荐”阶段。</li>
<li>2014年10月：HTML5作为稳定W3C推荐标准发布，这意味着HTML5的标准化已经完成。</li>
</ol>
<h4 id="HTML5新特性"><a href="#HTML5新特性" class="headerlink" title="HTML5新特性"></a>HTML5新特性</h4><ol>
<li>引入原生多媒体支持（audio和video标签）</li>
<li>引入可编程内容（canvas标签）</li>
<li>引入语义Web（article、aside、details、figure、footer、header、nav、section、summary等标签）</li>
<li>引入新的表单控件（日历、邮箱、搜索等）</li>
<li>引入对离线存储更好的支持</li>
<li>引入对定位、拖放、WebSocket、后台任务等的支持</li>
</ol>
<h3 id="使用标签承载内容"><a href="#使用标签承载内容" class="headerlink" title="使用标签承载内容"></a>使用标签承载内容</h3><h4 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h4><ul>
<li>head<ul>
<li>title</li>
<li>meta</li>
</ul>
</li>
<li>body</li>
</ul>
<h4 id="文本"><a href="#文本" class="headerlink" title="文本"></a>文本</h4><ul>
<li>标题和段落</li>
<li>粗体和斜体</li>
<li>上标和下标</li>
<li>空白（白色空间折叠）</li>
<li>折行和水平标尺</li>
<li>语义化标记<ul>
<li>加粗和强调</li>
<li>引用</li>
<li>缩写词和首字母缩写词</li>
<li>引文</li>
<li>所有者联系信息</li>
<li>内容的修改</li>
</ul>
</li>
</ul>
<h4 id="列表（list）"><a href="#列表（list）" class="headerlink" title="列表（list）"></a>列表（list）</h4><ul>
<li>有序列表（ordered list）</li>
<li>无序列表（unordered list）</li>
<li>定义列表（definition list）</li>
</ul>
<h4 id="链接（anchor）"><a href="#链接（anchor）" class="headerlink" title="链接（anchor）"></a>链接（anchor）</h4><ul>
<li>页面链接</li>
<li>锚链接</li>
<li>功能链接</li>
</ul>
<h4 id="图像（image）"><a href="#图像（image）" class="headerlink" title="图像（image）"></a>图像（image）</h4><ul>
<li>图像存储位置</li>
<li>图像及其宽高</li>
<li>选择正确的图像格式<ul>
<li>JPEG</li>
<li>GIF</li>
<li>PNG</li>
</ul>
</li>
<li>矢量图</li>
<li>figure标签</li>
</ul>
<h4 id="表格（table）"><a href="#表格（table）" class="headerlink" title="表格（table）"></a>表格（table）</h4><ul>
<li>基本的表格结构</li>
<li>表格的标题</li>
<li>跨行和跨列</li>
<li>长表格</li>
</ul>
<h4 id="表单（form）"><a href="#表单（form）" class="headerlink" title="表单（form）"></a>表单（form）</h4><ul>
<li>如何收集信息</li>
<li>表单控件（input）<ul>
<li>文本框 / 密码框 / 文本域</li>
<li>单选按钮 / 复选按钮 / 下拉列表</li>
<li>提交按钮 / 图像按钮 / 文件上传</li>
</ul>
</li>
<li>组合表单元素<ul>
<li>fieldset / legend</li>
</ul>
</li>
<li>HTML5的表单控件<ul>
<li>日期</li>
<li>电子邮件 / URL</li>
<li>搜索</li>
</ul>
</li>
</ul>
<h4 id="音视频（audio-video）"><a href="#音视频（audio-video）" class="headerlink" title="音视频（audio / video）"></a>音视频（audio / video）</h4><ul>
<li>视频格式和播放器</li>
<li>视频托管服务</li>
<li>添加视频的准备工作</li>
<li>video标签和属性</li>
<li>audio标签和属性</li>
</ul>
<h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><ul>
<li>文档类型</li>
<li>注释</li>
<li>属性<ul>
<li>id</li>
<li>class</li>
</ul>
</li>
<li>块级元素 / 行级元素</li>
<li>内联框架（internal frame）</li>
<li>页面信息（meta）</li>
<li>转义字符（实体替换符）</li>
</ul>
<h3 id="使用CSS渲染页面"><a href="#使用CSS渲染页面" class="headerlink" title="使用CSS渲染页面"></a>使用CSS渲染页面</h3><h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><ul>
<li>CSS的作用</li>
<li>CSS的工作原理</li>
<li>规则、属性和值</li>
</ul>
<h4 id="颜色（color）"><a href="#颜色（color）" class="headerlink" title="颜色（color）"></a>颜色（color）</h4><ul>
<li>如何指定颜色</li>
<li>颜色术语和颜色对比</li>
<li>背景色</li>
</ul>
<h4 id="文本（text-font）"><a href="#文本（text-font）" class="headerlink" title="文本（text / font）"></a>文本（text / font）</h4><ul>
<li>文本的大小和字型(font-size / font-family)</li>
<li>斜体、粗体、大写和下划线(font-weight / font-style / text-decoration)</li>
<li>行间距(line-height)、字母间距(letter-spacing)和单词间距(word-spacing)</li>
<li>对齐(text-align)方式和缩进(text-ident)</li>
<li>链接样式（:link / :visited / :active / :hover）</li>
<li>CSS3新属性<ul>
<li>投影</li>
<li>首字母和首行文本(p:first-letter / p:first-line)</li>
<li>响应用户</li>
</ul>
</li>
</ul>
<h4 id="盒子（box-model）"><a href="#盒子（box-model）" class="headerlink" title="盒子（box model）"></a>盒子（box model）</h4><ul>
<li>盒子大小的控制（width / height）</li>
<li>盒子的边框、外边距和内边距（border /  margin / padding）</li>
<li>盒子的显示和隐藏（display / visibility）</li>
<li>CSS3新属性<ul>
<li>边框图像（border-image）</li>
<li>投影（border-shadow）</li>
<li>圆角（border-radius）</li>
</ul>
</li>
</ul>
<h4 id="列表、表格和表单"><a href="#列表、表格和表单" class="headerlink" title="列表、表格和表单"></a>列表、表格和表单</h4><ul>
<li>列表的项目符号（list-style）</li>
<li>表格的边框和背景（border-collapse）</li>
<li>表单控件的外观</li>
<li>表单控件的对齐</li>
<li>浏览器的开发者工具</li>
</ul>
<h4 id="图像"><a href="#图像" class="headerlink" title="图像"></a>图像</h4><ul>
<li>控制图像的大小（display: inline-block）</li>
<li>对齐图像</li>
<li>背景图像（background / background-image / background-repeat / background-position）</li>
</ul>
<h4 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h4><ul>
<li>控制元素的位置（position / z-index）<ul>
<li>普通流</li>
<li>相对定位</li>
<li>绝对定位</li>
<li>固定定位</li>
<li>浮动元素（float / clear）</li>
</ul>
</li>
<li>网站布局<ul>
<li>HTML5布局</li>
</ul>
</li>
<li>适配屏幕尺寸<ul>
<li>固定宽度布局</li>
<li>流体布局</li>
<li>布局网格</li>
</ul>
</li>
</ul>
<h3 id="使用JavaScript控制行为"><a href="#使用JavaScript控制行为" class="headerlink" title="使用JavaScript控制行为"></a>使用JavaScript控制行为</h3><h4 id="JavaScript基本语法"><a href="#JavaScript基本语法" class="headerlink" title="JavaScript基本语法"></a>JavaScript基本语法</h4><ul>
<li>语句和注释</li>
<li>变量和数据类型<ul>
<li>声明和赋值</li>
<li>简单数据类型和复杂数据类型</li>
<li>变量的命名规则</li>
</ul>
</li>
<li>表达式和运算符<ul>
<li>赋值运算符</li>
<li>算术运算符</li>
<li>比较运算符</li>
<li>逻辑运算符</li>
</ul>
</li>
<li>分支结构<ul>
<li>if…else…</li>
<li>switch…case…default…</li>
</ul>
</li>
<li>循环结构<ul>
<li>for循环</li>
<li>while循环</li>
<li>do…while循环</li>
</ul>
</li>
<li>数组<ul>
<li>创建数组</li>
<li>操作数组中的元素</li>
</ul>
</li>
<li>函数<ul>
<li>声明函数</li>
<li>调用函数</li>
<li>参数和返回值</li>
<li>匿名函数</li>
<li>立即调用函数</li>
</ul>
</li>
</ul>
<h4 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h4><ul>
<li>对象的概念</li>
<li>创建对象的字面量语法</li>
<li>访问成员运算符</li>
<li>创建对象的构造函数语法<ul>
<li>this关键字</li>
</ul>
</li>
<li>添加和删除属性<ul>
<li>delete关键字</li>
</ul>
</li>
<li>全局对象<ul>
<li>Number / String / Boolean</li>
<li>Date / Math / RegEx / Array</li>
</ul>
</li>
</ul>
<h4 id="BOM"><a href="#BOM" class="headerlink" title="BOM"></a>BOM</h4><ul>
<li>window对象的属性和方法</li>
<li>history对象<ul>
<li>forward() / back() / go()</li>
</ul>
</li>
<li>location对象</li>
<li>navigator对象</li>
<li>screen对象</li>
</ul>
<h4 id="DOM"><a href="#DOM" class="headerlink" title="DOM"></a>DOM</h4><ul>
<li>DOM树</li>
<li>访问元素<ul>
<li>getElementById() / querySelector()</li>
<li>getElementsByClassName() / getElementsByTagName() / querySelectorAll()</li>
<li>parentNode / previousSibling / nextSibling / firstChild / lastChild<ul>
<li>操作元素</li>
<li>nodeValue</li>
<li>innerHTML / textContent / createElement() / createTextNode() / appendChild() / removeChild()</li>
<li>className / id / hasAttribute() / getAttribute() / setAttribute() / removeAttribute()</li>
<li>事件处理</li>
<li>事件类型</li>
</ul>
</li>
<li>UI事件：load / unload / error / resize / scroll</li>
<li>键盘事件：keydown / keyup / keypress</li>
<li>鼠标事件：click / dbclick / mousedown / mouseup / mousemove / mouseover / mouseout</li>
<li>焦点事件：focus / blur</li>
<li>表单事件：input / change / submit / reset / cut / copy / paste / select<ul>
<li>事件绑定</li>
</ul>
</li>
<li>HTML事件处理程序（不推荐使用，因为要做到标签与代码分离）</li>
<li>传统的DOM事件处理程序（只能附加一个回调函数）</li>
<li>事件监听器（旧的浏览器中不被支持）<ul>
<li>事件流：事件捕获 / 事件冒泡</li>
<li>事件对象（低版本IE中的window.event）</li>
</ul>
</li>
<li>target（低版本IE中的srcElement）</li>
<li>type</li>
<li>cancelable</li>
<li>preventDefault()</li>
<li>stopPropagation()（低版本IE中的cancelBubble）<ul>
<li>鼠标事件 - 事件发生的位置</li>
</ul>
</li>
<li>屏幕位置：screenX和screenY</li>
<li>页面位置：pageX和pageY</li>
<li>客户端位置：clientX和clientY<ul>
<li>键盘事件 - 哪个键被按下了</li>
</ul>
</li>
<li>keyCode属性</li>
<li>String.fromCharCode(event.keyCode)<ul>
<li>HTML5事件</li>
</ul>
</li>
<li>DOMContentLoaded</li>
<li>hashchange</li>
<li>beforeunload</li>
</ul>
</li>
</ul>
<h4 id="JavaScript-API"><a href="#JavaScript-API" class="headerlink" title="JavaScript API"></a>JavaScript API</h4><ul>
<li>HTML5中的API：geolocation / localStorage / sessionStorage / history</li>
</ul>
<h3 id="使用jQuery"><a href="#使用jQuery" class="headerlink" title="使用jQuery"></a>使用jQuery</h3><h4 id="jQuery概述"><a href="#jQuery概述" class="headerlink" title="jQuery概述"></a>jQuery概述</h4><ol>
<li>Write Less Do More（用更少的代码来完成更多的工作）</li>
<li>使用CSS选择器来查找元素（更简单更方便）</li>
<li>使用jQuery方法来操作元素（解决浏览器兼容性问题、应用于所有元素并施加多个方法）</li>
</ol>
<h4 id="引入jQuery"><a href="#引入jQuery" class="headerlink" title="引入jQuery"></a>引入jQuery</h4><ul>
<li>下载jQuery的开发版和压缩版</li>
<li>从CDN加载jQuery</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/jquery/3.3.1/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript">    <span class="built_in">window</span>.jQuery || </span></div><div class="line"><span class="handlebars"><span class="xml">        document.write('<span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/jquery-3.3.1.min.js"</span>&gt;</span><span class="undefined"></span></span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>')</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="查找元素"><a href="#查找元素" class="headerlink" title="查找元素"></a>查找元素</h4><ul>
<li>选择器<ul>
<li>* / element / #id / .class / selector1, selector2</li>
<li>ancestor descendant / parent&gt;child / previous+next / previous~siblings </li>
</ul>
</li>
<li>筛选器<ul>
<li>基本筛选器：:not(selector) / :first / :last / :even / :odd / :eq(index) / :gt(index) / :lt(index) / :animated / :focus</li>
<li>内容筛选器：:contains(‘…’) / :empty / :parent / :has(selector)</li>
<li>可见性筛选器：:hidden / :visible</li>
<li>子节点筛选器：:nth-child(expr) / :first-child / :last-child / :only-child</li>
<li>属性筛选器：[attribute] / [attribute=’value’] / [attribute!=’value’] / [attribute^=’value’] / [attribute$=’value’] / [attribute|=’value’] / [attribute~=’value’]</li>
</ul>
</li>
<li>表单：:input / :text / :password / :radio / :checkbox / :submit / :image / :reset / :button / :file / :selected / :enabled / :disabled / :checked</li>
</ul>
<h4 id="执行操作"><a href="#执行操作" class="headerlink" title="执行操作"></a>执行操作</h4><ul>
<li>内容操作<ul>
<li>获取/修改内容：html() / text() / replaceWith() / remove()</li>
<li>获取/设置元素：before() / after() / prepend() / append() / remove() / clone() / unwrap() / detach() / empty() / add()</li>
<li>获取/修改属性：attr() / removeAttr() / addClass() / removeClass() / css()</li>
<li>获取/设置表单值：val()</li>
</ul>
</li>
<li>查找操作<ul>
<li>查找方法：find() /  parent() / children() / siblings() / next() / nextAll() / prev() / prevAll()</li>
<li>筛选器：filter() / not() / has() / is() / contains()</li>
<li>索引编号：eq()</li>
</ul>
</li>
<li>尺寸和位置<ul>
<li>尺寸相关：height() / width() / innerHeight() / innerWidth() / outerWidth() / outerHeight()</li>
<li>位置相关：offset() / position() / scrollLeft() / scrollTop()</li>
</ul>
</li>
<li>特效和动画<ul>
<li>基本动画：show() / hide() / toggle()</li>
<li>消失出现：fadeIn() / fadeOut() / fadeTo() / fadeToggle()</li>
<li>滑动效果：slideDown() / slideUp() / slideToggle()</li>
<li>自定义：delay() / stop() / animate()</li>
</ul>
</li>
<li>事件<ul>
<li>文档加载：ready() / load()</li>
<li>用户交互：on() / off()</li>
</ul>
</li>
</ul>
<h4 id="链式操作"><a href="#链式操作" class="headerlink" title="链式操作"></a>链式操作</h4><h4 id="检测页面是否可用"><a href="#检测页面是否可用" class="headerlink" title="检测页面是否可用"></a>检测页面是否可用</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript">    $(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></div><div class="line"><span class="undefined">        </span></div><div class="line"><span class="undefined">    &#125;);</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript">    $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></div><div class="line"><span class="undefined">        </span></div><div class="line"><span class="undefined">    &#125;);</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="jQuery插件"><a href="#jQuery插件" class="headerlink" title="jQuery插件"></a>jQuery插件</h4><ul>
<li>jQuery Validation</li>
<li>jQuery Treeview</li>
<li>jQuery Autocomplete</li>
<li>jQuery UI</li>
</ul>
<h4 id="避免和其他库的冲突"><a href="#避免和其他库的冲突" class="headerlink" title="避免和其他库的冲突"></a>避免和其他库的冲突</h4><p>先引入其他库再引入jQuery的情况。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"other.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"jquery.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">    jQuery.noConflict();</span></div><div class="line"><span class="actionscript">    jQuery(<span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></div><div class="line"><span class="actionscript">        jQuery(<span class="string">'div'</span>).hide();</span></div><div class="line"><span class="undefined">    &#125;);</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<p>先引入jQuery再引入其他库的情况。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"jquery.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"other.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="actionscript">    jQuery(<span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></div><div class="line"><span class="actionscript">        jQuery(<span class="string">'div'</span>).hide();</span></div><div class="line"><span class="undefined">    &#125;);</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="使用Ajax"><a href="#使用Ajax" class="headerlink" title="使用Ajax"></a>使用Ajax</h4><ul>
<li>原生的Ajax</li>
<li>基于jQuery的Ajax<ul>
<li>加载内容</li>
<li>提交表单</li>
</ul>
</li>
</ul>
<h3 id="使用Bootstrap"><a href="#使用Bootstrap" class="headerlink" title="使用Bootstrap"></a>使用Bootstrap</h3><h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><ol>
<li>支持主流的浏览器和移动设备</li>
<li>容易上手</li>
<li>响应式设计</li>
</ol>
<h4 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h4><ol>
<li>网格系统</li>
<li>封装的CSS</li>
<li>现成的组件</li>
<li>JavaScript插件</li>
</ol>
<h2 id="玩转Linux操作系统"><a href="#玩转Linux操作系统" class="headerlink" title="玩转Linux操作系统"></a>玩转Linux操作系统</h2><h3 id="操作系统发展史"><a href="#操作系统发展史" class="headerlink" title="操作系统发展史"></a>操作系统发展史</h3><h3 id="Linux概述"><a href="#Linux概述" class="headerlink" title="Linux概述"></a>Linux概述</h3><p>Linux是一个通用操作系统。一个操作系统要负责任务调度、内存分配、处理外围设备I/O等操作。操作系统通常由内核和系统程序（设备驱动、底层库、shell、服务程序等）两部分组成。</p>
<p>Linux内核是芬兰人Linus Torvalds开发的，于1991年9月发布。而Linux操作系统作为Internet时代的产物，它是由全世界许多开发者共同合作开发的，是一个自由的操作系统（注意是自由不是免费）。</p>
<h3 id="Linux系统优点"><a href="#Linux系统优点" class="headerlink" title="Linux系统优点"></a>Linux系统优点</h3><ol>
<li>通用操作系统，不跟特定的硬件绑定。</li>
<li>用C语言编写，有可移植性，有内核编程接口。</li>
<li>支持多用户和多任务，支持安全的分层文件系统。</li>
<li>大量的实用程序，完善的网络功能以及强大的支持文档。</li>
<li>可靠的安全性和良好的稳定性，对开发者更友好。</li>
</ol>
<h3 id="基础命令"><a href="#基础命令" class="headerlink" title="基础命令"></a>基础命令</h3><p>Linux系统的命令通常都是如下所示的格式：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">命令名称 [命名参数] [命令对象]</div></pre></td></tr></table></figure>
<ol>
<li><p>获取登录信息 - <strong>w</strong> / <strong>who</strong> / <strong>last</strong>。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">[root@izwz97tbgo9lkabnat2lo8z ~]# w</div><div class="line"> 23:31:16 up 12:16,  2 users,  load average: 0.00, 0.01, 0.05</div><div class="line">USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT</div><div class="line">root     pts/0    182.139.66.250   23:03    4.00s  0.02s  0.00s w</div><div class="line">jackfrue pts/1    182.139.66.250   23:26    3:56   0.00s  0.00s -bash</div><div class="line">[root@izwz97tbgo9lkabnat2lo8z ~]# who</div><div class="line">root     pts/0        2018-04-12 23:03 (182.139.66.250)</div><div class="line">jackfrued pts/1        2018-04-12 23:26 (182.139.66.250)</div><div class="line">[root@izwz97tbgo9lkabnat2lo8z ~]# who am i</div><div class="line">root     pts/0        2018-04-12 23:03 (182.139.66.250)</div></pre></td></tr></table></figure>
</li>
<li><p>查看自己使用的Shell - <strong>ps</strong>。</p>
<p>Shell也被称为“壳”，它是用户与内核交流的翻译官，简单的说就是人与计算机交互的接口。目前很多Linux系统默认的Shell都是bash（<u>B</u>ourne <u>A</u>gain <u>SH</u>ell），因为它可以使用Tab键进行命令补全、可以保存历史命令、可以方便的配置环境变量以及执行批处理操作等。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@izwz97tbgo9lkabnat2lo8z ~]# ps</div><div class="line">  PID TTY          TIME CMD</div><div class="line"> 3531 pts/0    00:00:00 bash</div><div class="line"> 3553 pts/0    00:00:00 ps</div></pre></td></tr></table></figure>
</li>
<li><p>查看命令的说明 - <strong>whatis</strong>。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@izwz97tbgo9lkabnat2lo8z ~]# whatis ps</div><div class="line">ps (1)        - report a snapshot of the current processes.</div><div class="line">[root@izwz97tbgo9lkabnat2lo8z ~]# whatis python</div><div class="line">python (1)    - an interpreted, interactive, object-oriented programming language</div></pre></td></tr></table></figure>
</li>
<li><p>查看命令的位置 - <strong>which</strong> / <strong>whereis</strong>。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[root@izwz97tbgo9lkabnat2lo8z ~]# whereis ps</div><div class="line">ps: /usr/bin/ps /usr/share/man/man1/ps.1.gz</div><div class="line">[root@izwz97tbgo9lkabnat2lo8z ~]# whereis python</div><div class="line">python: /usr/bin/python /usr/bin/python2.7 /usr/lib/python2.7 /usr/lib64/python2.7 /etc/python /usr/include/python2.7 /usr/share/man/man1/python.1.gz</div><div class="line">[root@izwz97tbgo9lkabnat2lo8z ~]# which ps</div><div class="line">/usr/bin/ps</div><div class="line">[root@izwz97tbgo9lkabnat2lo8z ~]# which python</div><div class="line">/usr/bin/python</div></pre></td></tr></table></figure>
</li>
<li><p>查看帮助文档 - <strong>man</strong> / <strong>info</strong> / <strong>apropos</strong>。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">[root@izwz97tbgo9lkabnat2lo8z ~]# ps --help</div><div class="line">Usage:</div><div class="line"> ps [options]</div><div class="line"> Try 'ps --help &lt;simple|list|output|threads|misc|all&gt;'</div><div class="line">  or 'ps --help &lt;s|l|o|t|m|a&gt;'</div><div class="line"> for additional help text.</div><div class="line">For more details see ps(1).</div><div class="line">[root@izwz97tbgo9lkabnat2lo8z ~]# man ps</div><div class="line">PS(1)                                User Commands                                PS(1)</div><div class="line">NAME</div><div class="line">       ps - report a snapshot of the current processes.</div><div class="line">SYNOPSIS</div><div class="line">       ps [options]</div><div class="line">DESCRIPTION</div><div class="line">...</div><div class="line">[root@izwz97tbgo9lkabnat2lo8z ~]# info ps</div><div class="line">...</div></pre></td></tr></table></figure>
</li>
<li><p>切换用户 - <strong>su</strong>。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@izwz97tbgo9lkabnat2lo8z ~]# su hellokitty</div><div class="line">[hellokitty@izwz97tbgo9lkabnat2lo8z root]$</div></pre></td></tr></table></figure>
</li>
<li><p>以管理员身份执行命令 - <strong>sudo</strong>。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[jackfrued@izwz97tbgo9lkabnat2lo8z ~]$ ls /root</div><div class="line">ls: cannot open directory /root: Permission denied</div><div class="line">[jackfrued@izwz97tbgo9lkabnat2lo8z ~]$ sudo ls /root</div><div class="line">[sudo] password for jackfrued:</div><div class="line">calendar.py  code  error.txt  hehe  hello.c  index.html  myconf  result.txt</div></pre></td></tr></table></figure>
<blockquote>
<p><strong>说明</strong>：如果希望用户能够以管理员身份执行命令，用户必须在sudoers（/etc/sudoers）名单中。</p>
</blockquote>
</li>
<li><p>登入登出相关 - <strong>logout</strong> / <strong>exit</strong> / <strong>adduser</strong> / <strong>userdel</strong> / <strong>passwd</strong> / <strong>ssh</strong>。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">[root@izwz97tbgo9lkabnat2lo8z ~]# adduser jackfrued</div><div class="line">[root@izwz97tbgo9lkabnat2lo8z ~]# passwd jackfrued</div><div class="line">Changing password for user jackfrued.</div><div class="line">New password:</div><div class="line">Retype new password:</div><div class="line">passwd: all authentication tokens updated successfully.</div><div class="line">[root@izwz97tbgo9lkabnat2lo8z ~]# ssh hellokitty@1.2.3.4</div><div class="line">hellokitty@1.2.3.4's password:</div><div class="line">Last login: Thu Apr 12 23:05:32 2018 from 10.12.14.16</div><div class="line">[hellokitty@izwz97tbgo9lkabnat2lo8z ~]$ logout</div><div class="line">Connection to 1.2.3.4 closed.</div><div class="line">[root@izwz97tbgo9lkabnat2lo8z ~]#</div></pre></td></tr></table></figure>
</li>
<li><p>查看系统和主机名 - <strong>uname</strong> / <strong>hostname</strong>。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[root@izwz97tbgo9lkabnat2lo8z ~]# uname</div><div class="line">Linux</div><div class="line">[root@izwz97tbgo9lkabnat2lo8z ~]# hostname</div><div class="line">izwz97tbgo9lkabnat2lo8z</div><div class="line">[root@iZwz97tbgo9lkabnat2lo8Z ~]# cat /etc/centos-release</div><div class="line">CentOS Linux release 7.4.1708 (Core)</div></pre></td></tr></table></figure>
</li>
<li><p>重启和关机 - <strong>reboot</strong> / <strong>init 6</strong> / <strong>shutdown</strong> / <strong>init 0</strong>。</p>
</li>
<li><p>查看历史命令 - <strong>history</strong>。</p>
</li>
</ol>
<h3 id="实用程序"><a href="#实用程序" class="headerlink" title="实用程序"></a>实用程序</h3><h4 id="文件和文件夹操作"><a href="#文件和文件夹操作" class="headerlink" title="文件和文件夹操作"></a>文件和文件夹操作</h4><ol>
<li><p>创建/删除目录 - <strong>mkdir</strong> / <strong>rmdir</strong>。</p>
</li>
<li><p>创建/删除文件 - <strong>touch</strong> / <strong>rm</strong>。</p>
<ul>
<li>touch命令用于创建空白文件或修改文件时间。在Linux系统中一个文件有三种时间：<ul>
<li>更改内容的时间（mtime）</li>
<li>更改权限的时间（ctime）</li>
<li>最后访问时间（atime）</li>
</ul>
</li>
</ul>
</li>
<li><p>切换和查看当前工作目录 - <strong>cd</strong> / <strong>pwd</strong>。</p>
</li>
<li><p>查看目录内容 - <strong>ls</strong>。</p>
</li>
<li><p>查看文件内容 - <strong>cat</strong> / <strong>head</strong> / <strong>tail</strong> / <strong>more</strong> / <strong>less</strong>。</p>
</li>
<li><p>拷贝/移动文件 - <strong>cp</strong> / <strong>mv</strong>。</p>
</li>
<li><p>查看文件及内容 - <strong>find</strong> / <strong>grep</strong>。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[root@izwz97tbgo9lkabnat2lo8z ~]# find -name *.html</div><div class="line">./index.html</div><div class="line">./code/index.html</div><div class="line">[root@izwz97tbgo9lkabnat2lo8z ~]# grep "&lt;script&gt;" . -R -n</div><div class="line">./index.html:15:                &lt;script&gt;</div><div class="line">./code/index.html:2884: &lt;script&gt;</div><div class="line">./code/foo.html:2:&lt;!--STATUS OK--&gt;&lt;html&gt; &lt;head&gt;&lt;meta ...</div></pre></td></tr></table></figure>
</li>
<li><p>符号链接 - <strong>ln</strong>。</p>
</li>
<li><p>压缩和归档 - <strong>gzip</strong> / <strong>gunzip</strong> / <strong>xz</strong> / <strong>tar</strong>。</p>
</li>
<li><p>其他工具 - <strong>sort</strong> / <strong>uniq</strong> / <strong>diff</strong> / <strong>file</strong> / <strong>wc</strong>。</p>
</li>
</ol>
<h4 id="管道和重定向"><a href="#管道和重定向" class="headerlink" title="管道和重定向"></a>管道和重定向</h4><ol>
<li>管道的使用 - <strong>|</strong>。</li>
<li>输出重定向和错误重定向 - <strong>></strong> / <strong>2></strong>。</li>
<li>输入重定向 - <strong>\&lt;</strong>。</li>
</ol>
<h4 id="别名"><a href="#别名" class="headerlink" title="别名"></a>别名</h4><ol>
<li><strong>alias</strong></li>
<li><strong>unalias</strong></li>
</ol>
<h4 id="其他程序"><a href="#其他程序" class="headerlink" title="其他程序"></a>其他程序</h4><ol>
<li>时间和日期 - <strong>date</strong> / <strong>cal</strong>。</li>
<li>录制操作脚本 - <strong>script</strong>。</li>
<li>给用户发送消息 - <strong>mesg</strong> / <strong>write</strong> / <strong>wall</strong> / <strong>mail</strong>。</li>
</ol>
<h3 id="文件系统"><a href="#文件系统" class="headerlink" title="文件系统"></a>文件系统</h3><h4 id="文件和路径"><a href="#文件和路径" class="headerlink" title="文件和路径"></a>文件和路径</h4><ol>
<li>命名规则</li>
<li>扩展名</li>
<li>隐藏文件</li>
<li>工作目录和主目录</li>
<li>绝对路径和相对路径</li>
</ol>
<h4 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h4><ol>
<li>/bin - 基本命令的二进制文件</li>
<li>/boot - 引导加载程序的静态文件</li>
<li>/dev - 设备文件</li>
<li>/etc - 配置文件</li>
<li>/home - 用户主目录的父目录</li>
<li>/lib - 共享库文件</li>
<li>/lib64 - 共享64位库文件</li>
<li>/lost+found - 存放未链接文件</li>
<li>/media - 自动识别设备的挂载目录</li>
<li>/mnt - 临时挂载文件系统的挂载点</li>
<li>/opt - 可选插件软件包安装位置</li>
<li>/proc -  内核和进程信息</li>
<li>/root - root账户主目录</li>
<li>/run - 存放系统运行时需要的东西</li>
<li>/sbin - 超级用户的二进制文件</li>
<li>/sys - 设备的伪文件系统</li>
<li>/tmp - 临时文件夹</li>
<li>/usr - 用户应用目录</li>
<li>/var - 变量数据目录</li>
</ol>
<h4 id="访问权限"><a href="#访问权限" class="headerlink" title="访问权限"></a>访问权限</h4><ol>
<li><strong>chmod</strong>。</li>
<li><strong>chown</strong>。</li>
</ol>
<h4 id="磁盘管理"><a href="#磁盘管理" class="headerlink" title="磁盘管理"></a>磁盘管理</h4><ol>
<li>列出文件系统的磁盘使用状况 - <strong>df</strong>。</li>
<li>磁盘分区表操作 - <strong>fdisk</strong>。</li>
<li>格式化文件系统 - <strong>mkfs</strong>。</li>
<li>文件系统检查 - <strong>fsck</strong>。</li>
<li>挂载/卸载 - <strong>mount</strong> / <strong>umount</strong>。</li>
</ol>
<h3 id="编辑器vim"><a href="#编辑器vim" class="headerlink" title="编辑器vim"></a>编辑器vim</h3><ol>
<li><p>启动和退出</p>
</li>
<li><p>命令模式和编辑模式</p>
</li>
<li><p>光标操作</p>
</li>
<li><p>文本操作</p>
</li>
<li><p>查找和替换</p>
<p>/正则表达式</p>
<p>:1,$s/正则表达式/替换后的内容/gice</p>
<p>g - global</p>
<p>i - ignore case</p>
<p>c - confirm</p>
<p>e - error</p>
</li>
<li><p>参数设定</p>
<p>.vimrc</p>
<p>set ts=4</p>
<p>set nu</p>
</li>
<li><p>高级技巧</p>
<ul>
<li>映射快捷键<ul>
<li>inoremap key:…</li>
</ul>
</li>
<li>录制宏<ul>
<li>在命令模式下输入qa开始录制宏（qa/qb/qc/qd）</li>
<li>执行你的操作，这些操作都会被录制下来</li>
<li>如果要录制的操作完成了，按q结束录制</li>
<li>@a播放宏（1000@a - 将宏播放1000次）</li>
</ul>
</li>
</ul>
</li>
</ol>
<h3 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h3><ol>
<li>HOME</li>
<li>SHELL</li>
<li>HISTSIZE</li>
<li>RANDOM</li>
<li>PATH</li>
</ol>
<h3 id="软件安装和配置"><a href="#软件安装和配置" class="headerlink" title="软件安装和配置"></a>软件安装和配置</h3><h4 id="yum"><a href="#yum" class="headerlink" title="yum"></a>yum</h4><ul>
<li>yum update</li>
<li>yum install / yum remove</li>
<li>yum list / yum search</li>
<li>yum makecache</li>
</ul>
<h4 id="rpm"><a href="#rpm" class="headerlink" title="rpm"></a>rpm</h4><ul>
<li>rpm -ivh --force --nodeps</li>
<li>rpm -e </li>
<li>rpm -qa | grep</li>
</ul>
<h4 id="源代码构建安装"><a href="#源代码构建安装" class="headerlink" title="源代码构建安装"></a>源代码构建安装</h4><ul>
<li>…</li>
<li>make &amp;&amp; make install</li>
</ul>
<h4 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h4><ol>
<li>安装MySQL。</li>
<li>安装Redis。</li>
<li>安装NginX。</li>
</ol>
<h3 id="配置服务"><a href="#配置服务" class="headerlink" title="配置服务"></a>配置服务</h3><ol>
<li>systemctl start / stop / restart / status</li>
<li>systemctl enable / disable</li>
<li>计划任务 - <strong>crontab</strong>。</li>
<li>开机自启。</li>
</ol>
<h3 id="网络访问和管理"><a href="#网络访问和管理" class="headerlink" title="网络访问和管理"></a>网络访问和管理</h3><ol>
<li>通过网络获取资源 - <strong>wget</strong>。<ul>
<li>-b 后台下载模式</li>
<li>-O 下载到指定的目录</li>
<li>-r 递归下载</li>
</ul>
</li>
<li>显示/操作网络配置（旧） - <strong>ipconfig</strong>。</li>
<li>显示/操作网络配置（新） - <strong>ip</strong>。</li>
<li>网络可达性检查 - <strong>ping</strong>。</li>
<li>查看网络服务和端口 - <strong>netstat</strong>。</li>
<li>安全文件拷贝 - <strong>scp</strong>。</li>
<li>安全文件传输 - <strong>sftp</strong>。</li>
</ol>
<h3 id="Shell和Shell编程"><a href="#Shell和Shell编程" class="headerlink" title="Shell和Shell编程"></a>Shell和Shell编程</h3><ol>
<li>通配符。</li>
<li>后台运行。</li>
</ol>
<h3 id="其他内容"><a href="#其他内容" class="headerlink" title="其他内容"></a>其他内容</h3><ol>
<li>awk</li>
<li>sed</li>
<li>xargs  </li>
</ol>
<h2 id="关系型数据入门"><a href="#关系型数据入门" class="headerlink" title="关系型数据入门"></a>关系型数据入门</h2><h3 id="关系型数据概述"><a href="#关系型数据概述" class="headerlink" title="关系型数据概述"></a>关系型数据概述</h3><ol>
<li>数据持久化。</li>
<li>数据库发展史。</li>
<li>关系型数据库特点。</li>
<li>E-R图。</li>
<li>关系型数据库产品。</li>
</ol>
<h3 id="MySQL简介"><a href="#MySQL简介" class="headerlink" title="MySQL简介"></a>MySQL简介</h3><ol>
<li>安装和配置。</li>
<li>常用命令。</li>
</ol>
<h3 id="SQL详解"><a href="#SQL详解" class="headerlink" title="SQL详解"></a>SQL详解</h3><ol>
<li>DDL</li>
<li>DML</li>
<li>DQL</li>
</ol>
<h3 id="Python数据库编程"><a href="#Python数据库编程" class="headerlink" title="Python数据库编程"></a>Python数据库编程</h3><ol>
<li>MySQLdb</li>
<li>PyMySQL</li>
</ol>
<h3 id="ORM概述"><a href="#ORM概述" class="headerlink" title="ORM概述"></a>ORM概述</h3><h2 id="网络爬虫和相关工具"><a href="#网络爬虫和相关工具" class="headerlink" title="网络爬虫和相关工具"></a>网络爬虫和相关工具</h2><h3 id="网络爬虫"><a href="#网络爬虫" class="headerlink" title="网络爬虫"></a>网络爬虫</h3><p>网络爬虫（web crawler），以前经常称之为网络蜘蛛（spider），是按照一定的规则自动浏览万维网并获取信息的机器人程序（或脚本），曾经被广泛的应用于互联网搜索引擎。使用过互联网和浏览器的人都知道，网页中除了供用户阅读的文字信息之外，还包含一些超链接。网络爬虫系统正是通过网页中的超链接信息不断获得网络上的其它页面。正因如此，网络数据采集的过程就像一个爬虫或者蜘蛛在网络上漫游，所以才被形象的称为网络爬虫或者网络蜘蛛。</p>
<h4 id="爬虫的应用领域"><a href="#爬虫的应用领域" class="headerlink" title="爬虫的应用领域"></a>爬虫的应用领域</h4><p>在理想的状态下，所有ICP（Internet Content Provider）都应该为自己的网站提供API接口来共享它们允许其他程序获取的数据，在这种情况下爬虫就不是必需品，国内比较有名的电商平台（如淘宝、京东等）、社交平台（如腾讯微博等）等网站都提供了自己的Open API，但是这类Open API通常会对可以抓取的数据以及抓取数据的频率进行限制。对于大多数的公司而言，及时的获取行业相关数据是企业生存的重要环节之一，然而大部分企业在行业数据方面的匮乏是其与生俱来的短板，合理的利用爬虫来获取数据并从中提取出有价值的信息是至关重要的。当然爬虫还有很多重要的应用领域，以下列举了其中的一部分：</p>
<ol>
<li>搜索引擎</li>
<li>新闻聚合</li>
<li>社交应用</li>
<li>舆情监控</li>
<li>行业数据</li>
</ol>
<h3 id="合法性和背景调研"><a href="#合法性和背景调研" class="headerlink" title="合法性和背景调研"></a>合法性和背景调研</h3><h4 id="爬虫合法性探讨"><a href="#爬虫合法性探讨" class="headerlink" title="爬虫合法性探讨"></a>爬虫合法性探讨</h4><ol>
<li>网络爬虫领域目前还属于拓荒阶段，虽然互联网世界已经通过自己的游戏规则建立起一定的道德规范(Robots协议，全称是“网络爬虫排除标准”)，但法律部分还在建立和完善中，也就是说，现在这个领域暂时还是灰色地带。</li>
<li>“法不禁止即为许可”，如果爬虫就像浏览器一样获取的是前端显示的数据（网页上的公开信息）而不是网站后台的私密敏感信息，就不太担心法律法规的约束，因为目前大数据产业链的发展速度远远超过了法律的完善程度。</li>
<li>在爬取网站的时候，需要限制自己的爬虫遵守Robots协议，同时控制网络爬虫程序的抓取数据的速度；在使用数据的时候，必须要尊重网站的知识产权（从Web 2.0时代开始，虽然Web上的数据很多都是由用户提供的，但是网站平台是投入了运营成本的，当用户在注册和发布内容时，平台通常就已经获得了对数据的所有权、使用权和分发权）。如果违反了这些规定，在打官司的时候败诉几率相当高。</li>
</ol>
<h4 id="Robots-txt文件"><a href="#Robots-txt文件" class="headerlink" title="Robots.txt文件"></a>Robots.txt文件</h4><p>大多数网站都会定义robots.txt文件，下面以淘宝的<a href="http://www.taobao.com/robots.txt" target="_blank" rel="external">robots.txt</a>文件为例，看看该网站对爬虫有哪些限制。</p>
<figure class="highlight http"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">User-agent</span>:  Baiduspider</div><div class="line"><span class="attribute">Allow</span>:  /article</div><div class="line"><span class="attribute">Allow</span>:  /oshtml</div><div class="line"><span class="attribute">Disallow</span>:  /product/</div><div class="line"><span class="attribute">Disallow</span>:  /</div><div class="line"></div><div class="line"><span class="attribute">User-Agent</span>:  Googlebot</div><div class="line"><span class="attribute">Allow</span>:  /article</div><div class="line"><span class="attribute">Allow</span>:  /oshtml</div><div class="line"><span class="attribute">Allow</span>:  /product</div><div class="line"><span class="attribute">Allow</span>:  /spu</div><div class="line"><span class="attribute">Allow</span>:  /dianpu</div><div class="line"><span class="attribute">Allow</span>:  /oversea</div><div class="line"><span class="attribute">Allow</span>:  /list</div><div class="line"><span class="attribute">Disallow</span>:  /</div><div class="line"></div><div class="line"><span class="attribute">User-agent</span>:  Bingbot</div><div class="line"><span class="attribute">Allow</span>:  /article</div><div class="line"><span class="attribute">Allow</span>:  /oshtml</div><div class="line"><span class="attribute">Allow</span>:  /product</div><div class="line"><span class="attribute">Allow</span>:  /spu</div><div class="line"><span class="attribute">Allow</span>:  /dianpu</div><div class="line"><span class="attribute">Allow</span>:  /oversea</div><div class="line"><span class="attribute">Allow</span>:  /list</div><div class="line"><span class="attribute">Disallow</span>:  /</div><div class="line"></div><div class="line"><span class="attribute">User-Agent</span>:  360Spider</div><div class="line"><span class="attribute">Allow</span>:  /article</div><div class="line"><span class="attribute">Allow</span>:  /oshtml</div><div class="line"><span class="attribute">Disallow</span>:  /</div><div class="line"></div><div class="line"><span class="attribute">User-Agent</span>:  Yisouspider</div><div class="line"><span class="attribute">Allow</span>:  /article</div><div class="line"><span class="attribute">Allow</span>:  /oshtml</div><div class="line"><span class="attribute">Disallow</span>:  /</div><div class="line"></div><div class="line"><span class="attribute">User-Agent</span>:  Sogouspider</div><div class="line"><span class="attribute">Allow</span>:  /article</div><div class="line"><span class="attribute">Allow</span>:  /oshtml</div><div class="line"><span class="attribute">Allow</span>:  /product</div><div class="line"><span class="attribute">Disallow</span>:  /</div><div class="line"></div><div class="line"><span class="attribute">User-Agent</span>:  Yahoo!  Slurp</div><div class="line"><span class="attribute">Allow</span>:  /product</div><div class="line"><span class="attribute">Allow</span>:  /spu</div><div class="line"><span class="attribute">Allow</span>:  /dianpu</div><div class="line"><span class="attribute">Allow</span>:  /oversea</div><div class="line"><span class="attribute">Allow</span>:  /list</div><div class="line"><span class="attribute">Disallow</span>:  /</div><div class="line"></div><div class="line"><span class="attribute">User-Agent</span>:  *</div><div class="line"><span class="attribute">Disallow</span>:  /</div></pre></td></tr></table></figure>
<p>注意上面robots.txt第一段的最后一行，通过设置“Disallow: /”禁止百度爬虫访问除了“Allow”规定页面外的其他所有页面。因此当你在百度搜索“淘宝”的时候，搜索结果下方会出现：“由于该网站的robots.txt文件存在限制指令（限制搜索引擎抓取），系统无法提供该页面的内容描述”。百度作为一个搜索引擎，至少在表面上遵守了淘宝网的robots.txt协议，所以用户不能从百度上搜索到淘宝内部的产品信息。</p>
<h3 id="相关工具介绍"><a href="#相关工具介绍" class="headerlink" title="相关工具介绍"></a>相关工具介绍</h3><h4 id="HTTP协议"><a href="#HTTP协议" class="headerlink" title="HTTP协议"></a>HTTP协议</h4><p>在开始讲解爬虫之前，我们稍微对HTTP（超文本传输协议）做一些回顾，因为我们在网页上看到的内容通常是浏览器执行HTML语言得到的结果，而HTTP就是传输HTML数据的协议。HTTP是构建于TCP（传输控制协议）之上应用级协议，它利用了TCP提供的可靠的传输服务实现了Web应用中的数据交换。按照维基百科上的介绍，设计HTTP最初的目的是为了提供一种发布和接收<a href="https://zh.wikipedia.org/wiki/HTML" target="_blank" rel="external">HTML</a>页面的方法，也就是说这个协议是浏览器和Web服务器之间传输的数据的载体。关于这个协议的详细信息以及目前的发展状况，大家可以阅读阮一峰老师的<a href="http://www.ruanyifeng.com/blog/2016/08/http.html" target="_blank" rel="external">《HTTP 协议入门》</a>、<a href="http://www.ruanyifeng.com/blog/2012/05/internet_protocol_suite_part_i.html" target="_blank" rel="external">《互联网协议入门》</a>系列以及<a href="http://www.ruanyifeng.com/blog/2014/09/illustration-ssl.html" target="_blank" rel="external">《图解HTTPS协议》</a>进行了解，下图是我在2009年9月10日凌晨4点在四川省网络通信技术重点实验室用开源协议分析工具Ethereal（抓包工具WireShark的前身）截取的访问百度首页时的HTTP请求和响应的报文（协议数据），由于Ethereal截取的是经过网络适配器的数据，因此可以清晰的看到从物理链路层到应用层的协议数据。</p>
<p>HTTP请求（请求行+请求头+空行+[消息体]）：</p>
<p>HTTP响应（响应行+响应头+空行+消息体）：</p>
<blockquote>
<p>说明：但愿这两张如同泛黄的照片般的截图帮助你大概的了解到HTTP是一个怎样的协议。 </p>
</blockquote>
<h4 id="相关工具"><a href="#相关工具" class="headerlink" title="相关工具"></a>相关工具</h4><ol>
<li>Chrome Developer Tools</li>
</ol>
<ol>
<li>POSTMAN</li>
</ol>
<ol>
<li><p>HTTPie</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> http --header http://www.scu.edu.cn</span></div><div class="line">HTTP/1.1 200 OK</div><div class="line">Accept-Ranges: bytes</div><div class="line">Cache-Control: private, max-age=600</div><div class="line">Connection: Keep-Alive</div><div class="line">Content-Encoding: gzip</div><div class="line">Content-Language: zh-CN</div><div class="line">Content-Length: 14403</div><div class="line">Content-Type: text/html</div><div class="line">Date: Sun, 27 May 2018 15:38:25 GMT</div><div class="line">ETag: "e6ec-56d3032d70a32-gzip"</div><div class="line">Expires: Sun, 27 May 2018 15:48:25 GMT</div><div class="line">Keep-Alive: timeout=5, max=100</div><div class="line">Last-Modified: Sun, 27 May 2018 13:44:22 GMT</div><div class="line">Server: VWebServer</div><div class="line">Vary: User-Agent,Accept-Encoding</div><div class="line">X-Frame-Options: SAMEORIGIN</div></pre></td></tr></table></figure>
</li>
<li><p>BuiltWith：识别网站使用的技术</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt;</div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> builtwith</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>builtwith.parse(<span class="string">'http://www.bootcss.com/'</span>)</div><div class="line">&#123;<span class="string">'web-servers'</span>: [<span class="string">'Nginx'</span>], <span class="string">'font-scripts'</span>: [<span class="string">'Font Awesome'</span>], <span class="string">'javascript-frameworks'</span>: [<span class="string">'Lo-dash'</span>, <span class="string">'Underscore.js'</span>, <span class="string">'Vue.js'</span>, <span class="string">'Zepto'</span>, <span class="string">'jQuery'</span>], <span class="string">'web-frameworks'</span>: [<span class="string">'Twitter Bootstrap'</span>]&#125;</div><div class="line">&gt;&gt;&gt;</div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> ssl</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>ssl._create_default_https_context = ssl._create_unverified_context</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>builtwith.parse(<span class="string">'https://www.jianshu.com/'</span>)</div><div class="line">&#123;<span class="string">'web-servers'</span>: [<span class="string">'Tengine'</span>], <span class="string">'web-frameworks'</span>: [<span class="string">'Twitter Bootstrap'</span>, <span class="string">'Ruby on Rails'</span>], <span class="string">'programming-languages'</span>: [<span class="string">'Ruby'</span>]&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>python-whois：查询网站的所有者</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt;</div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> whois</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>whois.whois(<span class="string">'baidu.com'</span>)</div><div class="line">&#123;<span class="string">'domain_name'</span>: [<span class="string">'BAIDU.COM'</span>, <span class="string">'baidu.com'</span>], <span class="string">'registrar'</span>: <span class="string">'MarkMonitor, Inc.'</span>, <span class="string">'whois_server'</span>: <span class="string">'whois.markmonitor.com'</span>, <span class="string">'referral_url'</span>: <span class="keyword">None</span>, <span class="string">'updated_date'</span>: [datetime.datetime(<span class="number">2017</span>, <span class="number">7</span>, <span class="number">28</span>, <span class="number">2</span>, <span class="number">36</span>, <span class="number">28</span>), datetime.datetime(<span class="number">2017</span>, <span class="number">7</span>, <span class="number">27</span>, <span class="number">19</span>, <span class="number">36</span>, <span class="number">28</span>)], <span class="string">'creation_date'</span>: [datetime.datetime(<span class="number">1999</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">5</span>, <span class="number">17</span>), datetime.datetime(<span class="number">1999</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">17</span>)], <span class="string">'expiration_date'</span>: [datetime.datetime(<span class="number">2026</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">5</span>, <span class="number">17</span>), datetime.datetime(<span class="number">2026</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">0</span>, <span class="number">0</span>)], <span class="string">'name_servers'</span>: [<span class="string">'DNS.BAIDU.COM'</span>, <span class="string">'NS2.BAIDU.COM'</span>, <span class="string">'NS3.BAIDU.COM'</span>, <span class="string">'NS4.BAIDU.COM'</span>, <span class="string">'NS7.BAIDU.COM'</span>, <span class="string">'dns.baidu.com'</span>, <span class="string">'ns4.baidu.com'</span>, <span class="string">'ns3.baidu.com'</span>, <span class="string">'ns7.baidu.com'</span>, <span class="string">'ns2.baidu.com'</span>], <span class="string">'status'</span>: [<span class="string">'clientDeleteProhibited https://icann.org/epp#clientDeleteProhibited'</span>, <span class="string">'clientTransferProhibited https://icann.org/epp#clientTransferProhibited'</span>, <span class="string">'clientUpdateProhibited https://icann.org/epp#clientUpdateProhibited'</span>, <span class="string">'serverDeleteProhibited https://icann.org/epp#serverDeleteProhibited'</span>, <span class="string">'serverTransferProhibited https://icann.org/epp#serverTransferProhibited'</span>, <span class="string">'serverUpdateProhibited https://icann.org/epp#serverUpdateProhibited'</span>, <span class="string">'clientUpdateProhibited (https://www.icann.org/epp#clientUpdateProhibited)'</span>, <span class="string">'clientTransferProhibited (https://www.icann.org/epp#clientTransferProhibited)'</span>, <span class="string">'clientDeleteProhibited (https://www.icann.org/epp#clientDeleteProhibited)'</span>, <span class="string">'serverUpdateProhibited (https://www.icann.org/epp#serverUpdateProhibited)'</span>, <span class="string">'serverTransferProhibited (https://www.icann.org/epp#serverTransferProhibited)'</span>, <span class="string">'serverDeleteProhibited (https://www.icann.org/epp#serverDeleteProhibited)'</span>], <span class="string">'emails'</span>: [<span class="string">'abusecomplaints@markmonitor.com'</span>, <span class="string">'whoisrelay@markmonitor.com'</span>], <span class="string">'dnssec'</span>: <span class="string">'unsigned'</span>, <span class="string">'name'</span>: <span class="keyword">None</span>, <span class="string">'org'</span>: <span class="string">'Beijing Baidu Netcom Science Technology Co., Ltd.'</span>, <span class="string">'address'</span>: <span class="keyword">None</span>, <span class="string">'city'</span>: <span class="keyword">None</span>, <span class="string">'state'</span>: <span class="string">'Beijing'</span>, <span class="string">'zipcode'</span>: <span class="keyword">None</span>, <span class="string">'country'</span>: <span class="string">'CN'</span>&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>robotparser：解析robots.txt的工具</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> urllib <span class="keyword">import</span> robotparser</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>parser = robotparser.RobotFileParser()</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>parser.set_url(<span class="string">'https://www.taobao.com/robots.txt'</span>)</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>parser.read()</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>parser.can_fetch(<span class="string">'Hellokitty'</span>, <span class="string">'http://www.taobao.com/article'</span>)</div><div class="line"><span class="keyword">False</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>parser.can_fetch(<span class="string">'Baiduspider'</span>, <span class="string">'http://www.taobao.com/article'</span>)</div><div class="line"><span class="keyword">True</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>parser.can_fetch(<span class="string">'Baiduspider'</span>, <span class="string">'http://www.taobao.com/product'</span>)</div><div class="line"><span class="keyword">False</span></div></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="一个简单的爬虫"><a href="#一个简单的爬虫" class="headerlink" title="一个简单的爬虫"></a>一个简单的爬虫</h3><p>一个基本的爬虫通常分为数据采集（网页下载）、数据处理（网页解析）和数据存储（将有用的信息持久化）三个部分的内容，当然更为高级的爬虫在数据采集和处理时会使用并发编程或分布式技术，其中可能还包括调度器和后台管理程序（监控爬虫的工作状态以及检查数据抓取的结果）。</p>
<ol>
<li>设定抓取目标（种子页面）并获取网页。</li>
<li>当服务器无法访问时，设置重试次数。</li>
<li>在需要的时候设置用户代理（否则无法访问页面）。</li>
<li>对获取的页面进行必要的解码操作。</li>
<li>通过正则表达式获取页面中的链接。</li>
<li>对链接进行进一步的处理（获取页面并重复上面的动作）。</li>
<li>将有用的信息进行持久化（以备后续的处理）。</li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> urllib.error <span class="keyword">import</span> URLError</div><div class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlopen</div><div class="line"></div><div class="line"><span class="keyword">import</span> re</div><div class="line"><span class="keyword">import</span> pymysql</div><div class="line"><span class="keyword">import</span> ssl</div><div class="line"></div><div class="line"><span class="keyword">from</span> pymysql <span class="keyword">import</span> Error</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 通过指定的字符集对页面进行解码(不是每个网站都将字符集设置为utf-8)</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">decode_page</span><span class="params">(page_bytes, charsets=<span class="params">(<span class="string">'utf-8'</span>,)</span>)</span>:</span></div><div class="line">    page_html = <span class="keyword">None</span></div><div class="line">    <span class="keyword">for</span> charset <span class="keyword">in</span> charsets:</div><div class="line">        <span class="keyword">try</span>:</div><div class="line">            page_html = page_bytes.decode(charset)</div><div class="line">            <span class="keyword">break</span></div><div class="line">        <span class="keyword">except</span> UnicodeDecodeError:</div><div class="line">            <span class="keyword">pass</span></div><div class="line">            <span class="comment"># logging.error('Decode:', error)</span></div><div class="line">    <span class="keyword">return</span> page_html</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 获取页面的HTML代码(通过递归实现指定次数的重试操作)</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_page_html</span><span class="params">(seed_url, *, retry_times=<span class="number">3</span>, charsets=<span class="params">(<span class="string">'utf-8'</span>,)</span>)</span>:</span></div><div class="line">    page_html = <span class="keyword">None</span></div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        page_html = decode_page(urlopen(seed_url).read(), charsets)</div><div class="line">    <span class="keyword">except</span> URLError:</div><div class="line">        <span class="comment"># logging.error('URL:', error)</span></div><div class="line">        <span class="keyword">if</span> retry_times &gt; <span class="number">0</span>:</div><div class="line">            <span class="keyword">return</span> get_page_html(seed_url, retry_times=retry_times - <span class="number">1</span>,</div><div class="line">                                 charsets=charsets)</div><div class="line">    <span class="keyword">return</span> page_html</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 从页面中提取需要的部分(通常是链接也可以通过正则表达式进行指定)</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_matched_parts</span><span class="params">(page_html, pattern_str, pattern_ignore_case=re.I)</span>:</span></div><div class="line">    pattern_regex = re.compile(pattern_str, pattern_ignore_case)</div><div class="line">    <span class="keyword">return</span> pattern_regex.findall(page_html) <span class="keyword">if</span> page_html <span class="keyword">else</span> []</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 开始执行爬虫程序并对指定的数据进行持久化操作</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">start_crawl</span><span class="params">(seed_url, match_pattern, *, max_depth=<span class="number">-1</span>)</span>:</span></div><div class="line">    conn = pymysql.connect(host=<span class="string">'localhost'</span>, port=<span class="number">3306</span>,</div><div class="line">                           database=<span class="string">'crawler'</span>, user=<span class="string">'root'</span>,</div><div class="line">                           password=<span class="string">'123456'</span>, charset=<span class="string">'utf8'</span>)</div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        <span class="keyword">with</span> conn.cursor() <span class="keyword">as</span> cursor:</div><div class="line">            url_list = [seed_url]</div><div class="line">            <span class="comment"># 通过下面的字典避免重复抓取并控制抓取深度</span></div><div class="line">            visited_url_list = &#123;seed_url: <span class="number">0</span>&#125;</div><div class="line">            <span class="keyword">while</span> url_list:</div><div class="line">                current_url = url_list.pop(<span class="number">0</span>)</div><div class="line">                depth = visited_url_list[current_url]</div><div class="line">                <span class="keyword">if</span> depth != max_depth:</div><div class="line">                    page_html = get_page_html(current_url, charsets=(<span class="string">'utf-8'</span>, <span class="string">'gbk'</span>, <span class="string">'gb2312'</span>))</div><div class="line">                    links_list = get_matched_parts(page_html, match_pattern)</div><div class="line">                    param_list = []</div><div class="line">                    <span class="keyword">for</span> link <span class="keyword">in</span> links_list:</div><div class="line">                        <span class="keyword">if</span> link <span class="keyword">not</span> <span class="keyword">in</span> visited_url_list:</div><div class="line">                            visited_url_list[link] = depth + <span class="number">1</span></div><div class="line">                            page_html = get_page_html(link, charsets=(<span class="string">'utf-8'</span>, <span class="string">'gbk'</span>, <span class="string">'gb2312'</span>))</div><div class="line">                            headings = get_matched_parts(page_html, <span class="string">r'&lt;h1&gt;(.*)&lt;span'</span>)</div><div class="line">                            <span class="keyword">if</span> headings:</div><div class="line">                                param_list.append((headings[<span class="number">0</span>], link))</div><div class="line">                    cursor.executemany(<span class="string">'insert into tb_result values (default, %s, %s)'</span>,</div><div class="line">                                       param_list)</div><div class="line">                    conn.commit()</div><div class="line">    <span class="keyword">except</span> Error:</div><div class="line">        <span class="keyword">pass</span></div><div class="line">        <span class="comment"># logging.error('SQL:', error)</span></div><div class="line">    <span class="keyword">finally</span>:</div><div class="line">        conn.close()</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    ssl._create_default_https_context = ssl._create_unverified_context</div><div class="line">    start_crawl(<span class="string">'http://sports.sohu.com/nba_a.shtml'</span>,</div><div class="line">                <span class="string">r'&lt;a[^&gt;]+test=a\s[^&gt;]*href=["\'](.*?)["\']'</span>,</div><div class="line">                max_depth=<span class="number">2</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>注意事项：</p>
<ol>
<li><p>处理相对链接。有的时候我们从页面中获取的链接不是一个完整的绝对链接而是一个相对链接，这种情况下需要将其与URL前缀进行拼接（urllib.parse中的urljoin函数可以完成此项操作）。</p>
</li>
<li><p>设置代理服务。有些网站会限制访问的区域（例如美国的Netflix屏蔽了很多国家的访问），有些爬虫需要隐藏自己的身份，在这种情况下可以设置代理服务器（urllib.request中的ProxyHandler就是用来进行此项操作）。</p>
</li>
<li><p>限制下载速度。如果我们的爬虫获取网页的速度过快，可能就会面临被封禁或者产生“损害动产”的风险（这个可能会导致吃官司且败诉哦），可以在两次下载之间添加延时从而对爬虫进行限速。</p>
</li>
<li><p>避免爬虫陷阱。有些网站会动态生成页面内容，这会导致产生无限多的页面（例如在线万年历等）。可以通过记录到达当前页面经过了多少个链接（链接深度）来解决该问题，当达到事先设定的最大深度时爬虫就不再像队列中添加该网页中的链接了。</p>
</li>
<li><p>SSL相关问题。在使用<code>urlopen</code>打开一个HTTPS链接时会验证一次SSL证书，如果不做出处理会产生错误提示“SSL: CERTIFICATE_VERIFY_FAILED”，可以通过以下两种方式加以解决：</p>
<ul>
<li><p>使用未经验证的上下文</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> ssl</div><div class="line"></div><div class="line">request = urllib.request.Request(url=<span class="string">'...'</span>, headers=&#123;...&#125;) </div><div class="line">context = ssl._create_unverified_context()</div><div class="line">web_page = urllib.request.urlopen(request, context=context)</div></pre></td></tr></table></figure>
</li>
<li><p>设置全局的取消证书验证</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> ssl</div><div class="line"></div><div class="line">ssl._create_default_https_context = ssl._create_unverified_context</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ol>
<h2 id="数据采集和解析"><a href="#数据采集和解析" class="headerlink" title="数据采集和解析"></a>数据采集和解析</h2><p>通过上一个章节，我们已经了解到了开发一个爬虫需要做的工作以及一些常见的问题，至此我们可以对爬虫开发需要做的工作以及相关的技术做一个简单的汇总，可能有些库我们之前并没有使用过，不过别担心，这些内容我们都会讲到的。</p>
<ol>
<li>下载数据 - urllib / requests / aiohttp。</li>
<li>解析数据 - re / lxml / beautifulsoup4（bs4）/ pyquery。</li>
<li>缓存和持久化 - pymysql / redis / sqlalchemy / peewee / pymongo。</li>
<li>生成摘要 - hashlib。</li>
<li>序列化和压缩 - pickle / json / zlib。</li>
<li>调度器 - 进程 / 线程 / 协程。</li>
</ol>
<h3 id="HTML页面分析"><a href="#HTML页面分析" class="headerlink" title="HTML页面分析"></a>HTML页面分析</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, world!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个神奇的网站！<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">hr</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>这是一个例子程序<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>静夜思<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"foo"</span>&gt;</span>床前明月光<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"bar"</span>&gt;</span>疑似地上霜<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"foo"</span>&gt;</span>举头望明月<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.baidu.com"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>低头思故乡<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"foo"</span> <span class="attr">href</span>=<span class="string">"http://www.qq.com"</span>&gt;</span>腾讯网<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./img/pretty-girl.png"</span> <span class="attr">alt</span>=<span class="string">"美女"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./img/hellokitty.png"</span> <span class="attr">alt</span>=<span class="string">"凯蒂猫"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"/static/img/pretty-girl.png"</span> <span class="attr">alt</span>=<span class="string">"美女"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">table</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>上场时间<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>得分<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>篮板<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>助攻<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p>如果你对上面的代码并不感到陌生，那么你一定知道HTML页面通常由三部分构成，分别是：用来承载内容的Tag（标签）、负责渲染页面的CSS（层叠样式表）以及控制交互式行为的JavaScript。通常，我们可以在浏览器的右键菜单中通过“查看网页源代码”的方式获取网页的代码并了解页面的结构；当然，我们也可以通过浏览器提供的开发人员工具来了解网页更多的信息。</p>
<h4 id="使用requests获取页面"><a href="#使用requests获取页面" class="headerlink" title="使用requests获取页面"></a>使用requests获取页面</h4><ol>
<li>GET请求和POST请求。</li>
<li>URL参数和请求头。</li>
<li>复杂的POST请求（文件上传）。</li>
<li>操作Cookie。</li>
<li>设置代理服务器。</li>
<li>超时设置。</li>
</ol>
<blockquote>
<p>说明：关于requests的详细用法可以参考它的<a href="http://docs.python-requests.org/zh_CN/latest/user/quickstart.html" target="_blank" rel="external">官方文档</a>。</p>
</blockquote>
<h3 id="四种采集方式"><a href="#四种采集方式" class="headerlink" title="四种采集方式"></a>四种采集方式</h3><h4 id="四种采集方式的比较"><a href="#四种采集方式的比较" class="headerlink" title="四种采集方式的比较"></a>四种采集方式的比较</h4><table>
<thead>
<tr>
<th>抓取方法</th>
<th>速度</th>
<th>使用难度</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>正则表达式</td>
<td>快</td>
<td>困难</td>
<td>常用正则表达式<br>在线正则表达式测试</td>
</tr>
<tr>
<td>lxml</td>
<td>快</td>
<td>一般</td>
<td>需要安装C语言依赖库<br>唯一支持XML的解析器</td>
</tr>
<tr>
<td>Beautiful</td>
<td>快/慢（取决于解析器）</td>
<td>简单</td>
<td></td>
</tr>
<tr>
<td>PyQuery</td>
<td>较快</td>
<td>简单</td>
<td>Python版的jQuery</td>
</tr>
</tbody>
</table>
<blockquote>
<p>说明：Beautiful的解析器包括：Python标准库（html.parser）、lxml的HTML解析器、lxml的XML解析器和html5lib。</p>
</blockquote>
<h4 id="BeautifulSoup的使用"><a href="#BeautifulSoup的使用" class="headerlink" title="BeautifulSoup的使用"></a>BeautifulSoup的使用</h4><ol>
<li>遍历文档树<ul>
<li>获取标签</li>
<li>获取标签属性</li>
<li>获取标签内容</li>
<li>获取子（孙）节点</li>
<li>获取父节点/祖先节点</li>
<li>获取兄弟节点</li>
</ul>
</li>
<li>搜索树节点<ul>
<li>find / find_all：字符串、正则表达式、列表、True、函数或Lambda。</li>
<li>select_one / select：CSS选择器</li>
</ul>
</li>
</ol>
<blockquote>
<p>说明：更多内容可以参考BeautifulSoup的<a href="">官方文档</a>。</p>
</blockquote>
<h3 id="实例-获取知乎发现上的问题链接"><a href="#实例-获取知乎发现上的问题链接" class="headerlink" title="实例 - 获取知乎发现上的问题链接"></a>实例 - 获取知乎发现上的问题链接</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urljoin</div><div class="line"></div><div class="line"><span class="keyword">import</span> re</div><div class="line"><span class="keyword">import</span> requests</div><div class="line"></div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    headers = &#123;<span class="string">'user-agent'</span>: <span class="string">'Baiduspider'</span>&#125;</div><div class="line">    proxies = &#123;</div><div class="line">        <span class="string">'http'</span>: <span class="string">'http://122.114.31.177:808'</span></div><div class="line">    &#125;</div><div class="line">    base_url = <span class="string">'https://www.zhihu.com/'</span></div><div class="line">    seed_url = urljoin(base_url, <span class="string">'explore'</span>)</div><div class="line">    resp = requests.get(seed_url,</div><div class="line">                        headers=headers,</div><div class="line">                        proxies=proxies)</div><div class="line">    soup = BeautifulSoup(resp.text, <span class="string">'lxml'</span>)</div><div class="line">    href_regex = re.compile(<span class="string">r'^/question'</span>)</div><div class="line">    link_set = set()</div><div class="line">    <span class="keyword">for</span> a_tag <span class="keyword">in</span> soup.find_all(<span class="string">'a'</span>, &#123;<span class="string">'href'</span>: href_regex&#125;):</div><div class="line">        <span class="keyword">if</span> <span class="string">'href'</span> <span class="keyword">in</span> a_tag.attrs:</div><div class="line">            href = a_tag.attrs[<span class="string">'href'</span>]</div><div class="line">            full_url = urljoin(base_url, href)</div><div class="line">            link_set.add(full_url)</div><div class="line">    print(<span class="string">'Total %d question pages found.'</span> % len(link_set))</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h2 id="存储数据"><a href="#存储数据" class="headerlink" title="存储数据"></a>存储数据</h2><h3 id="数据缓存"><a href="#数据缓存" class="headerlink" title="数据缓存"></a>数据缓存</h3><p>通过前面章节的内容，我们已经知道了如何从指定的页面中抓取数据，以及如何保存抓取的结果，但是我们没有考虑过这么一种情况，就是我们可能需要从已经抓取过的页面中提取出更多的数据，重新去下载这些页面对于规模不大的网站倒是问题也不大，但是如果能够把这些页面缓存起来，对应用的性能会有明显的改善。</p>
<h3 id="使用NoSQL"><a href="#使用NoSQL" class="headerlink" title="使用NoSQL"></a>使用NoSQL</h3><h4 id="Redis简介"><a href="#Redis简介" class="headerlink" title="Redis简介"></a>Redis简介</h4><p>Redis是REmote DIctionary Server的缩写，它是一个用ANSI C编写的高性能的key-value存储系统，与其他的key-value存储系统相比，Redis有以下一些特点（也是优点）：</p>
<ul>
<li>Redis的读写性能极高，并且有丰富的特性（发布/订阅、事务、通知等）。</li>
<li>Redis支持数据的持久化（RDB和AOF两种方式），可以将内存中的数据保存在磁盘中，重启的时候可以再次加载进行使用。</li>
<li>Redis不仅仅支持简单的key-value类型的数据，同时还提供hash、list、set，zset、hyperloglog、geo等数据类型。</li>
<li>Redis支持主从复制（实现读写分析）以及哨兵模式（监控master是否宕机并调整配置）。</li>
</ul>
<h4 id="Redis的安装和配置"><a href="#Redis的安装和配置" class="headerlink" title="Redis的安装和配置"></a>Redis的安装和配置</h4><p>可以使用Linux系统的包管理工具（如yum）来安装Redis，也可以通过在Redis的<a href="https://redis.io/" target="_blank" rel="external">官方网站</a>下载Redis的<a href="http://download.redis.io/releases/redis-3.2.11.tar.gz" target="_blank" rel="external">源代码</a>解压缩解归档之后进行构件安装。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">#</span><span class="bash"> wget http://download.redis.io/releases/redis-3.2.11.tar.gz</span></div><div class="line"><span class="meta">#</span><span class="bash"> gunzip redis-3.2.11.tar.gz</span></div><div class="line"><span class="meta">#</span><span class="bash"> tar -xvf redis-3.2.11.tar</span></div><div class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">cd</span> redis-3.2.11</span></div><div class="line"><span class="meta">#</span><span class="bash"> make &amp;&amp; make install</span></div></pre></td></tr></table></figure>
<p>接下来我们将redis-3.2.11目录下的redis.conf配置文件复制到用户主目录下并修改配置文件（如果你对配置文件不是很有把握就不要直接修改而是先复制一份再修改这个副本）。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">cd</span> ..</span></div><div class="line"><span class="meta">#</span><span class="bash"> cp redis-3.2.11/redis.conf redis.conf</span></div><div class="line"><span class="meta">#</span><span class="bash"> vim redis.conf</span></div></pre></td></tr></table></figure>
<p>配置将Redis服务绑定到指定的IP地址和端口。</p>
<p>配置底层有多少个数据库。</p>
<p>配置Redis的持久化机制 - RDB。</p>
<p>配置Redis的持久化机制 - AOF。</p>
<p>配置访问Redis服务器的验证口令。</p>
<p>配置Redis的主从复制，通过主从复制可以实现读写分离。</p>
<p>配置慢查询日志。</p>
<p>这样我们就完成了Redis的基本配置，如果对上面的东西感到困惑，可以先系统的了解一下Redis，<a href="https://item.jd.com/12121730.html" target="_blank" rel="external">《Redis开发与运维》</a>是一本不错的入门读物，而<a href="https://item.jd.com/11791607.html" target="_blank" rel="external">《Redis实战》</a>是不错的进阶读物。</p>
<h4 id="Redis的服务器和客户端"><a href="#Redis的服务器和客户端" class="headerlink" title="Redis的服务器和客户端"></a>Redis的服务器和客户端</h4><p>接下来启动Redis服务器，可以将服务器放在后台去运行。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">#</span><span class="bash"> redis-server redis.conf &amp;</span></div><div class="line"></div><div class="line">           _.-``__ ''-._</div><div class="line">      _.-``    `.  `_.  ''-._           Redis 3.2.11 (00000000/0) 64 bit</div><div class="line">  .-`` .-```.  ```\/    _.,_ ''-._</div><div class="line"> (    '      ,       .-`  | `,    )     Running in standalone mode</div><div class="line"> |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6379</div><div class="line"> |    `-._   `._    /     _.-'    |     PID: 12345</div><div class="line">  `-._    `-._  `-./  _.-'    _.-'</div><div class="line"> |`-._`-._    `-.__.-'    _.-'_.-'|</div><div class="line"> |    `-._`-._        _.-'_.-'    |           http://redis.io</div><div class="line">  `-._    `-._`-.__.-'_.-'    _.-'</div><div class="line"> |`-._`-._    `-.__.-'    _.-'_.-'|</div><div class="line"> |    `-._`-._        _.-'_.-'    |</div><div class="line">  `-._    `-._`-.__.-'_.-'    _.-'</div><div class="line">      `-._    `-.__.-'    _.-'</div><div class="line">          `-._        _.-'</div><div class="line">              `-.__.-'</div></pre></td></tr></table></figure>
<p>接下来，我们尝试用Redis客户端去连接服务器。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">#</span><span class="bash"> redis-cli -h 172.18.61.250 -p 6379</span></div><div class="line">172.18.61.250:6379&gt; auth 1qaz2wsx</div><div class="line">OK</div><div class="line">172.18.61.250:6379&gt; ping</div><div class="line">PONG</div><div class="line">172.18.61.250:6379&gt;</div></pre></td></tr></table></figure>
<p>Redis有着非常丰富的数据类型，也有很多的命令来操作这些数据，具体的内容可以查看<a href="http://redisdoc.com/" target="_blank" rel="external">Redis命令参考</a>，在这个网站上，除了Redis的命令参考，还有Redis的详细文档，其中包括了通知、事务、主从复制、持久化、哨兵、集群等内容。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">172.18.61.250:6379&gt; set username admin</div><div class="line">OK</div><div class="line">172.18.61.250:6379&gt; get username</div><div class="line">"admin"</div><div class="line">172.18.61.250:6379&gt; hset student1 name hao</div><div class="line">(integer) 0</div><div class="line">172.18.61.250:6379&gt; hset student1 age 38</div><div class="line">(integer) 1</div><div class="line">172.18.61.250:6379&gt; hset student1 gender male</div><div class="line">(integer) 1</div><div class="line">172.18.61.250:6379&gt; hgetall student1</div><div class="line">1) "name"</div><div class="line">2) "hao"</div><div class="line">3) "age"</div><div class="line">4) "38"</div><div class="line">5) "gender"</div><div class="line">6) "male"</div><div class="line">172.18.61.250:6379&gt; lpush num 1 2 3 4 5</div><div class="line">(integer) 5</div><div class="line">172.18.61.250:6379&gt; lrange num 0 -1</div><div class="line">1) "5"</div><div class="line">2) "4"</div><div class="line">3) "3"</div><div class="line">4) "2"</div><div class="line">5) "1"</div><div class="line">172.18.61.250:6379&gt; sadd fruits apple banana orange apple grape grape</div><div class="line">(integer) 4</div><div class="line">172.18.61.250:6379&gt; scard fruits</div><div class="line">(integer) 4</div><div class="line">172.18.61.250:6379&gt; smembers fruits</div><div class="line">1) "grape"</div><div class="line">2) "orange"</div><div class="line">3) "banana"</div><div class="line">4) "apple"</div><div class="line">172.18.61.250:6379&gt; zadd scores 90 zhao 78 qian 66 sun 95 lee</div><div class="line">(integer) 4</div><div class="line">172.18.61.250:6379&gt; zrange scores 0 -1</div><div class="line">1) "sun"</div><div class="line">2) "qian"</div><div class="line">3) "zhao"</div><div class="line">4) "lee"</div><div class="line">172.18.61.250:6379&gt; zrevrange scores 0 -1</div><div class="line">1) "lee"</div><div class="line">2) "zhao"</div><div class="line">3) "qian"</div><div class="line">4) "sun"</div></pre></td></tr></table></figure>
<h4 id="在Python程序中使用Redis"><a href="#在Python程序中使用Redis" class="headerlink" title="在Python程序中使用Redis"></a>在Python程序中使用Redis</h4><p>可以使用pip安装redis模块。redis模块的核心是名为Redis的类，该类的对象代表一个Redis客户端，通过该客户端可以向Redis服务器发送命令并获取执行的结果。上面我们在Redis客户端中使用的命令基本上就是Redis对象可以接收的消息，所以如果了解了Redis的命令就可以在Python中玩转Redis。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">$</span><span class="bash"> pip3 install redis</span></div><div class="line"><span class="meta">$</span><span class="bash"> python3</span></div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> redis</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>client = redis.Redis(host=<span class="string">'1.2.3.4'</span>, port=<span class="number">6379</span>, password=<span class="string">'1qaz2wsx'</span>)</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>client.set(<span class="string">'username'</span>, <span class="string">'admin'</span>)</div><div class="line"><span class="keyword">True</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>client.hset(<span class="string">'student'</span>, <span class="string">'name'</span>, <span class="string">'hao'</span>)</div><div class="line"><span class="number">1</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>client.hset(<span class="string">'student'</span>, <span class="string">'age'</span>, <span class="number">38</span>)</div><div class="line"><span class="number">1</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>client.keys(<span class="string">'*'</span>)</div><div class="line">[<span class="string">b'username'</span>, <span class="string">b'student'</span>]</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>client.get(<span class="string">'username'</span>)</div><div class="line"><span class="string">b'admin'</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>client.hgetall(<span class="string">'student'</span>)</div><div class="line">&#123;<span class="string">b'name'</span>: <span class="string">b'hao'</span>, <span class="string">b'age'</span>: <span class="string">b'38'</span>&#125;</div></pre></td></tr></table></figure>
<h4 id="MongoDB简介"><a href="#MongoDB简介" class="headerlink" title="MongoDB简介"></a>MongoDB简介</h4><p>MongoDB是2009年问世的一个面向文档的数据库管理系统，由C++语言编写，旨在为Web应用提供可扩展的高性能数据存储解决方案。虽然在划分类别的时候后，MongoDB被认为是NoSQL的产品，但是它更像一个介于关系数据库和非关系数据库之间的产品，在非关系数据库中它功能最丰富，最像关系数据库。</p>
<p>MongoDB将数据存储为一个文档，一个文档由一系列的“键值对”组成，其文档类似于JSON对象，但是MongoDB对JSON进行了二进制处理（能够更快的定位key和value），因此其文档的存储格式称为BSON。关于JSON和BSON的差别大家可以看看MongoDB官方网站的文章<a href="https://www.mongodb.com/json-and-bson" target="_blank" rel="external">《JSON and BSON》</a>。</p>
<p>目前，MongoDB已经提供了对Windows、MacOS、Linux、Solaris等多个平台的支持，而且也提供了多种开发语言的驱动程序，Python当然是其中之一。</p>
<h4 id="MongoDB的安装和配置"><a href="#MongoDB的安装和配置" class="headerlink" title="MongoDB的安装和配置"></a>MongoDB的安装和配置</h4><p>可以从MongoDB的<a href="https://www.mongodb.com/download-center#community" target="_blank" rel="external">官方下载链接</a>下载MongoDB，官方为Windows系统提供了一个Installer程序，而Linux和MacOS则提供了压缩文件。下面简单说一下Linux系统如何安装和配置MongoDB。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">#</span><span class="bash"> wget https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-amazon-3.6.5.tgz</span></div><div class="line"><span class="meta">#</span><span class="bash"> gunzip mongodb-linux-x86_64-amazon-3.6.5.tgz</span></div><div class="line"><span class="meta">#</span><span class="bash"> mkdir mongodb-3.6.5</span></div><div class="line"><span class="meta">#</span><span class="bash"> tar -xvf mongodb-linux-x86_64-amazon-3.6.5.tar --strip-components 1 -C mongodb-3.6.5/</span></div><div class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:~/mongodb-3.6.5/bin</span></div><div class="line"><span class="meta">#</span><span class="bash"> mkdir -p /data/db</span></div><div class="line"><span class="meta">#</span><span class="bash"> mongod --bind_ip 172.18.61.250</span></div><div class="line">2018-06-03T18:03:28.232+0800 I CONTROL  [initandlisten] MongoDB starting : pid=1163 port=27017 dbpath=/data/db 64-bit host=iZwz97tbgo9lkabnat2lo8Z</div><div class="line">2018-06-03T18:03:28.232+0800 I CONTROL  [initandlisten] db version v3.6.5</div><div class="line">2018-06-03T18:03:28.232+0800 I CONTROL  [initandlisten] git version: a20ecd3e3a174162052ff99913bc2ca9a839d618</div><div class="line">2018-06-03T18:03:28.232+0800 I CONTROL  [initandlisten] OpenSSL version: OpenSSL 1.0.0-fips29 Mar 2010</div><div class="line">...</div><div class="line">2018-06-03T18:03:28.945+0800 I NETWORK  [initandlisten] waiting for connections on port 27017</div></pre></td></tr></table></figure>
<blockquote>
<p>说明：上面的操作中，export命令是设置PATH环境变量，这样可以在任意路径下执行mongod来启动MongoDB服务器。MongoDB默认保存数据的路径是/data/db目录，为此要提前创建该目录。此外，在使用mongod启动MongoDB服务器时，—bind_ip参数用来将服务绑定到指定的IP地址，也可以用—port参数来指定端口，默认端口为27017。</p>
</blockquote>
<h4 id="MongoDB基本概念"><a href="#MongoDB基本概念" class="headerlink" title="MongoDB基本概念"></a>MongoDB基本概念</h4><p>我们通过与关系型数据库进行对照的方式来说明MongoDB中的一些概念。</p>
<table>
<thead>
<tr>
<th>SQL</th>
<th>MongoDB</th>
<th>解释（SQL/MongoDB）</th>
</tr>
</thead>
<tbody>
<tr>
<td>database</td>
<td>database</td>
<td>数据库/数据库</td>
</tr>
<tr>
<td>table</td>
<td>collection</td>
<td>二维表/集合</td>
</tr>
<tr>
<td>row</td>
<td>document</td>
<td>记录（行）/文档</td>
</tr>
<tr>
<td>column</td>
<td>field</td>
<td>字段（列）/域</td>
</tr>
<tr>
<td>index</td>
<td>index</td>
<td>索引/索引</td>
</tr>
<tr>
<td>table joins</td>
<td>—</td>
<td>表连接/嵌套文档</td>
</tr>
<tr>
<td>primary key</td>
<td>primary key</td>
<td>主键/主键（<code>_id</code>字段）</td>
</tr>
</tbody>
</table>
<h4 id="通过Shell操作MongoDB"><a href="#通过Shell操作MongoDB" class="headerlink" title="通过Shell操作MongoDB"></a>通过Shell操作MongoDB</h4><p>启动服务器后可以使用交互式环境跟服务器通信，如下所示。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> mongo --host 172.18.61.250</span></div><div class="line">MongoDB shell version v3.6.5</div><div class="line">connecting to: mongodb://172.18.61.250:27017/</div><div class="line">...</div><div class="line"><span class="meta">&gt;</span><span class="bash"></span></div></pre></td></tr></table></figure>
<ol>
<li><p>查看、创建和删除数据库。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">&gt; <span class="comment">// 显示所有数据库</span></div><div class="line">&gt; show dbs</div><div class="line">admin   <span class="number">0.000</span>GB</div><div class="line">config  <span class="number">0.000</span>GB</div><div class="line">local   <span class="number">0.000</span>GB</div><div class="line">&gt; <span class="comment">// 创建并切换到school数据库</span></div><div class="line">&gt; use school</div><div class="line">switched to db school</div><div class="line">&gt; <span class="comment">// 删除当前数据库</span></div><div class="line">&gt; db.dropDatabase()</div><div class="line">&#123; <span class="string">"ok"</span> : <span class="number">1</span> &#125;</div><div class="line">&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>创建、删除和查看集合。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">&gt; <span class="comment">// 创建并切换到school数据库</span></div><div class="line">&gt; use school</div><div class="line">switched to db school</div><div class="line">&gt; <span class="comment">// 创建colleges集合</span></div><div class="line">&gt; db.createCollection(<span class="string">'colleges'</span>)</div><div class="line">&#123; <span class="string">"ok"</span> : <span class="number">1</span> &#125;</div><div class="line">&gt; <span class="comment">// 创建students集合</span></div><div class="line">&gt; db.createCollection(<span class="string">'students'</span>)</div><div class="line">&#123; <span class="string">"ok"</span> : <span class="number">1</span> &#125;</div><div class="line">&gt; <span class="comment">// 查看所有集合</span></div><div class="line">&gt; show collections</div><div class="line">colleges</div><div class="line">students</div><div class="line">&gt; <span class="comment">// 删除colleges集合</span></div><div class="line">&gt; db.colleges.drop()</div><div class="line"><span class="literal">true</span></div><div class="line">&gt;</div></pre></td></tr></table></figure>
<blockquote>
<p>说明：在MongoDB中插入文档时如果集合不存在会自动创建集合，所以也可以按照下面的方式通过创建文档来创建集合。</p>
</blockquote>
</li>
<li><p>文档的CRUD操作。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">&gt; <span class="comment">// 向students集合插入文档</span></div><div class="line">&gt; db.students.insert(&#123;<span class="attr">stuid</span>: <span class="number">1001</span>, <span class="attr">name</span>: <span class="string">'骆昊'</span>, <span class="attr">age</span>: <span class="number">38</span>&#125;)</div><div class="line">WriteResult(&#123; <span class="string">"nInserted"</span> : <span class="number">1</span> &#125;)</div><div class="line">&gt; <span class="comment">// 向students集合插入文档</span></div><div class="line">&gt; db.students.save(&#123;<span class="attr">stuid</span>: <span class="number">1002</span>, <span class="attr">name</span>: <span class="string">'王大锤'</span>, <span class="attr">tel</span>: <span class="string">'13012345678'</span>, <span class="attr">gender</span>: <span class="string">'男'</span>&#125;)</div><div class="line">WriteResult(&#123; <span class="string">"nInserted"</span> : <span class="number">1</span> &#125;)</div><div class="line">&gt; <span class="comment">// 查看所有文档</span></div><div class="line">&gt; db.students.find()</div><div class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"5b13c72e006ad854460ee70b"</span>), <span class="string">"stuid"</span> : <span class="number">1001</span>, <span class="string">"name"</span> : <span class="string">"骆昊"</span>, <span class="string">"age"</span> : <span class="number">38</span> &#125;</div><div class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"5b13c790006ad854460ee70c"</span>), <span class="string">"stuid"</span> : <span class="number">1002</span>, <span class="string">"name"</span> : <span class="string">"王大锤"</span>, <span class="string">"tel"</span> : <span class="string">"13012345678"</span>, <span class="string">"gender"</span> : <span class="string">"男"</span> &#125;</div><div class="line">&gt; <span class="comment">// 更新stuid为1001的文档</span></div><div class="line">&gt; db.students.update(&#123;<span class="attr">stuid</span>: <span class="number">1001</span>&#125;, &#123;<span class="string">'$set'</span>: &#123;<span class="attr">tel</span>: <span class="string">'13566778899'</span>, <span class="attr">gender</span>: <span class="string">'男'</span>&#125;&#125;)</div><div class="line">WriteResult(&#123; <span class="string">"nMatched"</span> : <span class="number">1</span>, <span class="string">"nUpserted"</span> : <span class="number">0</span>, <span class="string">"nModified"</span> : <span class="number">1</span> &#125;)</div><div class="line">&gt; <span class="comment">// 插入或更新stuid为1003的文档</span></div><div class="line">&gt; db.students.update(&#123;<span class="attr">stuid</span>: <span class="number">1003</span>&#125;, &#123;<span class="string">'$set'</span>: &#123;<span class="attr">name</span>: <span class="string">'白元芳'</span>, <span class="attr">tel</span>: <span class="string">'13022223333'</span>, <span class="attr">gender</span>: <span class="string">'男'</span>&#125;&#125;,  upsert=<span class="literal">true</span>)</div><div class="line">WriteResult(&#123;</div><div class="line">        <span class="string">"nMatched"</span> : <span class="number">0</span>,</div><div class="line">        <span class="string">"nUpserted"</span> : <span class="number">1</span>,</div><div class="line">        <span class="string">"nModified"</span> : <span class="number">0</span>,</div><div class="line">        <span class="string">"_id"</span> : ObjectId(<span class="string">"5b13c92dd185894d7283efab"</span>)</div><div class="line">&#125;)</div><div class="line">&gt; <span class="comment">// 查询所有文档</span></div><div class="line">&gt; db.students.find().pretty()</div><div class="line">&#123;</div><div class="line">        <span class="string">"_id"</span> : ObjectId(<span class="string">"5b13c72e006ad854460ee70b"</span>),</div><div class="line">        <span class="string">"stuid"</span> : <span class="number">1001</span>,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"骆昊"</span>,</div><div class="line">        <span class="string">"age"</span> : <span class="number">38</span>,</div><div class="line">        <span class="string">"gender"</span> : <span class="string">"男"</span>,</div><div class="line">        <span class="string">"tel"</span> : <span class="string">"13566778899"</span></div><div class="line">&#125;</div><div class="line">&#123;</div><div class="line">        <span class="string">"_id"</span> : ObjectId(<span class="string">"5b13c790006ad854460ee70c"</span>),</div><div class="line">        <span class="string">"stuid"</span> : <span class="number">1002</span>,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"王大锤"</span>,</div><div class="line">        <span class="string">"tel"</span> : <span class="string">"13012345678"</span>,</div><div class="line">        <span class="string">"gender"</span> : <span class="string">"男"</span></div><div class="line">&#125;</div><div class="line">&#123;</div><div class="line">        <span class="string">"_id"</span> : ObjectId(<span class="string">"5b13c92dd185894d7283efab"</span>),</div><div class="line">        <span class="string">"stuid"</span> : <span class="number">1003</span>,</div><div class="line">        <span class="string">"gender"</span> : <span class="string">"男"</span>,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"白元芳"</span>,</div><div class="line">        <span class="string">"tel"</span> : <span class="string">"13022223333"</span></div><div class="line">&#125;</div><div class="line">&gt; <span class="comment">// 查询stuid大于1001的文档</span></div><div class="line">&gt; db.students.find(&#123;<span class="attr">stuid</span>: &#123;<span class="string">'$gt'</span>: <span class="number">1001</span>&#125;&#125;).pretty()</div><div class="line">&#123;</div><div class="line">        <span class="string">"_id"</span> : ObjectId(<span class="string">"5b13c790006ad854460ee70c"</span>),</div><div class="line">        <span class="string">"stuid"</span> : <span class="number">1002</span>,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"王大锤"</span>,</div><div class="line">        <span class="string">"tel"</span> : <span class="string">"13012345678"</span>,</div><div class="line">        <span class="string">"gender"</span> : <span class="string">"男"</span></div><div class="line">&#125;</div><div class="line">&#123;</div><div class="line">        <span class="string">"_id"</span> : ObjectId(<span class="string">"5b13c92dd185894d7283efab"</span>),</div><div class="line">        <span class="string">"stuid"</span> : <span class="number">1003</span>,</div><div class="line">        <span class="string">"gender"</span> : <span class="string">"男"</span>,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"白元芳"</span>,</div><div class="line">        <span class="string">"tel"</span> : <span class="string">"13022223333"</span></div><div class="line">&#125;</div><div class="line">&gt; <span class="comment">// 查询stuid大于1001的文档只显示name和tel字段</span></div><div class="line">&gt; db.students.find(&#123;<span class="attr">stuid</span>: &#123;<span class="string">'$gt'</span>: <span class="number">1001</span>&#125;&#125;, &#123;<span class="attr">_id</span>: <span class="number">0</span>, <span class="attr">name</span>: <span class="number">1</span>, <span class="attr">tel</span>: <span class="number">1</span>&#125;).pretty()</div><div class="line">&#123; <span class="string">"name"</span> : <span class="string">"王大锤"</span>, <span class="string">"tel"</span> : <span class="string">"13012345678"</span> &#125;</div><div class="line">&#123; <span class="string">"name"</span> : <span class="string">"白元芳"</span>, <span class="string">"tel"</span> : <span class="string">"13022223333"</span> &#125;</div><div class="line">&gt; <span class="comment">// 查询name为“骆昊”或者tel为“13022223333”的文档</span></div><div class="line">&gt; db.students.find(&#123;<span class="string">'$or'</span>: [&#123;<span class="attr">name</span>: <span class="string">'骆昊'</span>&#125;, &#123;<span class="attr">tel</span>: <span class="string">'13022223333'</span>&#125;]&#125;, &#123;<span class="attr">_id</span>: <span class="number">0</span>, <span class="attr">name</span>: <span class="number">1</span>, <span class="attr">tel</span>: <span class="number">1</span>&#125;).pretty()</div><div class="line">&#123; <span class="string">"name"</span> : <span class="string">"骆昊"</span>, <span class="string">"tel"</span> : <span class="string">"13566778899"</span> &#125;</div><div class="line">&#123; <span class="string">"name"</span> : <span class="string">"白元芳"</span>, <span class="string">"tel"</span> : <span class="string">"13022223333"</span> &#125;</div><div class="line">&gt; <span class="comment">// 查询学生文档跳过第1条文档只查1条文档</span></div><div class="line">&gt; db.students.find().skip(<span class="number">1</span>).limit(<span class="number">1</span>).pretty()</div><div class="line">&#123;</div><div class="line">        <span class="string">"_id"</span> : ObjectId(<span class="string">"5b13c790006ad854460ee70c"</span>),</div><div class="line">        <span class="string">"stuid"</span> : <span class="number">1002</span>,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"王大锤"</span>,</div><div class="line">        <span class="string">"tel"</span> : <span class="string">"13012345678"</span>,</div><div class="line">        <span class="string">"gender"</span> : <span class="string">"男"</span></div><div class="line">&#125;</div><div class="line">&gt; <span class="comment">// 对查询结果进行排序(1表示升序，-1表示降序)</span></div><div class="line">&gt; db.students.find(&#123;&#125;, &#123;<span class="attr">_id</span>: <span class="number">0</span>, <span class="attr">stuid</span>: <span class="number">1</span>, <span class="attr">name</span>: <span class="number">1</span>&#125;).sort(&#123;<span class="attr">stuid</span>: <span class="number">-1</span>&#125;)</div><div class="line">&#123; <span class="string">"stuid"</span> : <span class="number">1003</span>, <span class="string">"name"</span> : <span class="string">"白元芳"</span> &#125;</div><div class="line">&#123; <span class="string">"stuid"</span> : <span class="number">1002</span>, <span class="string">"name"</span> : <span class="string">"王大锤"</span> &#125;</div><div class="line">&#123; <span class="string">"stuid"</span> : <span class="number">1001</span>, <span class="string">"name"</span> : <span class="string">"骆昊"</span> &#125;</div><div class="line">&gt; <span class="comment">// 在指定的一个或多个字段上创建索引</span></div><div class="line">&gt; db.students.ensureIndex(&#123;<span class="attr">name</span>: <span class="number">1</span>&#125;)</div><div class="line">&#123;</div><div class="line">        <span class="string">"createdCollectionAutomatically"</span> : <span class="literal">false</span>,</div><div class="line">        <span class="string">"numIndexesBefore"</span> : <span class="number">1</span>,</div><div class="line">        <span class="string">"numIndexesAfter"</span> : <span class="number">2</span>,</div><div class="line">        <span class="string">"ok"</span> : <span class="number">1</span></div><div class="line">&#125;</div><div class="line">&gt;</div></pre></td></tr></table></figure>
</li>
</ol>
<p>使用MongoDB可以非常方便的配置数据复制，通过冗余数据来实现数据的高可用以及灾难恢复，也可以通过数据分片来应对数据量迅速增长的需求。关于MongoDB更多的操作可以查阅<a href="https://mongodb-documentation.readthedocs.io/en/latest/" target="_blank" rel="external">官方文档</a> ，同时推荐大家阅读Kristina Chodorow写的<a href="http://www.ituring.com.cn/book/1172" target="_blank" rel="external">《MongoDB权威指南》</a>。</p>
<p>####在Python程序中操作MongoDB</p>
<p>可以通过pip安装pymongo来实现对MongoDB的操作。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">$</span><span class="bash"> pip3 install pymongo</span></div><div class="line"><span class="meta">$</span><span class="bash"> python3</span></div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> pymongo <span class="keyword">import</span> MongoClient</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>client = MongoClient(<span class="string">'mongodb://120.77.222.217:27017'</span>) </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>db = client.school</div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> student <span class="keyword">in</span> db.students.find():</div><div class="line"><span class="meta">... </span>    print(<span class="string">'学号:'</span>, student[<span class="string">'stuid'</span>])</div><div class="line"><span class="meta">... </span>    print(<span class="string">'姓名:'</span>, student[<span class="string">'name'</span>])</div><div class="line"><span class="meta">... </span>    print(<span class="string">'电话:'</span>, student[<span class="string">'tel'</span>])</div><div class="line"><span class="meta">... </span></div><div class="line">学号: <span class="number">1001.0</span></div><div class="line">姓名: 骆昊</div><div class="line">电话: <span class="number">13566778899</span></div><div class="line">学号: <span class="number">1002.0</span></div><div class="line">姓名: 王大锤</div><div class="line">电话: <span class="number">13012345678</span></div><div class="line">学号: <span class="number">1003.0</span></div><div class="line">姓名: 白元芳</div><div class="line">电话: <span class="number">13022223333</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>db.students.find().count()</div><div class="line"><span class="number">3</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>db.students.remove()</div><div class="line">&#123;<span class="string">'n'</span>: <span class="number">3</span>, <span class="string">'ok'</span>: <span class="number">1.0</span>&#125;</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>db.students.find().count()</div><div class="line"><span class="number">0</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>coll = db.students</div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> pymongo <span class="keyword">import</span> ASCENDING</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>coll.create_index([(<span class="string">'name'</span>, ASCENDING)], unique=<span class="keyword">True</span>)</div><div class="line"><span class="string">'name_1'</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>coll.insert_one(&#123;<span class="string">'stuid'</span>: int(<span class="number">1001</span>), <span class="string">'name'</span>: <span class="string">'骆昊'</span>, <span class="string">'gender'</span>: <span class="keyword">True</span>&#125;)</div><div class="line">&lt;pymongo.results.InsertOneResult object at <span class="number">0x1050cc6c8</span>&gt;</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>coll.insert_many([&#123;<span class="string">'stuid'</span>: int(<span class="number">1002</span>), <span class="string">'name'</span>: <span class="string">'王大锤'</span>, <span class="string">'gender'</span>: <span class="keyword">False</span>&#125;, &#123;<span class="string">'stuid'</span>: int(<span class="number">1003</span>), <span class="string">'name'</span>: <span class="string">'白元芳'</span>, <span class="string">'gender'</span>: <span class="keyword">True</span>&#125;])</div><div class="line">&lt;pymongo.results.InsertManyResult object at <span class="number">0x1050cc8c8</span>&gt;</div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> student <span class="keyword">in</span> coll.find(&#123;<span class="string">'gender'</span>: <span class="keyword">True</span>&#125;):</div><div class="line"><span class="meta">... </span>    print(<span class="string">'学号:'</span>, student[<span class="string">'stuid'</span>])</div><div class="line"><span class="meta">... </span>    print(<span class="string">'姓名:'</span>, student[<span class="string">'name'</span>])</div><div class="line"><span class="meta">... </span>    print(<span class="string">'性别:'</span>, <span class="string">'男'</span> <span class="keyword">if</span> student[<span class="string">'gender'</span>] <span class="keyword">else</span> <span class="string">'女'</span>)</div><div class="line"><span class="meta">... </span></div><div class="line">学号: <span class="number">1001</span></div><div class="line">姓名: 骆昊</div><div class="line">性别: 男</div><div class="line">学号: <span class="number">1003</span></div><div class="line">姓名: 白元芳</div><div class="line">性别: 男</div><div class="line">&gt;&gt;&gt;</div></pre></td></tr></table></figure>
<p>关于PyMongo更多的知识可以通过它的<a href="https://api.mongodb.com/python/current/tutorial.html" target="_blank" rel="external">官方文档</a>进行了解。</p>
<h3 id="实例-缓存知乎发现上的链接和页面代码"><a href="#实例-缓存知乎发现上的链接和页面代码" class="headerlink" title="实例 - 缓存知乎发现上的链接和页面代码"></a>实例 - 缓存知乎发现上的链接和页面代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> sha1</div><div class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urljoin</div><div class="line"></div><div class="line"><span class="keyword">import</span> pickle</div><div class="line"><span class="keyword">import</span> re</div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> zlib</div><div class="line"></div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"><span class="keyword">from</span> redis <span class="keyword">import</span> Redis</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    <span class="comment"># 指定种子页面</span></div><div class="line">    base_url = <span class="string">'https://www.zhihu.com/'</span></div><div class="line">    seed_url = urljoin(base_url, <span class="string">'explore'</span>)</div><div class="line">    <span class="comment"># 创建Redis客户端</span></div><div class="line">    client = Redis(host=<span class="string">'1.2.3.4'</span>, port=<span class="number">6379</span>, password=<span class="string">'1qaz2wsx'</span>)</div><div class="line">    <span class="comment"># 设置用户代理(否则访问会被拒绝)</span></div><div class="line">    headers = &#123;<span class="string">'user-agent'</span>: <span class="string">'Baiduspider'</span>&#125;</div><div class="line">    <span class="comment"># 通过requests模块发送GET请求并指定用户代理</span></div><div class="line">    resp = requests.get(seed_url, headers=headers)</div><div class="line">    <span class="comment"># 创建BeautifulSoup对象并指定使用lxml作为解析器</span></div><div class="line">    soup = BeautifulSoup(resp.text, <span class="string">'lxml'</span>)</div><div class="line">    href_regex = re.compile(<span class="string">r'^/question'</span>)</div><div class="line">    <span class="comment"># 将URL处理成SHA1摘要(长度固定更简短)</span></div><div class="line">    hasher_proto = sha1()</div><div class="line">    <span class="comment"># 查找所有href属性以/question打头的a标签</span></div><div class="line">    <span class="keyword">for</span> a_tag <span class="keyword">in</span> soup.find_all(<span class="string">'a'</span>, &#123;<span class="string">'href'</span>: href_regex&#125;):</div><div class="line">        <span class="comment"># 获取a标签的href属性值并组装完整的URL</span></div><div class="line">        href = a_tag.attrs[<span class="string">'href'</span>]</div><div class="line">        full_url = urljoin(base_url, href)</div><div class="line">        <span class="comment"># 传入URL生成SHA1摘要</span></div><div class="line">        hasher = hasher_proto.copy()</div><div class="line">        hasher.update(full_url.encode(<span class="string">'utf-8'</span>))</div><div class="line">        field_key = hasher.hexdigest()</div><div class="line">        <span class="comment"># 如果Redis的键'zhihu'对应的hash数据类型中没有URL的摘要就访问页面并缓存</span></div><div class="line">        <span class="keyword">if</span> <span class="keyword">not</span> client.hexists(<span class="string">'zhihu'</span>, field_key):</div><div class="line">            html_page = requests.get(full_url, headers=headers).text</div><div class="line">            <span class="comment"># 对页面进行序列化和压缩操作</span></div><div class="line">            zipped_page = zlib.compress(pickle.dumps(html_page))</div><div class="line">            <span class="comment"># 使用hash数据类型保存URL摘要及其对应的页面代码</span></div><div class="line">            client.hset(<span class="string">'zhihu'</span>, field_key, zipped_page)</div><div class="line">    <span class="comment"># 显示总共缓存了多少个页面</span></div><div class="line">    print(<span class="string">'Total %d question pages found.'</span> % client.hlen(<span class="string">'zhihu'</span>))</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h2 id="并发下载"><a href="#并发下载" class="headerlink" title="并发下载"></a>并发下载</h2><h3 id="多线程和多进程回顾"><a href="#多线程和多进程回顾" class="headerlink" title="多线程和多进程回顾"></a>多线程和多进程回顾</h3><p>在前面的<a href="../Day01-15/Day13/进程和线程.md">《进程和线程》</a>一文中，我们已经对在Python中使用多进程和多线程实现并发编程进行了简明的讲解，在此我们补充几个知识点。</p>
<h4 id="threading-local类"><a href="#threading-local类" class="headerlink" title="threading.local类"></a>threading.local类</h4><p>使用线程时最不愿意遇到的情况就是多个线程竞争资源，在这种情况下为了保证资源状态的正确性，我们可能需要对资源进行加锁保护的处理，这一方面会导致程序失去并发性，另外如果多个线程竞争多个资源时，还有可能因为加锁方式的不当导致<a href="https://zh.wikipedia.org/wiki/%E6%AD%BB%E9%94%81" target="_blank" rel="external">死锁</a>。要解决多个线程竞争资源的问题，其中一个方案就是让每个线程都持有资源的副本（拷贝），这样每个线程可以操作自己所持有的资源，从而规避对资源的竞争。</p>
<p>要实现将资源和持有资源的线程进行绑定的操作，最简单的做法就是使用threading模块的local类，在网络爬虫开发中，就可以使用local类为每个线程绑定一个MySQL数据库连接或Redis客户端对象，这样通过线程可以直接获得这些资源，既解决了资源竞争的问题，又避免了在函数和方法调用时传递这些资源。具体的请参考本章多线程爬取“手机搜狐网”（Redis版）的实例代码。</p>
<h4 id="concurrent-futures模块"><a href="#concurrent-futures模块" class="headerlink" title="concurrent.futures模块"></a>concurrent.futures模块</h4><p>Python3.2带来了<code>concurrent.futures</code> 模块，这个模块包含了线程池和进程池、管理并行编程任务、处理非确定性的执行流程、进程/线程同步等功能。关于这部分的内容推荐大家阅读<a href="http://python-parallel-programmning-cookbook.readthedocs.io/zh_CN/latest/index.html" target="_blank" rel="external">《Python并行编程》</a>。</p>
<h4 id="分布式进程"><a href="#分布式进程" class="headerlink" title="分布式进程"></a>分布式进程</h4><p>使用多进程的时候，可以将进程部署在多个主机节点上，Python的<code>multiprocessing</code>模块不但支持多进程，其中<code>managers</code>子模块还支持把多进程部署到多个节点上。当然，要部署分布式进程，首先需要一个服务进程作为调度者，进程之间通过网络进行通信来实现对进程的控制和调度，由于<code>managers</code>模块已经对这些做出了很好的封装，因此在无需了解网络通信细节的前提下，就可以编写分布式多进程应用。具体的请参照本章分布式多进程爬取“手机搜狐网”的实例代码。</p>
<h3 id="协程和异步I-O"><a href="#协程和异步I-O" class="headerlink" title="协程和异步I/O"></a>协程和异步I/O</h3><h4 id="协程的概念"><a href="#协程的概念" class="headerlink" title="协程的概念"></a>协程的概念</h4><p>协程（coroutine）通常又称之为微线程或纤程，它是相互协作的一组子程序（函数）。所谓相互协作指的是在执行函数A时，可以随时中断去执行函数B，然后又中断继续执行函数A。注意，这一过程并不是函数调用（因为没有调用语句），整个过程看似像多线程，然而协程只有一个线程执行。协程通过<code>yield</code>关键字和 <code>send()</code>操作来转移执行权，协程之间不是调用者与被调用者的关系。</p>
<p>协程的优势在于以下两点：</p>
<ol>
<li>执行效率极高，因为子程序（函数）切换不是线程切换，由程序自身控制，没有切换线程的开销。</li>
<li>不需要多线程的锁机制，因为只有一个线程，也不存在竞争资源的问题，当然也就不需要对资源加锁保护，因此执行效率高很多。</li>
</ol>
<blockquote>
<p>说明：协程适合处理的是I/O密集型任务，处理CPU密集型任务并不是它的长处，如果要提升CPU的利用率可以考虑“多进程+协程”的模式。</p>
</blockquote>
<h4 id="历史回顾"><a href="#历史回顾" class="headerlink" title="历史回顾"></a>历史回顾</h4><ol>
<li>Python 2.2：第一次提出了生成器（最初称之为迭代器）的概念（PEP 255）。</li>
<li>Python 2.5：引入了将对象发送回暂停了的生成器这一特性即生成器的<code>send()</code>方法（PEP 342）。</li>
<li>Python 3.3：添加了<code>yield from</code>特性，允许从迭代器中返回任何值（注意生成器本身也是迭代器），这样我们就可以串联生成器并且重构出更好的生成器。</li>
<li>Python 3.4：引入<code>asyncio.coroutine</code>装饰器用来标记作为协程的函数，协程函数和<code>asyncio</code>及其事件循环一起使用，来实现异步I/O操作。</li>
<li>Python 3.5：引入了<code>async</code>和<code>await</code>，可以使用<code>async def</code>来定义一个协程函数，这个函数中不能包含任何形式的<code>yield</code>语句，但是可以使用<code>return</code>或<code>await</code>从协程中返回值。</li>
</ol>
<h4 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h4><ol>
<li><p>生成器 - 数据的生产者。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 倒计数生成器</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">countdown</span><span class="params">(n)</span>:</span></div><div class="line">    <span class="keyword">while</span> n &gt; <span class="number">0</span>:</div><div class="line">        <span class="keyword">yield</span> n</div><div class="line">        n -= <span class="number">1</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    <span class="keyword">for</span> num <span class="keyword">in</span> countdown(<span class="number">5</span>):</div><div class="line">        print(<span class="string">f'Countdown: <span class="subst">&#123;num&#125;</span>'</span>)</div><div class="line">        sleep(<span class="number">1</span>)</div><div class="line">    print(<span class="string">'Countdown Over!'</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>生成器还可以叠加来组成生成器管道，代码如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment"># Fibonacci数生成器</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">fib</span><span class="params">()</span>:</span></div><div class="line">    a, b = <span class="number">0</span>, <span class="number">1</span></div><div class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">        a, b = b, a + b</div><div class="line">        <span class="keyword">yield</span> a</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 偶数生成器</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">even</span><span class="params">(gen)</span>:</span></div><div class="line">    <span class="keyword">for</span> val <span class="keyword">in</span> gen:</div><div class="line">        <span class="keyword">if</span> val % <span class="number">2</span> == <span class="number">0</span>:</div><div class="line">            <span class="keyword">yield</span> val</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    gen = even(fib())</div><div class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">10</span>):</div><div class="line">        print(next(gen))</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
</li>
<li><p>协程 - 数据的消费者。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 生成器 - 数据生产者</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">countdown_gen</span><span class="params">(n, consumer)</span>:</span></div><div class="line">    consumer.send(<span class="keyword">None</span>)</div><div class="line">    <span class="keyword">while</span> n &gt; <span class="number">0</span>:</div><div class="line">        consumer.send(n)</div><div class="line">        n -= <span class="number">1</span></div><div class="line">    consumer.send(<span class="keyword">None</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 协程 - 数据消费者</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">countdown_con</span><span class="params">()</span>:</span></div><div class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">        n = <span class="keyword">yield</span></div><div class="line">        <span class="keyword">if</span> n:</div><div class="line">            print(<span class="string">f'Countdown <span class="subst">&#123;n&#125;</span>'</span>)</div><div class="line">            sleep(<span class="number">1</span>)</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            print(<span class="string">'Countdown Over!'</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    countdown_gen(<span class="number">5</span>, countdown_con())</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<blockquote>
<p>说明：上面代码中countdown_gen函数中的第1行consumer.send(None)是为了激活生成器，通俗的说就是让生成器执行到有yield关键字的地方挂起，当然也可以通过next(consumer)来达到同样的效果。如果不愿意每次都用这样的代码来“预激”生成器，可以写一个包装器来完成该操作，代码如下所示。</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> wraps</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">coroutine</span><span class="params">(fn)</span>:</span></div><div class="line"></div><div class="line"><span class="meta">    @wraps(fn)</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(*args, **kwargs)</span>:</span></div><div class="line">        gen = fn(*args, **kwargs)</div><div class="line">        next(gen)</div><div class="line">        <span class="keyword">return</span> gen</div><div class="line"></div><div class="line">    <span class="keyword">return</span> wrapper</div></pre></td></tr></table></figure>
<p>这样就可以使用<code>@coroutine</code>装饰器对协程进行预激操作，不需要再写重复代码来激活协程。</p>
</li>
<li><p>异步I/O - 非阻塞式I/O操作。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">import</span> asyncio</div><div class="line"></div><div class="line"></div><div class="line"><span class="meta">@asyncio.coroutine</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">countdown</span><span class="params">(name, n)</span>:</span></div><div class="line">    <span class="keyword">while</span> n &gt; <span class="number">0</span>:</div><div class="line">        print(<span class="string">f'Countdown[<span class="subst">&#123;name&#125;</span>]: <span class="subst">&#123;n&#125;</span>'</span>)</div><div class="line">        <span class="keyword">yield</span> <span class="keyword">from</span> asyncio.sleep(<span class="number">1</span>)</div><div class="line">        n -= <span class="number">1</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    loop = asyncio.get_event_loop()</div><div class="line">    tasks = [</div><div class="line">        countdown(<span class="string">"A"</span>, <span class="number">10</span>), countdown(<span class="string">"B"</span>, <span class="number">5</span>),</div><div class="line">    ]</div><div class="line">    loop.run_until_complete(asyncio.wait(tasks))</div><div class="line">    loop.close()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
</li>
<li><p><code>async</code>和<code>await</code>。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">import</span> asyncio</div><div class="line"><span class="keyword">import</span> aiohttp</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">download</span><span class="params">(url)</span>:</span></div><div class="line">    print(<span class="string">'Fetch:'</span>, url)</div><div class="line">    <span class="keyword">async</span> <span class="keyword">with</span> aiohttp.ClientSession() <span class="keyword">as</span> session:</div><div class="line">        <span class="keyword">async</span> <span class="keyword">with</span> session.get(url) <span class="keyword">as</span> resp:</div><div class="line">            print(url, <span class="string">'---&gt;'</span>, resp.status)</div><div class="line">            print(url, <span class="string">'---&gt;'</span>, resp.cookies)</div><div class="line">            print(<span class="string">'\n\n'</span>, <span class="keyword">await</span> resp.text())</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    loop = asyncio.get_event_loop()</div><div class="line">    urls = [</div><div class="line">        <span class="string">'https://www.baidu.com'</span>,</div><div class="line">        <span class="string">'http://www.sohu.com/'</span>,</div><div class="line">        <span class="string">'http://www.sina.com.cn/'</span>,</div><div class="line">        <span class="string">'https://www.taobao.com/'</span>,</div><div class="line">        <span class="string">'https://www.jd.com/'</span></div><div class="line">    ]</div><div class="line">    tasks = [download(url) <span class="keyword">for</span> url <span class="keyword">in</span> urls]</div><div class="line">    loop.run_until_complete(asyncio.wait(tasks))</div><div class="line">    loop.close()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>上面的代码使用了<a href="https://github.com/aio-libs/aiohttp" target="_blank" rel="external">AIOHTTP</a>这个非常著名的第三方库，它实现了HTTP客户端和HTTP服务器的功能，对异步操作提供了非常好的支持，有兴趣可以阅读它的<a href="https://aiohttp.readthedocs.io/en/stable/" target="_blank" rel="external">官方文档</a>。</p>
</li>
</ol>
<h3 id="实例-多线程爬取“手机搜狐网”所有页面。"><a href="#实例-多线程爬取“手机搜狐网”所有页面。" class="headerlink" title="实例 - 多线程爬取“手机搜狐网”所有页面。"></a>实例 - 多线程爬取“手机搜狐网”所有页面。</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">import</span> pickle</div><div class="line"><span class="keyword">import</span> zlib</div><div class="line"><span class="keyword">from</span> enum <span class="keyword">import</span> Enum, unique</div><div class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> sha1</div><div class="line"><span class="keyword">from</span> random <span class="keyword">import</span> random</div><div class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread, current_thread, local</div><div class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</div><div class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlparse</div><div class="line"></div><div class="line"><span class="keyword">import</span> pymongo</div><div class="line"><span class="keyword">import</span> redis</div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"><span class="keyword">from</span> bson <span class="keyword">import</span> Binary</div><div class="line"></div><div class="line"></div><div class="line"><span class="meta">@unique</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">SpiderStatus</span><span class="params">(Enum)</span>:</span></div><div class="line">    IDLE = <span class="number">0</span></div><div class="line">    WORKING = <span class="number">1</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">decode_page</span><span class="params">(page_bytes, charsets=<span class="params">(<span class="string">'utf-8'</span>,)</span>)</span>:</span></div><div class="line">    page_html = <span class="keyword">None</span></div><div class="line">    <span class="keyword">for</span> charset <span class="keyword">in</span> charsets:</div><div class="line">        <span class="keyword">try</span>:</div><div class="line">            page_html = page_bytes.decode(charset)</div><div class="line">            <span class="keyword">break</span></div><div class="line">        <span class="keyword">except</span> UnicodeDecodeError:</div><div class="line">            <span class="keyword">pass</span></div><div class="line">    <span class="keyword">return</span> page_html</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Retry</span><span class="params">(object)</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, *, retry_times=<span class="number">3</span>,</span></span></div><div class="line"><span class="function"><span class="params">                 wait_secs=<span class="number">5</span>, errors=<span class="params">(Exception, )</span>)</span>:</span></div><div class="line">        self.retry_times = retry_times</div><div class="line">        self.wait_secs = wait_secs</div><div class="line">        self.errors = errors</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__call__</span><span class="params">(self, fn)</span>:</span></div><div class="line"></div><div class="line">        <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(*args, **kwargs)</span>:</span></div><div class="line">            <span class="keyword">for</span> _ <span class="keyword">in</span> range(self.retry_times):</div><div class="line">                <span class="keyword">try</span>:</div><div class="line">                    <span class="keyword">return</span> fn(*args, **kwargs)</div><div class="line">                <span class="keyword">except</span> self.errors <span class="keyword">as</span> e:</div><div class="line">                    print(e)</div><div class="line">                    sleep((random() + <span class="number">1</span>) * self.wait_secs)</div><div class="line">            <span class="keyword">return</span> <span class="keyword">None</span></div><div class="line"></div><div class="line">        <span class="keyword">return</span> wrapper</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Spider</span><span class="params">(object)</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></div><div class="line">        self.status = SpiderStatus.IDLE</div><div class="line"></div><div class="line"><span class="meta">    @Retry()</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fetch</span><span class="params">(self, current_url, *, charsets=<span class="params">(<span class="string">'utf-8'</span>, )</span>,</span></span></div><div class="line"><span class="function"><span class="params">              user_agent=None, proxies=None)</span>:</span></div><div class="line">        thread_name = current_thread().name</div><div class="line">        print(<span class="string">f'[<span class="subst">&#123;thread_name&#125;</span>]: <span class="subst">&#123;current_url&#125;</span>'</span>)</div><div class="line">        headers = &#123;<span class="string">'user-agent'</span>: user_agent&#125; <span class="keyword">if</span> user_agent <span class="keyword">else</span> &#123;&#125;</div><div class="line">        resp = requests.get(current_url,</div><div class="line">                            headers=headers, proxies=proxies)</div><div class="line">        <span class="keyword">return</span> decode_page(resp.content, charsets) \</div><div class="line">            <span class="keyword">if</span> resp.status_code == <span class="number">200</span> <span class="keyword">else</span> <span class="keyword">None</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, html_page, *, domain=<span class="string">'m.sohu.com'</span>)</span>:</span></div><div class="line">        soup = BeautifulSoup(html_page, <span class="string">'lxml'</span>)</div><div class="line">        <span class="keyword">for</span> a_tag <span class="keyword">in</span> soup.body.select(<span class="string">'a[href]'</span>):</div><div class="line">            parser = urlparse(a_tag.attrs[<span class="string">'href'</span>])</div><div class="line">            scheme = parser.scheme <span class="keyword">or</span> <span class="string">'http'</span></div><div class="line">            netloc = parser.netloc <span class="keyword">or</span> domain</div><div class="line">            <span class="keyword">if</span> scheme != <span class="string">'javascript'</span> <span class="keyword">and</span> netloc == domain:</div><div class="line">                path = parser.path</div><div class="line">                query = <span class="string">'?'</span> + parser.query <span class="keyword">if</span> parser.query <span class="keyword">else</span> <span class="string">''</span></div><div class="line">                full_url = <span class="string">f'<span class="subst">&#123;scheme&#125;</span>://<span class="subst">&#123;netloc&#125;</span><span class="subst">&#123;path&#125;</span><span class="subst">&#123;query&#125;</span>'</span></div><div class="line">                redis_client = thread_local.redis_client</div><div class="line">                <span class="keyword">if</span> <span class="keyword">not</span> redis_client.sismember(<span class="string">'visited_urls'</span>, full_url):</div><div class="line">                    redis_client.rpush(<span class="string">'m_sohu_task'</span>, full_url)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">extract</span><span class="params">(self, html_page)</span>:</span></div><div class="line">        <span class="keyword">pass</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">store</span><span class="params">(self, data_dict)</span>:</span></div><div class="line">        <span class="comment"># redis_client = thread_local.redis_client</span></div><div class="line">        <span class="comment"># mongo_db = thread_local.mongo_db</span></div><div class="line">        <span class="keyword">pass</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">SpiderThread</span><span class="params">(Thread)</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, spider)</span>:</span></div><div class="line">        super().__init__(name=name, daemon=<span class="keyword">True</span>)</div><div class="line">        self.spider = spider</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></div><div class="line">        redis_client = redis.Redis(host=<span class="string">'1.2.3.4'</span>, port=<span class="number">6379</span>, password=<span class="string">'1qaz2wsx'</span>)</div><div class="line">        mongo_client = pymongo.MongoClient(host=<span class="string">'1.2.3.4'</span>, port=<span class="number">27017</span>)</div><div class="line">        thread_local.redis_client = redis_client</div><div class="line">        thread_local.mongo_db = mongo_client.msohu </div><div class="line">        <span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">            current_url = redis_client.lpop(<span class="string">'m_sohu_task'</span>)</div><div class="line">            <span class="keyword">while</span> <span class="keyword">not</span> current_url:</div><div class="line">                current_url = redis_client.lpop(<span class="string">'m_sohu_task'</span>)</div><div class="line">            self.spider.status = SpiderStatus.WORKING</div><div class="line">            current_url = current_url.decode(<span class="string">'utf-8'</span>)</div><div class="line">            <span class="keyword">if</span> <span class="keyword">not</span> redis_client.sismember(<span class="string">'visited_urls'</span>, current_url):</div><div class="line">                redis_client.sadd(<span class="string">'visited_urls'</span>, current_url)</div><div class="line">                html_page = self.spider.fetch(current_url)</div><div class="line">                <span class="keyword">if</span> html_page <span class="keyword">not</span> <span class="keyword">in</span> [<span class="keyword">None</span>, <span class="string">''</span>]:</div><div class="line">                    hasher = hasher_proto.copy()</div><div class="line">                    hasher.update(current_url.encode(<span class="string">'utf-8'</span>))</div><div class="line">                    doc_id = hasher.hexdigest()</div><div class="line">                    sohu_data_coll = mongo_client.msohu.webpages</div><div class="line">                    <span class="keyword">if</span> <span class="keyword">not</span> sohu_data_coll.find_one(&#123;<span class="string">'_id'</span>: doc_id&#125;):</div><div class="line">                        sohu_data_coll.insert_one(&#123;</div><div class="line">                            <span class="string">'_id'</span>: doc_id,</div><div class="line">                            <span class="string">'url'</span>: current_url,</div><div class="line">                            <span class="string">'page'</span>: Binary(zlib.compress(pickle.dumps(html_page)))</div><div class="line">                        &#125;)</div><div class="line">                    self.spider.parse(html_page)</div><div class="line">            self.spider.status = SpiderStatus.IDLE</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_any_alive</span><span class="params">(spider_threads)</span>:</span></div><div class="line">    <span class="keyword">return</span> any([spider_thread.spider.status == SpiderStatus.WORKING</div><div class="line">                <span class="keyword">for</span> spider_thread <span class="keyword">in</span> spider_threads])</div><div class="line"></div><div class="line"></div><div class="line">thread_local = local()</div><div class="line">hasher_proto = sha1()</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    redis_client = redis.Redis(host=<span class="string">'1.2.3.4'</span>, port=<span class="number">6379</span>, password=<span class="string">'1qaz2wsx'</span>)</div><div class="line">    <span class="keyword">if</span> <span class="keyword">not</span> redis_client.exists(<span class="string">'m_sohu_task'</span>):</div><div class="line">        redis_client.rpush(<span class="string">'m_sohu_task'</span>, <span class="string">'http://m.sohu.com/'</span>)</div><div class="line"></div><div class="line">    spider_threads = [SpiderThread(<span class="string">'thread-%d'</span> % i, Spider())</div><div class="line">                      <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>)]</div><div class="line">    <span class="keyword">for</span> spider_thread <span class="keyword">in</span> spider_threads:</div><div class="line">        spider_thread.start()</div><div class="line"></div><div class="line">    <span class="keyword">while</span> redis_client.exists(<span class="string">'m_sohu_task'</span>) <span class="keyword">or</span> is_any_alive(spider_threads):</div><div class="line">        <span class="keyword">pass</span></div><div class="line"></div><div class="line">    print(<span class="string">'Over!'</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h2 id="表单交互和验证码处理"><a href="#表单交互和验证码处理" class="headerlink" title="表单交互和验证码处理"></a>表单交互和验证码处理</h2><h3 id="提交表单"><a href="#提交表单" class="headerlink" title="提交表单"></a>提交表单</h3><h4 id="手动提交"><a href="#手动提交" class="headerlink" title="手动提交"></a>手动提交</h4><h4 id="自动提交"><a href="#自动提交" class="headerlink" title="自动提交"></a>自动提交</h4><h3 id="验证码处理"><a href="#验证码处理" class="headerlink" title="验证码处理"></a>验证码处理</h3><h4 id="加载验证码"><a href="#加载验证码" class="headerlink" title="加载验证码"></a>加载验证码</h4><h4 id="光学字符识别"><a href="#光学字符识别" class="headerlink" title="光学字符识别"></a>光学字符识别</h4><p>光学字符识别（OCR）是从图像中抽取文本的工具，可以应用于公安、电信、物流、金融等诸多行业，例如识别车牌，身份证扫描识别、名片信息提取等。在爬虫开发中，如果遭遇了有文字验证码的表单，就可以利用OCR来进行验证码处理。Tesseract-OCR引擎最初是由惠普公司开发的光学字符识别系统，目前发布在Github上，由Google赞助开发。</p>
<h4 id="改善OCR"><a href="#改善OCR" class="headerlink" title="改善OCR"></a>改善OCR</h4><h4 id="处理更复杂的验证码"><a href="#处理更复杂的验证码" class="headerlink" title="处理更复杂的验证码"></a>处理更复杂的验证码</h4><h4 id="验证码处理服务"><a href="#验证码处理服务" class="headerlink" title="验证码处理服务"></a>验证码处理服务</h4><h2 id="Scrapy爬虫框架入门"><a href="#Scrapy爬虫框架入门" class="headerlink" title="Scrapy爬虫框架入门"></a>Scrapy爬虫框架入门</h2><h3 id="Scrapy概述"><a href="#Scrapy概述" class="headerlink" title="Scrapy概述"></a>Scrapy概述</h3><p>Scrapy是Python开发的一个非常流行的网络爬虫框架，可以用来抓取Web站点并从页面中提取结构化的数据，被广泛的用于数据挖掘、数据监测和自动化测试等领域。</p>
<h4 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h4><ol>
<li>Scrapy引擎（Engine）：Scrapy引擎是用来控制整个系统的数据处理流程。</li>
<li>调度器（Scheduler）：调度器从Scrapy引擎接受请求并排序列入队列，并在Scrapy引擎发出请求后返还给它们。</li>
<li>下载器（Downloader）：下载器的主要职责是抓取网页并将网页内容返还给蜘蛛（Spiders）。</li>
<li>蜘蛛（Spiders）：蜘蛛是有Scrapy用户自定义的用来解析网页并抓取特定URL返回的内容的类，每个蜘蛛都能处理一个域名或一组域名，简单的说就是用来定义特定网站的抓取和解析规则。</li>
<li>条目管道（Item Pipeline）：条目管道的主要责任是负责处理有蜘蛛从网页中抽取的数据条目，它的主要任务是清理、验证和存储数据。当页面被蜘蛛解析后，将被发送到条目管道，并经过几个特定的次序处理数据。每个条目管道组件都是一个Python类，它们获取了数据条目并执行对数据条目进行处理的方法，同时还需要确定是否需要在条目管道中继续执行下一步或是直接丢弃掉不处理。条目管道通常执行的任务有：清理HTML数据、验证解析到的数据（检查条目是否包含必要的字段）、检查是不是重复数据（如果重复就丢弃）、将解析到的数据存储到数据库（关系型数据库或NoSQL数据库）中。</li>
<li>中间件（Middlewares）：中间件是介于Scrapy引擎和其他组件之间的一个钩子框架，主要是为了提供自定义的代码来拓展Scrapy的功能，包括下载器中间件和蜘蛛中间件。</li>
</ol>
<h4 id="数据处理流程"><a href="#数据处理流程" class="headerlink" title="数据处理流程"></a>数据处理流程</h4><p>Scrapy的整个数据处理流程由Scrapy引擎进行控制，通常的运转流程包括以下的步骤：</p>
<ol>
<li><p>引擎询问蜘蛛需要处理哪个网站，并让蜘蛛将第一个需要处理的URL交给它。</p>
</li>
<li><p>引擎让调度器将需要处理的URL放在队列中。</p>
</li>
<li><p>引擎从调度那获取接下来进行爬取的页面。</p>
</li>
<li><p>调度将下一个爬取的URL返回给引擎，引擎将它通过下载中间件发送到下载器。</p>
</li>
<li><p>当网页被下载器下载完成以后，响应内容通过下载中间件被发送到引擎；如果下载失败了，引擎会通知调度器记录这个URL，待会再重新下载。</p>
</li>
<li><p>引擎收到下载器的响应并将它通过蜘蛛中间件发送到蜘蛛进行处理。</p>
</li>
<li><p>蜘蛛处理响应并返回爬取到的数据条目，此外还要将需要跟进的新的URL发送给引擎。</p>
</li>
<li><p>引擎将抓取到的数据条目送入条目管道，把新的URL发送给调度器放入队列中。</p>
</li>
</ol>
<p>上述操作中的2-8步会一直重复直到调度器中没有需要请求的URL，爬虫停止工作。</p>
<h3 id="安装和使用Scrapy"><a href="#安装和使用Scrapy" class="headerlink" title="安装和使用Scrapy"></a>安装和使用Scrapy</h3><p>可以先创建虚拟环境并在虚拟环境下使用pip安装scrapy。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">$</span><span class="bash"></span></div></pre></td></tr></table></figure>
<p>项目的目录结构如下图所示。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">(venv) $ tree</div><div class="line">.</div><div class="line">|____ scrapy.cfg</div><div class="line">|____ douban</div><div class="line">| |____ spiders</div><div class="line">| | |____ __init__.py</div><div class="line">| | |____ __pycache__</div><div class="line">| |____ __init__.py</div><div class="line">| |____ __pycache__</div><div class="line">| |____ middlewares.py</div><div class="line">| |____ settings.py</div><div class="line">| |____ items.py</div><div class="line">| |____ pipelines.py</div></pre></td></tr></table></figure>
<blockquote>
<p>说明：Windows系统的命令行提示符下有tree命令，但是Linux和MacOS的终端是没有tree命令的，可以用下面给出的命令来定义tree命令，其实是对find命令进行了定制并别名为tree。 </p>
<p><code>alias tree=&quot;find . -print | sed -e &#39;s;[^/]*/;|____;g;s;____|; |;g&#39;&quot;</code></p>
<p>Linux系统也可以通过yum或其他的包管理工具来安装tree。</p>
<p><code>yum install tree</code></p>
</blockquote>
<p>根据刚才描述的数据处理流程，基本上需要我们做的有以下几件事情：</p>
<ol>
<li><p>在items.py文件中定义字段，这些字段用来保存数据，方便后续的操作。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"></div><div class="line"><span class="comment"># Define here the models for your scraped items</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># See documentation in:</span></div><div class="line"><span class="comment"># https://doc.scrapy.org/en/latest/topics/items.html</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> scrapy</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">DoubanItem</span><span class="params">(scrapy.Item)</span>:</span></div><div class="line"></div><div class="line">    name = scrapy.Field()</div><div class="line">    year = scrapy.Field()</div><div class="line">    score = scrapy.Field()</div><div class="line">    director = scrapy.Field()</div><div class="line">    classification = scrapy.Field()</div><div class="line">    actor = scrapy.Field()</div></pre></td></tr></table></figure>
</li>
<li><p>在spiders文件夹中编写自己的爬虫。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">(venv) $ scrapy genspider movie movie.douban.com --template=crawl</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"><span class="keyword">import</span> scrapy</div><div class="line"><span class="keyword">from</span> scrapy.selector <span class="keyword">import</span> Selector</div><div class="line"><span class="keyword">from</span> scrapy.linkextractors <span class="keyword">import</span> LinkExtractor</div><div class="line"><span class="keyword">from</span> scrapy.spiders <span class="keyword">import</span> CrawlSpider, Rule</div><div class="line"></div><div class="line"><span class="keyword">from</span> douban.items <span class="keyword">import</span> DoubanItem</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">MovieSpider</span><span class="params">(CrawlSpider)</span>:</span></div><div class="line">    name = <span class="string">'movie'</span></div><div class="line">    allowed_domains = [<span class="string">'movie.douban.com'</span>]</div><div class="line">    start_urls = [<span class="string">'https://movie.douban.com/top250'</span>]</div><div class="line">    rules = (</div><div class="line">        Rule(LinkExtractor(allow=(<span class="string">r'https://movie.douban.com/top250\?start=\d+.*'</span>))),</div><div class="line">        Rule(LinkExtractor(allow=(<span class="string">r'https://movie.douban.com/subject/\d+'</span>)), callback=<span class="string">'parse_item'</span>),</div><div class="line">    )</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse_item</span><span class="params">(self, response)</span>:</span></div><div class="line">        sel = Selector(response)</div><div class="line">        item = DoubanItem()</div><div class="line">        item[<span class="string">'name'</span>]=sel.xpath(<span class="string">'//*[@id="content"]/h1/span[1]/text()'</span>).extract()</div><div class="line">        item[<span class="string">'year'</span>]=sel.xpath(<span class="string">'//*[@id="content"]/h1/span[2]/text()'</span>).re(<span class="string">r'\((\d+)\)'</span>)</div><div class="line">        item[<span class="string">'score'</span>]=sel.xpath(<span class="string">'//*[@id="interest_sectl"]/div/p[1]/strong/text()'</span>).extract()</div><div class="line">        item[<span class="string">'director'</span>]=sel.xpath(<span class="string">'//*[@id="info"]/span[1]/a/text()'</span>).extract()</div><div class="line">        item[<span class="string">'classification'</span>]= sel.xpath(<span class="string">'//span[@property="v:genre"]/text()'</span>).extract()</div><div class="line">        item[<span class="string">'actor'</span>]= sel.xpath(<span class="string">'//*[@id="info"]/span[3]/a[1]/text()'</span>).extract()</div><div class="line">        <span class="keyword">return</span> item</div></pre></td></tr></table></figure>
</li>
<li><p>在pipelines.py中完成对数据进行持久化的操作。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"></div><div class="line"><span class="comment"># Define your item pipelines here</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># Don't forget to add your pipeline to the ITEM_PIPELINES setting</span></div><div class="line"><span class="comment"># See: https://doc.scrapy.org/en/latest/topics/item-pipeline.html</span></div><div class="line"><span class="keyword">import</span> pymongo</div><div class="line"></div><div class="line"><span class="keyword">from</span> scrapy.exceptions <span class="keyword">import</span> DropItem</div><div class="line"><span class="keyword">from</span> scrapy.conf <span class="keyword">import</span> settings</div><div class="line"><span class="keyword">from</span> scrapy <span class="keyword">import</span> log</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">DoubanPipeline</span><span class="params">(object)</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></div><div class="line">        connection = pymongo.MongoClient(settings[<span class="string">'MONGODB_SERVER'</span>], settings[<span class="string">'MONGODB_PORT'</span>])</div><div class="line">        db = connection[settings[<span class="string">'MONGODB_DB'</span>]]</div><div class="line">        self.collection = db[settings[<span class="string">'MONGODB_COLLECTION'</span>]]</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_item</span><span class="params">(self, item, spider)</span>:</span></div><div class="line">        <span class="comment">#Remove invalid data</span></div><div class="line">        valid = <span class="keyword">True</span></div><div class="line">        <span class="keyword">for</span> data <span class="keyword">in</span> item:</div><div class="line">          <span class="keyword">if</span> <span class="keyword">not</span> data:</div><div class="line">            valid = <span class="keyword">False</span></div><div class="line">            <span class="keyword">raise</span> DropItem(<span class="string">"Missing %s of blogpost from %s"</span> %(data, item[<span class="string">'url'</span>]))</div><div class="line">        <span class="keyword">if</span> valid:</div><div class="line">        <span class="comment">#Insert data into database</span></div><div class="line">            new_moive=[&#123;</div><div class="line">                <span class="string">"name"</span>:item[<span class="string">'name'</span>][<span class="number">0</span>],</div><div class="line">                <span class="string">"year"</span>:item[<span class="string">'year'</span>][<span class="number">0</span>],</div><div class="line">                <span class="string">"score"</span>:item[<span class="string">'score'</span>],</div><div class="line">                <span class="string">"director"</span>:item[<span class="string">'director'</span>],</div><div class="line">                <span class="string">"classification"</span>:item[<span class="string">'classification'</span>],</div><div class="line">                <span class="string">"actor"</span>:item[<span class="string">'actor'</span>]</div><div class="line">            &#125;]</div><div class="line">            self.collection.insert(new_moive)</div><div class="line">            log.msg(<span class="string">"Item wrote to MongoDB database %s/%s"</span> %</div><div class="line">            (settings[<span class="string">'MONGODB_DB'</span>], settings[<span class="string">'MONGODB_COLLECTION'</span>]),</div><div class="line">            level=log.DEBUG, spider=spider) </div><div class="line">        <span class="keyword">return</span> item</div></pre></td></tr></table></figure>
</li>
<li><p>修改settings.py文件对项目进行配置。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"></div><div class="line"><span class="comment"># Scrapy settings for douban project</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># For simplicity, this file contains only settings considered important or</span></div><div class="line"><span class="comment"># commonly used. You can find more settings consulting the documentation:</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment">#     https://doc.scrapy.org/en/latest/topics/settings.html</span></div><div class="line"><span class="comment">#     https://doc.scrapy.org/en/latest/topics/downloader-middleware.html</span></div><div class="line"><span class="comment">#     https://doc.scrapy.org/en/latest/topics/spider-middleware.html</span></div><div class="line"></div><div class="line">BOT_NAME = <span class="string">'douban'</span></div><div class="line"></div><div class="line">SPIDER_MODULES = [<span class="string">'douban.spiders'</span>]</div><div class="line">NEWSPIDER_MODULE = <span class="string">'douban.spiders'</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># Crawl responsibly by identifying yourself (and your website) on the user-agent</span></div><div class="line">USER_AGENT = <span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_3) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.54 Safari/536.5'</span></div><div class="line"></div><div class="line"><span class="comment"># Obey robots.txt rules</span></div><div class="line">ROBOTSTXT_OBEY = <span class="keyword">True</span></div><div class="line"></div><div class="line"><span class="comment"># Configure maximum concurrent requests performed by Scrapy (default: 16)</span></div><div class="line"><span class="comment"># CONCURRENT_REQUESTS = 32</span></div><div class="line"></div><div class="line"><span class="comment"># Configure a delay for requests for the same website (default: 0)</span></div><div class="line"><span class="comment"># See https://doc.scrapy.org/en/latest/topics/settings.html#download-delay</span></div><div class="line"><span class="comment"># See also autothrottle settings and docs</span></div><div class="line">DOWNLOAD_DELAY = <span class="number">3</span></div><div class="line">RANDOMIZE_DOWNLOAD_DELAY = <span class="keyword">True</span></div><div class="line"><span class="comment"># The download delay setting will honor only one of:</span></div><div class="line"><span class="comment"># CONCURRENT_REQUESTS_PER_DOMAIN = 16</span></div><div class="line"><span class="comment"># CONCURRENT_REQUESTS_PER_IP = 16</span></div><div class="line"></div><div class="line"><span class="comment"># Disable cookies (enabled by default)</span></div><div class="line">COOKIES_ENABLED = <span class="keyword">True</span></div><div class="line"></div><div class="line">MONGODB_SERVER = <span class="string">'120.77.222.217'</span></div><div class="line">MONGODB_PORT = <span class="number">27017</span></div><div class="line">MONGODB_DB = <span class="string">'douban'</span></div><div class="line">MONGODB_COLLECTION = <span class="string">'movie'</span></div><div class="line"></div><div class="line"><span class="comment"># Disable Telnet Console (enabled by default)</span></div><div class="line"><span class="comment"># TELNETCONSOLE_ENABLED = False</span></div><div class="line"></div><div class="line"><span class="comment"># Override the default request headers:</span></div><div class="line"><span class="comment"># DEFAULT_REQUEST_HEADERS = &#123;</span></div><div class="line"><span class="comment">#   'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',</span></div><div class="line"><span class="comment">#   'Accept-Language': 'en',</span></div><div class="line"><span class="comment"># &#125;</span></div><div class="line"></div><div class="line"><span class="comment"># Enable or disable spider middlewares</span></div><div class="line"><span class="comment"># See https://doc.scrapy.org/en/latest/topics/spider-middleware.html</span></div><div class="line"><span class="comment"># SPIDER_MIDDLEWARES = &#123;</span></div><div class="line"><span class="comment">#    'douban.middlewares.DoubanSpiderMiddleware': 543,</span></div><div class="line"><span class="comment"># &#125;</span></div><div class="line"></div><div class="line"><span class="comment"># Enable or disable downloader middlewares</span></div><div class="line"><span class="comment"># See https://doc.scrapy.org/en/latest/topics/downloader-middleware.html</span></div><div class="line"><span class="comment"># DOWNLOADER_MIDDLEWARES = &#123;</span></div><div class="line"><span class="comment">#    'douban.middlewares.DoubanDownloaderMiddleware': 543,</span></div><div class="line"><span class="comment"># &#125;</span></div><div class="line"></div><div class="line"><span class="comment"># Enable or disable extensions</span></div><div class="line"><span class="comment"># See https://doc.scrapy.org/en/latest/topics/extensions.html</span></div><div class="line"><span class="comment"># EXTENSIONS = &#123;</span></div><div class="line"><span class="comment">#    'scrapy.extensions.telnet.TelnetConsole': None,</span></div><div class="line"><span class="comment"># &#125;</span></div><div class="line"></div><div class="line"><span class="comment"># Configure item pipelines</span></div><div class="line"><span class="comment"># See https://doc.scrapy.org/en/latest/topics/item-pipeline.html</span></div><div class="line">ITEM_PIPELINES = &#123;</div><div class="line">    <span class="string">'douban.pipelines.DoubanPipeline'</span>: <span class="number">400</span>,</div><div class="line">&#125;</div><div class="line"></div><div class="line">LOG_LEVEL = <span class="string">'DEBUG'</span></div><div class="line"></div><div class="line"><span class="comment"># Enable and configure the AutoThrottle extension (disabled by default)</span></div><div class="line"><span class="comment"># See https://doc.scrapy.org/en/latest/topics/autothrottle.html</span></div><div class="line"><span class="comment">#AUTOTHROTTLE_ENABLED = True</span></div><div class="line"><span class="comment"># The initial download delay</span></div><div class="line"><span class="comment">#AUTOTHROTTLE_START_DELAY = 5</span></div><div class="line"><span class="comment"># The maximum download delay to be set in case of high latencies</span></div><div class="line"><span class="comment">#AUTOTHROTTLE_MAX_DELAY = 60</span></div><div class="line"><span class="comment"># The average number of requests Scrapy should be sending in parallel to</span></div><div class="line"><span class="comment"># each remote server</span></div><div class="line"><span class="comment">#AUTOTHROTTLE_TARGET_CONCURRENCY = 1.0</span></div><div class="line"><span class="comment"># Enable showing throttling stats for every response received:</span></div><div class="line"><span class="comment">#AUTOTHROTTLE_DEBUG = False</span></div><div class="line"></div><div class="line"><span class="comment"># Enable and configure HTTP caching (disabled by default)</span></div><div class="line"><span class="comment"># See https://doc.scrapy.org/en/latest/topics/downloader-middleware.html#httpcache-middleware-settings</span></div><div class="line">HTTPCACHE_ENABLED = <span class="keyword">True</span></div><div class="line">HTTPCACHE_EXPIRATION_SECS = <span class="number">0</span></div><div class="line">HTTPCACHE_DIR = <span class="string">'httpcache'</span></div><div class="line">HTTPCACHE_IGNORE_HTTP_CODES = []</div><div class="line">HTTPCACHE_STORAGE = <span class="string">'scrapy.extensions.httpcache.FilesystemCacheStorage'</span></div></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="补充说明"><a href="#补充说明" class="headerlink" title="补充说明"></a>补充说明</h3><h4 id="XPath语法"><a href="#XPath语法" class="headerlink" title="XPath语法"></a>XPath语法</h4><ol>
<li><p>XPath路径表达式：XPath使用路径表达式来选取XML文档中的节点或者节点集。</p>
</li>
<li><p>XPath节点：元素、属性、文本、命名空间、处理指令、注释、根节点。</p>
</li>
<li><p>XPath语法。（注：下面的例子来自于<a href="http://www.runoob.com/" target="_blank" rel="external">菜鸟教程</a>网站的<a href="http://www.runoob.com/xpath/xpath-syntax.html" target="_blank" rel="external">XPath教程</a>。)</p>
<p>XML文件。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span><span class="meta">?&gt;</span></span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">bookstore</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">book</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">title</span> <span class="attr">lang</span>=<span class="string">"eng"</span>&gt;</span>Harry Potter<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">price</span>&gt;</span>29.99<span class="tag">&lt;/<span class="name">price</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">book</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">book</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">title</span> <span class="attr">lang</span>=<span class="string">"eng"</span>&gt;</span>Learning XML<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">price</span>&gt;</span>39.95<span class="tag">&lt;/<span class="name">price</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">book</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">bookstore</span>&gt;</span></div></pre></td></tr></table></figure>
<p>XPath语法。</p>
<p>| 路径表达式      | 结果                                                         |<br>| ————— | ———————————————————— |<br>| bookstore       | 选取 bookstore 元素的所有子节点。                            |<br>| /bookstore      | 选取根元素 bookstore。注释：假如路径起始于正斜杠( / )，则此路径始终代表到某元素的绝对路径！ |<br>| bookstore/book  | 选取属于 bookstore 的子元素的所有 book 元素。                |<br>| //book          | 选取所有 book 子元素，而不管它们在文档中的位置。             |<br>| bookstore//book | 选择属于 bookstore 元素的后代的所有 book 元素，而不管它们位于 bookstore 之下的什么位置。 |<br>| //@lang         | 选取名为 lang 的所有属性。                                   |</p>
<p>XPath谓词。</p>
<p>| 路径表达式                         | 结果                                                         |<br>| ———————————- | ———————————————————— |<br>| /bookstore/book[1]                 | 选取属于 bookstore 子元素的第一个 book 元素。                |<br>| /bookstore/book[last()]            | 选取属于 bookstore 子元素的最后一个 book 元素。              |<br>| /bookstore/book[last()-1]          | 选取属于 bookstore 子元素的倒数第二个 book 元素。            |<br>| /bookstore/book[position()<3] |="" 选取最前面的两个属于="" bookstore="" 元素的子元素的="" book="" 元素。="" title[@lang]="" 选取所有拥有名为="" lang="" 的属性的="" title="" title[@lang="eng" ]="" 选取所有="" 元素，且这些元素拥有值为="" eng="" 的="" 属性。="" book[price="">35.00]       | 选取 bookstore 元素的所有 book 元素，且其中的 price 元素的值须大于 35.00。 |<br>| /bookstore/book[price&gt;35.00]/title | 选取 bookstore 元素中的 book 元素的所有 title 元素，且其中的 price 元素的值须大于 35.00。 |</3]></p>
<p>通配符用法。</p>
<p>| 路径表达式   | 结果                              |<br>| ———— | ——————————— |<br>| /bookstore/<em> | 选取 bookstore 元素的所有子元素。 |<br>| //</em>          | 选取文档中的所有元素。            |<br>| //title[@*]  | 选取所有带有属性的 title 元素。   |</p>
<p>选取多个路径。</p>
<p>| 路径表达式                       | 结果                                                         |<br>| ——————————– | ———————————————————— |<br>| //book/title | //book/price     | 选取 book 元素的所有 title 和 price 元素。                   |<br>| //title | //price               | 选取文档中的所有 title 和 price 元素。                       |<br>| /bookstore/book/title | //price | 选取属于 bookstore 元素的 book 元素的所有 title 元素，以及文档中所有的 price 元素。 |</p>
</li>
</ol>
<h4 id="在Chrome浏览器中查看元素XPath语法"><a href="#在Chrome浏览器中查看元素XPath语法" class="headerlink" title="在Chrome浏览器中查看元素XPath语法"></a>在Chrome浏览器中查看元素XPath语法</h4><h2 id="那些年我们踩过的那些坑"><a href="#那些年我们踩过的那些坑" class="headerlink" title="那些年我们踩过的那些坑"></a>那些年我们踩过的那些坑</h2><h3 id="坑01-整数比较的坑"><a href="#坑01-整数比较的坑" class="headerlink" title="坑01 - 整数比较的坑"></a>坑01 - 整数比较的坑</h3><p>在 Python 中一切都是对象，整数也是对象，在比较两个整数时有两个运算符<code>==</code>和<code>is</code>，它们的区别是：</p>
<ul>
<li><code>is</code>比较的是两个整数对象的id值是否相等，也就是比较两个引用是否代表了内存中同一个地址。</li>
<li><code>==</code>比较的是两个整数对象的内容是否相等，使用<code>==</code>时其实是调用了对象的<code>__eq__()</code>方法。</li>
</ul>
<p>知道了<code>is</code>和<code>==</code>的区别之后，我们可以来看看下面的代码，了解Python中整数比较有哪些坑：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    x = y = <span class="number">-1</span></div><div class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">        x += <span class="number">1</span></div><div class="line">        y += <span class="number">1</span></div><div class="line">        <span class="keyword">if</span> x <span class="keyword">is</span> y:</div><div class="line">            print(<span class="string">'%d is %d'</span> % (x, y))</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            print(<span class="string">'Attention! %d is not %d'</span> % (x, y))</div><div class="line">            <span class="keyword">break</span></div><div class="line">            </div><div class="line">    x = y = <span class="number">0</span></div><div class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">        x -= <span class="number">1</span></div><div class="line">        y -= <span class="number">1</span></div><div class="line">        <span class="keyword">if</span> x <span class="keyword">is</span> y:</div><div class="line">            print(<span class="string">'%d is %d'</span> % (x, y))</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            print(<span class="string">'Attention! %d is not %d'</span> % (x, y))</div><div class="line">            <span class="keyword">break</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>上面代码的部分运行结果如下图所示，出现这个结果的原因是Python出于对性能的考虑所做的一项优化。对于整数对象，Python把一些频繁使用的整数对象缓存起来，保存到一个叫<code>small_ints</code>的链表中，在Python的整个生命周期内，任何需要引用这些整数对象的地方，都不再重新创建新的对象，而是直接引用缓存中的对象。Python把频繁使用的整数对象的值定在[-5, 256]这个区间，如果需要这个范围的整数，就直接从<code>small_ints</code>中获取引用而不是临时创建新的对象。因为大于256或小于-5的整数不在该范围之内，所以就算两个整数的值是一样，但它们是不同的对象。</p>
<p>当然仅仅如此这个坑就不值一提了，我们再看看下面的代码。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> dis</div><div class="line">a = <span class="number">257</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    b = <span class="number">257</span>  <span class="comment"># 第6行</span></div><div class="line">    c = <span class="number">257</span>  <span class="comment"># 第7行</span></div><div class="line">    print(b <span class="keyword">is</span> c)  <span class="comment"># True</span></div><div class="line">    print(a <span class="keyword">is</span> b)  <span class="comment"># False</span></div><div class="line">    print(a <span class="keyword">is</span> c)  <span class="comment"># False</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>程序的执行结果已经用注释写在代码上了。够坑吧！看上去<code>a</code>、<code>b</code>和<code>c</code>的值都是一样的，但是<code>is</code>运算的结果却不一样。为什么会出现这样的结果，首先我们来说说Python程序中的代码块。所谓代码块是程序的一个最小的基本执行单位，一个模块文件、一个函数体、一个类、交互式命令中的单行代码都叫做一个代码块。上面的代码由两个代码块构成，<code>a = 257</code>是一个代码块，<code>main</code>函数是另外一个代码块。Python内部为了进一步提高性能，凡是在一个代码块中创建的整数对象，如果值不在<code>small_ints</code>缓存范围之内，但在同一个代码块中已经存在一个值与其相同的整数对象了，那么就直接引用该对象，否则创建一个新的对象出来，这条规则对不在<code>small_ints</code>范围的负数并不适用，对负数值浮点数也不适用，但对非负浮点数和字符串都是适用的，这一点读者可以自行证明。所以 <code>b is c</code>返回了<code>True</code>，而<code>a</code>和<code>b</code>不在同一个代码块中，虽然值都是257，但却是两个不同的对象，<code>is</code>运算的结果自然是<code>False</code>了。<br>为了验证刚刚的结论，我们可以借用<code>dis</code>模块（听名字就知道是进行反汇编的模块）从字节码的角度来看看这段代码。如果不理解什么是字节码，可以先看看<a href="(http://www.cnblogs.com/restran/p/4903056.html">《谈谈 Python 程序的运行原理》</a>)这篇文章。可以先用<code>import dis</code>导入<code>dis</code>模块并按照如下所示的方式修改代码。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</div><div class="line">    main()</div><div class="line">    dis.dis(main)</div></pre></td></tr></table></figure>
<p>代码的执行结果如下图所示。可以看出代码第6行和第7行，也就是<code>main</code>函数中的257是从同一个位置加载的，因此是同一个对象；而代码第9行的<code>a</code>明显是从不同的地方加载的，因此引用的是不同的对象。</p>
<p>如果还想对这个问题进行进一步深挖，推荐大家阅读<a href="https://foofish.net/python_int_implement.html" target="_blank" rel="external">《Python整数对象实现原理》</a>这篇文章。</p>
<h3 id="坑02-嵌套列表的坑"><a href="#坑02-嵌套列表的坑" class="headerlink" title="坑02 - 嵌套列表的坑"></a>坑02 - 嵌套列表的坑</h3><p>Python中有一种内置的数据类型叫列表，它是一种容器，可以用来承载其他的对象（准确的说是其他对象的引用），列表中的对象可以称为列表的元素，很明显我们可以把列表作为列表中的元素，这就是所谓的嵌套列表。嵌套列表可以模拟出现实中的表格、矩阵、2D游戏的地图（如植物大战僵尸的花园）、棋盘（如国际象棋、黑白棋）等。但是在使用嵌套的列表时要小心，否则很可能遭遇非常尴尬的情况，下面是一个小例子。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    names = [<span class="string">'关羽'</span>, <span class="string">'张飞'</span>, <span class="string">'赵云'</span>, <span class="string">'马超'</span>, <span class="string">'黄忠'</span>]</div><div class="line">    subjs = [<span class="string">'语文'</span>, <span class="string">'数学'</span>, <span class="string">'英语'</span>]</div><div class="line">    scores = [[<span class="number">0</span>] * <span class="number">3</span>] * <span class="number">5</span></div><div class="line">    <span class="keyword">for</span> row, name <span class="keyword">in</span> enumerate(names):</div><div class="line">        print(<span class="string">'请输入%s的成绩'</span> % name)</div><div class="line">        <span class="keyword">for</span> col, subj <span class="keyword">in</span> enumerate(subjs):</div><div class="line">            scores[row][col] = float(input(subj + <span class="string">': '</span>))</div><div class="line">    print(scores)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>我们希望录入5个学生3门课程的成绩，于是定义了一个有5个元素的列表，而列表中的每个元素又是一个由3个元素构成的列表，这样一个列表的列表刚好跟一个表格是一致的，相当于有5行3列，接下来我们通过嵌套的for-in循环输入每个学生3门课程的成绩。程序执行完成后我们发现，每个学生3门课程的成绩是一模一样的，而且就是最后录入的那个学生的成绩。</p>
<p>要想把这个坑填平，我们首先要区分对象和对象的引用这两个概念，而要区分这两个概念，还得先说说内存中的栈和堆。我们经常会听人说起“堆栈”这个词，但实际上“堆”和“栈”是两个不同的概念。众所周知，一个程序运行时需要占用一些内存空间来存储数据和代码，那么这些内存从逻辑上又可以做进一步的划分。对底层语言（如C语言）有所了解的程序大都知道，程序中可以使用的内存从逻辑上可以为五个部分，按照地址从高到低依次是：栈（stack）、堆（heap）、数据段（data segment）、只读数据段（static area）和代码段（code segment）。其中，栈用来存储局部、临时变量，以及函数调用时保存现场和恢复现场需要用到的数据，这部分内存在代码块开始执行时自动分配，代码块执行结束时自动释放，通常由编译器自动管理；堆的大小不固定，可以动态的分配和回收，因此如果程序中有大量的数据需要处理，这些数据通常都放在堆上，如果堆空间没有正确的被释放会引发内存泄露的问题，而像Python、Java等编程语言都使用了垃圾回收机制来实现自动化的内存管理（自动回收不再使用的堆空间）。所以下面的代码中，变量<code>a</code>并不是真正的对象，它是对象的引用，相当于记录了对象在堆空间的地址，通过这个地址我们可以访问到对应的对象；同理，变量<code>b</code>是列表容器的引用，它引用了堆空间上的列表容器，而列表容器中并没有保存真正的对象，它保存的也仅仅是对象的引用。</p>
 <figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">a = object()</div><div class="line">b = [<span class="string">'apple'</span>, <span class="string">'pitaya'</span>, <span class="string">'grape'</span>]</div></pre></td></tr></table></figure>
<p>知道了这一点，我们可以回过头看看刚才的程序，我们对列表进行<code>[[0] * 3] * 5</code>操作时，仅仅是将<code>[0, 0, 0]</code>这个列表的地址进行了复制，并没有创建新的列表对象，所以容器中虽然有5个元素，但是这5个元素引用了同一个列表对象，这一点可以通过<code>id</code>函数检查<code>scores[0]</code>和<code>scores[1]</code>的地址得到证实。所以正确的代码应该按照如下的方式进行修改。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    names = [<span class="string">'关羽'</span>, <span class="string">'张飞'</span>, <span class="string">'赵云'</span>, <span class="string">'马超'</span>, <span class="string">'黄忠'</span>]</div><div class="line">    subjs = [<span class="string">'语文'</span>, <span class="string">'数学'</span>, <span class="string">'英语'</span>]</div><div class="line">    scores = [[]] * <span class="number">5</span></div><div class="line">    <span class="keyword">for</span> row, name <span class="keyword">in</span> enumerate(names):</div><div class="line">        print(<span class="string">'请输入%s的成绩'</span> % name)</div><div class="line">        scores[row] = [<span class="number">0</span>] * <span class="number">3</span></div><div class="line">        <span class="keyword">for</span> col, subj <span class="keyword">in</span> enumerate(subjs):</div><div class="line">            scores[row][col] = float(input(subj + <span class="string">': '</span>))</div><div class="line">    print(scores)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    names = [<span class="string">'关羽'</span>, <span class="string">'张飞'</span>, <span class="string">'赵云'</span>, <span class="string">'马超'</span>, <span class="string">'黄忠'</span>]</div><div class="line">    subjs = [<span class="string">'语文'</span>, <span class="string">'数学'</span>, <span class="string">'英语'</span>]</div><div class="line">    scores = [[<span class="number">0</span>] * <span class="number">3</span> <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">5</span>)]</div><div class="line">    <span class="keyword">for</span> row, name <span class="keyword">in</span> enumerate(names):</div><div class="line">        print(<span class="string">'请输入%s的成绩'</span> % name)</div><div class="line">        scores[row] = [<span class="number">0</span>] * <span class="number">3</span></div><div class="line">        <span class="keyword">for</span> col, subj <span class="keyword">in</span> enumerate(subjs):</div><div class="line">            scores[row][col] = float(input(subj + <span class="string">': '</span>))</div><div class="line">    print(scores)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>如果对内存的使用不是很理解，可以看看<a href="http://www.pythontutor.com/" target="_blank" rel="external">PythonTutor网站</a>上提供的代码可视化执行功能，通过可视化执行，我们可以看到内存是如何分配的，从而避免在使用嵌套列表或者复制对象时可能遇到的坑。</p>
<h3 id="坑03-访问修饰符的坑"><a href="#坑03-访问修饰符的坑" class="headerlink" title="坑03 - 访问修饰符的坑"></a>坑03 - 访问修饰符的坑</h3><p>用Python做过面向对象编程的人都知道，Python的类提供了两种访问控制权限，一种是公开，一种是私有（在属性或方法前加上双下划线）。而用惯了Java或C#这类编程语言的人都知道，类中的属性（数据抽象）通常都是私有的，其目的是为了将数据保护起来；而类中的方法（行为抽象）通常都是公开的，因为方法是对象向外界提供的服务。但是Python并没有从语法层面确保私有成员的私密性，因为它只是对类中所谓的私有成员进行了命名的变换，如果知道命名的规则照样可以直接访问私有成员，请看下面的代码。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">(object)</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, age)</span>:</span></div><div class="line">        self.__name = name</div><div class="line">        self.__age = age</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self.__name + <span class="string">': '</span> + str(self.__age)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    stu = Student(<span class="string">'骆昊'</span>, <span class="number">38</span>)</div><div class="line">    <span class="comment"># 'Student' object has no attribute '__name'</span></div><div class="line">    <span class="comment"># print(stu.__name)</span></div><div class="line">    <span class="comment"># 用下面的方式照样可以访问类中的私有成员</span></div><div class="line">    print(stu._Student__name)</div><div class="line">    print(stu._Student__age)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>Python为什么要做出这样的设定呢？用一句广为流传的格言来解释这个问题：“We are all consenting adults here”（我们都是成年人）。这句话表达了很多Python程序员的一个共同观点，那就是开放比封闭要好，我们应该自己对自己的行为负责而不是从语言层面来限制对数据或方法的访问。</p>
<p>所以在Python中我们实在没有必要将类中的属性或方法用双下划线开头的命名处理成私有的成员，因为这并没有任何实际的意义。如果想对属性或方法进行保护，我们建议用单下划线开头的受保护成员，虽然它也不能真正保护这些属性或方法，但是它相当于给调用者一个暗示，让调用者知道这是不应该直接访问的属性或方法，而且这样做并不影响子类去继承这些东西。</p>
<p>需要提醒大家注意的是，Python类中的那些魔法方法，如__str__、__repr__等，这些方法并不是私有成员哦，虽然它们以双下划线开头，但是他们也是以双下划线结尾的，这种命名并不是私有成员的命名，这一点对初学者来说真的很坑。</p>
<h2 id="玩转PyCharm-上"><a href="#玩转PyCharm-上" class="headerlink" title="玩转PyCharm(上)"></a>玩转PyCharm(上)</h2><p>PyCharm是由JetBrains公司开发的提供给Python专业的开发者的一个集成开发环境，它最大的优点是能够大大提升Python开发者的工作效率，为开发者集成了很多用起来非常顺手的功能，包括代码调试、高亮语法、代码跳转、智能提示、自动补全、单元测试、版本控制等等。此外，PyCharm还提供了对一些高级功能的支持，包括支持基于Django框架的Web开发、。</p>
<h3 id="PyCharm的安装"><a href="#PyCharm的安装" class="headerlink" title="PyCharm的安装"></a>PyCharm的安装</h3><p>可以在<a href="">JetBrains公司的官方网站</a>找到PyCharm的<a href="https://www.jetbrains.com/pycharm/download/" target="_blank" rel="external">下载链接</a>，有两个可供下载的版本一个是社区版一个是专业版，社区版在<a href="https://zh.wikipedia.org/wiki/Apache%E8%AE%B8%E5%8F%AF%E8%AF%81" target="_blank" rel="external">Apache许可证</a>下发布，专业版在专用许可证下发布（需要购买授权下载后可试用30天），其拥有许多额外功能。安装PyCharm需要有JRE（Java运行时环境）的支持，如果没有可以在安装过程中选择在线下载安装。</p>
<blockquote>
<p>说明：如果你是一名学生，希望购买PyCharm来使用，可以看看<a href="https://sales.jetbrains.com/hc/zh-cn/articles/207154369" target="_blank" rel="external">教育优惠官方申请指南</a>。</p>
</blockquote>
<h3 id="首次使用的设置"><a href="#首次使用的设置" class="headerlink" title="首次使用的设置"></a>首次使用的设置</h3><p>第一次使用PyCharm时，会有一个导入设置的向导，如果之前没有使用PyCharm或者没有保存过设置的就直接选择“Do not import settings”进入下一步即可。</p>
<p>专业版的PyCharm是需要激活的，<strong>强烈建议为优秀的软件支付费用</strong>，如果不用做商业用途，我们可以暂时选择试用30天或者使用社区版的PyCharm。</p>
<p> 接下来是选择UI主题，这个可以根据个人喜好进行选择。</p>
<p> 再接下来是创建可以在终端（命令行）中使用PyCharm项目的启动脚本，当然也可以直接跳过这一步。</p>
<p>然后可以选择需要安装哪些插件，我们可以暂时什么都不安装等需要的时候再来决定。</p>
<h3 id="用PyCharm创建项目"><a href="#用PyCharm创建项目" class="headerlink" title="用PyCharm创建项目"></a>用PyCharm创建项目</h3><p>点击上图中的“Start using PyCharm”按钮就可以开始使用PyCharm啦，首先来到的是一个欢迎页，在欢迎页上我们可以选择“创建新项目”、“打开已有项目”和“从版本控制系统中检出项目”。</p>
<p>如果选择了“Create New Project”来创建新项目就会打一个创建项目的向导页。</p>
<p>在如上图所示的界面中，我们可以选择创建项目的模板，包括了纯Python项目、基于各种不同框架的Web项目、Web前端项目、跨平台项目等各种不同的项目模板。如果选择Python的项目，那么有一个非常重要的设定是选择“New environment…”（创建新的虚拟环境）还是使用“Existing Interpreter”（已经存在的解释器）。前者肯定是更好的选择，因为新的虚拟环境不会对系统环境变量中配置的Python环境造成影响，简单举个例子就是你在虚拟环境下安装或者更新了任何三方库，它并不会对系统原有的Python解释器造成任何的影响，但代价是需要额外的存储空间来建立这个虚拟环境。</p>
<p>项目创建完成后就可以开始新建各种文件来书写Python代码了。</p>
<p>在工作窗口的右键菜单中可以找到“Run …”和“Debug …”菜单项，通过这两个菜单项我们就可以运行和调试我们的代码啦。建议关注一下菜单栏中的“Code”、“Refactor”和“Tools”菜单，这里面为编写Python代码提供了很多有用的帮助，我们在后面也会陆续为大家介绍这些功能。  </p>
<h2 id="要不要使用复杂表达式"><a href="#要不要使用复杂表达式" class="headerlink" title="要不要使用复杂表达式"></a>要不要使用复杂表达式</h2><p>Perl语言的原作者Larry Wall曾经说过，伟大的程序员都有三个优点：懒惰、暴躁和自负。乍一看这三个词语没有一个是褒义词，但在程序员的世界里，这三个词有不同的意义。首先，懒惰会促使程序员去写一些省事儿的程序来辅助自己或别人更好的完成工作，这样我们就无需做那些重复和繁琐的劳动；同理能够用3行代码解决的事情，我们也绝不会写出10行代码来。其次，暴躁会让程序员主动的去完成一些你还没有提出的工作，去优化自己的代码让它更有效率，能够3秒钟完成的任务，我们绝不能容忍1分钟的等待。最后，自负会促使程序员写出可靠无误的代码，我们写代码不是为了接受批评和指责，而是为了让其他人来膜拜。</p>
<p>那么接下来就有一个很有意思的问题值得探讨一下，我们需要一个程序从输入的三个数中找出最大的那个数。这个程序对任何会编程的人来说都是小菜一碟，甚至不会编程的人经过10分钟的学习也能搞定。下面是用来解决这个问题的Python代码。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">a = int(input(<span class="string">'a = '</span>))</div><div class="line">b = int(input(<span class="string">'b = '</span>))</div><div class="line">c = int(input(<span class="string">'c = '</span>))</div><div class="line"><span class="keyword">if</span> a &gt; b:</div><div class="line">    the_max = a</div><div class="line"><span class="keyword">else</span>:</div><div class="line">    the_max = b</div><div class="line"><span class="keyword">if</span> c &gt; the_max:</div><div class="line">    the_max = c</div><div class="line">print(<span class="string">'The max is:'</span>, the_max)</div></pre></td></tr></table></figure>
<p>但是我们刚才说了，程序员都是懒惰的，很多程序员都会使用三元条件运算符来改写上面的代码。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">a = int(input(<span class="string">'a = '</span>))</div><div class="line">b = int(input(<span class="string">'b = '</span>))</div><div class="line">c = int(input(<span class="string">'c = '</span>))</div><div class="line">the_max = a <span class="keyword">if</span> a &gt; b <span class="keyword">else</span> b</div><div class="line">the_max = c <span class="keyword">if</span> c &gt; the_max <span class="keyword">else</span> the_max</div><div class="line">print(<span class="string">'The max is:'</span>, the_max)</div></pre></td></tr></table></figure>
<p>需要说明的是，Python在2.5版本以前是没有上面代码第4行和第5行中使用的三元条件运算符的，究其原因是Guido van Rossum（Python之父）认为三元条件运算符并不能帮助 Python变得更加简洁，于是那些习惯了在C/C++或Java中使用三元条件运算符（在这些语言中，三元条件运算符也称为“Elvis运算符”，因为<code>?:</code>放在一起很像著名摇滚歌手猫王Elvis的大背头）的程序员试着用<code>and</code>和<code>or</code>运算符的短路特性来模拟出三元操作符，于是在那个年代，上面的代码是这样写的。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">a = int(input(<span class="string">'a = '</span>))</div><div class="line">b = int(input(<span class="string">'b = '</span>))</div><div class="line">c = int(input(<span class="string">'c = '</span>))</div><div class="line">the_max = a &gt; b <span class="keyword">and</span> a <span class="keyword">or</span> b</div><div class="line">the_max = c &gt; the_max <span class="keyword">and</span> c <span class="keyword">or</span> the_max</div><div class="line">print(<span class="string">'The max is:'</span>, the_max)</div></pre></td></tr></table></figure>
<p>但是这种做法在某些场景下是不能成立的，且看下面的代码。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">a = <span class="number">0</span></div><div class="line">b = <span class="number">-100</span></div><div class="line"><span class="comment"># 下面的代码本来预期输出a的值，结果却得到了b的值</span></div><div class="line"><span class="comment"># 因为a的值0在进行逻辑运算时会被视为False来处理</span></div><div class="line">print(<span class="keyword">True</span> <span class="keyword">and</span> a <span class="keyword">or</span> b)</div><div class="line"><span class="comment"># print(a if True else b)</span></div></pre></td></tr></table></figure>
<p>所以在Python 2.5以后引入了三元条件运算符来避免上面的风险（上面代码被注释掉的最后一句话）。那么，问题又来了，上面的代码还可以写得更简短吗？答案是肯定的。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">a = int(input(<span class="string">'a = '</span>))</div><div class="line">b = int(input(<span class="string">'b = '</span>))</div><div class="line">c = int(input(<span class="string">'c = '</span>))</div><div class="line">print(<span class="string">'The max is:'</span>, (a <span class="keyword">if</span> a &gt; b <span class="keyword">else</span> b) <span class="keyword">if</span> (a <span class="keyword">if</span> a &gt; b <span class="keyword">else</span> b) &gt; c <span class="keyword">else</span> c)</div></pre></td></tr></table></figure>
<p>但是，这样做真的好吗？如此复杂的表达式是不是让代码变得晦涩了很多呢？我们发现，在实际开发中很多开发者都喜欢过度的使用某种语言的特性或语法糖，于是简单的多行代码变成了复杂的单行表达式，这样做真的好吗？这个问题我也不止一次的问过自己，现在我能给出的答案是下面的代码，使用辅助函数。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">the_max</span><span class="params">(x, y)</span>:</span></div><div class="line">    <span class="keyword">return</span> x <span class="keyword">if</span> x &gt; y <span class="keyword">else</span> y</div><div class="line"></div><div class="line"></div><div class="line">a = int(input(<span class="string">'a = '</span>))</div><div class="line">b = int(input(<span class="string">'b = '</span>))</div><div class="line">c = int(input(<span class="string">'c = '</span>))</div><div class="line">print(<span class="string">'The max is:'</span>, the_max(the_max(a, b), c))</div></pre></td></tr></table></figure>
<p>上面的代码中，我定义了一个辅助函数<code>the_max</code>用来找出参数传入的两个值中较大的那一个，于是下面的输出语句可以通过两次调用<code>the_max</code>函数来找出三个数中的最大值，现在代码的可读性是不是好了很多。用辅助函数来替代复杂的表达式真的是一个不错的选择，关键是比较大小的逻辑转移到这个辅助函数后不仅可以反复调用它，而且还可以进行级联操作。</p>
<p>当然，很多语言中比较大小的函数根本没有必要自己来实现（通常都是内置函数），Python也是如此。Python内置的max函数利用了Python对可变参数的支持，允许一次性传入多个值或者一个迭代器并找出那个最大值，所以上面讨论的问题在Python中也就是一句话的事，但是从复杂表达式到使用辅助函数简化复杂表达式这个思想是非常值得玩味的，所以分享出来跟大家做一个交流。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">a = int(input(<span class="string">'a = '</span>))</div><div class="line">b = int(input(<span class="string">'b = '</span>))</div><div class="line">c = int(input(<span class="string">'c = '</span>))</div><div class="line">print(<span class="string">'The max is:'</span>, max(a, b, c))</div></pre></td></tr></table></figure>
<h2 id="PEP-8风格指南"><a href="#PEP-8风格指南" class="headerlink" title="PEP 8风格指南"></a>PEP 8风格指南</h2><p>PEP是Python Enhancement Proposal的缩写，通常翻译为“Python增强提案”。每个PEP都是一份为Python社区提供的指导Python往更好的方向发展的技术文档，其中的第8号增提案即PEP 8是针对Python语言编订的代码风格指南。尽管我们可以在保证语法没有问题的前提下随意书写Python代码，但是在实际开发中，采用一致的风格书写出可读性强的代码是每个专业的程序员应该做到的事情，也是每个公司的编程规范中会提出的要求，这些在多人协作开发一个项目（团队开发）的时候显得尤为重要。我们可以从Python官方网站的<a href="https://www.python.org/dev/peps/pep-0008/" target="_blank" rel="external">PEP 8链接</a>中找到该文档，下面我们对该文档的关键部分做一个简单的总结。</p>
<h3 id="空格的使用"><a href="#空格的使用" class="headerlink" title="空格的使用"></a>空格的使用</h3><ol>
<li><strong>使用空格来表示缩进而不要用制表符（Tab）</strong>。这一点对习惯了其他编程语言的人来说简直觉得不可理喻，因为绝大多数的程序员都会用Tab来表示缩进，但是要知道Python并没有像C/C++或Java那样的用花括号来构造一个代码块的语法，在Python中分支和循环结构都使用缩进来表示哪些代码属于同一个级别，鉴于此Python代码对缩进以及缩进宽度的依赖比其他很多语言都强得多。在不同的编辑器中，Tab的宽度可能是2、4或8个字符，甚至是其他更离谱的值，用Tab来表示缩进对Python代码来说可能是一场灾难。</li>
<li><strong>和语法相关的每一层缩进都用4个空格来表示。</strong></li>
<li><strong>每行的字符数不要超过79个字符，如果表达式因太长而占据了多行，除了首行之外的其余各行都应该在正常的缩进宽度上再加上4个空格。</strong></li>
<li><strong>函数和类的定义，代码前后都要用两个空行进行分隔。</strong></li>
<li><strong>在同一个类中，各个方法之间应该用一个空行进行分隔。</strong></li>
<li><strong>二元运算符的左右两侧应该保留一个空格，而且只要一个空格就好。</strong></li>
</ol>
<h3 id="标识符命名"><a href="#标识符命名" class="headerlink" title="标识符命名"></a>标识符命名</h3><p>PEP 8倡导用不同的命名风格来命名Python中不同的标识符，以便在阅读代码时能够通过标识符的名称来确定该标识符在Python中扮演了怎样的角色（在这一点上，Python自己的内置模块以及某些第三方模块都做得并不是很好）。</p>
<ol>
<li><strong>变量、函数和属性应该使用小写字母来拼写，如果有多个单词就使用下划线进行连接。</strong></li>
<li><strong>类中受保护的实例属性，应该以一个下划线开头。</strong></li>
<li><strong>类中私有的实例属性，应该以两个下划线开头。</strong></li>
<li><strong>类和异常的命名，应该每个单词首字母大写。</strong></li>
<li><strong>模块级别的常量，应该采用全大写字母，如果有多个单词就用下划线进行连接。</strong></li>
<li><strong>类的实例方法，应该把第一个参数命名为<code>self</code>以表示对象自身。</strong></li>
<li><strong>类的类方法，应该把第一个参数命名为<code>cls</code>以表示该类自身。</strong></li>
</ol>
<h3 id="表达式和语句"><a href="#表达式和语句" class="headerlink" title="表达式和语句"></a>表达式和语句</h3><p>在Python之禅（可以使用<code>import this</code>查看）中有这么一句名言：“There should be one– and preferably only one –obvious way to do it.”，翻译成中文是“做一件事应该有而且最好只有一种确切的做法”，这句话传达的思想在PEP 8中也是无处不在的。</p>
<ol>
<li><strong>采用内联形式的否定词，而不要把否定词放在整个表达式的前面。</strong>例如<code>if a is not b</code>就比<code>if not a is b</code>更容易让人理解。</li>
<li><strong>不要用检查长度的方式来判断字符串、列表等是否为<code>None</code>或者没有元素，应该用<code>if not x</code>这样的写法来检查它。</strong></li>
<li><strong>就算<code>if</code>分支、<code>for</code>循环、<code>except</code>异常捕获等中只有一行代码，也不要将代码和<code>if</code>、<code>for</code>、<code>except</code>等写在一起，分开写才会让代码更清晰。</strong></li>
<li><strong><code>import</code>语句总是放在文件开头的地方</strong>。</li>
<li><strong>引入模块的时候，<code>from math import sqrt</code>比<code>import math</code>更好。</strong></li>
<li><strong>如果有多个<code>import</code>语句，应该将其分为三部分，从上到下分别是Python标准模块、第三方模块和自定义模块，每个部分内部应该按照模块名称的字母表顺序来排列。</strong></li>
</ol>
<h2 id="Python惯例"><a href="#Python惯例" class="headerlink" title="Python惯例"></a>Python惯例</h2><p>“惯例”这个词指的是“习惯的做法，常规的办法，一贯的做法”，与这个词对应的英文单词叫“idiom”。由于Python跟其他很多编程语言在语法和使用上还是有比较显著的差别，因此作为一个Python开发者如果不能掌握这些惯例，就无法写出“Pythonic”的代码。下面我们总结了一些在Python开发中的惯用的代码。</p>
<ol>
<li><p>让代码既可以被导入又可以被执行。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div></pre></td></tr></table></figure>
</li>
<li><p>用下面的方式判断逻辑“真”或“假”。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> x:</div><div class="line"><span class="keyword">if</span> <span class="keyword">not</span> x:</div></pre></td></tr></table></figure>
<p><strong>好</strong>的代码：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">name = <span class="string">'jackfrued'</span></div><div class="line">fruits = [<span class="string">'apple'</span>, <span class="string">'orange'</span>, <span class="string">'grape'</span>]</div><div class="line">owners = &#123;<span class="string">'1001'</span>: <span class="string">'骆昊'</span>, <span class="string">'1002'</span>: <span class="string">'王大锤'</span>&#125;</div><div class="line"><span class="keyword">if</span> name <span class="keyword">and</span> fruits <span class="keyword">and</span> owners:</div><div class="line">    print(<span class="string">'I love fruits!'</span>)</div></pre></td></tr></table></figure>
<p><strong>不好</strong>的代码：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">name = <span class="string">'jackfrued'</span></div><div class="line">fruits = [<span class="string">'apple'</span>, <span class="string">'orange'</span>, <span class="string">'grape'</span>]</div><div class="line">owners = &#123;<span class="string">'1001'</span>: <span class="string">'骆昊'</span>, <span class="string">'1002'</span>: <span class="string">'王大锤'</span>&#125;</div><div class="line"><span class="keyword">if</span> name != <span class="string">''</span> <span class="keyword">and</span> len(fruits) &gt; <span class="number">0</span> <span class="keyword">and</span> owners != &#123;&#125;:</div><div class="line">    print(<span class="string">'I love fruits!'</span>)</div></pre></td></tr></table></figure>
</li>
<li><p>善于使用in运算符。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> x <span class="keyword">in</span> items: <span class="comment"># 包含</span></div><div class="line"><span class="keyword">for</span> x <span class="keyword">in</span> items: <span class="comment"># 迭代</span></div></pre></td></tr></table></figure>
<p><strong>好</strong>的代码：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">name = <span class="string">'Hao LUO'</span></div><div class="line"><span class="keyword">if</span> <span class="string">'L'</span> <span class="keyword">in</span> name:</div><div class="line">    print(<span class="string">'The name has an L in it.'</span>)</div></pre></td></tr></table></figure>
<p><strong>不好</strong>的代码：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">name = <span class="string">'Hao LUO'</span></div><div class="line"><span class="keyword">if</span> name.find(<span class="string">'L'</span>) != <span class="number">-1</span>:</div><div class="line">    print(<span class="string">'This name has an L in it!'</span>)</div></pre></td></tr></table></figure>
</li>
<li><p>不使用临时变量交换两个值。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">a, b = b, a</div></pre></td></tr></table></figure>
</li>
<li><p>用序列构建字符串。</p>
<p><strong>好</strong>的代码：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">chars = [<span class="string">'j'</span>, <span class="string">'a'</span>, <span class="string">'c'</span>, <span class="string">'k'</span>, <span class="string">'f'</span>, <span class="string">'r'</span>, <span class="string">'u'</span>, <span class="string">'e'</span>, <span class="string">'d'</span>]</div><div class="line">name = <span class="string">''</span>.join(chars)</div><div class="line">print(name)  <span class="comment"># jackfrued</span></div></pre></td></tr></table></figure>
<p><strong>不好</strong>的代码：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">chars = [<span class="string">'j'</span>, <span class="string">'a'</span>, <span class="string">'c'</span>, <span class="string">'k'</span>, <span class="string">'f'</span>, <span class="string">'r'</span>, <span class="string">'u'</span>, <span class="string">'e'</span>, <span class="string">'d'</span>]</div><div class="line">name = <span class="string">''</span></div><div class="line"><span class="keyword">for</span> char <span class="keyword">in</span> chars:</div><div class="line">    name += char</div><div class="line">print(name)  <span class="comment"># jackfrued</span></div></pre></td></tr></table></figure>
</li>
<li><p>EAFP优于LBYL。</p>
<p>EAFP - <strong>E</strong>asier to <strong>A</strong>sk <strong>F</strong>orgiveness than <strong>P</strong>ermission.</p>
<p>LBYL - <strong>L</strong>ook <strong>B</strong>efore <strong>Y</strong>ou <strong>L</strong>eap.</p>
<p><strong>好</strong>的代码：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">d = &#123;<span class="string">'x'</span>: <span class="string">'5'</span>&#125;</div><div class="line"><span class="keyword">try</span>:</div><div class="line">    value = int(d[<span class="string">'x'</span>])</div><div class="line">    print(value)</div><div class="line"><span class="keyword">except</span> (KeyError, TypeError, ValueError):</div><div class="line">    value = <span class="keyword">None</span></div></pre></td></tr></table></figure>
<p><strong>不好</strong>的代码：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">d = &#123;<span class="string">'x'</span>: <span class="string">'5'</span>&#125;</div><div class="line"><span class="keyword">if</span> <span class="string">'x'</span> <span class="keyword">in</span> d <span class="keyword">and</span> isinstance(d[<span class="string">'x'</span>], str) \</div><div class="line">     <span class="keyword">and</span> d[<span class="string">'x'</span>].isdigit():</div><div class="line">    value = int(d[<span class="string">'x'</span>])</div><div class="line">    print(value)</div><div class="line"><span class="keyword">else</span>:</div><div class="line">    value = <span class="keyword">None</span></div></pre></td></tr></table></figure>
</li>
<li><p>使用enumerate进行迭代。</p>
<p><strong>好</strong>的代码：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">fruits = [<span class="string">'orange'</span>, <span class="string">'grape'</span>, <span class="string">'pitaya'</span>, <span class="string">'blueberry'</span>]</div><div class="line"><span class="keyword">for</span> index, fruit <span class="keyword">in</span> enumerate(fruits):</div><div class="line"> print(index, <span class="string">':'</span>, fruit)</div></pre></td></tr></table></figure>
<p><strong>不好</strong>的代码：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">fruits = [<span class="string">'orange'</span>, <span class="string">'grape'</span>, <span class="string">'pitaya'</span>, <span class="string">'blueberry'</span>]</div><div class="line">index = <span class="number">0</span></div><div class="line"><span class="keyword">for</span> fruit <span class="keyword">in</span> fruits:</div><div class="line">    print(index, <span class="string">':'</span>, fruit)</div><div class="line">    index += <span class="number">1</span></div></pre></td></tr></table></figure>
</li>
<li><p>用生成式生成列表。</p>
<p><strong>好</strong>的代码：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">data = [<span class="number">7</span>, <span class="number">20</span>, <span class="number">3</span>, <span class="number">15</span>, <span class="number">11</span>]</div><div class="line">result = [num * <span class="number">3</span> <span class="keyword">for</span> num <span class="keyword">in</span> data <span class="keyword">if</span> num &gt; <span class="number">10</span>]</div><div class="line">print(result)  <span class="comment"># [60, 45, 33]</span></div></pre></td></tr></table></figure>
<p><strong>不好</strong>的代码：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">data = [<span class="number">7</span>, <span class="number">20</span>, <span class="number">3</span>, <span class="number">15</span>, <span class="number">11</span>]</div><div class="line">result = []</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> data:</div><div class="line">    <span class="keyword">if</span> i &gt; <span class="number">10</span>:</div><div class="line">        result.append(i * <span class="number">3</span>)</div><div class="line">print(result)  <span class="comment"># [60, 45, 33]</span></div></pre></td></tr></table></figure>
</li>
<li><p>用zip组合键和值来创建字典。</p>
<p><strong>好</strong>的代码：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">keys = [<span class="string">'1001'</span>, <span class="string">'1002'</span>, <span class="string">'1003'</span>]</div><div class="line">values = [<span class="string">'骆昊'</span>, <span class="string">'王大锤'</span>, <span class="string">'白元芳'</span>]</div><div class="line">d = dict(zip(keys, values))</div><div class="line">print(d)</div></pre></td></tr></table></figure>
<p><strong>不好</strong>的代码：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">keys = [<span class="string">'1001'</span>, <span class="string">'1002'</span>, <span class="string">'1003'</span>]</div><div class="line">values = [<span class="string">'骆昊'</span>, <span class="string">'王大锤'</span>, <span class="string">'白元芳'</span>]</div><div class="line">d = &#123;&#125;</div><div class="line"><span class="keyword">for</span> i, key <span class="keyword">in</span> enumerate(keys):</div><div class="line">    d[key] = values[i]</div><div class="line">print(d)</div></pre></td></tr></table></figure>
</li>
</ol>
<blockquote>
<p><strong>说明</strong>：这篇文章的内容来自于网络，有兴趣的读者可以阅读<a href="http://safehammad.com/downloads/python-idioms-2014-01-16.pdf" target="_blank" rel="external">原文</a>。</p>
</blockquote>
<h2 id="Python参考书籍"><a href="#Python参考书籍" class="headerlink" title="Python参考书籍"></a>Python参考书籍</h2><h3 id="入门读物"><a href="#入门读物" class="headerlink" title="入门读物"></a>入门读物</h3><ol>
<li>《Python基础教程》（<em>Beginning Python From Novice to Professional</em>）</li>
<li>《Python学习手册》（<em>Learning Python</em>）</li>
<li>《Python编程》（<em>Programming Python</em>）</li>
<li>《Python Cookbook》</li>
<li>《Python程序设计》（<em>Python Programming: An Introduction to Computer Science</em>）</li>
<li>《Modern Python Cookbook》</li>
</ol>
<h3 id="进阶读物"><a href="#进阶读物" class="headerlink" title="进阶读物"></a>进阶读物</h3><ol>
<li>《Python核心编程》（<em>Core Python Applications Programming</em>）</li>
<li>《流畅的Python》（<em>Fluent Python</em>）</li>
<li>《Effective Python：编写高质量Python代码的59个有效方法》（<em>Effective Python 59 Specific Ways to Write Better Python</em>）</li>
<li>《Python设计模式》（<em>Learning Python Design Patterns</em>）</li>
<li>《Python高级编程》（<em>Expert Python Programming</em>）</li>
<li>《Python性能分析与优化》（<em>Mastering Python High Performance</em>）</li>
</ol>
<h3 id="Web框架"><a href="#Web框架" class="headerlink" title="Web框架"></a>Web框架</h3><ol>
<li>《Django基础教程》（<em>Tango with Django</em>）</li>
<li>《轻量级Django》（<em>Lightweight Django</em>）</li>
<li>《Python Web开发：测试驱动方法》（<em>Test-Driven Development with Python</em>）</li>
<li>《Web Development with Django Cookbook》</li>
<li>《Test-Driven Development with Django》</li>
<li>《Django Project Blueprints 》</li>
<li>《Flask Web开发：基于Python的Web应用开发实战》（<em>Flask Web Development: Developing Web Applications with Python</em>）</li>
<li>《深入理解Flask》（<em>Mastering Flask</em>）</li>
</ol>
<h3 id="爬虫开发"><a href="#爬虫开发" class="headerlink" title="爬虫开发"></a>爬虫开发</h3><ol>
<li>《用Python写网络爬虫》（<em>Web Scraping with Python</em>）</li>
<li>《精通Python爬虫框架Scrapy》（<em>Learning Scrapy</em>）</li>
<li>《Python网络数据采集》（<em>Web Scraping with Python</em>）</li>
<li>《Python爬虫开发与项目实战》</li>
<li>《Python 3网络爬虫开发实战》</li>
</ol>
<h3 id="数据分析"><a href="#数据分析" class="headerlink" title="数据分析"></a>数据分析</h3><ol>
<li>《利用Python进行数据分析》（<em>Python for Data Analysis</em>）</li>
<li>《Python数据科学手册》（<em>Python Data Science Handbook</em>）</li>
<li>《Python金融大数据分析》（<em>Python for Finance</em>）</li>
<li>《Python数据可视化编程实战》（<em>Python Data Visualization Cookbook</em>）</li>
<li>《Python数据处理》（<em>Data Wrangling with Python</em>）</li>
</ol>
<h3 id="机器学习"><a href="#机器学习" class="headerlink" title="机器学习"></a>机器学习</h3><ol>
<li>《Python机器学习基础教程》（<em>Introduction to Machine Learning with Python</em>）</li>
<li>《Python机器学习实践指南》（<em>Python Machine Learning Blueprints</em>）</li>
<li>《Python Machine Learning Case Studies》</li>
<li>《Python机器学习实践：测试驱动的开发方法》（<em>Thoughtful Machine Learning with Python A Test Driven Approach</em>）</li>
<li>《Python机器学习经典实例》（<em>Python Machine Learning Cookbook</em>）</li>
<li>《TensorFlow：实战Google深度学习框架》</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这可能是我目前发现最好最好的Python教程了，故整理至我的博客。&lt;br&gt;原项目GitHub地址&lt;a href=&quot;https://github.com/jackfrued/Python-100-Days&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/jackfrued/Python-100-Days&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="https://x-nicolo.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Python" scheme="https://x-nicolo.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>刷题问题集合</title>
    <link href="https://x-nicolo.github.io/2018/03/30/%E5%88%B7%E9%A2%98%E9%97%AE%E9%A2%98%E9%9B%86%E5%90%88/"/>
    <id>https://x-nicolo.github.io/2018/03/30/刷题问题集合/</id>
    <published>2018-03-30T11:55:49.000Z</published>
    <updated>2018-03-30T11:55:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>学的比较杂，忘得比较快。好记性不如烂键盘。  </p>
<a id="more"></a>
<h2 id="机试题"><a href="#机试题" class="headerlink" title="机试题"></a>机试题</h2><h3 id="字符串最后一个单词的长度"><a href="#字符串最后一个单词的长度" class="headerlink" title="字符串最后一个单词的长度"></a>字符串最后一个单词的长度</h3><p>Question；<br><figure class="highlight makefile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">题目描述</div><div class="line">计算字符串最后一个单词的长度，单词以空格隔开。 </div><div class="line"><span class="section">输入描述:</span></div><div class="line">一行字符串，非空，长度小于5000。</div><div class="line"></div><div class="line"><span class="section">输出描述:</span></div><div class="line">整数N，最后一个单词的长度。</div><div class="line"></div><div class="line">示例1</div><div class="line">输入</div><div class="line">hello world</div><div class="line">输出</div><div class="line">5</div></pre></td></tr></table></figure></p>
<p>Solution:<br><figure class="highlight hsp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">str</span> = <span class="keyword">input</span>().strip().split()</div><div class="line"><span class="keyword">print</span>(len(<span class="keyword">str</span>[<span class="number">-1</span>]))</div></pre></td></tr></table></figure></p>
<h4 id="strip"><a href="#strip" class="headerlink" title="strip()"></a>strip()</h4><p>usage:  strip()方法用于移除字符串头尾指定的字符（默认为空格)  </p>
<figure class="highlight axapta"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">str</span> = <span class="string">"0000000     Runoob  0000000"</span>; </div><div class="line">print <span class="keyword">str</span>.strip( <span class="string">'0'</span> );  <span class="meta"># 去除首尾字符 0</span></div><div class="line"><span class="comment">//输出</span></div><div class="line">     Runoob  </div><div class="line"></div><div class="line">str2 = <span class="string">"   Runoob      "</span>;   <span class="meta"># 去除首尾空格</span></div><div class="line">print str2.strip();</div><div class="line"><span class="comment">//输出  </span></div><div class="line">Runoob</div></pre></td></tr></table></figure>
<h4 id="split"><a href="#split" class="headerlink" title="split()"></a>split()</h4><p>split()通过指定分隔符对字符串进行切片，如果参数num有指定值，则仅分隔 num 个子字符串.<br>usage； str.split(str=””, num=string.count(str))<br>str – 分隔符，默认为所有的空字符，包括空格、换行(\n)、制表符(\t)等。<br>num – 分割次数。<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">str</span> = <span class="string">"Line1-abcdef \nLine2-abc \nLine4-abcd"</span>;</div><div class="line"><span class="built_in">print</span> <span class="built_in">str</span>.<span class="built_in">split</span>( );</div><div class="line"><span class="built_in">print</span> <span class="built_in">str</span>.<span class="built_in">split</span>(<span class="string">' '</span>, <span class="number">1</span> );</div><div class="line"></div><div class="line"><span class="comment">//输出  </span></div><div class="line"></div><div class="line">[<span class="string">'Line1-abcdef'</span>, <span class="string">'Line2-abc'</span>, <span class="string">'Line4-abcd'</span>]</div><div class="line">[<span class="string">'Line1-abcdef'</span>, <span class="string">'\nLine2-abc \nLine4-abcd'</span>]</div></pre></td></tr></table></figure></p>
<h4 id="len"><a href="#len" class="headerlink" title="len()"></a>len()</h4><p>len() 方法返回对象（字符、列表、元组等）长度或项目个数。<br>uasge:  len(s)<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;</span>&gt;str = <span class="string">"runoob"</span></div><div class="line"><span class="meta">&gt;&gt;</span>&gt; len(str)             <span class="comment"># 字符串长度</span></div><div class="line"><span class="number">6</span></div></pre></td></tr></table></figure></p>
<h3 id="计算字符串个数"><a href="#计算字符串个数" class="headerlink" title="计算字符串个数"></a>计算字符串个数</h3><p>Question：<br><figure class="highlight makefile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">题目描述</div><div class="line">写出一个程序，接受一个有字母和数字以及空格组成的字符串，和一个字符，然后输出输入字符串中含有该字符的个数。不区分大小写。</div><div class="line"></div><div class="line"><span class="section">输入描述:</span></div><div class="line">输入一个有字母和数字以及空格组成的字符串，和一个字符。</div><div class="line"></div><div class="line"><span class="section">输出描述:</span></div><div class="line">输出输入字符串中含有该字符的个数。</div><div class="line"></div><div class="line">示例1</div><div class="line">输入</div><div class="line">ABCDEF A</div><div class="line">输出</div><div class="line">1</div></pre></td></tr></table></figure></p>
<p>Solution:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"> #-*-coding:utf-<span class="number">8</span>-*-</div><div class="line"></div><div class="line">str =<span class="string">"nhrwlbcc8m7c5hih9mhalw98k0322wf2jjm47kk3ntm9snfrflzzundn7d608usy049asxalzjk7izj6amcqhr8uubc04g52mcjboj2fmge2l6iarizfu4yve5o4i3srf5zgqbg82ckcotdeqp760mc9gzei5dzk5gj9x9yj05o3hle0ii64krkkp5i7blh7nbu3gu5vgi2scyn4yqx3z4vcjbyzhnqkh887izotjkg2l0mit0k14vyn39 t"</span></div><div class="line">N = str[-<span class="number">1</span>]</div><div class="line">str = str[:-<span class="number">1</span>].strip()</div><div class="line">counter=<span class="number">0</span></div><div class="line"></div><div class="line"><span class="keyword">for</span> <span class="selector-tag">i</span> <span class="keyword">in</span> str:</div><div class="line">    <span class="keyword">if</span> N == <span class="selector-tag">i</span>:</div><div class="line">        counter = counter+<span class="number">1</span></div><div class="line"><span class="function"><span class="title">print</span><span class="params">(counter)</span></span></div></pre></td></tr></table></figure></p>
<p>最优的Solution:<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">a</span>=input().lower()</div><div class="line"><span class="attribute">b</span>=input().lower()</div><div class="line"><span class="builtin-name">print</span>(a.count(b))</div></pre></td></tr></table></figure></p>
<h4 id="lower"><a href="#lower" class="headerlink" title="lower()"></a>lower()</h4><p>lower() 方法转换字符串中所有大写字符为小写。<br>增加本题的鲁棒性。  </p>
<h4 id="count"><a href="#count" class="headerlink" title="count()"></a>count()</h4><p>count() 方法用于统计字符串里某个字符出现的次数。可选参数为在字符串搜索的开始与结束位置。<br>usage:str.count(sub, start= 0,end=len(string))<br><figure class="highlight axapta"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">str</span>=<span class="string">"www.runoob.com"</span></div><div class="line">sub=<span class="string">'o'</span></div><div class="line">print (<span class="string">"str.count('o') : "</span>, <span class="keyword">str</span>.<span class="keyword">count</span>(sub))</div><div class="line"></div><div class="line">sub=<span class="string">'run'</span></div><div class="line">print (<span class="string">"str.count('run', 0, 10) : "</span>, <span class="keyword">str</span>.<span class="keyword">count</span>(sub,<span class="number">0</span>,<span class="number">10</span>))</div><div class="line"></div><div class="line"><span class="comment">//输出  </span></div><div class="line"><span class="keyword">str</span>.<span class="keyword">count</span>(<span class="string">'o'</span>) :  <span class="number">3</span></div><div class="line"><span class="keyword">str</span>.<span class="keyword">count</span>(<span class="string">'run'</span>, <span class="number">0</span>, <span class="number">10</span>) :  <span class="number">1</span></div></pre></td></tr></table></figure></p>
<p>sub – 搜索的子字符串<br>start – 字符串开始搜索的位置。默认为第一个字符,第一个字符索引值为0。<br>end – 字符串中结束搜索的位置。字符中第一个字符的索引为0。默认为字符串的最后一个位置。  </p>
<h3 id="明明的随机数"><a href="#明明的随机数" class="headerlink" title="明明的随机数"></a>明明的随机数</h3><figure class="highlight excel"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line">题目描述</div><div class="line">明明想在学校中请一些同学一起做一项问卷调查，为了实验的客观性，他先用计算机生成了<span class="built_in">N</span>个<span class="number">1</span>到<span class="number">1000</span>之间的随机整数（<span class="built_in">N</span>≤<span class="number">1000</span>），对于其中重复的数字，只保留一个，把其余相同的数去掉，不同的数对应着不同的学生的学号。然后再把这些数从小到大排序，按照排好的顺序去找同学做调查。请你协助明明完成“去重”与“排序”的工作。</div><div class="line">Input Param </div><div class="line"></div><div class="line">     <span class="built_in">n</span>               输入随机数的个数     </div><div class="line"></div><div class="line"> inputArray      <span class="built_in">n</span>个随机整数组成的数组 </div><div class="line"></div><div class="line">Return <span class="built_in">Value</span></div><div class="line"></div><div class="line">     OutputArray    输出处理后的随机整数</div><div class="line"></div><div class="line">注：测试用例保证输入参数的正确性，答题者无需验证。测试用例不止一组。</div><div class="line"></div><div class="line">输入描述<span class="symbol">:</span></div><div class="line">输入多行，先输入随机整数的个数，再输入相应个数的整数</div><div class="line"></div><div class="line">输出描述<span class="symbol">:</span></div><div class="line">返回多行，处理后的结果</div><div class="line"></div><div class="line">示例<span class="number">1</span></div><div class="line">输入</div><div class="line"><span class="number">11</span></div><div class="line"><span class="number">10</span></div><div class="line"><span class="number">20</span></div><div class="line"><span class="number">40</span></div><div class="line"><span class="number">32</span></div><div class="line"><span class="number">67</span></div><div class="line"><span class="number">40</span></div><div class="line"><span class="number">20</span></div><div class="line"><span class="number">89</span></div><div class="line"><span class="number">300</span></div><div class="line"><span class="number">400</span></div><div class="line"><span class="number">15</span></div><div class="line">输出</div><div class="line"><span class="number">10</span></div><div class="line"><span class="number">15</span></div><div class="line"><span class="number">20</span></div><div class="line"><span class="number">32</span></div><div class="line"><span class="number">40</span></div><div class="line"><span class="number">67</span></div><div class="line"><span class="number">89</span></div><div class="line"><span class="number">300</span></div><div class="line"><span class="number">400</span></div></pre></td></tr></table></figure>
<p>Solution:<br><figure class="highlight maxima"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">import <span class="built_in">random</span></div><div class="line">n = <span class="built_in">range</span>(<span class="number">65</span>)</div><div class="line">inputArray = []</div><div class="line">outputArray = []</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> n:</div><div class="line">    inputArray.<span class="built_in">append</span>(<span class="built_in">random</span>.randint(<span class="number">1</span>,<span class="number">1000</span>))</div><div class="line"><span class="keyword">for</span> j <span class="keyword">in</span> inputArray:</div><div class="line">    <span class="keyword">if</span> j <span class="keyword">not</span> <span class="keyword">in</span> outputArray:</div><div class="line">        outputArray.<span class="built_in">append</span>(j)</div><div class="line"><span class="built_in">print</span>(sorted(outputArray))</div></pre></td></tr></table></figure></p>
<p>牛逼解法：<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">while</span> True:</div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        <span class="keyword">a</span>,<span class="keyword">res</span>=<span class="keyword">int</span>(<span class="built_in">input</span>()),<span class="keyword">set</span>()</div><div class="line">        <span class="keyword">for</span> i in <span class="built_in">range</span>(<span class="keyword">a</span>):<span class="keyword">res</span>.<span class="built_in">add</span>(<span class="keyword">int</span>(<span class="built_in">input</span>()))</div><div class="line">        <span class="keyword">for</span> i in sorted(<span class="keyword">res</span>):<span class="keyword">print</span>(i)</div><div class="line">    excep<span class="variable">t:</span></div><div class="line">        <span class="keyword">break</span></div></pre></td></tr></table></figure></p>
<h4 id="randint"><a href="#randint" class="headerlink" title="randint()"></a>randint()</h4><p>使用了 random 模块的 randint() 函数来生成随机数<br><figure class="highlight arduino"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">使用方法为:<span class="built_in">random</span>.randint(<span class="number">1</span>,<span class="number">1000</span>)</div></pre></td></tr></table></figure></p>
<p>if的另外一种使用方法：<br><figure class="highlight dos"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">非的关系：</div><div class="line"><span class="keyword">if</span> j <span class="keyword">not</span> <span class="keyword">in</span> outputArray:</div><div class="line">        outputArray.<span class="built_in">append</span>(j)</div></pre></td></tr></table></figure></p>
<h4 id="sort-amp-sorted"><a href="#sort-amp-sorted" class="headerlink" title="sort() &amp; sorted()"></a>sort() &amp; sorted()</h4><p>sort 与 sorted 区别：<br>sort是应用在list上的方法，sorted可以对所有可迭代的对象进行排序操作。<br>list的sort方法返回的是对已经存在的列表进行操作，而内建函数sorted方法返回的是一个新的list，而不是在原来的基础上进行的操作。  </p>
<h4 id="多个变量赋值"><a href="#多个变量赋值" class="headerlink" title="多个变量赋值"></a>多个变量赋值</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">a</span>,<span class="keyword">res</span>=<span class="keyword">int</span>(<span class="built_in">input</span>()),<span class="keyword">set</span>()</div></pre></td></tr></table></figure>
<p>Python允许你同时为多个变量赋值。例如：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">a</span> = <span class="selector-tag">b</span> = c = <span class="number">1</span></div></pre></td></tr></table></figure></p>
<p>以上实例，创建一个整型对象，值为1，三个变量被分配到相同的内存空间上。也可以为多个对象指定多个变量。例如：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">a</span>, <span class="selector-tag">b</span>, c = <span class="number">1</span>, <span class="number">2</span>, <span class="string">"john"</span></div></pre></td></tr></table></figure></p>
<p>以上实例，两个整型对象1和2的分配给变量 a 和 b，字符串对象 “john” 分配给变量 c。</p>
<h4 id="set"><a href="#set" class="headerlink" title="set()"></a>set()</h4><p>set() 函数创建一个无序不重复元素集，可进行关系测试，删除重复数据，还可以计算交集、差集、并集等<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt;x = <span class="built_in">set</span>(<span class="string">'runoob'</span>)</div><div class="line">&gt;&gt;&gt; y = <span class="built_in">set</span>(<span class="string">'google'</span>)</div><div class="line">&gt;&gt;&gt; x, y</div><div class="line">(<span class="built_in">set</span>([<span class="string">'b'</span>, <span class="string">'r'</span>, <span class="string">'u'</span>, <span class="string">'o'</span>, <span class="string">'n'</span>]), <span class="built_in">set</span>([<span class="string">'e'</span>, <span class="string">'o'</span>, <span class="string">'g'</span>, <span class="string">'l'</span>]))   <span class="comment"># 重复的被删除</span></div><div class="line">&gt;&gt;&gt; x &amp; y         <span class="comment"># 交集</span></div><div class="line"><span class="built_in">set</span>([<span class="string">'o'</span>])</div><div class="line">&gt;&gt;&gt; x | y         <span class="comment"># 并集</span></div><div class="line"><span class="built_in">set</span>([<span class="string">'b'</span>, <span class="string">'e'</span>, <span class="string">'g'</span>, <span class="string">'l'</span>, <span class="string">'o'</span>, <span class="string">'n'</span>, <span class="string">'r'</span>, <span class="string">'u'</span>])</div><div class="line">&gt;&gt;&gt; x - y         <span class="comment"># 差集</span></div><div class="line"><span class="built_in">set</span>([<span class="string">'r'</span>, <span class="string">'b'</span>, <span class="string">'u'</span>, <span class="string">'n'</span>])</div></pre></td></tr></table></figure></p>
<h4 id="Python-装饰器"><a href="#Python-装饰器" class="headerlink" title="Python 装饰器"></a>Python 装饰器</h4><p>from某乎：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">内裤可以用来遮羞，但是到了冬天它没法为我们防风御寒，聪明的人们发明了长裤。长裤就类似于装饰器，在不影响内裤作用的前提下，给我们身子提供了保暖的功效。</div></pre></td></tr></table></figure></p>
<p>装饰器本质上是一个Python函数，可以让其他函数在不需要做任何代码变动的前提下增加额外功能，装饰器的返回值也是一个函数对象，需求的场景：插入日志、性能测试、事务处理、缓存、权限校验。  </p>
<p>例子：  </p>
<p>比如写了很多个简单的函数，你想知道在运行的时候哪些函数在执行，只是想要很简单的在执行完毕之前给它打印一句“start”，应该是这样：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">func_name</span><span class="params">(arg)</span>:</span></div><div class="line">    <span class="keyword">print</span> <span class="string">'Start func_name'</span></div><div class="line">    sentences</div></pre></td></tr></table></figure></p>
<p>这样做是没有错，但是有想过没，难道想给每一个函数后面都加上那么一句吗？等运行完再一个个的删掉print不觉得麻烦吗？一个不麻烦，十个，一百个呢。<br>装饰器可以这么来：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">log</span><span class="params">(func)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(*arg,**kw)</span>:</span></div><div class="line">        <span class="keyword">print</span> <span class="string">'Start %s'</span> % func</div><div class="line">        <span class="keyword">return</span> func(*arg,**kw)</div><div class="line">    <span class="keyword">return</span> wrapper</div><div class="line"></div><div class="line"><span class="meta">@log</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">func_a</span><span class="params">(arg)</span>:</span></div><div class="line">    <span class="keyword">pass</span></div><div class="line"></div><div class="line"><span class="meta">@log</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun_b</span><span class="params">(arg)</span>:</span></div><div class="line">    <span class="keyword">pass</span></div><div class="line"></div><div class="line"><span class="meta">@log</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun_c</span><span class="params">(arg)</span>:</span></div><div class="line">    <span class="keyword">pass</span></div></pre></td></tr></table></figure></p>
<p>其中，log函数就是装饰器，把装饰器写好后给需要装饰的函数前面加上@log就可以，装饰器节省了代码量，并且在函数不需要装饰的时候直接把@log去掉就可以，只需要用编辑器全局查找然后删除即可。  </p>
<h3 id="字符串分隔"><a href="#字符串分隔" class="headerlink" title="字符串分隔"></a>字符串分隔</h3><p>Q:<br><figure class="highlight dns"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">题目描述</div><div class="line">•连续输入字符串，请按长度为<span class="number">8</span>拆分每个字符串后输出到新的字符串数组； </div><div class="line">•长度不是<span class="number">8</span>整数倍的字符串请在后面补数字<span class="number">0</span>，空字符串不处理。 </div><div class="line">输入描述:</div><div class="line">连续输入字符串(输入<span class="number">2</span>次,每个字符串长度小于<span class="number">100</span>)</div><div class="line"></div><div class="line">输出描述:</div><div class="line">输出到长度为<span class="number">8</span>的新字符串数组</div><div class="line"></div><div class="line">示例<span class="number">1</span></div><div class="line">输入</div><div class="line">abc</div><div class="line"><span class="number">123456789</span></div><div class="line">输出</div><div class="line">abc00000</div><div class="line"><span class="number">12345678</span></div><div class="line"><span class="number">90000000</span></div></pre></td></tr></table></figure></p>
<p>S:<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">def pirnt8(<span class="built_in">line</span>):</div><div class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(<span class="built_in">line</span>) &lt; = <span class="number">8</span>:</div><div class="line">        <span class="keyword">print</span>(<span class="built_in">line</span>+<span class="string">"0"</span>*(<span class="number">8</span>-<span class="built_in">len</span>(<span class="built_in">line</span>)))</div><div class="line"></div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        <span class="keyword">while</span> <span class="built_in">len</span>(<span class="built_in">line</span>) &gt; <span class="number">8</span>:</div><div class="line">            <span class="keyword">print</span>(<span class="built_in">line</span>[:<span class="number">8</span>])</div><div class="line">            <span class="built_in">line</span> = <span class="built_in">line</span>[<span class="number">8</span>:]</div><div class="line">        <span class="keyword">print</span>(<span class="built_in">line</span> + <span class="string">"0"</span>*(<span class="number">8</span>-<span class="built_in">len</span>(<span class="built_in">line</span>)))</div><div class="line"><span class="keyword">a</span> = <span class="built_in">input</span>()</div><div class="line"><span class="keyword">b</span> = <span class="built_in">input</span>()</div><div class="line"></div><div class="line">pirnt8(<span class="keyword">a</span>)</div><div class="line">pirnt8(<span class="keyword">b</span>)</div></pre></td></tr></table></figure></p>
<h4 id="input和raw-input的区别"><a href="#input和raw-input的区别" class="headerlink" title="input和raw_input的区别"></a>input和raw_input的区别</h4><p>字符的时候可以用raw_input()，当然不怕麻烦也可以用input()手动加’’<br>int类型的时候最好用input()</p>
<h3 id="进制转换"><a href="#进制转换" class="headerlink" title="进制转换"></a>进制转换</h3><p>Q:<br><figure class="highlight makefile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">题目描述</div><div class="line">写出一个程序，接受一个十六进制的数值字符串，输出该数值的十进制字符串。（多组同时输入 ）</div><div class="line"></div><div class="line"><span class="section">输入描述:</span></div><div class="line">输入一个十六进制的数值字符串。</div><div class="line"></div><div class="line"><span class="section">输出描述:</span></div><div class="line">输出该数值的十进制字符串。</div><div class="line"></div><div class="line">示例1</div><div class="line">输入</div><div class="line">0xA</div><div class="line">输出</div><div class="line">10</div></pre></td></tr></table></figure></p>
<p>S:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        print(int(input(),<span class="number">16</span>))</div><div class="line">    <span class="keyword">except</span>:</div><div class="line">        <span class="keyword">break</span></div><div class="line"></div><div class="line">注意:注意处理异常，会使用<span class="keyword">try</span>:<span class="keyword">except</span>；</div><div class="line">处理多组输入：<span class="keyword">while</span> <span class="keyword">True</span></div></pre></td></tr></table></figure></p>
<h4 id="Python进制函数"><a href="#Python进制函数" class="headerlink" title="Python进制函数"></a>Python进制函数</h4><p>在python中没有char型，只有字符串类型，这样我们可能将char型转换为整型时极不方便，但是python已经提供了这些转换的内置函数。<br>python 中除了整型，其他进制的只能用字符串来表示：  </p>
<h5 id="任意进制–-gt-十进制-int"><a href="#任意进制–-gt-十进制-int" class="headerlink" title="任意进制–&gt;十进制;int()"></a>任意进制–&gt;十进制;int()</h5><p>可以将二进制，八进制，十六进制转换成十进制整型：<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;</span>&gt; int(<span class="string">'1111'</span>, <span class="number">2</span>)</div><div class="line"><span class="number">15</span></div><div class="line"><span class="meta">&gt;&gt;</span>&gt; int(<span class="string">'f'</span>, <span class="number">16</span>)</div><div class="line"><span class="number">15</span></div><div class="line"><span class="meta">&gt;&gt;</span>&gt; int(<span class="string">'17'</span>, <span class="number">8</span>)</div><div class="line"><span class="number">15</span></div></pre></td></tr></table></figure></p>
<h5 id="整型–-gt-字符；chr"><a href="#整型–-gt-字符；chr" class="headerlink" title="整型–&gt;字符；chr()"></a>整型–&gt;字符；chr()</h5><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="title">chr</span><span class="params">(<span class="number">90</span>)</span></span></div><div class="line"></div><div class="line">输出:<span class="string">'Z'</span></div></pre></td></tr></table></figure>
<h5 id="字符–-gt-整型-ord"><a href="#字符–-gt-整型-ord" class="headerlink" title="字符–&gt;整型:ord()"></a>字符–&gt;整型:ord()</h5><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="title">ord</span><span class="params">(<span class="string">'Z'</span>)</span></span></div><div class="line"></div><div class="line">输出：<span class="number">90</span></div></pre></td></tr></table></figure>
<h5 id="十进制–-gt-十六进制-hex"><a href="#十进制–-gt-十六进制-hex" class="headerlink" title="十进制–&gt;十六进制:hex()"></a>十进制–&gt;十六进制:hex()</h5><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="title">hex</span><span class="params">(<span class="number">255</span>)</span></span></div><div class="line"></div><div class="line">输出：<span class="string">'0xff'</span></div></pre></td></tr></table></figure>
<h5 id="十进制–-gt-二进制：bin"><a href="#十进制–-gt-二进制：bin" class="headerlink" title="十进制–&gt;二进制：bin()"></a>十进制–&gt;二进制：bin()</h5><figure class="highlight maxima"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">bin(<span class="number">255</span>)</div><div class="line"></div><div class="line">输出：'<span class="number">0b11111111</span>'</div></pre></td></tr></table></figure>
<h3 id="质数因子"><a href="#质数因子" class="headerlink" title="质数因子"></a>质数因子</h3><p>Q:<br><figure class="highlight arduino"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">题目描述</div><div class="line">功能:输入一个正整数，按照从小到大的顺序输出它的所有质数的因子（如<span class="number">180</span>的质数因子为<span class="number">2</span> <span class="number">2</span> <span class="number">3</span> <span class="number">3</span> <span class="number">5</span> ）</div><div class="line"></div><div class="line">最后一个数后面也要有空格</div><div class="line"></div><div class="line">详细描述：</div><div class="line"></div><div class="line"></div><div class="line">函数接口说明：</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">String</span> <span class="built_in">getResult</span>(<span class="keyword">long</span> ulDataInput)</div><div class="line"></div><div class="line">输入参数：</div><div class="line"></div><div class="line"><span class="keyword">long</span> ulDataInput：输入的正整数</div><div class="line"></div><div class="line">返回值：</div><div class="line"></div><div class="line"><span class="keyword">String</span></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">输入描述:</div><div class="line">输入一个<span class="keyword">long</span>型整数</div><div class="line"></div><div class="line">输出描述:</div><div class="line">按照从小到大的顺序输出它的所有质数的因子，以空格隔开。最后一个数后面也要有空格。</div><div class="line"></div><div class="line">示例<span class="number">1</span></div><div class="line">输入</div><div class="line"><span class="number">180</span></div><div class="line">输出</div><div class="line"><span class="number">2</span> <span class="number">2</span> <span class="number">3</span> <span class="number">3</span> <span class="number">5</span></div></pre></td></tr></table></figure></p>
<p>Solution：<br>这个问题的意思，其实就是让你把输入的整数因式分解，只不过因子必须都是质数<br>例如：180 = 2 <em> 2 </em> 3 <em> 3 </em> 5；90 = 2 <em> 3 </em> 3 * 5；<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">a</span>, <span class="keyword">res</span> = <span class="keyword">int</span>(<span class="built_in">input</span>()), []</div><div class="line"><span class="keyword">for</span> i in <span class="built_in">range</span>(<span class="number">2</span>, <span class="keyword">a</span> // <span class="number">2</span> + <span class="number">1</span>):</div><div class="line">    <span class="keyword">while</span> <span class="keyword">a</span> % i == <span class="number">0</span>:</div><div class="line">        <span class="keyword">a</span> = <span class="keyword">a</span> / i</div><div class="line">        <span class="keyword">res</span>.<span class="keyword">append</span>(i)</div><div class="line"><span class="keyword">print</span>(<span class="string">" "</span>.<span class="keyword">join</span>(<span class="keyword">map</span>(str, <span class="keyword">res</span>)) + <span class="string">" "</span> <span class="keyword">if</span> <span class="keyword">res</span> <span class="keyword">else</span> str(<span class="keyword">a</span>) + <span class="string">" "</span>)</div></pre></td></tr></table></figure></p>
<h4 id="range"><a href="#range" class="headerlink" title="range()"></a>range()</h4><p>函数语法：range(start, stop[, step])  </p>
<p>参数说明：<br>start: 计数从 start 开始。默认是从 0 开始。例如range（5）等价于range（0， 5）;<br>stop: 计数到 stop 结束，但不包括 stop。例如：range（0， 5） 是[0, 1, 2, 3, 4]没有5<br>step：步长，默认为1。例如：range（0， 5） 等价于 range(0, 5, 1)  </p>
<h4 id="xrange"><a href="#xrange" class="headerlink" title="xrange()"></a>xrange()</h4><p>函数说明：用法与range完全相同，所不同的是生成的不是一个数组，而是一个生成器。<br>要生成很大的数字序列的时候，用xrange会比range性能优很多。<br>range会直接生成一个list对象，而xrange则不会直接生成一个list，而是每次调用返回其中的一个值。<br>所以xrange做循环的性能比range好，尤其是返回很大的时候，尽量用xrange吧，除非你是要返回一个列表。</p>
<h3 id="取近似值"><a href="#取近似值" class="headerlink" title="取近似值"></a>取近似值</h3><p>Q:<br><figure class="highlight makefile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">题目描述</div><div class="line">写出一个程序，接受一个正浮点数值，输出该数值的近似整数值。如果小数点后数值大于等于5,向上取整；小于5，则向下取整。</div><div class="line"></div><div class="line"><span class="section">输入描述:</span></div><div class="line">输入一个正浮点数值</div><div class="line"></div><div class="line"><span class="section">输出描述:</span></div><div class="line">输出该数值的近似整数值</div><div class="line"></div><div class="line">示例1</div><div class="line">输入</div><div class="line">5.5</div><div class="line">输出</div><div class="line">6</div></pre></td></tr></table></figure></p>
<p>S:<br><figure class="highlight arduino"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">a = <span class="keyword">float</span>(input())</div><div class="line"><span class="built_in">if</span> (a - <span class="keyword">int</span>(a))&gt;=<span class="number">0.5</span>:</div><div class="line">    <span class="built_in">print</span>(<span class="keyword">int</span>(a)+<span class="number">1</span>)</div><div class="line"><span class="built_in">else</span>:</div><div class="line">    <span class="built_in">print</span>(<span class="keyword">int</span>(a))</div></pre></td></tr></table></figure></p>
<h4 id="float-input"><a href="#float-input" class="headerlink" title="float(input())"></a>float(input())</h4><p>输入一个浮点型</p>
<h4 id="int（）"><a href="#int（）" class="headerlink" title="int（）"></a>int（）</h4><p>int（）默认向下取整</p>
<h4 id="向上取整函数math-ceil"><a href="#向上取整函数math-ceil" class="headerlink" title="向上取整函数math.ceil()"></a>向上取整函数math.ceil()</h4><figure class="highlight lua"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">import <span class="built_in">math</span></div><div class="line"><span class="built_in">math</span>.<span class="built_in">ceil</span>(<span class="number">3.2</span>)</div><div class="line"></div><div class="line">输出：<span class="number">3</span></div></pre></td></tr></table></figure>
<h4 id="向下取整函数math-floor"><a href="#向下取整函数math-floor" class="headerlink" title="向下取整函数math.floor()"></a>向下取整函数math.floor()</h4><figure class="highlight lua"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">import <span class="built_in">math</span></div><div class="line"><span class="built_in">math</span>.<span class="built_in">floor</span>( x )</div></pre></td></tr></table></figure>
<h4 id="四舍五入函数round"><a href="#四舍五入函数round" class="headerlink" title="四舍五入函数round()"></a>四舍五入函数round()</h4><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">a</span>=<span class="number">3.25</span>;b=<span class="number">3.75</span></div><div class="line"><span class="built_in">round</span>(<span class="keyword">a</span>);<span class="built_in">round</span>(b)</div><div class="line"></div><div class="line">输出：</div><div class="line"><span class="number">3.0</span></div><div class="line"><span class="number">4.0</span></div></pre></td></tr></table></figure>
<h3 id="合并表记录"><a href="#合并表记录" class="headerlink" title="合并表记录"></a>合并表记录</h3><p>Q:<br><figure class="highlight excel"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">题目描述</div><div class="line">数据表记录包含表索引和数值，请对表索引相同的记录进行合并，即将相同索引的数值进行求和运算，输出按照key值升序进行输出。</div><div class="line"></div><div class="line">输入描述<span class="symbol">:</span></div><div class="line">先输入键值对的个数</div><div class="line">然后输入成对的<span class="built_in">index</span>和<span class="built_in">value</span>值，以空格隔开</div><div class="line"></div><div class="line">输出描述<span class="symbol">:</span></div><div class="line">输出合并后的键值对（多行）</div><div class="line"></div><div class="line">示例<span class="number">1</span></div><div class="line">输入</div><div class="line"><span class="number">4</span></div><div class="line"><span class="number">0</span> <span class="number">1</span></div><div class="line"><span class="number">0</span> <span class="number">2</span></div><div class="line"><span class="number">1</span> <span class="number">2</span></div><div class="line"><span class="number">3</span> <span class="number">4</span></div><div class="line">输出</div><div class="line"><span class="number">0</span> <span class="number">3</span></div><div class="line"><span class="number">1</span> <span class="number">2</span></div><div class="line"><span class="number">3</span> <span class="number">4</span></div></pre></td></tr></table></figure></p>
<p>Solution:<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">from collections <span class="keyword">import</span> defaultdict</div><div class="line"><span class="keyword">while</span> True:</div><div class="line">    <span class="keyword">try</span>:</div><div class="line"> </div><div class="line">        a,dd=<span class="built_in">int</span>(input()),defaultdict(<span class="built_in">int</span>)</div><div class="line">        <span class="keyword">for</span> i in range(a):</div><div class="line">            <span class="built_in">key</span>,val=<span class="built_in">map</span>(<span class="built_in">int</span>,input().<span class="built_in">split</span>())</div><div class="line">            dd[<span class="built_in">key</span>]+=val</div><div class="line">        <span class="keyword">for</span> i in sorted(dd.keys()):</div><div class="line">            <span class="built_in">print</span>(<span class="built_in">str</span>(i)+<span class="string">" "</span>+<span class="built_in">str</span>(dd[i]))</div><div class="line"> </div><div class="line">    except:</div><div class="line">        <span class="keyword">break</span></div></pre></td></tr></table></figure></p>
<h3 id="提取不重复数"><a href="#提取不重复数" class="headerlink" title="提取不重复数"></a>提取不重复数</h3><p>Q:<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">输入一个<span class="keyword">int</span>型整数，按照从右向左的阅读顺序，返回一个不含重复数字的新的整数。</div><div class="line"></div><div class="line">输入描述:</div><div class="line">输入一个<span class="keyword">int</span>型整数</div><div class="line"></div><div class="line">输出描述:</div><div class="line">按照从右向左的阅读顺序，返回一个不含重复数字的新的整数</div><div class="line"></div><div class="line">示例<span class="number">1</span></div><div class="line">输入</div><div class="line"><span class="number">9876673</span></div><div class="line">输出</div><div class="line"><span class="number">37689</span></div></pre></td></tr></table></figure></p>
<p>Solution:  </p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">import math</div><div class="line"><span class="selector-tag">a</span> = list(input())[::-<span class="number">1</span>]</div><div class="line">c = list(set(a))</div><div class="line">c.sort(key=<span class="selector-tag">a</span>.index)</div><div class="line">sum = <span class="number">0</span></div><div class="line"><span class="selector-tag">b</span> = len(c)-<span class="number">1</span></div><div class="line"><span class="keyword">for</span> <span class="selector-tag">i</span> <span class="keyword">in</span> c:</div><div class="line">    sum = sum + int(i)*pow(<span class="number">10</span>,b)</div><div class="line">    <span class="selector-tag">b</span> = b-<span class="number">1</span></div><div class="line"><span class="function"><span class="title">print</span><span class="params">(sum)</span></span></div></pre></td></tr></table></figure>
<h4 id="Python翻转字符串-reverse-string"><a href="#Python翻转字符串-reverse-string" class="headerlink" title="Python翻转字符串(reverse string)"></a>Python翻转字符串(reverse string)</h4><p>最简单的方法，将步长设置为-1  </p>
<h4 id="pow-方法返回-xy（x的y次方）-的值"><a href="#pow-方法返回-xy（x的y次方）-的值" class="headerlink" title="pow() 方法返回 xy（x的y次方） 的值"></a>pow() 方法返回 xy（x的y次方） 的值</h4><p>math 模块 pow() 方法的语法:<br>import math<br>math.pow( x, y )<br>内置的方法：pow(x,y)  </p>
<h4 id="按照特定-顺序排序"><a href="#按照特定-顺序排序" class="headerlink" title="按照特定=顺序排序"></a>按照特定=顺序排序</h4><p>c.sort(key=a.index)</p>
<h3 id="字符个数统计"><a href="#字符个数统计" class="headerlink" title="字符个数统计"></a>字符个数统计</h3><p>Q:<br><figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">编写一个函数，计算字符串中含有的不同字符的个数。字符在<span class="selector-tag">ACSII</span>码范围内(<span class="number">0</span>~<span class="number">127</span>)。不在范围内的不作统计。</div><div class="line">输入描述:</div><div class="line">输入<span class="selector-tag">N</span>个字符，字符在<span class="selector-tag">ACSII</span>码范围内。</div><div class="line">输出描述:</div><div class="line">输出范围在(<span class="number">0</span>~<span class="number">127</span>)字符的个数。</div><div class="line">示例<span class="selector-tag">1</span></div><div class="line">输入</div><div class="line"><span class="selector-tag">abc</span></div><div class="line">输出</div><div class="line"><span class="selector-tag">3</span></div></pre></td></tr></table></figure></p>
<p>Soulution:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">a</span>,res= (set(input()),[])</div><div class="line"><span class="keyword">for</span> <span class="selector-tag">i</span> <span class="keyword">in</span> <span class="selector-tag">a</span>:</div><div class="line">    <span class="keyword">if</span>(ord(i)&gt;=<span class="number">0</span> and ord(i)&lt;=<span class="number">127</span>):</div><div class="line">        res.append(i)</div><div class="line"><span class="function"><span class="title">print</span><span class="params">(len(res)</span></span>)</div></pre></td></tr></table></figure></p>
<h5 id="字符–-gt-整型-ord-1"><a href="#字符–-gt-整型-ord-1" class="headerlink" title="字符–&gt;整型:ord()"></a>字符–&gt;整型:ord()</h5><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="title">ord</span><span class="params">(<span class="string">'Z'</span>)</span></span></div><div class="line"></div><div class="line">输出：<span class="number">90</span></div></pre></td></tr></table></figure>
<h3 id="字符串反转"><a href="#字符串反转" class="headerlink" title="字符串反转"></a>字符串反转</h3><p>Q：<br><figure class="highlight makefile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">写出一个程序，接受一个字符串，然后输出该字符串反转后的字符串。例如：</div><div class="line"><span class="section">输入描述:</span></div><div class="line">输入N个字符</div><div class="line"></div><div class="line"><span class="section">输出描述:</span></div><div class="line">输出该字符串反转后的字符串</div><div class="line">示例1</div><div class="line">输入</div><div class="line">abcd</div><div class="line">输出</div><div class="line">dcba</div></pre></td></tr></table></figure></p>
<p>Solution:<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">print(<span class="name">input</span>()[:<span class="symbol">:-1</span>])</div></pre></td></tr></table></figure></p>
<h4 id="1"><a href="#1" class="headerlink" title="[::-1]"></a>[::-1]</h4><p>步长为-1，表示为可迭代对象进行反转。  </p>
<h3 id="数字反转"><a href="#数字反转" class="headerlink" title="数字反转"></a>数字反转</h3><p>Q:<br><figure class="highlight dns"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">描述：</div><div class="line"></div><div class="line">输入一个整数，将这个整数以字符串的形式逆序输出</div><div class="line"></div><div class="line">程序不考虑负数的情况，若数字含有<span class="number">0</span>，则逆序形式也含有<span class="number">0</span>，如输入为<span class="number">100</span>，则输出为<span class="number">001</span></div><div class="line"></div><div class="line"> </div><div class="line"></div><div class="line">输入描述:</div><div class="line">输入一个int整数</div><div class="line"></div><div class="line">输出描述:</div><div class="line">将这个整数以字符串的形式逆序输出</div><div class="line"></div><div class="line">示例<span class="number">1</span></div><div class="line">输入</div><div class="line"><span class="number">1516000</span></div><div class="line">输出</div><div class="line"><span class="number">0006151</span></div></pre></td></tr></table></figure></p>
<p>Solution:<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">print(<span class="name">str</span>(<span class="name">input</span>()[:<span class="symbol">:-1</span>]))</div></pre></td></tr></table></figure></p>
<h3 id="句子逆序"><a href="#句子逆序" class="headerlink" title="句子逆序"></a>句子逆序</h3><p>Q:<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">题目描述</div><div class="line">将一个英文语句以单词为单位逆序排放。例如“I am a <span class="keyword">boy”，逆序排放后为“boy </span>a am I”</div><div class="line">所有单词之间用一个空格隔开，语句中除了英文字母外，不再包含其他字符</div><div class="line"></div><div class="line"></div><div class="line">接口说明</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * 反转句子</span></div><div class="line"><span class="comment"> * </span></div><div class="line"><span class="comment"> * @param sentence 原句子</span></div><div class="line"><span class="comment"> * @return 反转后的句子</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="symbol">public</span> <span class="keyword">String </span><span class="keyword">reverse(String </span>sentence)<span class="comment">;</span></div><div class="line"></div><div class="line">输入描述:</div><div class="line">将一个英文语句以单词为单位逆序排放。</div><div class="line"></div><div class="line">输出描述:</div><div class="line">得到逆序的句子</div><div class="line"></div><div class="line">示例<span class="number">1</span></div><div class="line">输入</div><div class="line">I am a <span class="keyword">boy</span></div><div class="line"><span class="keyword">输出</span></div><div class="line"><span class="keyword">boy </span>a am I</div></pre></td></tr></table></figure></p>
<p>Solution:<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">print(<span class="string">" "</span>.join(<span class="name">input</span>().split()[:<span class="symbol">:-1</span>]))</div></pre></td></tr></table></figure></p>
<p><strong>越做越有感觉，能用一行代码完成的绝不写两行</strong></p>
<h4 id="str-gt-gt-gt-list"><a href="#str-gt-gt-gt-list" class="headerlink" title="str &gt;&gt;&gt;list"></a>str &gt;&gt;&gt;list</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">str1 = <span class="string">"12345"</span>  </div><div class="line">list1 = <span class="keyword">list</span>(str1)  </div><div class="line"><span class="keyword">print</span> list1  </div><div class="line">  </div><div class="line">str2 = <span class="string">"123 sjhid dhi"</span>  </div><div class="line">list2 = str2.<span class="keyword">split</span>() #or list2 = str2.<span class="keyword">split</span>(<span class="string">" "</span>)  </div><div class="line"><span class="keyword">print</span> list2  </div><div class="line">  </div><div class="line">str3 = <span class="string">"www.google.com"</span>  </div><div class="line">list3 = str3.<span class="keyword">split</span>(<span class="string">"."</span>)  </div><div class="line"><span class="keyword">print</span> list3  </div><div class="line"></div><div class="line">输出为：  </div><div class="line">[<span class="keyword">python</span>] <span class="keyword">view</span> plain <span class="keyword">copy</span></div><div class="line">[<span class="string">'1'</span>, <span class="string">'2'</span>, <span class="string">'3'</span>, <span class="string">'4'</span>, <span class="string">'5'</span>]  </div><div class="line">[<span class="string">'123'</span>, <span class="string">'sjhid'</span>, <span class="string">'dhi'</span>]  </div><div class="line">[<span class="string">'www'</span>, <span class="string">'google'</span>, <span class="string">'com'</span>]</div></pre></td></tr></table></figure>
<h4 id="list-gt-gt-gt-str"><a href="#list-gt-gt-gt-str" class="headerlink" title="list &gt;&gt;&gt;str"></a>list &gt;&gt;&gt;str</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">str4 = <span class="string">""</span>.<span class="keyword">join</span>(list3)  </div><div class="line"><span class="keyword">print</span> str4  </div><div class="line">str5 = <span class="string">"."</span>.<span class="keyword">join</span>(list3)  </div><div class="line"><span class="keyword">print</span> str5  </div><div class="line">str6 = <span class="string">" "</span>.<span class="keyword">join</span>(list3)  </div><div class="line"><span class="keyword">print</span> str6  </div><div class="line"></div><div class="line"></div><div class="line">输出为：</div><div class="line">[<span class="keyword">python</span>] <span class="keyword">view</span> plain <span class="keyword">copy</span></div><div class="line">wwwgooglecom  </div><div class="line">www.google.<span class="keyword">com</span>  </div><div class="line">www google <span class="keyword">com</span></div></pre></td></tr></table></figure>
<h4 id="join"><a href="#join" class="headerlink" title="join()"></a>join()</h4><p>列表和元组转换为字符串则必须依靠join函数<br>join() 方法用于将序列中的元素以指定的字符连接生成一个新的字符串<br>语法：<br>join()方法语法:str.join(sequence)<br>参数：<br>sequence – 要连接的元素序列<br>返回值:<br>返回通过指定字符连接序列中元素后生成的新字符串<br>实例:<br>以下实例展示了join()的使用方法：<br><figure class="highlight makefile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">str = <span class="string">"-"</span>;</div><div class="line">seq = (<span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>);<span class="comment"># 字符串序列</span></div><div class="line">print(str.join( seq ))</div><div class="line">以上实例输出结果如下：</div><div class="line">a-b-c</div></pre></td></tr></table></figure></p>
<h3 id="字符串的连接最长路径查找"><a href="#字符串的连接最长路径查找" class="headerlink" title="字符串的连接最长路径查找"></a>字符串的连接最长路径查找</h3><p>Q:<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">题目描述</div><div class="line">给定<span class="keyword">n</span>个字符串，请对<span class="keyword">n</span>个字符串按照字典序排列。</div><div class="line">输入描述:</div><div class="line">输入第一行为一个正整数<span class="keyword">n</span>(1≤<span class="keyword">n</span>≤1000),下面<span class="keyword">n</span>行为<span class="keyword">n</span>个字符串(字符串长度≤100),字符串中只含有大小写字母。</div><div class="line">输出描述:</div><div class="line">数据输出<span class="keyword">n</span>行，输出结果为按照字典序排列的字符串。</div><div class="line">示例1</div><div class="line">输入</div><div class="line">9</div><div class="line"><span class="keyword">cap</span></div><div class="line">to</div><div class="line"><span class="keyword">cat</span></div><div class="line">card</div><div class="line"><span class="keyword">two</span></div><div class="line">too</div><div class="line">up</div><div class="line">boat</div><div class="line"><span class="keyword">boot</span></div><div class="line">输出</div><div class="line">boat</div><div class="line"><span class="keyword">boot</span></div><div class="line"><span class="keyword">cap</span></div><div class="line">card</div><div class="line"><span class="keyword">cat</span></div><div class="line">to</div><div class="line">too</div><div class="line"><span class="keyword">two</span></div><div class="line">up</div></pre></td></tr></table></figure></p>
<p>Solution；<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">a, strings = int(<span class="keyword">input</span>()),[]</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="keyword">range</span>(a):strings.<span class="keyword">append</span>(<span class="keyword">input</span>())</div><div class="line"><span class="keyword">for</span> str <span class="keyword">in</span> sorted(strings): <span class="keyword">print</span>(str)</div></pre></td></tr></table></figure></p>
<h4 id="range-1"><a href="#range-1" class="headerlink" title="range()"></a>range()</h4><p>老生常谈,注意其多行输入的方法  </p>
<h4 id="sorted"><a href="#sorted" class="headerlink" title="sorted()"></a>sorted()</h4><p>sort 与 sorted 区别：<br>sort是应用在list上的方法，sorted可以对所有可迭代的对象进行排序操作。<br>list的sort方法返回的是对已经存在的列表进行操作，而内建函数sorted方法返回的是一个新的list，而不是在原来的基础上进行的操作。  </p>
<h3 id="求int型正整数在内存中存储时1的个数"><a href="#求int型正整数在内存中存储时1的个数" class="headerlink" title="求int型正整数在内存中存储时1的个数"></a>求int型正整数在内存中存储时1的个数</h3><p>Q:<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">题目描述</div><div class="line">输入一个<span class="keyword">int</span>型的正整数，计算出该<span class="keyword">int</span>型数据在内存中存储时<span class="number">1</span>的个数。</div><div class="line"></div><div class="line">输入描述:</div><div class="line"> 输入一个整数（<span class="keyword">int</span>类型）</div><div class="line"></div><div class="line">输出描述:</div><div class="line"> 这个数转换成<span class="number">2</span>进制后，输出<span class="number">1</span>的个数</div><div class="line"></div><div class="line">示例<span class="number">1</span></div><div class="line">输入</div><div class="line"><span class="number">5</span></div><div class="line">输出</div><div class="line"><span class="number">2</span></div></pre></td></tr></table></figure></p>
<p>Solution:<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">print(<span class="name">str</span>(<span class="name">bin</span>(<span class="name">int</span>(<span class="name">input</span>()))).count(<span class="string">"1"</span>))</div></pre></td></tr></table></figure></p>
<p>操作越来骚，Python大法好。  </p>
<h4 id="bin"><a href="#bin" class="headerlink" title="bin()"></a>bin()</h4><p>十进制转二进制  </p>
<h4 id="count-1"><a href="#count-1" class="headerlink" title="count()"></a>count()</h4><p>统计字符串中出现特定符号的个数<br>本题即将输入的int型整数转为二进制，再转换为字符串统计“1”出现的个数  </p>
<h4 id="Python-质数判断"><a href="#Python-质数判断" class="headerlink" title="Python 质数判断"></a>Python 质数判断</h4><p>一个大于1的自然数，除了1和它本身外，不能被其他自然数（质数）整除（2, 3, 5, 7等），换句话说就是该数除了1和它本身以外不再有其他的因数。<br><figure class="highlight maxima"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"># Python 程序用于检测用户输入的数字是否为质数</div><div class="line"> </div><div class="line"># 用户输入数字</div><div class="line"><span class="built_in">num</span> = int(input(<span class="string">"请输入一个数字: "</span>))</div><div class="line"> </div><div class="line"># 质数大于 <span class="number">1</span></div><div class="line"><span class="keyword">if</span> <span class="built_in">num</span> &gt; <span class="number">1</span>:</div><div class="line">   # 查看因子</div><div class="line">   <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>,<span class="built_in">num</span>):</div><div class="line">       <span class="keyword">if</span> (<span class="built_in">num</span> <span class="symbol">%</span> i) == <span class="number">0</span>:</div><div class="line">           <span class="built_in">print</span>(<span class="built_in">num</span>,<span class="string">"不是质数"</span>)</div><div class="line">           <span class="built_in">print</span>(i,<span class="string">"乘于"</span>,<span class="built_in">num</span>//i,<span class="string">"是"</span>,<span class="built_in">num</span>)</div><div class="line">           <span class="built_in">break</span></div><div class="line">   <span class="keyword">else</span>:</div><div class="line">       <span class="built_in">print</span>(<span class="built_in">num</span>,<span class="string">"是质数"</span>)</div><div class="line">       </div><div class="line"># 如果输入的数字小于或等于 <span class="number">1</span>，不是质数</div><div class="line"><span class="keyword">else</span>:</div><div class="line">   <span class="built_in">print</span>(<span class="built_in">num</span>,<span class="string">"不是质数"</span>)</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;学的比较杂，忘得比较快。好记性不如烂键盘。  &lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="https://x-nicolo.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="学习" scheme="https://x-nicolo.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>前端入门学习--JavaScript</title>
    <link href="https://x-nicolo.github.io/2018/03/01/%E5%89%8D%E7%AB%AF%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0-JavaScript/"/>
    <id>https://x-nicolo.github.io/2018/03/01/前端入门学习-JavaScript/</id>
    <published>2018-03-01T07:27:44.000Z</published>
    <updated>2018-03-01T07:27:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>大概了解了HTML和CSS，到了前端的精华JavaScript。<br><a id="more"></a><br>学习笔记，ALL FROM <a href="https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000" target="_blank" rel="external">廖雪峰的官方网站</a>  </p>
<h3 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="actionscript"><span class="function"><span class="keyword">function</span> <span class="title">displayDate</span><span class="params">()</span></span>&#123;</span></div><div class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">"demo"</span>).innerHTML=<span class="built_in">Date</span>();</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>第一个JavaScript 程序<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"demo"</span>&gt;</span>这是一个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">onclick</span>=<span class="string">"displayDate()"</span>&gt;</span>显示日期<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="JavaScript简介"><a href="#JavaScript简介" class="headerlink" title="JavaScript简介"></a>JavaScript简介</h3><p>JavaScript是一种运行在浏览器中的解释型的编程语言。在Web世界里，只有JavaScript能跨平台、跨浏览器驱动网页，与用户交互。随着HTML5在PC和移动端越来越流行，JavaScript变得更加重要了。并且，新兴的Node.js把JavaScript引入到了服务器端，JavaScript已经变成了全能型选手。  </p>
<h3 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h3><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><p>JavaScript的语法和Java语言类似，每个语句以;结束，语句块用{…}。但是，JavaScript并不强制要求在每个语句的结尾加;，浏览器中负责执行JavaScript代码的引擎会自动在每个语句的结尾补上;。  </p>
<p>完整的复制语句：<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">var x</span> = 1;</div></pre></td></tr></table></figure></p>
<p>语句块是一组语句的集合，例如，下面的代码先做了一个判断，如果判断成立，将执行{…}中的所有语句：<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">if(<span class="number">2</span>&gt;<span class="number">1</span>)&#123;</div><div class="line">    x = <span class="number">1</span>;</div><div class="line">    y = <span class="number">2</span>;</div><div class="line">    z = <span class="number">3</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>注意花括号{…}内的语句具有缩进，通常是4个空格。缩进不是JavaScript语法要求必须的，但缩进有助于我们理解代码的层次，所以编写代码时要遵守缩进规则。(Python的缩进哈哈哈)  </p>
<h4 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h4><p>以//开头直到行末的字符被视为行注释，注释是给开发人员看到，JavaScript引擎会自动忽略：<br><figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 这是一行注释</span></div><div class="line"><span class="selector-tag">alert</span>(<span class="string">'hello'</span>); <span class="comment">// 这也是注释</span></div></pre></td></tr></table></figure></p>
<p>另一种块注释是用/<em>…</em>/把多行字符包裹起来，把一大“块”视为一个注释：<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* 从这里开始是块注释</span></div><div class="line"><span class="comment">仍然是注释</span></div><div class="line"><span class="comment">仍然是注释</span></div><div class="line"><span class="comment">注释结束 */</span></div></pre></td></tr></table></figure></p>
<h3 id="数据类型和变量"><a href="#数据类型和变量" class="headerlink" title="数据类型和变量"></a>数据类型和变量</h3><h4 id="Number"><a href="#Number" class="headerlink" title="Number"></a>Number</h4><p>JavaScript不区分整数和浮点数，统一用Number表示。以下均为合法：  </p>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="number">123</span>;<span class="comment">//整数</span></div><div class="line"><span class="number">0.456</span>;<span class="comment">//浮点数</span></div><div class="line"><span class="number">-99</span><span class="comment">//负数</span></div><div class="line">NaN;<span class="comment">//表示 Not a Number,当无法计算结果时用NaN表示</span></div><div class="line">Infinity;<span class="comment">//表示无限大</span></div></pre></td></tr></table></figure>
<p>Number可以直接做四则运算，规则和数学一致。  </p>
<h4 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h4><p>字符串是以单引号’或双引号”括起来的任意文本，比如’abc’，”xyz”等等。请注意，’’或””本身只是一种表示方式，不是字符串的一部分，因此，字符串’abc’只有a，b，c这3个字符。  </p>
<h4 id="布尔值"><a href="#布尔值" class="headerlink" title="布尔值"></a>布尔值</h4><p>布尔值和布尔数的表示完全一致，一个布尔值只有true、false两种值。<br>实际上，JavaScript允许对任意数据类型做比较：<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="literal">false</span> <span class="string">==</span> <span class="number">0</span><span class="string">;</span> <span class="string">//</span> <span class="literal">true</span></div><div class="line"><span class="literal">false</span> <span class="string">===</span> <span class="number">0</span><span class="string">;</span> <span class="string">//</span> <span class="literal">false</span></div></pre></td></tr></table></figure></p>
<p>注意：<br>“==”第一种比较，会自动转换数据类型再比较，很多时候会得到诡异的结果。<br>“===”第二种结比较，不会自动转换数据类型，如果数据类型不一致就会返回false。<br>特例：NaN这个特殊的Number与所有其他值都不相等，包括它自己。<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">NaN</span> === NaN;//<span class="literal">false</span></div></pre></td></tr></table></figure></p>
<p>唯一能判断NaN的方法是通过isNaN()函数：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">isNaN</span>(<span class="literal">NaN</span>);<span class="comment">//true</span></div></pre></td></tr></table></figure></p>
<p>还需要注意浮点数的相等比较：<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="number">1</span>/<span class="number">3</span> === (<span class="number">1</span> <span class="number">-2</span> / <span class="number">3</span>);<span class="comment">//false</span></div></pre></td></tr></table></figure></p>
<p>浮点数在运算过程中会产生误差，因为计算机无法精确表示无限循环小数。要比较两个浮点数是否相等，只能计算它们之差的绝对值，看是否小于某个阈值：<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Math.abs(<span class="number">1</span> / <span class="number">3</span> - (<span class="number">1</span> - <span class="number">2</span> / <span class="number">3</span>)) &lt; <span class="number">0.0000001</span>;<span class="comment">//true</span></div></pre></td></tr></table></figure></p>
<h4 id="null和undefined"><a href="#null和undefined" class="headerlink" title="null和undefined"></a>null和undefined</h4><p>null表示一个“空”的值，它和0以及空字符串’’不同，0是一个数值，’’表示长度为0的字符串，而null表示“空”。<br>在JavaScript中，还有一个和null类似的undefined，它表示“未定义”。  </p>
<h4 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h4><p>JavaScript的数组可以包括任意数据类型。<br><figure class="highlight scheme"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[<span class="name">1</span>,<span class="number">2</span>,<span class="number">3.14</span>,<span class="symbol">'Hello</span>',null,true]<span class="comment">;</span></div></pre></td></tr></table></figure></p>
<p>另一种创建数组的方法是通过Array()函数实现：<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">new Array(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>);<span class="comment">//创建了数组[1,2,3]</span></div></pre></td></tr></table></figure></p>
<p>数组的元素可以通过索引来访问，索引起始值为0：<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">var arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3.14</span>,'Hello',null,true];</div><div class="line">arr[<span class="number">0</span>];<span class="comment">//1</span></div><div class="line">arr[<span class="number">5</span>];<span class="comment">//true</span></div><div class="line">arr[<span class="number">6</span>];<span class="comment">//undefined</span></div></pre></td></tr></table></figure></p>
<h4 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h4><p>JavaScript的对象是一组由键值组成的无序集合：<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="string">var</span> <span class="string">person</span> <span class="string">=</span> <span class="string">&#123;</span></div><div class="line"><span class="attr">    name:</span> <span class="string">'Bob'</span><span class="string">,</span></div><div class="line"><span class="attr">    age:</span> <span class="number">20</span><span class="string">,</span></div><div class="line"><span class="attr">    tags:</span> <span class="string">['js',</span> <span class="string">'web'</span><span class="string">,</span> <span class="string">'mobile'</span><span class="string">],</span></div><div class="line"><span class="attr">    city:</span> <span class="string">'Beijing'</span><span class="string">,</span></div><div class="line"><span class="attr">    hasCar:</span> <span class="literal">true</span><span class="string">,</span></div><div class="line"><span class="attr">    zipcode:</span> <span class="literal">null</span></div><div class="line"><span class="string">&#125;</span></div></pre></td></tr></table></figure></p>
<p>要获取一个对象的属性，我们用对象变量.属性名的方式：<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">person.name; <span class="regexp">//</span> <span class="string">'Bob'</span></div><div class="line">person.zipcode; <span class="regexp">//</span> null</div></pre></td></tr></table></figure></p>
<h4 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h4><p>变量在JavaScript中就是用一个变量名表示，变量名是大小写英文、数字、$和_的组合，且不能用数字开头。变量名也不能是JavaScript的关键字，如if、while等。申明一个变量用var语句，比如：<br><figure class="highlight lasso"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">var</span> a; <span class="comment">// 申明了变量a，此时a的值为undefined</span></div><div class="line"><span class="built_in">var</span> $b = <span class="number">1</span>; <span class="comment">// 申明了变量$b，同时给$b赋值，此时$b的值为1</span></div><div class="line"><span class="built_in">var</span> s_007 = <span class="string">'007'</span>; <span class="comment">// s_007是一个字符串</span></div><div class="line"><span class="built_in">var</span> Answer = <span class="literal">true</span>; <span class="comment">// Answer是一个布尔值true</span></div><div class="line"><span class="built_in">var</span> t = <span class="built_in">null</span>; <span class="comment">// t的值是null</span></div></pre></td></tr></table></figure></p>
<p>使用等号=对变量进行赋值。可以把任意数据类型赋值给变量，同一个变量可以反复赋值，而且可以是不同类型的变量，但是要注意只能用var申明一次，例如：<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var <span class="keyword">a</span> = <span class="number">123</span>;<span class="comment"> // a的值是整数123</span></div><div class="line"><span class="keyword">a</span> = <span class="string">'ABC'</span>;<span class="comment"> // a变为字符串</span></div></pre></td></tr></table></figure></p>
<p>这种变量本身类型不固定的语言称之为动态语言，与Java不同。<br>要显示变量的内容，可以用console.log(x)，打开Chrome的控制台就可以看到结果。<br><figure class="highlight abnf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var x = <span class="number">100</span><span class="comment">;</span></div><div class="line">console.log(x)<span class="comment">;</span></div></pre></td></tr></table></figure></p>
<h4 id="strict模式"><a href="#strict模式" class="headerlink" title="strict模式"></a>strict模式</h4><p>JavaScript在设计之初，并不强制要求用var申明变量。这个设计错误带来了严重的后果：如果一个变量没有通过var申明就被使用，那么该变量就自动被申明为全局变量：<br><figure class="highlight abnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">i</span> = <span class="number">10</span><span class="comment">;//i现在是全局变量</span></div></pre></td></tr></table></figure></p>
<p>在同一个页面的不同的JavaScript文件中，如果都不用var申明，恰好都使用了变量i，将造成变量i互相影响，产生难以调试的错误结果。<br>使用var申明的变量则不是全局变量，它的范围被限制在该变量被申明的函数体内（函数的概念将稍后讲解），同名变量在不同的函数体内互不冲突。  </p>
<h3 id="字符串-1"><a href="#字符串-1" class="headerlink" title="字符串"></a>字符串</h3><p>JavaScript的字符串就是用‘’或者“”括起来的字符。  </p>
<h4 id="多行字符串"><a href="#多行字符串" class="headerlink" title="多行字符串"></a>多行字符串</h4><p>多行字符串的表示方法，用反引号 “<code>...</code> ”表示：<br><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">`这是一个</div><div class="line">多行</div><div class="line">字符串</div><div class="line">`;</div></pre></td></tr></table></figure></p>
<h4 id="模板字符串"><a href="#模板字符串" class="headerlink" title="模板字符串"></a>模板字符串</h4><p>要把多个字符串连接起来，可以用+号连接：<br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> <span class="keyword">name</span> = <span class="string">'小明'</span>；</div><div class="line"><span class="keyword">var</span> age = <span class="number">20</span>；</div><div class="line"><span class="keyword">var</span> <span class="keyword">message</span> = <span class="string">'你好，'</span> + <span class="string">',你今年'</span> + age + <span class="string">'岁了！'</span>；</div><div class="line">alert(<span class="keyword">message</span>);</div></pre></td></tr></table></figure></p>
<p>如果有很多变量需要连接，用+号就比较麻烦。ES6新增了一种模板字符串，表示方法和上面的多行字符串一样，但是它会自动替换字符串中的变量：<br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> <span class="keyword">name</span> = <span class="string">'小明'</span>;</div><div class="line"><span class="keyword">var</span> age = <span class="number">20</span>;</div><div class="line"><span class="keyword">var</span> <span class="keyword">message</span> = `你好, $<span class="comment">&#123;name&#125;</span>, 你今年$<span class="comment">&#123;age&#125;</span>岁了!`;</div><div class="line">alert(<span class="keyword">message</span>);</div></pre></td></tr></table></figure></p>
<p>(这怎么和之前写的Java操作Word模板，操作XML的方法很像)  </p>
<h4 id="操作字符串"><a href="#操作字符串" class="headerlink" title="操作字符串"></a>操作字符串</h4><p>字符串常见的操作如下：<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> s = <span class="string">'Hello, world!'</span>;</div><div class="line">s.length; <span class="comment">// 13</span></div></pre></td></tr></table></figure></p>
<p>要获取字符串某个指定位置的字符，使用类似Array的下标操作，索引号从0开始：<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">var s = <span class="string">'Hello, world!'</span>;</div><div class="line"></div><div class="line">s[<span class="number">0</span>]; <span class="regexp">//</span> <span class="string">'H'</span></div><div class="line">s[<span class="number">6</span>]; <span class="regexp">//</span> <span class="string">' '</span></div><div class="line">s[<span class="number">7</span>]; <span class="regexp">//</span> <span class="string">'w'</span></div><div class="line">s[<span class="number">12</span>]; <span class="regexp">//</span> <span class="string">'!'</span></div><div class="line">s[<span class="number">13</span>]; <span class="regexp">//</span> undefined 超出范围的索引不会报错，但一律返回undefined</div></pre></td></tr></table></figure></p>
<h4 id="JavaScript字符串常用方法"><a href="#JavaScript字符串常用方法" class="headerlink" title="JavaScript字符串常用方法"></a>JavaScript字符串常用方法</h4><h5 id="toUpperCase"><a href="#toUpperCase" class="headerlink" title="toUpperCase"></a>toUpperCase</h5><p>toUpperCase()方法是把一个字符串全部变为大写：<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> s = <span class="string">'Hello'</span>;</div><div class="line">s.toUpperCase();返回HELLO</div></pre></td></tr></table></figure></p>
<h5 id="toLowerCase"><a href="#toLowerCase" class="headerlink" title="toLowerCase"></a>toLowerCase</h5><p>toLowerCase()方法是把一个字符串全部变为小写：<br><figure class="highlight lua"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var s = <span class="string">'Hello'</span>;</div><div class="line">var <span class="built_in">lower</span> = s.toLowerCase(); // 返回<span class="string">'hello'</span>并赋值给变量<span class="built_in">lower</span></div><div class="line"><span class="built_in">lower</span>; // <span class="string">'hello'</span></div></pre></td></tr></table></figure></p>
<h5 id="indexOf"><a href="#indexOf" class="headerlink" title="indexOf"></a>indexOf</h5><p>indexOf()会搜索指定字符串出现的位置：<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> s = <span class="string">'Hello,world'</span>;</div><div class="line">s.indexOf(<span class="string">'world'</span>);<span class="comment">//返回7</span></div><div class="line">s.indexOf(<span class="string">'World'</span>);<span class="comment">//没有找到指定的子串，返回-1</span></div></pre></td></tr></table></figure></p>
<h5 id="substring"><a href="#substring" class="headerlink" title="substring"></a>substring</h5><p>substring()返回指定索引区间的子串：<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var s = <span class="string">'hello,world'</span></div><div class="line">s.substring(<span class="number">0</span>, <span class="number">5</span>); <span class="regexp">//</span> 从索引<span class="number">0</span>开始到<span class="number">5</span>（不包括<span class="number">5</span>），返回<span class="string">'hello'</span></div><div class="line">s.substring(<span class="number">7</span>); <span class="regexp">//</span> 从索引<span class="number">7</span>开始到结束，返回<span class="string">'world'</span></div></pre></td></tr></table></figure></p>
<h3 id="数组-1"><a href="#数组-1" class="headerlink" title="数组"></a>数组</h3><p>JavaScript的Array可以包含任意数据类型，并通过索引来访问每个元素。<br>要取得Array的长度，直接访问length属性：<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3.14</span>,<span class="string">'Hello'</span>,<span class="literal">null</span>,<span class="literal">true</span>];</div><div class="line">arr.length;<span class="comment">//6</span></div></pre></td></tr></table></figure></p>
<p>直接给Array的length赋一个新的值会导致Array大小的变化：<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">var arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</div><div class="line">arr.length; <span class="comment">// 3</span></div><div class="line">arr.length = <span class="number">6</span>;</div><div class="line">arr; <span class="comment">// arr变为[1, 2, 3, undefined, undefined, undefined]</span></div><div class="line">arr.length = <span class="number">2</span>;</div><div class="line">arr; <span class="comment">// arr变为[1, 2]</span></div></pre></td></tr></table></figure></p>
<p>Array可以通过索引把对应的元素修改为新的值，因此，对Array的索引进行赋值会直接修改这个Array：<br><figure class="highlight prolog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var arr = [<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>];</div><div class="line">arr[<span class="number">1</span>] = <span class="number">99</span>;</div><div class="line">arr; // arr现在变为[<span class="string">'A'</span>, <span class="number">99</span>, <span class="string">'C'</span>]</div></pre></td></tr></table></figure></p>
<p>如果通过索引赋值时，索引超过了范围，同样会引起Array大小的变化：<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</div><div class="line">arr[<span class="number">5</span>] = 'x';</div><div class="line">arr; <span class="comment">// arr变为[1, 2, 3, undefined, undefined, 'x']</span></div></pre></td></tr></table></figure></p>
<p>大多数其他编程语言不允许直接改变数组的大小，越界访问索引会报错。然而，JavaScript的Array却不会有任何错误。在编写代码时，不建议直接修改Array的大小，访问索引时要确保索引不会越界。  </p>
<h4 id="indexOf-1"><a href="#indexOf-1" class="headerlink" title="indexOf"></a>indexOf</h4><p>与String类似，Array也可以通过indexOf()来搜索一个指定的元素的位置：<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var arr = [<span class="number">10</span>,<span class="number">20</span>,'<span class="number">30</span>','xyz'];</div><div class="line">arr.indexOf(<span class="number">10</span>);<span class="comment">//元素10的索引为0</span></div><div class="line">arr.indexOf(<span class="number">30</span>);<span class="comment">//元素30没有找到，返回-1</span></div></pre></td></tr></table></figure></p>
<h4 id="slice"><a href="#slice" class="headerlink" title="slice"></a>slice</h4><p>slice()就是对应String的substring()版本，截取Array的部分元素，然后返回一个新的Array。<br><figure class="highlight prolog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var arr = [<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>,<span class="string">'D'</span>,<span class="string">'E'</span>,<span class="string">'F'</span>,<span class="string">'G'</span>]；</div><div class="line">arr.slice(<span class="number">0</span>,<span class="number">3</span>);//从索引<span class="number">0</span>开始，到索引<span class="number">3</span>结束，但不包括索引<span class="number">3</span>: [<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>]</div><div class="line">arr.slice(<span class="number">3</span>); // 从索引<span class="number">3</span>开始到结束: [<span class="string">'D'</span>, <span class="string">'E'</span>, <span class="string">'F'</span>, <span class="string">'G'</span>]</div></pre></td></tr></table></figure></p>
<p>叮：slice()的起止参数包括开始索引，不包括结束索引。<br>如果不给slice()传递任何参数，它就会从头到尾截取所有元素。利用这一点，我们可以很容易地复制一个Array：<br><figure class="highlight cal"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> arr = [<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>, <span class="string">'D'</span>, <span class="string">'E'</span>, <span class="string">'F'</span>, <span class="string">'G'</span>];</div><div class="line"><span class="keyword">var</span> aCopy = arr.slice();</div><div class="line">aCopy; // [<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>, <span class="string">'D'</span>, <span class="string">'E'</span>, <span class="string">'F'</span>, <span class="string">'G'</span>]</div><div class="line">aCopy === arr; // <span class="literal">false</span></div></pre></td></tr></table></figure></p>
<h4 id="push和pop"><a href="#push和pop" class="headerlink" title="push和pop"></a>push和pop</h4><p>push()向Array的末尾添加若干元素，pop()则把Array的最后一个元素删掉：<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">var arr = [<span class="number">1</span>,<span class="number">2</span>];</div><div class="line">arr.<span class="keyword">push</span>(<span class="string">'A'</span>,<span class="string">'B'</span>);<span class="comment">//返回Array新的长度：4  </span></div><div class="line">arr;<span class="comment">//[1,2,'A','B']</span></div><div class="line">arr.<span class="keyword">pop</span>();<span class="comment">//pop返回'B'</span></div><div class="line">arr;<span class="comment">//[1,2,'A']</span></div><div class="line">arr.<span class="keyword">pop</span>();arr.<span class="keyword">pop</span>();arr.<span class="keyword">pop</span>();<span class="comment">//连续三次pop  </span></div><div class="line">arr;<span class="comment">//[]</span></div><div class="line">arr.<span class="keyword">pop</span>();<span class="comment">//空数组继续pop不会报错，而是返回undefined</span></div><div class="line">arr;<span class="comment">//[]</span></div></pre></td></tr></table></figure></p>
<h4 id="unshifth和shift"><a href="#unshifth和shift" class="headerlink" title="unshifth和shift"></a>unshifth和shift</h4><p>向Array的头部添加若干元素，使用unshift()方法，shift()方法则把Array的第一个元素删掉：<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">var arr = [<span class="number">1</span>,<span class="number">2</span>];</div><div class="line">arr.unshift(<span class="string">'A'</span>,<span class="string">'B'</span>);<span class="regexp">//</span>返回Array新的长度：<span class="number">4</span>  </div><div class="line">arr;<span class="regexp">//</span>[<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="number">1</span>, <span class="number">2</span>]</div><div class="line">arr.shift(); <span class="regexp">//</span> <span class="string">'A'</span></div><div class="line">arr; <span class="regexp">//</span> [<span class="string">'B'</span>, <span class="number">1</span>, <span class="number">2</span>]</div><div class="line">arr.shift(); arr.shift(); arr.shift(); <span class="regexp">//</span> 连续shift <span class="number">3</span>次</div><div class="line">arr; <span class="regexp">//</span> []</div><div class="line">arr.shift(); <span class="regexp">//</span> 空数组继续shift不会报错，而是返回undefined</div><div class="line">arr; <span class="regexp">//</span> []</div></pre></td></tr></table></figure></p>
<h4 id="sort"><a href="#sort" class="headerlink" title="sort"></a>sort</h4><p>sort()可以对当前Array进行排序，它会直接修改当前Array的元素位置，直接调用时，按照默认顺序排序：<br><figure class="highlight prolog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var arr = [<span class="string">'B'</span>,<span class="string">'C'</span>,<span class="string">'A'</span>];</div><div class="line">arr.sort();</div><div class="line">arr;//[<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>]</div></pre></td></tr></table></figure></p>
<h4 id="reverse"><a href="#reverse" class="headerlink" title="reverse"></a>reverse</h4><p>reverse()把整个Array的元素给反转：<br><figure class="highlight prolog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var arr = [<span class="string">'one'</span>, <span class="string">'two'</span>, <span class="string">'three'</span>];</div><div class="line">arr.reverse(); </div><div class="line">arr; // [<span class="string">'three'</span>, <span class="string">'two'</span>, <span class="string">'one'</span>]</div></pre></td></tr></table></figure></p>
<h4 id="splice"><a href="#splice" class="headerlink" title="splice"></a>splice</h4><p>splice()方法是修改Array的“万能方法”，它可以从指定的索引开始删除若干元素，然后再从该位置添加若干元素：<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">var arr = [<span class="string">'Microsoft'</span>, <span class="string">'Apple'</span>, <span class="string">'Yahoo'</span>, <span class="string">'AOL'</span>, <span class="string">'Excite'</span>, <span class="string">'Oracle'</span>];</div><div class="line"><span class="regexp">//</span> 从索引<span class="number">2</span>开始删除<span class="number">3</span>个元素,然后再添加两个元素:</div><div class="line">arr.splice(<span class="number">2</span>,<span class="number">3</span>,<span class="string">'Google'</span>,<span class="string">'Facebook'</span>);<span class="regexp">//</span>返回删除的元素[<span class="string">'Yahoo'</span>, <span class="string">'AOL'</span>, <span class="string">'Excite'</span>]</div><div class="line">arr; <span class="regexp">//</span> [<span class="string">'Microsoft'</span>, <span class="string">'Apple'</span>, <span class="string">'Google'</span>, <span class="string">'Facebook'</span>, <span class="string">'Oracle'</span>]</div><div class="line"><span class="regexp">//</span><span class="regexp">//</span> 只删除,不添加:</div><div class="line">arr.splice(<span class="number">2</span>,<span class="number">2</span>);<span class="regexp">//</span>[<span class="string">'Google'</span>, <span class="string">'Facebook'</span>]</div><div class="line">arr;<span class="regexp">//</span> [<span class="string">'Microsoft'</span>, <span class="string">'Apple'</span>, <span class="string">'Oracle'</span>]</div><div class="line"><span class="regexp">//</span> 只添加,不删除:</div><div class="line">arr.splice(<span class="number">2</span>, <span class="number">0</span>, <span class="string">'Google'</span>, <span class="string">'Facebook'</span>); <span class="regexp">//</span> 返回[],因为没有删除任何元素</div><div class="line">arr; <span class="regexp">//</span> [<span class="string">'Microsoft'</span>, <span class="string">'Apple'</span>, <span class="string">'Google'</span>, <span class="string">'Facebook'</span>, <span class="string">'Oracle'</span>]</div></pre></td></tr></table></figure></p>
<h4 id="concat"><a href="#concat" class="headerlink" title="concat"></a>concat</h4><p>concat()方法把当前的Array和另一个Array连接起来，并返回一个新的Array：<br><figure class="highlight prolog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">var arr = [<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>];</div><div class="line">var added = arr.concat([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]);</div><div class="line">added; // [<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</div><div class="line">arr; // [<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>]</div></pre></td></tr></table></figure></p>
<p>叮：concat()方法并没有修改当前Array，而是返回了一个新的Array。<br>实际上，concat()方法可以接收任意个元素和Array，并且自动把Array拆开，然后全部添加到新的Array里：<br><figure class="highlight prolog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var arr = [<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>];</div><div class="line">arr.concat(<span class="number">1</span>, <span class="number">2</span>, [<span class="number">3</span>, <span class="number">4</span>]); // [<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</div></pre></td></tr></table></figure></p>
<h4 id="join"><a href="#join" class="headerlink" title="join"></a>join</h4><p>join()方法是一个非常实用的方法，它把当前Array的每个元素都用指定的字符串连接起来，然后返回连接后的字符串:<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> arr = [<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</div><div class="line">arr.<span class="keyword">join</span>(<span class="string">'-'</span>);<span class="comment">//'A-B-C-1-2-3'</span></div></pre></td></tr></table></figure></p>
<p>如果Array的元素不是字符串，将自动转换为字符串后再连接。  </p>
<h4 id="多维数组"><a href="#多维数组" class="headerlink" title="多维数组"></a>多维数组</h4><p>如果数组的某个元素又是一个Array，则可以形成多维数组，例如：<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var arr = [[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">400</span>, <span class="number">500</span>, <span class="number">600</span>], '-'];</div></pre></td></tr></table></figure></p>
<p>上述Array包含3个元素，其中头两个元素本身也是Array。<br>练习：如何通过索引取到500这个值：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">'use strict'</span>;</div><div class="line"><span class="keyword">var</span> arr = [[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">400</span>, <span class="number">500</span>, <span class="number">600</span>], <span class="string">'-'</span>];</div><div class="line"></div><div class="line">ans:  </div><div class="line"><span class="keyword">var</span> x = arr[<span class="number">1</span>][<span class="number">1</span>];</div><div class="line"><span class="built_in">console</span>.log(x); <span class="comment">// x应该为500</span></div></pre></td></tr></table></figure></p>
<h3 id="对象-1"><a href="#对象-1" class="headerlink" title="对象"></a>对象</h3><p>JavaScript的对象是一种无序的集合数据类型，它由若干键值对组成。</p>
<p>JavaScript的对象用于描述现实世界中的某个对象。例如，为了描述“小明”这个淘气的小朋友，我们可以用若干键值对来描述他：  </p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="string">var</span> <span class="string">xiaoming</span> <span class="string">=</span> <span class="string">&#123;</span></div><div class="line"><span class="attr">    name:</span> <span class="string">小明,</span></div><div class="line"><span class="attr">    birth:</span><span class="number">1990</span><span class="string">,</span></div><div class="line"><span class="attr">    school:</span><span class="string">'No.1 Middle School'</span><span class="string">,</span></div><div class="line"><span class="attr">    height:</span> <span class="number">1.70</span><span class="string">,</span></div><div class="line"><span class="attr">    weight:</span> <span class="number">65</span><span class="string">,</span></div><div class="line"><span class="attr">    score:</span><span class="literal">null</span></div><div class="line"><span class="string">&#125;;</span></div></pre></td></tr></table></figure>
<p>JavaScript用一个{…}表示一个对象，键值对以xxx: xxx形式申明，用,隔开。注意，最后一个键值对不需要在末尾加,，如果加了，有的浏览器（如低版本的IE）将报错。<br>上述对象申明了一个name属性，值是’小明’，birth属性，值是1990，以及其他一些属性。最后，把这个对象赋值给变量xiaoming后，就可以通过变量xiaoming来获取小明的属性了：<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">xiaoming.name<span class="regexp">//</span><span class="string">'小明'</span></div><div class="line">xiaoming.birth<span class="regexp">//</span><span class="number">1990</span></div></pre></td></tr></table></figure></p>
<p>访问属性是通过.操作符完成的，但这要求属性名必须是一个有效的变量名。如果属性名包含特殊字符，就必须用’’括起来：<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">var xiaohong</span> = &#123;</div><div class="line">    name:<span class="string">'小红'</span>，</div><div class="line">    <span class="string">'middle-school'</span>:<span class="string">'No.1 Middle School'</span></div><div class="line">&#125;;</div></pre></td></tr></table></figure></p>
<p>xiaohong的属性名middle-school不是一个有效的变量，就需要用’’括起来。访问这个属性也无法使用.操作符，必须用[‘xxx’]来访问：<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">xiaohong[<span class="string">'middle-school'</span>];<span class="regexp">//</span><span class="string">'No.1 Middle School'</span></div><div class="line">xiaohong[<span class="string">'name'</span>];<span class="regexp">//</span><span class="string">'小红'</span></div><div class="line">xiaohong.name;<span class="regexp">//</span><span class="string">'小红'</span></div></pre></td></tr></table></figure></p>
<p>也可以用xiaohong[‘name’]来访问xiaohong的name属性，不过xiaohong.name的写法更简洁。我们在编写JavaScript代码的时候，属性名尽量使用标准的变量名，这样就可以直接通过object.prop的形式访问一个属性了。<br>实际上JavaScript对象的所有属性都是字符串，不过属性对应的值可以是任意数据类型。</p>
<p>如果访问一个不存在的属性会返回什么呢？JavaScript规定，访问不存在的属性不报错，而是返回undefined：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">'use strict'</span>;</div><div class="line"></div><div class="line"><span class="keyword">var</span> xiaoming = &#123;</div><div class="line">    name: <span class="string">'小明'</span></div><div class="line">&#125;;</div><div class="line"><span class="built_in">console</span>.log(xiaoming.name);</div><div class="line"><span class="built_in">console</span>.log(xiaoming.age); <span class="comment">// undefined</span></div></pre></td></tr></table></figure></p>
<p>由于JavaScript的对象是动态类型，你可以自由地给一个对象添加或删除属性：<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> xiaoming = &#123;</div><div class="line">    name: <span class="string">'小明'</span></div><div class="line">&#125;;</div><div class="line">xiaoming.age; <span class="comment">// undefined</span></div><div class="line">xiaoming.age = <span class="number">18</span>; <span class="comment">// 新增一个age属性</span></div><div class="line">xiaoming.age; <span class="comment">// 18</span></div><div class="line"><span class="keyword">delete</span> xiaoming.age; <span class="comment">// 删除age属性</span></div><div class="line">xiaoming.age; <span class="comment">// undefined</span></div><div class="line"><span class="keyword">delete</span> xiaoming[<span class="string">'name'</span>]; <span class="comment">// 删除name属性</span></div><div class="line">xiaoming.name; <span class="comment">// undefined</span></div><div class="line"><span class="keyword">delete</span> xiaoming.school; <span class="comment">// 删除一个不存在的school属性也不会报错</span></div></pre></td></tr></table></figure></p>
<p>如果我们要检测xiaoming是否拥有某一属性，可以用in操作符：<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="string">var</span> <span class="string">xiaoming</span> <span class="string">=</span> <span class="string">&#123;</span></div><div class="line"><span class="attr">    name:</span> <span class="string">'小明'</span><span class="string">,</span></div><div class="line"><span class="attr">    birth:</span> <span class="number">1990</span><span class="string">,</span></div><div class="line"><span class="attr">    school:</span> <span class="string">'No.1 Middle School'</span><span class="string">,</span></div><div class="line"><span class="attr">    height:</span> <span class="number">1.70</span><span class="string">,</span></div><div class="line"><span class="attr">    weight:</span> <span class="number">65</span><span class="string">,</span></div><div class="line"><span class="attr">    score:</span> <span class="literal">null</span></div><div class="line"><span class="string">&#125;;</span></div><div class="line"><span class="string">'name'</span> <span class="string">in</span> <span class="string">xiaoming;</span> <span class="string">//</span> <span class="literal">true</span></div><div class="line"><span class="string">'grade'</span> <span class="string">in</span> <span class="string">xiaoming;</span> <span class="string">//</span> <span class="literal">false</span></div></pre></td></tr></table></figure></p>
<p>不过要小心，如果in判断一个属性存在，这个属性不一定是xiaoming的，它可能是xiaoming继承得到的：<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="string">'toString'</span> <span class="keyword">in</span> xiaoming; <span class="regexp">//</span> <span class="keyword">true</span></div></pre></td></tr></table></figure></p>
<p>因为toString定义在object对象中，而所有对象最终都会在原型链上指向object，所以xiaoming也拥有toString属性。</p>
<p>要判断一个属性是否是xiaoming自身拥有的，而不是继承得到的，可以用hasOwnProperty()方法：<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">var xiaoming = &#123;</div><div class="line">    <span class="symbol">name:</span> <span class="string">'小明'</span></div><div class="line">&#125;;</div><div class="line">xiaoming.hasOwnProperty(<span class="string">'name'</span>); <span class="regexp">//</span> <span class="keyword">true</span></div><div class="line">xiaoming.hasOwnProperty(<span class="string">'toString'</span>); <span class="regexp">//</span> <span class="keyword">false</span></div></pre></td></tr></table></figure></p>
<h3 id="条件判断"><a href="#条件判断" class="headerlink" title="条件判断"></a>条件判断</h3><p>JavaScript使用if () { … } else { … }来进行条件判断。例如，根据年龄显示不同内容，可以用if语句实现如下：<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">var age = <span class="number">20</span>;</div><div class="line"><span class="keyword">if</span> (age &gt;= <span class="number">18</span>) &#123; <span class="regexp">//</span> 如果age &gt;= <span class="number">18</span>为<span class="literal">true</span>，则执行<span class="keyword">if</span>语句块</div><div class="line">    alert(<span class="string">'adult'</span>);</div><div class="line">&#125; <span class="keyword">else</span> &#123; <span class="regexp">//</span> 否则执行<span class="keyword">else</span>语句块</div><div class="line">    alert(<span class="string">'teenager'</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>其中else语句是可选的。如果语句块只包含一条语句，那么可以省略{}：<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">var age = <span class="number">20</span><span class="comment">;</span></div><div class="line">if (<span class="name">age</span> &gt;= <span class="number">18</span>)</div><div class="line">    alert('adult')<span class="comment">;</span></div><div class="line">else</div><div class="line">    alert('teenager')<span class="comment">;</span></div></pre></td></tr></table></figure></p>
<p>省略{}的危险之处在于，如果后来想添加一些语句，却忘了写{}，就改变了if…else…的语义，例如：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> age = <span class="number">20</span>;</div><div class="line"><span class="keyword">if</span> (age &gt;= <span class="number">18</span>)</div><div class="line">    alert(<span class="string">'adult'</span>);</div><div class="line"><span class="keyword">else</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'age &lt; 18'</span>); <span class="comment">// 添加一行日志</span></div><div class="line">    alert(<span class="string">'teenager'</span>); <span class="comment">// &lt;- 这行语句已经不在else的控制范围了</span></div></pre></td></tr></table></figure></p>
<p>上述代码的else子句实际上只负责执行console.log(‘age &lt; 18’);，原有的alert(‘teenager’);已经不属于if…else…的控制范围了，它每次都会执行。</p>
<p>相反地，有{}的语句就不会出错：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> age = <span class="number">20</span>;</div><div class="line"><span class="keyword">if</span> (age &gt;= <span class="number">18</span>) &#123;</div><div class="line">    alert(<span class="string">'adult'</span>);</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'age &lt; 18'</span>);</div><div class="line">    alert(<span class="string">'teenager'</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="多行条件判断"><a href="#多行条件判断" class="headerlink" title="多行条件判断"></a>多行条件判断</h4><p>如果还要更细致地判断条件，可以使用多个if…else…的组合：<br><figure class="highlight xquery"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">var age = <span class="number">3</span>;</div><div class="line"><span class="keyword">if</span> (age &gt;= <span class="number">18</span>) &#123;</div><div class="line">    alert(<span class="string">'adult'</span>);</div><div class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (age &gt;= <span class="number">6</span>) &#123;</div><div class="line">    alert(<span class="string">'teenager'</span>);</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">    alert(<span class="string">'kid'</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h3><p>JavaScript的循环有两种，一种是for循环，通过初始条件、结束条件和递增条件来循环执行语句块：<br><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">var x = <span class="number">0</span><span class="comment">;</span></div><div class="line">var i<span class="comment">;</span></div><div class="line">for (i=<span class="number">1</span><span class="comment">; i&lt;=10000; i++) &#123;</span></div><div class="line">    x = x + i<span class="comment">;</span></div><div class="line">&#125;</div><div class="line">x<span class="comment">; // 50005000</span></div></pre></td></tr></table></figure></p>
<p>分析一下for循环的控制条件：<br>i=1 这是初始条件，将变量i置为1；<br>i&lt;=10000 这是判断条件，满足时就继续循环，不满足就退出循环；<br>i++ 这是每次循环后的递增条件，由于每次循环后变量i都会加1，因此它终将在若干次循环后不满足判断条件i&lt;=10000而退出循环。  </p>
<p>for循环最常用的地方是利用索引来遍历数组：<br><figure class="highlight matlab"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">var arr = [<span class="string">'Apple'</span>,<span class="string">'Google'</span>,<span class="string">'Microsoft'</span>];</div><div class="line">var <span class="built_in">i</span>,x;</div><div class="line"><span class="keyword">for</span>(<span class="built_in">i</span>=<span class="number">0</span>;<span class="built_in">i</span>&lt;arr.<span class="built_in">length</span>;<span class="built_in">i</span>++)</div><div class="line">&#123;</div><div class="line">    x = arr[i];</div><div class="line">    console.log(x)</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>for循环的3个条件都是可以省略的，如果没有退出循环的判断条件，就必须使用break语句退出循环，否则就是死循环：<br><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> x = <span class="number">0</span>;</div><div class="line"><span class="keyword">for</span>(;;)&#123;<span class="comment">//将无限循环下去</span></div><div class="line">    <span class="keyword">if</span>(x &gt; <span class="number">100</span>)&#123;</div><div class="line">        <span class="keyword">break</span>;<span class="comment">//通过if判断来退出循环</span></div><div class="line">    &#125;</div><div class="line">    x++;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="for…in"><a href="#for…in" class="headerlink" title="for…in"></a>for…in</h4><p>for循环的一个变体是for … in循环，它可以把一个对象的所有属性依次循环出来：<br><figure class="highlight cal"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> o = &#123;</div><div class="line">    name: <span class="string">'Jack'</span>,</div><div class="line">    age: <span class="number">20</span>,</div><div class="line">    city: <span class="string">'Beijing'</span></div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">in</span> o)&#123;</div><div class="line">    console.log(key);//<span class="string">'name'</span>, <span class="string">'age'</span>, <span class="string">'city'</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>要过滤掉对象继承的属性，用hasOwnProperty()来实现：<br><figure class="highlight cal"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> o = &#123;</div><div class="line">    name: <span class="string">'Jack'</span>,</div><div class="line">    age: <span class="number">20</span>,</div><div class="line">    city: <span class="string">'Beijing'</span></div><div class="line">&#125;;</div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">in</span> o) &#123;</div><div class="line">    <span class="keyword">if</span> (o.hasOwnProperty(key)) &#123;</div><div class="line">        console.log(key); // <span class="string">'name'</span>, <span class="string">'age'</span>, <span class="string">'city'</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>循环数组：<br>Array也是对象，而它的每个元素的索引被视为对象的属性，因此，for … in循环可以直接循环出Array的索引：<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">var a = [<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>];</div><div class="line"><span class="keyword">for</span>(var i <span class="keyword">in</span> a)&#123;</div><div class="line">    console.log(i);<span class="regexp">//</span> <span class="string">'0'</span>, <span class="string">'1'</span>, <span class="string">'2'</span></div><div class="line">    console.log(a[i]);<span class="regexp">//</span> <span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>叮！for … in对Array的循环得到的是String而不是Number。  </p>
<h4 id="while"><a href="#while" class="headerlink" title="while"></a>while</h4><p>for循环在已知循环的初始和结束条件时非常有用。而上述忽略了条件的for循环容易让人看不清循环的逻辑，此时用while循环更佳。</p>
<p>while循环只有一个判断条件，条件满足，就不断循环，条件不满足时则退出循环。比如我们要计算100以内所有奇数之和，可以用while循环实现：  </p>
<figure class="highlight excel"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">var</span> x = <span class="number">0</span>;</div><div class="line"><span class="built_in">var</span> <span class="built_in">n</span> = <span class="number">99</span>;</div><div class="line">while(<span class="built_in">n</span> &gt; <span class="number">0</span>)&#123;</div><div class="line">    x = x + <span class="built_in">n</span>;</div><div class="line">    <span class="built_in">n</span> = <span class="built_in">n</span> - <span class="number">2</span>;</div><div class="line">&#125;</div><div class="line">x;//<span class="number">2500</span></div></pre></td></tr></table></figure>
<p>循环内部变量n不断自减，直到变为-1时，不再满足while条件，循环退出。  </p>
<h4 id="do…while"><a href="#do…while" class="headerlink" title="do…while"></a>do…while</h4><p>do { … } while()循环，它和while循环的唯一区别在于，不是在每次循环开始的时候判断条件，而是在每次循环完成的时候判断条件：<br><figure class="highlight excel"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">var</span> <span class="built_in">n</span> = <span class="number">0</span>;</div><div class="line">do &#123;</div><div class="line">    <span class="built_in">n</span> = <span class="built_in">n</span> + <span class="number">1</span>;</div><div class="line">&#125; while (<span class="built_in">n</span> &lt; <span class="number">100</span>);</div><div class="line"><span class="built_in">n</span>; // <span class="number">100</span></div></pre></td></tr></table></figure></p>
<p>叮！用do { … } while()循环要小心，循环体会至少执行1次，而for和while循环则可能一次都不执行。  </p>
<h4 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h4><p>循环是让计算机做重复任务的有效的方法，有些时候，如果代码写得有问题，会让程序陷入“死循环”，也就是永远循环下去。JavaScript的死循环会让浏览器无法正常显示或执行当前页面的逻辑，有的浏览器会直接挂掉，有的浏览器会在一段时间后提示你强行终止JavaScript的执行，因此，要特别注意死循环的问题。<br>在编写循环代码时，务必小心编写初始条件和判断条件，尤其是边界值。特别注意i &lt; 100和i &lt;= 100是不同的判断逻辑。  </p>
<h3 id="Map和Set"><a href="#Map和Set" class="headerlink" title="Map和Set"></a>Map和Set</h3><h4 id="Map"><a href="#Map" class="headerlink" title="Map"></a>Map</h4><p>Map是一组键值对的结构，具有极快的查找速度。举个例子，假设要根据同学的名字查找对应的成绩，如果用Array实现，需要两个Array：<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">var names</span> = [<span class="string">'Michael'</span>, <span class="string">'Bob'</span>, <span class="string">'Tracy'</span>];</div><div class="line"><span class="attribute">var scores</span> = [95, 75, 85];</div></pre></td></tr></table></figure></p>
<p>给定一个名字，要查找对应的成绩，就先要在names中找到对应的位置，再从scores取出对应的成绩，Array越长，耗时越长。<br>如果用Map实现，只需要一个“名字”-“成绩”的对照表，直接根据名字查找成绩，无论这个表有多大，查找速度都不会变慢。用JavaScript写一个Map如下：<br><figure class="highlight dart"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> m = <span class="keyword">new</span> <span class="built_in">Map</span>([[<span class="string">'Michael'</span>, <span class="number">95</span>], [<span class="string">'Bob'</span>, <span class="number">75</span>], [<span class="string">'Tracy'</span>, <span class="number">85</span>]]);</div><div class="line">m.<span class="keyword">get</span>(<span class="string">'Michael'</span>);<span class="comment">//95</span></div></pre></td></tr></table></figure></p>
<p>初始化Map需要一个二维数组，或者直接初始化一个空Map。Map具有以下方法：<br><figure class="highlight dart"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> m = <span class="keyword">new</span> <span class="built_in">Map</span>(); <span class="comment">// 空Map</span></div><div class="line">m.<span class="keyword">set</span>(<span class="string">'Adam'</span>, <span class="number">67</span>); <span class="comment">// 添加新的key-value</span></div><div class="line">m.<span class="keyword">set</span>(<span class="string">'Bob'</span>, <span class="number">59</span>);</div><div class="line">m.has(<span class="string">'Adam'</span>); <span class="comment">// 是否存在key 'Adam': true</span></div><div class="line">m.<span class="keyword">get</span>(<span class="string">'Adam'</span>); <span class="comment">// 67</span></div><div class="line">m.delete(<span class="string">'Adam'</span>); <span class="comment">// 删除key 'Adam'</span></div><div class="line">m.<span class="keyword">get</span>(<span class="string">'Adam'</span>); <span class="comment">// undefined</span></div></pre></td></tr></table></figure></p>
<p>由于一个key只能对应一个value，所以，多次对一个key放入value，后面的值会把前面的值冲掉：<br><figure class="highlight dart"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> m = <span class="keyword">new</span> <span class="built_in">Map</span>();</div><div class="line">m.<span class="keyword">set</span>(<span class="string">'Adam'</span>, <span class="number">67</span>);</div><div class="line">m.<span class="keyword">set</span>(<span class="string">'Adam'</span>, <span class="number">88</span>);</div><div class="line">m.<span class="keyword">get</span>(<span class="string">'Adam'</span>); <span class="comment">// 88</span></div></pre></td></tr></table></figure></p>
<h4 id="Set"><a href="#Set" class="headerlink" title="Set"></a>Set</h4><p>Set和Map类似，也是一组key的集合，但不存储value。由于key不能重复，所以，在Set中，没有重复的key。</p>
<p>要创建一个Set，需要提供一个Array作为输入，或者直接创建一个空Set:<br><figure class="highlight dart"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> s1 = <span class="keyword">new</span> <span class="built_in">Set</span>(); <span class="comment">// 空Set</span></div><div class="line"><span class="keyword">var</span> s2 = <span class="keyword">new</span> <span class="built_in">Set</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]); <span class="comment">// 含1, 2, 3</span></div></pre></td></tr></table></figure></p>
<p>重复元素在Set中自动被过滤：<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var s = new Set([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, '<span class="number">3</span>']);</div><div class="line">s; <span class="comment">// Set &#123;1, 2, 3, "3"&#125;</span></div></pre></td></tr></table></figure></p>
<p>通过add(key)方法可以添加元素到Set中，可以重复添加，但不会有效果：<br><figure class="highlight abnf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">s.add(<span class="number">4</span>)<span class="comment">;</span></div><div class="line">s<span class="comment">;//Set &#123;1, 2, 3, 4&#125;</span></div><div class="line">s.add(<span class="number">4</span>)<span class="comment">;</span></div><div class="line">s<span class="comment">;//仍然是 Set &#123;1, 2, 3, 4&#125;</span></div></pre></td></tr></table></figure></p>
<p>通过delete(key)方法可以删除元素：<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">var s = new Set([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]);</div><div class="line">s; <span class="comment">// Set &#123;1, 2, 3&#125;</span></div><div class="line">s.delete(<span class="number">3</span>);</div><div class="line">s; <span class="comment">// Set &#123;1, 2&#125;</span></div></pre></td></tr></table></figure></p>
<h3 id="iterable"><a href="#iterable" class="headerlink" title="iterable"></a>iterable</h3><p>遍历Array可以采用下标循环，遍历Map和Set就无法使用下标。为了统一集合类型，ES6标准引入了新的iterable类型，Array、Map和Set都属于iterable类型。<br>具有iterable类型的集合可以通过新的for … of循环来遍历。<br>用for … of循环遍历集合，用法如下：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> a = [<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>];</div><div class="line"><span class="keyword">var</span> s = <span class="keyword">new</span> <span class="built_in">Set</span>([<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>]);</div><div class="line"><span class="keyword">var</span> m = <span class="keyword">new</span> <span class="built_in">Map</span>([[<span class="number">1</span>, <span class="string">'x'</span>], [<span class="number">2</span>, <span class="string">'y'</span>], [<span class="number">3</span>, <span class="string">'z'</span>]]);</div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> x <span class="keyword">of</span> a)&#123;<span class="comment">//遍历Array</span></div><div class="line">    <span class="built_in">console</span>.log(x);</div><div class="line">&#125;</div><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> x <span class="keyword">of</span> s)&#123;</div><div class="line">    <span class="built_in">console</span>.log(x);</div><div class="line">&#125;</div><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> x <span class="keyword">of</span> m)&#123;</div><div class="line">    <span class="built_in">console</span>.log(x[<span class="number">0</span>] + <span class="string">'='</span> +x[<span class="number">1</span>]);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>for … of循环和for … in循环有何区别？<br>for … in循环由于历史遗留问题，它遍历的实际上是对象的属性名称。一个Array数组实际上也是一个对象，它的每个元素的索引被视为一个属性。</p>
<p>当我们手动给Array对象添加了额外的属性后，for … in循环将带来意想不到的意外效果：<br><figure class="highlight cal"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> a = [<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>];</div><div class="line">a.name = <span class="string">'Hello'</span>;</div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> x <span class="keyword">in</span> a) &#123;</div><div class="line">    console.log(x); // <span class="string">'0'</span>, <span class="string">'1'</span>, <span class="string">'2'</span>, <span class="string">'name'</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>for … in循环将把name包括在内，但Array的length属性却不包括在内。<br>for … of循环则完全修复了这些问题，它只循环集合本身的元素：<br><figure class="highlight cal"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> a = [<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>];</div><div class="line">a.name = <span class="string">'Hello'</span>;</div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> x <span class="keyword">of</span> a) &#123;</div><div class="line">    console.log(x); // <span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>这就是为什么要引入新的for … of循环。<br>然而，更好的方式是直接使用iterable内置的forEach方法，它接收一个函数，每次迭代就自动回调该函数。以Array为例：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">'use strict'</span>;</div><div class="line"><span class="keyword">var</span> a = [<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>];</div><div class="line">a.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">element, index, array</span>) </span>&#123;</div><div class="line">    <span class="comment">// element: 指向当前元素的值</span></div><div class="line">    <span class="comment">// index: 指向当前索引</span></div><div class="line">    <span class="comment">// array: 指向Array对象本身</span></div><div class="line">    <span class="built_in">console</span>.log(element + <span class="string">', index = '</span> + index);</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<p>Set与Array类似，但Set没有索引，因此回调函数的前两个参数都是元素本身：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> s = <span class="keyword">new</span> <span class="built_in">Set</span>([<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>]);</div><div class="line">s.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">element, sameElement, set</span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(element);</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<p>Map的回调函数参数依次为value、key和map本身：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> m = <span class="keyword">new</span> <span class="built_in">Map</span>([[<span class="number">1</span>, <span class="string">'x'</span>], [<span class="number">2</span>, <span class="string">'y'</span>], [<span class="number">3</span>, <span class="string">'z'</span>]]);</div><div class="line">m.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">value, key, map</span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(value);</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;大概了解了HTML和CSS，到了前端的精华JavaScript。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="https://x-nicolo.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="前端" scheme="https://x-nicolo.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="JavaScript" scheme="https://x-nicolo.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>前端入门学习--CSS</title>
    <link href="https://x-nicolo.github.io/2018/01/29/%E5%89%8D%E7%AB%AF%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0-CSS/"/>
    <id>https://x-nicolo.github.io/2018/01/29/前端入门学习-CSS/</id>
    <published>2018-01-29T08:30:55.000Z</published>
    <updated>2018-01-29T08:30:55.000Z</updated>
    
    <content type="html"><![CDATA[<p>HTML已经做了简单了解，接下来是CSS的。<br><a id="more"></a>  </p>
<p>All form <a href="http://www.runoob.com/css/css-intro.html" target="_blank" rel="external">RUNOOB.COM</a></p>
<h3 id="CSS-简介"><a href="#CSS-简介" class="headerlink" title="CSS 简介"></a>CSS 简介</h3><h3 id="什么是CSS？"><a href="#什么是CSS？" class="headerlink" title="什么是CSS？"></a>什么是CSS？</h3><ul>
<li>CSS指层叠样式表（Cascading Style Sheets） </li>
<li>样式定义 <strong>如何显示</strong>  HTML元素</li>
<li>样式通常存储在样式表中  </li>
<li>把样式添加到HTML4.0中，是为了解决内容与表分离的问题</li>
<li>外部样式表可以极大提高工作效率</li>
<li>外部样式表通常存储在CSS文件中</li>
<li>多个样式定义可层叠为一  </li>
</ul>
<h3 id="CSS实例"><a href="#CSS实例" class="headerlink" title="CSS实例"></a>CSS实例</h3><h4 id="样式解决了一个很大的问题"><a href="#样式解决了一个很大的问题" class="headerlink" title="样式解决了一个很大的问题"></a>样式解决了一个很大的问题</h4><p>HTML 标签原本被设计为用于定义文档内容，如下实例：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>这是一个标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>样式表定义如何显示 HTML 元素，就像 HTML 3.2 的字体标签和颜色属性所起的作用那样。样式通常保存在外部的 .css 文件中。通过仅仅编辑一个简单的 CSS 文档，外部样式表使你有能力同时改变站点中所有页面的布局和外观。  </p>
<h3 id="CSS-语法"><a href="#CSS-语法" class="headerlink" title="CSS 语法"></a>CSS 语法</h3><p>先来实例。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-tag">body</span> &#123;<span class="attribute">background-color</span>:yellow;&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">h1</span>   &#123;<span class="attribute">font-size</span>:<span class="number">36pt</span>;&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">h2</span>   &#123;<span class="attribute">color</span>:blue;&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">p</span>    &#123;<span class="attribute">margin-left</span>:<span class="number">50px</span>;&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>This header is 36 pt<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>This header is blue<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>This paragraph has a left margin of 50 pixels<span class="tag">&lt;/<span class="name">p</span>&gt;</span> </div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="CSS-实例"><a href="#CSS-实例" class="headerlink" title="CSS 实例"></a>CSS 实例</h4><p>CSS 规则由两个主要的部分构成，选择器，以及一条或多条声明。<br><img src="http://www.runoob.com/images/selector.gif" alt="">  </p>
<p>CSS 声明总是以分号(;)结束，声明组以大括号({})括起来：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">p</span> &#123;<span class="attribute">color</span>:red;<span class="attribute">text-align</span>:center;&#125;</div></pre></td></tr></table></figure></p>
<p>为了让CSS可读性更强，你可以每行只描述一个属性:<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">p</span></div><div class="line">&#123;</div><div class="line"><span class="attribute">color</span>:red;</div><div class="line"><span class="attribute">text-align</span>:center;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="CSS-注释"><a href="#CSS-注释" class="headerlink" title="CSS 注释"></a>CSS 注释</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*这是个注释*/</span></div><div class="line"><span class="selector-tag">p</span></div><div class="line">&#123;</div><div class="line"><span class="attribute">text-align</span>:center;</div><div class="line"><span class="comment">/*这是另一个注释*/</span></div><div class="line"><span class="attribute">color</span>:black;</div><div class="line"><span class="attribute">font-family</span>:arial;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="CSS-id-和-class"><a href="#CSS-id-和-class" class="headerlink" title="CSS id 和 class"></a>CSS id 和 class</h3><h4 id="id-和-class-选择器"><a href="#id-和-class-选择器" class="headerlink" title="id 和 class 选择器"></a>id 和 class 选择器</h4><p>如果要在HTML元素中设置CSS样式，需要在元素中设置id和class选择器。  </p>
<h4 id="id选择器"><a href="#id选择器" class="headerlink" title="id选择器"></a>id选择器</h4><p>id选择器可以为标有特定id的HTML元素指定特定的样式。<br>HTML元素以id属性来设置id选择器，CSS中id选择器以#来定义。<br>下面的样式规则应用于元素属性id=”para1”：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#para1</span></div><div class="line">&#123;</div><div class="line">    <span class="attribute">text-align</span>:center;</div><div class="line">    <span class="attribute">color</span>:red;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="class选择器"><a href="#class选择器" class="headerlink" title="class选择器"></a>class选择器</h4><p>class选择器用于描述一组元素的样式，class选择器有助于id选择器，class可以在多个元素中使用。<br>class选择器在HTML中以class属性表示，在CSS中，类选择器以一个点“.”号显示：<br>下面的例子中，所以拥有center类的HTML元素均为居中。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.center</span>&#123;<span class="attribute">text-align</span>:center;&#125;</div></pre></td></tr></table></figure></p>
<p>也可指定特定的HTML元素使用class。<br>下例中，所有的P元素使用class=“center”让该元素的文本居中。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">p</span><span class="selector-class">.center</span>&#123;<span class="attribute">text-align</span>:center;&#125;</div></pre></td></tr></table></figure></p>
<h3 id="CSS-创建"><a href="#CSS-创建" class="headerlink" title="CSS 创建"></a>CSS 创建</h3><p>当读到一个样式表时，浏览器会根据它来格式化 HTML 文档。  </p>
<h4 id="如何插入样式表"><a href="#如何插入样式表" class="headerlink" title="如何插入样式表"></a>如何插入样式表</h4><p>插入样式表的方法有三种：  </p>
<ul>
<li>外部样式表</li>
<li>内部样式表</li>
<li>内联样式</li>
</ul>
<h4 id="外部样式表"><a href="#外部样式表" class="headerlink" title="外部样式表"></a>外部样式表</h4><p>当样式需要应用于很多页面时，外部样式表将是理想的选择。在使用外部样式表的情况下，你可以通过改变一个文件来改变整个站点的外观。每个页面使用link标签链接到样式表。 link标签在（文档的）头部：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"mystyle.css"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>浏览器会从文件Mystyle.css中读到样式声明，并根据它来格式文档。<br>外部样式表可以在任何文本编辑器中进行编辑，文件不能包含任何的HTML标签，样式表应该以.css扩展名进行保存。下面为一个例子:<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">hr</span> &#123;<span class="attribute">color</span>:sienna;&#125;</div><div class="line"><span class="selector-tag">p</span> &#123;<span class="attribute">margin-left</span>:<span class="number">20px</span>;&#125;</div><div class="line"><span class="selector-tag">body</span> &#123;<span class="attribute">background-image</span>:<span class="built_in">url</span>(<span class="string">"/images/back40.gif"</span>);&#125;</div></pre></td></tr></table></figure></p>
<h4 id="内部样式表"><a href="#内部样式表" class="headerlink" title="内部样式表"></a>内部样式表</h4><p>当单个文档需要特殊的样式时，就应该使用内部样式表。可以使用style标签在文档头部定义内部样式表，就像这样:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-tag">hr</span> &#123;<span class="attribute">color</span>:sienna;&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">p</span> &#123;<span class="attribute">margin-left</span>:<span class="number">20px</span>;&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">body</span> &#123;<span class="attribute">background-image</span>:<span class="built_in">url</span>(<span class="string">"images/back40.gif"</span>);&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="内联样式"><a href="#内联样式" class="headerlink" title="内联样式"></a>内联样式</h4><p>由于要将表现和内容混杂在一起，内联样式会损失掉样式表的许多优势。请慎用这种方法，例如当样式仅需要在一个元素上应用一次时。<br>要使用内联样式，你需要在相关的标签内使用样式（style）属性。Style 属性可以包含任何 CSS 属性。本例展示如何改变段落的颜色和左外边距：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color:sienna;margin-left:20px"</span>&gt;</span>这是一个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="多重样式"><a href="#多重样式" class="headerlink" title="多重样式"></a>多重样式</h4><p>如果某些属性在不同的样式表中被同样的选择器定义，那么属性值将从更具体的样式表中被继承过来。<br>例如，外部样式表拥有针对 h3 选择器的三个属性：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">h3</span></div><div class="line">&#123;</div><div class="line">    <span class="attribute">color</span>:red;</div><div class="line">    <span class="attribute">text-align</span>:left;</div><div class="line">    <span class="attribute">font-size</span>:<span class="number">8pt</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>而内部样式表拥有针对h3选择器的两个属性：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">h3</span></div><div class="line">&#123;</div><div class="line">    <span class="attribute">text-align</span>:right;</div><div class="line">    <span class="attribute">font-size</span>:<span class="number">20pt</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>假如拥有内部样式表的这个页面同时与外部样式表链接，那么h3得到的样式是：<br><figure class="highlight scss"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">color</span>:red;</div><div class="line"><span class="attribute">text-align</span>:right;</div><div class="line"><span class="attribute">font-size</span>:<span class="number">20pt</span>;</div></pre></td></tr></table></figure></p>
<p>即颜色属性将被继承于外部样式表，而文字排列（text-alignment）和字体尺寸（font-size）会被内部样式表中的规则取代。  </p>
<h4 id="多重样式优先级"><a href="#多重样式优先级" class="headerlink" title="多重样式优先级"></a>多重样式优先级</h4><p>样式表允许以多种方式规定样式信息。样式可以规定在单个的HTML元素中，在HTML的头元素中，或在一个外部的CSS文件中。甚至可以在同一个HTML文档内部引用多个外部样式表。<br>一般情况下，优先级如下：<br>内联样式&gt;Inline style &gt; （内部样式）Internal style sheet &gt;（外部样式）External style sheet &gt; 浏览器默认样式  </p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 外部样式 style.css --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"style.css"</span>/&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 设置：h3&#123;color:blue;&#125; --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="css">      <span class="comment">/* 内部样式 */</span></span></div><div class="line"><span class="css">      <span class="selector-tag">h3</span>&#123;<span class="attribute">color</span>:green;&#125;</span></div><div class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>测试！<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="CSS-背景"><a href="#CSS-背景" class="headerlink" title="CSS 背景"></a>CSS 背景</h3><p>CSS背景属性用于定义HTML元素的背景。<br>CSS属性定义背景效果:  </p>
<ul>
<li>background-color</li>
<li>background-image</li>
<li>background-repeat</li>
<li>background-attachment</li>
<li>background-position  </li>
</ul>
<h4 id="背景颜色"><a href="#背景颜色" class="headerlink" title="背景颜色"></a>背景颜色</h4><p>background-color属性定义了元素的背景颜色。<br>页面的背景颜色使用在body的选择器中：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">body</span>&#123;<span class="attribute">background-color</span>:<span class="number">#b0c4de</span>;&#125;</div></pre></td></tr></table></figure></p>
<p>CSS中，颜色值通常以以下方式定义：  </p>
<ul>
<li>十六进制 - 如：”#ff0000”</li>
<li>RGB - 如：”rgb(255,0,0)”</li>
<li>颜色名称 - 如：”red”<br>下面的例子中，h1,p,div元素拥有不同的背景颜色。  <figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">h1</span> &#123;<span class="attribute">background-color</span>:<span class="number">#6495ed</span>;&#125;</div><div class="line"><span class="selector-tag">p</span> &#123;<span class="attribute">background-color</span>:<span class="number">#e0ffff</span>;&#125;</div><div class="line"><span class="selector-tag">div</span> &#123;<span class="attribute">background-color</span>:<span class="number">#b0c4de</span>;&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="背景图像"><a href="#背景图像" class="headerlink" title="背景图像"></a>背景图像</h4><p>background-image 属性描述了元素的背景图像.默认情况下，背景图像进行平铺重复显示，以覆盖整个元素实体.页面背景图片设置实例:<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">body</span> &#123;<span class="attribute">background-image</span>:<span class="built_in">url</span>(<span class="string">'paper.gif'</span>);&#125;</div></pre></td></tr></table></figure></p>
<p>一个 <strong>反例</strong>，文本可读性差：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">body</span> &#123;<span class="attribute">background-image</span>:<span class="built_in">url</span>(<span class="string">'bgdesert.jpg'</span>);&#125;</div></pre></td></tr></table></figure></p>
<h4 id="背景图像-水平或垂直平铺"><a href="#背景图像-水平或垂直平铺" class="headerlink" title="背景图像-水平或垂直平铺"></a>背景图像-水平或垂直平铺</h4><p>默认情况下 background-image 属性会在页面的水平或者垂直方向平铺。一些图像如果在水平方向与垂直方向平铺，这样看起来很不协调，如下所示:<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">body</span></div><div class="line">&#123;</div><div class="line"><span class="attribute">background-image</span>:<span class="built_in">url</span>(<span class="string">'gradient2.png'</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>只在水平方向平铺 (repeat-x), 页面背景会更好些:<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">body</span></div><div class="line">&#123;</div><div class="line"><span class="attribute">background-image</span>:<span class="built_in">url</span>(<span class="string">'gradient2.png'</span>);</div><div class="line"><span class="attribute">background-repeat</span>:repeat-x;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="背景图像-设置定位与不平铺"><a href="#背景图像-设置定位与不平铺" class="headerlink" title="背景图像-设置定位与不平铺"></a>背景图像-设置定位与不平铺</h4><p>让背景图像不影响文本的排版，不想让图像平铺，可以使用background-repeat属性。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">body</span></div><div class="line">&#123;</div><div class="line"><span class="attribute">background-image</span>:<span class="built_in">url</span>(<span class="string">'img_tree.png'</span>);</div><div class="line"><span class="attribute">background-repeat</span>:no-repeat;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="背景-简写属性"><a href="#背景-简写属性" class="headerlink" title="背景- 简写属性"></a>背景- 简写属性</h4><p>在以上实例中我们可以看到页面的背景颜色通过了很多的属性来控制。为了简化这些属性的代码，我们可以将这些属性合并在同一个属性中，背景颜色的属性简写为background。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">body</span> &#123;<span class="attribute">background</span>:<span class="number">#ffffff</span> <span class="built_in">url</span>(<span class="string">'img_tree.png'</span>) no-repeat right top;&#125;</div></pre></td></tr></table></figure></p>
<p>当使用简写属性时，属性值的顺序为：  </p>
<ul>
<li>background-color</li>
<li>background-image</li>
<li>background-repeat</li>
<li>background-attachment</li>
<li>background-position</li>
</ul>
<h3 id="CSS-文本格式"><a href="#CSS-文本格式" class="headerlink" title="CSS 文本格式"></a>CSS 文本格式</h3><h4 id="文本颜色"><a href="#文本颜色" class="headerlink" title="文本颜色"></a>文本颜色</h4><p>颜色属性被用来设置文字的颜色。颜色是通过CSS最经常的指定：  </p>
<ul>
<li>十六进制值-如:#FF0000  </li>
<li>一个RGB值-如：RGB(255,0,0)</li>
<li>颜色的名称-如：red  </li>
</ul>
<p>例子：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">body</span> &#123;<span class="attribute">color</span>:red;&#125;</div><div class="line"><span class="selector-tag">h1</span> &#123;<span class="attribute">color</span>:<span class="number">#00ff00</span>;&#125;</div><div class="line"><span class="selector-tag">h2</span> &#123;<span class="attribute">color</span>:<span class="built_in">rgb</span>(255,0,0);&#125;</div></pre></td></tr></table></figure></p>
<h4 id="文本的对齐方式"><a href="#文本的对齐方式" class="headerlink" title="文本的对齐方式"></a>文本的对齐方式</h4><p>文本排列属性是用来设置文本的水平对齐方式。<br>文本可居中或对齐到左或右，两端对齐。<br>当text-align设置为“justify”,每一行被展开为宽度相等，左，右外边距是对齐。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">h1</span> &#123;<span class="attribute">text-align</span>:center;&#125;</div><div class="line"><span class="selector-tag">p</span><span class="selector-class">.date</span> &#123;<span class="attribute">text-align</span>:right;&#125;</div><div class="line"><span class="selector-tag">p</span><span class="selector-class">.main</span> &#123;<span class="attribute">text-align</span>:justify;&#125;</div></pre></td></tr></table></figure></p>
<h4 id="文本修饰"><a href="#文本修饰" class="headerlink" title="文本修饰"></a>文本修饰</h4><p>text-decoration属性用来设置或删除文本的装饰。<br>从设计的角度看text-decoration属性主要用来删除链接的下划线：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">a</span> &#123;<span class="attribute">text-decoration</span>:none;&#125;</div></pre></td></tr></table></figure></p>
<p>一个例子：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-tag">h1</span> &#123;<span class="attribute">text-decoration</span>:overline;&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">h2</span> &#123;<span class="attribute">text-decoration</span>:line-through;&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">h3</span> &#123;<span class="attribute">text-decoration</span>:underline;&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>This is heading 1<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>This is heading 2<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>This is heading 3<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="文本转换"><a href="#文本转换" class="headerlink" title="文本转换"></a>文本转换</h4><p>文本转换属性是用来指定在一个文本中的大写和小写字母。<br>可用于所有字句变成大写或小写字母，或每个单词的首字母大写。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-class">.uppercase</span> &#123;<span class="attribute">text-transform</span>:uppercase;&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-class">.lowercase</span> &#123;<span class="attribute">text-transform</span>:lowercase;&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-class">.capitalize</span> &#123;<span class="attribute">text-transform</span>:capitalize;&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"uppercase"</span>&gt;</span>This is some text.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"lowercase"</span>&gt;</span>This is some text.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"capitalize"</span>&gt;</span>This is some text.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="文本缩进"><a href="#文本缩进" class="headerlink" title="文本缩进"></a>文本缩进</h4><p>文本缩进属性是用来指定文本的第一行的缩进。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">p</span> &#123;<span class="attribute">text-indent</span>:<span class="number">50px</span>;&#125;</div></pre></td></tr></table></figure></p>
<h4 id="CSS-字体"><a href="#CSS-字体" class="headerlink" title="CSS 字体"></a>CSS 字体</h4><p>CSS字体属性定义字体，加粗，大小，文字样式。  </p>
<h4 id="字体系列"><a href="#字体系列" class="headerlink" title="字体系列"></a>字体系列</h4><p>font-family属性设置文本的字体系列。应该设置几个字体名称作为一种后备机制，如果浏览器不支持第一种字体，他将尝试下一种字体。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">p</span>&#123;<span class="attribute">font-family</span>:<span class="string">"Times New Roman"</span>,Times,serif;&#125;</div></pre></td></tr></table></figure></p>
<h4 id="字体样式"><a href="#字体样式" class="headerlink" title="字体样式"></a>字体样式</h4><p>主要是用于指定斜体文字的字体样式属性。<br>此属性有三个值：  </p>
<ul>
<li>正常-正常显示文本</li>
<li>斜体-以斜体显示的文字  </li>
<li>倾斜的文字-文字向一边倾斜  <figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">p</span><span class="selector-class">.normal</span>&#123;<span class="attribute">font-style</span>:normal;&#125;</div><div class="line"><span class="selector-tag">p</span><span class="selector-class">.italic</span>&#123;<span class="attribute">font-style</span>:italic;&#125;</div><div class="line"><span class="selector-tag">p</span><span class="selector-class">.oblique</span>&#123;<span class="attribute">font-style</span>:oblique;&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="字体大小"><a href="#字体大小" class="headerlink" title="字体大小"></a>字体大小</h4><p>font-size属性设置文本的大小。<br>请务必使用正确的HTML标签，就h1-h6表示标题和p表示段落。<br>字体大小的值是可以绝对或相对的大小。<br>绝对大小：  </p>
<ul>
<li>设置一个指定大小的文本</li>
<li>不允许用户在所有浏览器中改变字体大小  </li>
<li>确定了输出的物理尺寸时绝对大小很有用  </li>
</ul>
<p>相对大小：  </p>
<ul>
<li>相对于周围的元素来设置大小  </li>
<li>允许用户在浏览器中改变文字大小</li>
</ul>
<h4 id="设置字体大小像素"><a href="#设置字体大小像素" class="headerlink" title="设置字体大小像素"></a>设置字体大小像素</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">h1</span> &#123;<span class="attribute">font-size</span>:<span class="number">40px</span>;&#125;</div><div class="line"><span class="selector-tag">h2</span> &#123;<span class="attribute">font-size</span>:<span class="number">30px</span>;&#125;</div><div class="line"><span class="selector-tag">p</span> &#123;<span class="attribute">font-size</span>:<span class="number">14px</span>&#125;</div></pre></td></tr></table></figure>
<h4 id="用em来设置字体大小"><a href="#用em来设置字体大小" class="headerlink" title="用em来设置字体大小"></a>用em来设置字体大小</h4><p>为了避免Internet Explorer 中无法调整文本的问题，许多开发者使用 em 单位代替像素。<br>em的尺寸单位由W3C建议。<br>1em和当前字体大小相等。在浏览器中默认的文字大小是16px。<br>因此，1em的默认大小是16px。可以通过下面这个公式将像素转换为em：px/16=em  </p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">h1</span> &#123;<span class="attribute">font-size</span>:<span class="number">2.5em</span>;&#125;<span class="comment">/*40px/16=2.5em*/</span></div><div class="line"><span class="selector-tag">h2</span> &#123;<span class="attribute">font-size</span>:<span class="number">1.875em</span>;&#125;<span class="comment">/*30px/16=1.875em*/</span></div><div class="line"><span class="selector-tag">p</span> &#123;<span class="attribute">font-size</span>:<span class="number">0.875em</span>;&#125;<span class="comment">/*14px/16=0.875em*/</span></div></pre></td></tr></table></figure>
<h4 id="使用百分比和EM组合"><a href="#使用百分比和EM组合" class="headerlink" title="使用百分比和EM组合"></a>使用百分比和EM组合</h4><p>在所有浏览器的解决方案中，设置body元素的默认字体大小的是百分比：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">body</span> &#123;<span class="attribute">font-size</span>:<span class="number">100%</span>;&#125;</div><div class="line"><span class="selector-tag">h1</span> &#123;<span class="attribute">font-size</span>:<span class="number">2.5em</span>;&#125;</div><div class="line"><span class="selector-tag">h2</span> &#123;<span class="attribute">font-size</span>:<span class="number">1</span>,<span class="number">875em</span>;&#125;</div><div class="line"><span class="selector-tag">p</span> &#123;<span class="attribute">font-size</span>:<span class="number">0.875em</span>;&#125;</div></pre></td></tr></table></figure></p>
<h3 id="CSS-链接"><a href="#CSS-链接" class="headerlink" title="CSS 链接"></a>CSS 链接</h3><h4 id="链接的样式"><a href="#链接的样式" class="headerlink" title="链接的样式"></a>链接的样式</h4><ul>
<li>a:link - 正常，未访问过的链接</li>
<li>a:visited - 用户已访问过的链接</li>
<li>a:hover - 当用户鼠标放在链接上时</li>
<li>a:active - 链接被点击的那一刻<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:link</span> &#123;<span class="attribute">color</span>:<span class="number">#000000</span>;&#125;      <span class="comment">/* 未访问链接*/</span></div><div class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:visited</span> &#123;<span class="attribute">color</span>:<span class="number">#00FF00</span>;&#125;  <span class="comment">/* 已访问链接 */</span></div><div class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;<span class="attribute">color</span>:<span class="number">#FF00FF</span>;&#125;  <span class="comment">/* 鼠标移动到链接上 */</span></div><div class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:active</span> &#123;<span class="attribute">color</span>:<span class="number">#0000FF</span>;&#125;  <span class="comment">/* 鼠标点击时 */</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="常见的链接样式"><a href="#常见的链接样式" class="headerlink" title="常见的链接样式"></a>常见的链接样式</h4><h5 id="文本修饰-1"><a href="#文本修饰-1" class="headerlink" title="文本修饰"></a>文本修饰</h5><p>text-decoration 属性主要用于删除链接中的下划线：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:link</span> &#123;<span class="attribute">text-decoration</span>:none;&#125;</div><div class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:visited</span> &#123;<span class="attribute">text-decoration</span>:none;&#125;</div><div class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;<span class="attribute">text-decoration</span>:underline;&#125;</div><div class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:active</span> &#123;<span class="attribute">text-decoration</span>:underline;&#125;</div></pre></td></tr></table></figure></p>
<h5 id="背景颜色-1"><a href="#背景颜色-1" class="headerlink" title="背景颜色"></a>背景颜色</h5><p>背景颜色属性指定链接背景色：  </p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:link</span> &#123;<span class="attribute">background-color</span>:<span class="number">#B2FF99</span>;&#125;</div><div class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:visited</span> &#123;<span class="attribute">background-color</span>:<span class="number">#FFFF85</span>;&#125;</div><div class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;<span class="attribute">background-color</span>:<span class="number">#FF704D</span>;&#125;</div><div class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:active</span> &#123;<span class="attribute">background-color</span>:<span class="number">#FF704D</span>;&#125;</div></pre></td></tr></table></figure>
<h3 id="CSS-列表"><a href="#CSS-列表" class="headerlink" title="CSS 列表"></a>CSS 列表</h3><p>列表属性作用：  </p>
<ul>
<li>设置不同的列表项标记问有序列表  </li>
<li>设置不同的列表项为无序列表  </li>
<li>设置列表项标记为图像  </li>
</ul>
<h4 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h4><p>HTML有两种类型的列表：  </p>
<ul>
<li>无序列表</li>
<li>有序列表<br>使用CSS可以列出进一步的样式，并可用图像作列表项标记。  </li>
</ul>
<h4 id="不同的列表项标记"><a href="#不同的列表项标记" class="headerlink" title="不同的列表项标记"></a>不同的列表项标记</h4><p>list-style-type属性指定列表项标记的类型是：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-tag">ul</span><span class="selector-class">.a</span> &#123;<span class="attribute">list-style-type</span>:circle;&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">ul</span><span class="selector-class">.b</span> &#123;<span class="attribute">list-style-type</span>:square;&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">ol</span><span class="selector-class">.c</span> &#123;<span class="attribute">list-style-type</span>:upper-roman;&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">ol</span><span class="selector-class">.d</span> &#123;<span class="attribute">list-style-type</span>:lower-alpha;&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>无序列表实例:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"a"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Coffee<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Tea<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Coca Cola<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"b"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Coffee<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Tea<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Coca Cola<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>有序列表实例:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">class</span>=<span class="string">"c"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Coffee<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Tea<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Coca Cola<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">class</span>=<span class="string">"d"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Coffee<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Tea<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Coca Cola<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="作为列表项标记的图像"><a href="#作为列表项标记的图像" class="headerlink" title="作为列表项标记的图像"></a>作为列表项标记的图像</h4><p>要指定列表项标记的图像，使用列表样式图像属性：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">ul </span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">    <span class="selector-tag">list-style-image</span><span class="selector-pseudo">:url('sqpurple.gif')</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>Coffee<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>Tea<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>Coca Cola<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="浏览器兼容性解决方案"><a href="#浏览器兼容性解决方案" class="headerlink" title="浏览器兼容性解决方案"></a>浏览器兼容性解决方案</h4><p>同样在所有浏览器，下面的例子会显示的图像标记：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">ul</span></div><div class="line">&#123;</div><div class="line">    <span class="attribute">list-style-type</span>: none;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">0px</span>;</div><div class="line">    <span class="attribute">margin</span>: <span class="number">0px</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span></div><div class="line">&#123;</div><div class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(sqpurple.gif);</div><div class="line">    <span class="attribute">background-repeat</span>: no-repeat;</div><div class="line">    <span class="attribute">background-position</span>: <span class="number">0px</span> <span class="number">5px</span>; </div><div class="line">    <span class="attribute">padding-left</span>: <span class="number">14px</span>; </div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="列表-简写属性"><a href="#列表-简写属性" class="headerlink" title="列表-简写属性"></a>列表-简写属性</h4><p>在单个属性中可以指定所有的列表属性，这就是所谓的简写属性。<br>为列表使用方便，列表样式属性设置如下：<br><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="string">ul</span></div><div class="line"><span class="string">&#123;</span></div><div class="line">    <span class="built_in">list-style:</span> <span class="string">square </span><span class="string">url(</span><span class="string">"sqpurple.gif"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="CSS-表格"><a href="#CSS-表格" class="headerlink" title="CSS 表格"></a>CSS 表格</h3><p>使用CSS可以使HTML表格更美观。  </p>
<h4 id="表格边框"><a href="#表格边框" class="headerlink" title="表格边框"></a>表格边框</h4><p>指定CSS表格边框，使用border属性。<br>下面的例子指定了一个表格的th和td元素的黑色边框：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">table</span>,<span class="selector-tag">th</span>,td</div><div class="line">&#123;</div><div class="line">    <span class="attribute">border</span>:<span class="number">1px</span> solid black;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="折叠边框"><a href="#折叠边框" class="headerlink" title="折叠边框"></a>折叠边框</h4><p>border-collapse属性设置的边框是否杯折叠成一个单一的边框或隔开：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">table</div><div class="line">&#123;</div><div class="line"><span class="attribute">border-collapse</span>:collapse;</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">table</span>,<span class="selector-tag">th</span>, td</div><div class="line">&#123;</div><div class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid black;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="表格宽度和高度"><a href="#表格宽度和高度" class="headerlink" title="表格宽度和高度"></a>表格宽度和高度</h4><p>Width和height属性定义表格的宽度和高度。<br>下面的例子是设置100％的宽度，50像素的th元素的高度的表格：  </p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">table</span> </div><div class="line">&#123;</div><div class="line"><span class="attribute">width</span>:<span class="number">100%</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">th</span></div><div class="line">&#123;</div><div class="line"><span class="attribute">height</span>:<span class="number">50px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="表格文字对齐"><a href="#表格文字对齐" class="headerlink" title="表格文字对齐"></a>表格文字对齐</h4><p>表格中的文本对齐和垂直对齐属性。<br>text-align属性设置水平对齐方式，像左，右，或中心：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">td</span></div><div class="line">&#123;</div><div class="line"><span class="attribute">text-align</span>:right;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>垂直对齐属性设置垂直对齐，比如顶部，底部或中间：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">td</span></div><div class="line">&#123;</div><div class="line"><span class="attribute">height</span>:<span class="number">50px</span>;</div><div class="line"><span class="attribute">vertical-align</span>:bottom;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="表格填充"><a href="#表格填充" class="headerlink" title="表格填充"></a>表格填充</h4><p>如果在标的内容中控制空格之间的边框，应使用td和th元素的填充属性：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">td</span></div><div class="line">&#123;</div><div class="line">    <span class="attribute">padding</span>:<span class="number">15px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="表格颜色"><a href="#表格颜色" class="headerlink" title="表格颜色"></a>表格颜色</h4><p>下面的例子指定边框的颜色，和th元素的文本和背景颜色：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">table</span>, <span class="selector-tag">td</span>, <span class="selector-tag">th</span></div><div class="line">&#123;</div><div class="line"><span class="attribute">border</span>:<span class="number">1px</span> solid green;</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">th</span></div><div class="line">&#123;</div><div class="line"><span class="attribute">background-color</span>:green;</div><div class="line"><span class="attribute">color</span>:white;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="CSS-盒子模型"><a href="#CSS-盒子模型" class="headerlink" title="CSS 盒子模型"></a>CSS 盒子模型</h3><p>所有HTML元素可以看作盒子，在CSS中，”box model”这一术语是用来设计和布局时使用。<br>CSS盒模型本质上是一个盒子，封装周围的HTML元素，它包括：边距，边框，填充，和实际内容。<br>盒模型允许我们在其它元素和周围元素边框之间的空间放置元素。<br>下面的图片说明了盒子模型(Box Model)：<br><a href="http://www.runoob.com/images/box-model.gif" target="_blank" rel="external"></a><br>不同部分的说明：  </p>
<ul>
<li>Margin(外边距) - 清除边框外的区域，外边距是透明的。</li>
<li>Border(边框) - 围绕在内边距和内容外的边框。</li>
<li>Padding(内边距) - 清除内容周围的区域，内边距是透明的。</li>
<li>Content(内容) - 盒子的内容，显示文本和图像。  </li>
</ul>
<h4 id="元素的宽度和高度"><a href="#元素的宽度和高度" class="headerlink" title="元素的宽度和高度"></a>元素的宽度和高度</h4><p>指定一个CSS元素的宽度和高度属性时，只是设置内容区域的宽度和高度。要知道，完全大小的元素，还必须添加填充，边框和边距  </p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">div</span> &#123;</div><div class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</div><div class="line">    <span class="attribute">border</span>: <span class="number">25px</span> solid green;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">25px</span>;</div><div class="line">    <span class="attribute">margin</span>: <span class="number">25px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>让我们自己算算：<br>300px (宽)  </p>
<ul>
<li>50px (左 + 右填充)  + 50px (左 + 右边框)  + 50px (左 + 右边距)<br>= 450px<br>试想一下，你只有250像素的空间。让我们设置总宽度为250像素的元素:  <figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">div</span> &#123;</div><div class="line">    <span class="attribute">width</span>: <span class="number">220px</span>;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">10px</span>;</div><div class="line">    <span class="attribute">border</span>: <span class="number">5px</span> solid gray;</div><div class="line">    <span class="attribute">margin</span>: <span class="number">0</span>; </div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>最终元素的总宽度计算公式是这样的：<br>总元素的宽度=宽度+左填充+右填充+左边框+右边框+左边距+右边距<br>元素的总高度最终计算公式是这样的：<br>总元素的高度=高度+顶部填充+底部填充+上边框+下边框+上边距+下边距  </p>
<h4 id="浏览器的兼容性问题"><a href="#浏览器的兼容性问题" class="headerlink" title="浏览器的兼容性问题"></a>浏览器的兼容性问题</h4><p>一旦为页面设置了恰当的 DTD，大多数浏览器都会按照上面的图示来呈现内容。然而 IE 5 和 6 的呈现却是不正确的。根据 W3C 的规范，元素内容占据的空间是由 width 属性设置的，而内容周围的 padding 和 border 值是另外计算的。不幸的是，IE5.X 和 6 在怪异模式中使用自己的非标准模型。这些浏览器的 width 属性不是内容的宽度，而是内容、内边距和边框的宽度的总和。<br>虽然有方法解决这个问题。但是目前最好的解决方案是回避这个问题。也就是，不要给元素添加具有指定宽度的内边距，而是尝试将内边距或外边距添加到元素的父元素和子元素。<br>IE8 及更早IE版本不支持设置填充的宽度和边框的宽度属性。<br>解决IE8及更早版本不兼容问题可以在HTML页面声明 !DOCTYPE html即可</p>
<h3 id="CSS-边框"><a href="#CSS-边框" class="headerlink" title="CSS 边框"></a>CSS 边框</h3><h4 id="CSS-边框属性"><a href="#CSS-边框属性" class="headerlink" title="CSS 边框属性"></a>CSS 边框属性</h4><p>CSS边框属性允许指定一个元素边框的样式和颜色。  </p>
<h4 id="边框样式"><a href="#边框样式" class="headerlink" title="边框样式"></a>边框样式</h4><p>边框样式属性指定要显示什么样的边界。   </p>
<h4 id="border-style值"><a href="#border-style值" class="headerlink" title="border-style值"></a>border-style值</h4><p>dotted: dotted:定义一个点线边框<br>dashed: 定义一个虚线边框<br>solid: 定义实线边框<br>double: 定义两个边框。 两个边框的宽度和 border-width 的值相同<br>groove: 定义3D沟槽边框。效果取决于边框的颜色值<br>ridge: 定义3D脊边框。效果取决于边框的颜色值<br>inset:定义一个3D的嵌入边框。效果取决于边框的颜色值<br>outset: 定义一个3D突出边框。 效果取决于边框的颜色值  </p>
<h4 id="边框宽度"><a href="#边框宽度" class="headerlink" title="边框宽度"></a>边框宽度</h4><p>可以通过Border-width属性为边框指定宽度。<br>为边框指定宽度有两种方法：可以指定长度值，比如 2px 或 0.1em(单位为 px, pt, cm, em 等)，或者使用 3 个关键字之一，它们分别是 thick 、medium（默认值） 和 thin。<br>CSS 没有定义 3 个关键字的具体宽度，所以一个用户可能把 thick 、medium 和 thin 分别设置为等于 5px、3px 和 2px，而另一个用户则分别设置为 3px、2px 和 1px。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">p</span><span class="selector-class">.one</span></div><div class="line">&#123;</div><div class="line">    <span class="attribute">border-style</span>:solid;</div><div class="line">    <span class="attribute">border-width</span>:<span class="number">5px</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">p</span><span class="selector-class">.two</span></div><div class="line">&#123;</div><div class="line">    <span class="attribute">border-style</span>:solid;</div><div class="line">    <span class="attribute">border-width</span>:medium;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="边框颜色"><a href="#边框颜色" class="headerlink" title="边框颜色"></a>边框颜色</h4><p>border-color属性用于设置边框的颜色。可以设置的颜色：  </p>
<ul>
<li>name - 指定颜色的名称，如 “red”</li>
<li>RGB - 指定 RGB 值, 如 “rgb(255,0,0)”</li>
<li>Hex - 指定16进制值, 如 “#ff0000”    </li>
</ul>
<p>您还可以设置边框的颜色为”transparent”。<br>注意：border-color单独使用是不起作用的，必须得先使用border-style来设置边框样式。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">p</span><span class="selector-class">.one</span></div><div class="line">&#123;</div><div class="line">    <span class="attribute">border-style</span>:solid;</div><div class="line">    <span class="attribute">border-color</span>:red;</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">p</span><span class="selector-class">.two</span></div><div class="line">&#123;</div><div class="line">    <span class="attribute">border-style</span>:solid;</div><div class="line">    <span class="attribute">border-color</span>:<span class="number">#98bf21</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="边框-单独设置各边"><a href="#边框-单独设置各边" class="headerlink" title="边框-单独设置各边"></a>边框-单独设置各边</h4><p>在CSS中，可以指定不同的侧面不同的边框：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">p</span></div><div class="line">&#123;</div><div class="line">    <span class="attribute">border-top-style</span>:dotted;</div><div class="line">    <span class="attribute">border-right-style</span>:solid;</div><div class="line">    <span class="attribute">border-bottom-style</span>:dotted;</div><div class="line">    <span class="attribute">border-left-style</span>:solid;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>上面的例子可以设置一个单一属性：<br><figure class="highlight maxima"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">border</span>-<span class="built_in">style</span>:dotted solid;</div></pre></td></tr></table></figure></p>
<h4 id="边框-简写属性"><a href="#边框-简写属性" class="headerlink" title="边框-简写属性"></a>边框-简写属性</h4><p>上面的例子用了很多属性来设置边框。<br>也可以在一个属性中设置边框。<br>可以在”border”属性中设置：  </p>
<ul>
<li>border-width</li>
<li>border-style (required)</li>
<li>border-color  </li>
</ul>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">p</span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">    <span class="selector-tag">border</span><span class="selector-pseudo">:5px</span> <span class="selector-tag">solid</span> <span class="selector-tag">red</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>段落中的一些文本。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="CSS-轮廓"><a href="#CSS-轮廓" class="headerlink" title="CSS 轮廓"></a>CSS 轮廓</h3><p>轮廓（outline）是绘制于元素周围的一条线，位于边框边缘的外围，可起到突出元素的作用。<br>轮廓（outline）属性指定元素轮廓的样式、颜色和宽度.<br>看几个例子就很明显了：  </p>
<h4 id="在元素周围画线"><a href="#在元素周围画线" class="headerlink" title="在元素周围画线"></a>在元素周围画线</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">p </span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">border</span><span class="selector-pseudo">:1px</span> <span class="selector-tag">solid</span> <span class="selector-tag">red</span>;</span></div><div class="line"><span class="css">  <span class="selector-tag">outline</span><span class="selector-pseudo">:green</span> <span class="selector-tag">dotted</span> <span class="selector-tag">thick</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>注意:<span class="tag">&lt;/<span class="name">b</span>&gt;</span> 如果只有一个 !DOCTYP E指定 IE8 支持 outline 属性。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="设置轮廓样式"><a href="#设置轮廓样式" class="headerlink" title="设置轮廓样式"></a>设置轮廓样式</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-tag">p</span> &#123;<span class="attribute">border</span>:<span class="number">1px</span> solid red;&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-class">.dotted</span> &#123;<span class="attribute">outline-style</span>:dotted;&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-class">.dashed</span> &#123;<span class="attribute">outline-style</span>:dashed;&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-class">.solid</span> &#123;<span class="attribute">outline-style</span>:solid;&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-class">.double</span> &#123;<span class="attribute">outline-style</span>:double;&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-class">.groove</span> &#123;<span class="attribute">outline-style</span>:groove;&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-class">.ridge</span> &#123;<span class="attribute">outline-style</span>:ridge;&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-class">.inset</span> &#123;<span class="attribute">outline-style</span>:inset;&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-class">.outset</span> &#123;<span class="attribute">outline-style</span>:outset;&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"dotted"</span>&gt;</span>点线轮廓<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"dashed"</span>&gt;</span>虚线轮廓<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"solid"</span>&gt;</span>实线轮廓<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"double"</span>&gt;</span>双线轮廓<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"groove"</span>&gt;</span>凹槽轮廓<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"ridge"</span>&gt;</span>垄状轮廓<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"inset"</span>&gt;</span>嵌入轮廓<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"outset"</span>&gt;</span>外凸轮廓<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>注意:<span class="tag">&lt;/<span class="name">b</span>&gt;</span> 如果只有一个 !DOCTYPE 指定 IE 8 支持 outline 属性。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="设置轮廓的颜色"><a href="#设置轮廓的颜色" class="headerlink" title="设置轮廓的颜色"></a>设置轮廓的颜色</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">p </span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">border</span><span class="selector-pseudo">:1px</span> <span class="selector-tag">solid</span> <span class="selector-tag">red</span>;</span></div><div class="line"><span class="css">  <span class="selector-tag">outline-style</span><span class="selector-pseudo">:dotted</span>;</span></div><div class="line"><span class="css">  <span class="selector-tag">outline-color</span>:<span class="selector-id">#00ff00</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>注意:<span class="tag">&lt;/<span class="name">b</span>&gt;</span> 如果只有一个 !DOCTYPE 指定 IE 8 支持 outline 属性。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="设置轮廓的宽度"><a href="#设置轮廓的宽度" class="headerlink" title="设置轮廓的宽度"></a>设置轮廓的宽度</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-class">.one</span></span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">border</span><span class="selector-pseudo">:1px</span> <span class="selector-tag">solid</span> <span class="selector-tag">red</span>;</span></div><div class="line"><span class="css">  <span class="selector-tag">outline-style</span><span class="selector-pseudo">:solid</span>;</span></div><div class="line"><span class="css">  <span class="selector-tag">outline-width</span><span class="selector-pseudo">:thin</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-class">.two</span></span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">border</span><span class="selector-pseudo">:1px</span> <span class="selector-tag">solid</span> <span class="selector-tag">red</span>;</span></div><div class="line"><span class="css">  <span class="selector-tag">outline-style</span><span class="selector-pseudo">:dotted</span>;</span></div><div class="line"><span class="css">  <span class="selector-tag">outline-width</span><span class="selector-pseudo">:3px</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"one"</span>&gt;</span>This is some text in a paragraph.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"two"</span>&gt;</span>This is some text in a paragraph.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>注意:<span class="tag">&lt;/<span class="name">b</span>&gt;</span> 如果只有一个 !DOCTYPE 指定 IE8 支持 outline 属性。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="CSS-Margin-外边距"><a href="#CSS-Margin-外边距" class="headerlink" title="CSS Margin(外边距)"></a>CSS Margin(外边距)</h3><p>外边距属性定义元素周围的空间。  </p>
<h4 id="Margin"><a href="#Margin" class="headerlink" title="Margin"></a>Margin</h4><p>margin清除周围的元素（外边框）的区域。margin没有背景颜色，是完全透明的<br>margin可以单独改变元素的上，下，左，右边距。也可以一次改变所有的属性。  </p>
<h4 id="Margin-单边外边距属性"><a href="#Margin-单边外边距属性" class="headerlink" title="Margin - 单边外边距属性"></a>Margin - 单边外边距属性</h4><p>在CSS中，它可以指定不同的侧面不同的边距：  </p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">p</span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">background-color</span><span class="selector-pseudo">:yellow</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-class">.margin</span></span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">margin-top</span><span class="selector-pseudo">:100px</span>;</span></div><div class="line"><span class="css">  <span class="selector-tag">margin-bottom</span><span class="selector-pseudo">:100px</span>;</span></div><div class="line"><span class="css">  <span class="selector-tag">margin-right</span><span class="selector-pseudo">:50px</span>;</span></div><div class="line"><span class="css">  <span class="selector-tag">margin-left</span><span class="selector-pseudo">:50px</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个没有指定边距大小的段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"margin"</span>&gt;</span>这是一个指定边距大小的段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="Margin-简写属性"><a href="#Margin-简写属性" class="headerlink" title="Margin - 简写属性"></a>Margin - 简写属性</h4><p>为了缩短代码，有可能使用一个属性中margin指定的所有边距属性。这就是所谓的缩写属性。<br>所有边距属性的缩写属性是”margin”:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">p</span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">background-color</span><span class="selector-pseudo">:yellow</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-class">.margin</span></span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">margin</span><span class="selector-pseudo">:100px</span> 50<span class="selector-tag">px</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个没有指定边距大小的段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"margin"</span>&gt;</span>这是一个指定边距大小的段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="CSS-Padding（填充）"><a href="#CSS-Padding（填充）" class="headerlink" title="CSS Padding（填充）"></a>CSS Padding（填充）</h3><p>CSS Padding（填充）属性定义元素边框与元素内容之间的空间。  </p>
<h4 id="Padding（填充）"><a href="#Padding（填充）" class="headerlink" title="Padding（填充）"></a>Padding（填充）</h4><p>当元素的Padding（填充）（内边距）被清除时，所”释放”的区域将会受到元素背景颜色的填充。<br>单独使用填充属性可以改变上下左右的填充。缩写填充属性也可以使用，一旦改变一切都改变。  </p>
<h4 id="填充-单边内边距属性"><a href="#填充-单边内边距属性" class="headerlink" title="填充- 单边内边距属性"></a>填充- 单边内边距属性</h4><p>在CSS中，它可以指定不同的侧面不同的填充：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">p</span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">background-color</span><span class="selector-pseudo">:yellow</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-class">.padding</span></span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">padding-top</span><span class="selector-pseudo">:25px</span>;</span></div><div class="line"><span class="css">  <span class="selector-tag">padding-bottom</span><span class="selector-pseudo">:25px</span>;</span></div><div class="line"><span class="css">  <span class="selector-tag">padding-right</span><span class="selector-pseudo">:50px</span>;</span></div><div class="line"><span class="css">  <span class="selector-tag">padding-left</span><span class="selector-pseudo">:50px</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个没有指定填充边距的段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"padding"</span>&gt;</span>这是一个指定填充边距的段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="填充-简写属性"><a href="#填充-简写属性" class="headerlink" title="填充 - 简写属性"></a>填充 - 简写属性</h4><p>为了缩短代码，它可以在一个属性中指定的所有填充属性。<br>这就是所谓的缩写属性。所有的填充属性的缩写属性是”padding”:   </p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">p</span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">background-color</span><span class="selector-pseudo">:yellow</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-class">.padding</span></span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">padding</span><span class="selector-pseudo">:25px</span> 50<span class="selector-tag">px</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个没有指定填充边距的段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"padding"</span>&gt;</span>这是一个指定填充边距的段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="CSS-分组和-嵌套-选择器"><a href="#CSS-分组和-嵌套-选择器" class="headerlink" title="CSS 分组和 嵌套 选择器"></a>CSS 分组和 嵌套 选择器</h3><h4 id="Grouping-Selectors"><a href="#Grouping-Selectors" class="headerlink" title="Grouping Selectors"></a>Grouping Selectors</h4><p>在样式表中有很多具有相同样式的元素。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">h1</span></div><div class="line">&#123;</div><div class="line"><span class="attribute">color</span>:green;</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">h2</span></div><div class="line">&#123;</div><div class="line"><span class="attribute">color</span>:green;</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">p</span></div><div class="line">&#123;</div><div class="line"><span class="attribute">color</span>:green;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>为了尽量减少代码，你可以使用分组选择器。<br>每个选择器用逗号分隔.<br>在下面的例子中，我们对以上代码使用分组选择器：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">h1</span>,<span class="selector-tag">h2</span>,p</div><div class="line">&#123;</div><div class="line"><span class="attribute">color</span>:green;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="嵌套选择器"><a href="#嵌套选择器" class="headerlink" title="嵌套选择器"></a>嵌套选择器</h4><p>它可能适用于选择器内部的选择器的样式。<br>在下面的例子设置了三个样式：  </p>
<ul>
<li>为所有p元素指定一个样式</li>
<li>为所有class=”marked”的元素指定一个样式</li>
<li>为所有class=”marked”元素内的p元素指定一个样式  </li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">p</span></div><div class="line">&#123;</div><div class="line"><span class="attribute">color</span>:blue;</div><div class="line"><span class="attribute">text-align</span>:center;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.marked</span></div><div class="line">&#123;</div><div class="line"><span class="attribute">background-color</span>:red;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.marked</span> <span class="selector-tag">p</span></div><div class="line">&#123;</div><div class="line"><span class="attribute">color</span>:white;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>来一个全的：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">p</span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">color</span><span class="selector-pseudo">:blue</span>;</span></div><div class="line"><span class="css">  <span class="selector-tag">text-align</span><span class="selector-pseudo">:center</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="css"><span class="selector-class">.marked</span></span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">background-color</span><span class="selector-pseudo">:red</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="css"><span class="selector-class">.marked</span> <span class="selector-tag">p</span></span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">color</span><span class="selector-pseudo">:white</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这个段落是蓝色文本，居中对齐。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"marked"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这个段落不是蓝色文本。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>所有 class="marked"元素内的 p 元素指定一个样式，但有不同的文本颜色。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="CSS-尺寸-Dimension"><a href="#CSS-尺寸-Dimension" class="headerlink" title="CSS 尺寸 (Dimension)"></a>CSS 尺寸 (Dimension)</h3><p>CSS 尺寸 (Dimension) 属性允许你控制元素的高度和宽度。同样，它允许你增加行间距。  </p>
<h4 id="设置元素的高度"><a href="#设置元素的高度" class="headerlink" title="设置元素的高度"></a>设置元素的高度</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-tag">img</span><span class="selector-class">.normal</span></span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">height</span><span class="selector-pseudo">:auto</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">img</span><span class="selector-class">.big</span></span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">height</span><span class="selector-pseudo">:120px</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-class">.ex</span></span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">height</span><span class="selector-pseudo">:100px</span>;</span></div><div class="line"><span class="css">  <span class="selector-tag">width</span><span class="selector-pseudo">:100px</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="使用百分比设置图像的高度"><a href="#使用百分比设置图像的高度" class="headerlink" title="使用百分比设置图像的高度"></a>使用百分比设置图像的高度</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-tag">html</span> &#123;<span class="attribute">height</span>:<span class="number">100%</span>;&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">body</span> &#123;<span class="attribute">height</span>:<span class="number">100%</span>;&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">img</span><span class="selector-class">.normal</span> &#123;<span class="attribute">height</span>:auto;&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">img</span><span class="selector-class">.big</span> &#123;<span class="attribute">height</span>:<span class="number">50%</span>;&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">img</span><span class="selector-class">.small</span> &#123;<span class="attribute">height</span>:<span class="number">10%</span>;&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="使用像素值来设置元素的宽度"><a href="#使用像素值来设置元素的宽度" class="headerlink" title="使用像素值来设置元素的宽度"></a>使用像素值来设置元素的宽度</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-tag">img</span> &#123;<span class="attribute">width</span>:<span class="number">200px</span>;&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="设置元素的最大高度"><a href="#设置元素的最大高度" class="headerlink" title="设置元素的最大高度"></a>设置元素的最大高度</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">p</span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">max-height</span><span class="selector-pseudo">:50px</span>;</span></div><div class="line"><span class="css">  <span class="selector-tag">background-color</span><span class="selector-pseudo">:yellow</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="使用百分比来设置元素的最大宽度"><a href="#使用百分比来设置元素的最大宽度" class="headerlink" title="使用百分比来设置元素的最大宽度"></a>使用百分比来设置元素的最大宽度</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">p</span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">max-width</span><span class="selector-pseudo">:20</span>%;</span></div><div class="line"><span class="css">  <span class="selector-tag">background-color</span><span class="selector-pseudo">:yellow</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="设置元素的最低高度"><a href="#设置元素的最低高度" class="headerlink" title="设置元素的最低高度"></a>设置元素的最低高度</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">p</span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">min-height</span><span class="selector-pseudo">:100px</span>;</span></div><div class="line"><span class="css">  <span class="selector-tag">background-color</span><span class="selector-pseudo">:yellow</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="使用像素值设置元素的最小宽度"><a href="#使用像素值设置元素的最小宽度" class="headerlink" title="使用像素值设置元素的最小宽度"></a>使用像素值设置元素的最小宽度</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">p</span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">min-width</span><span class="selector-pseudo">:150px</span>;</span></div><div class="line"><span class="css">  <span class="selector-tag">background-color</span><span class="selector-pseudo">:yellow</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="CSS-Display-显示-与-Visibility（可见性）"><a href="#CSS-Display-显示-与-Visibility（可见性）" class="headerlink" title="CSS Display(显示) 与 Visibility（可见性）"></a>CSS Display(显示) 与 Visibility（可见性）</h3><p>display属性设置一个元素应如何显示，visibility属性指定一个元素应可见还是隐藏。    </p>
<h4 id="隐藏元素-display-none或visibility-hidden"><a href="#隐藏元素-display-none或visibility-hidden" class="headerlink" title="隐藏元素 - display:none或visibility:hidden"></a>隐藏元素 - display:none或visibility:hidden</h4><p>隐藏一个元素可以通过把display属性设置为”none”，或把visibility属性设置为”hidden”。但是请注意，这两种方法会产生不同的结果。<br>visibility:hidden可以隐藏某个元素，但隐藏的元素仍需占用与未隐藏之前一样的空间。也就是说，该元素虽然被隐藏了，但仍然会影响布局。  </p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>这是一个可见标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"hidden"</span>&gt;</span>这是一个隐藏标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>注意, 实例中的隐藏标题仍然占用空间。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div></pre></td></tr></table></figure>
<p>display:none可以隐藏某个元素，且隐藏的元素不会占用任何空间。也就是说，该元素不但被隐藏了，而且该元素原本占用的空间也会从页面布局中消失。  </p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">h1</span><span class="selector-class">.hidden</span> &#123;<span class="attribute">display</span>:none;&#125;</div></pre></td></tr></table></figure>
<h4 id="CSS-Display-块和内联元素"><a href="#CSS-Display-块和内联元素" class="headerlink" title="CSS Display - 块和内联元素"></a>CSS Display - 块和内联元素</h4><p>块元素是一个元素，占用了全部宽度，在前后都是换行符。<br>块元素的例子：</p>
<ul>
<li>&amp;lth1&amp;gt</li>
<li>&amp;ltp&amp;gt</li>
<li>&amp;ltdiv&amp;gt<br>内联元素只需要必要的宽度，不强制换行。<br>内联元素的例子：  </li>
<li>&amp;ltspan&amp;gt</li>
<li>&amp;lta&amp;gt  </li>
</ul>
<h4 id="如何改变一个元素显示"><a href="#如何改变一个元素显示" class="headerlink" title="如何改变一个元素显示"></a>如何改变一个元素显示</h4><p>可以更改内联元素和块元素，反之亦然，可以使页面看起来是以一种特定的方式组合，并仍然遵循web标准。下面的示例把列表项显示为内联元素：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">li</span> &#123;<span class="attribute">display</span>:inline;&#125;</div></pre></td></tr></table></figure></p>
<p>把span元素作为块元素：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">span</span> &#123;<span class="attribute">display</span>:block;&#125;</div></pre></td></tr></table></figure></p>
<h3 id="CSS-Positioning-定位"><a href="#CSS-Positioning-定位" class="headerlink" title="CSS Positioning(定位)"></a>CSS Positioning(定位)</h3><p>position 属性指定了元素的定位类型。<br>position 属性的四个值：  </p>
<ul>
<li>static</li>
<li>relative</li>
<li>fixed</li>
<li>absolute  </li>
</ul>
<p>元素可以使用的顶部，底部，左侧和右侧属性定位。然而，这些属性无法工作，除非是先设定position属性。他们也有不同的工作方式，这取决于定位方法。  </p>
<h4 id="static-定位"><a href="#static-定位" class="headerlink" title="static 定位"></a>static 定位</h4><p>HTML元素的默认值，即没有定位，元素出现在正常的流中。<br>静态定位的元素不会受到 top, bottom, left, right影响。  </p>
<h4 id="fixed-定位"><a href="#fixed-定位" class="headerlink" title="fixed 定位"></a>fixed 定位</h4><p>元素的位置相对于浏览器窗口是固定位置。<br>即使窗口是滚动的它也不会移动：  </p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">p</span><span class="selector-class">.pos_fixed</span></div><div class="line">&#123;</div><div class="line">    <span class="attribute">position</span>:fixed;</div><div class="line">    <span class="attribute">top</span>:<span class="number">30px</span>;</div><div class="line">    <span class="attribute">right</span>:<span class="number">5px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="relative-定位"><a href="#relative-定位" class="headerlink" title="relative 定位"></a>relative 定位</h4><p>相对定位元素的定位是相对其正常位置。  </p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">h2</span><span class="selector-class">.pos_left</span></div><div class="line">&#123;</div><div class="line">    <span class="attribute">position</span>:relative;</div><div class="line">    <span class="attribute">left</span>:-<span class="number">20px</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">h2</span><span class="selector-class">.pos_right</span></div><div class="line">&#123;</div><div class="line">    <span class="attribute">position</span>:relative;</div><div class="line">    <span class="attribute">left</span>:<span class="number">20px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>可以移动的相对定位元素的内容和相互重叠的元素，它原本所占的空间不会改变。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">h2</span><span class="selector-class">.pos_top</span></div><div class="line">&#123;</div><div class="line">    <span class="attribute">position</span>:relative;</div><div class="line">    <span class="attribute">top</span>:-<span class="number">50px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="absolute-定位"><a href="#absolute-定位" class="headerlink" title="absolute 定位"></a>absolute 定位</h4><p>绝对定位的元素的位置相对于最近的已定位父元素，如果元素没有已定位的父元素，那么它的位置相对于html:  </p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">h2</span></div><div class="line">&#123;</div><div class="line">    <span class="attribute">position</span>:absolute;</div><div class="line">    <span class="attribute">left</span>:<span class="number">100px</span>;</div><div class="line">    <span class="attribute">top</span>:<span class="number">150px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>absolute 定位使元素的位置与文档流无关，因此不占据空间。<br>absolute 定位的元素和其他元素重叠。  </p>
<h4 id="重叠的元素"><a href="#重叠的元素" class="headerlink" title="重叠的元素"></a>重叠的元素</h4><p>元素的定位与文档流无关，所以它们可以覆盖页面上的其它元素<br>z-index属性指定了一个元素的堆叠顺序（哪个元素应该放在前面，或后面）<br>一个元素可以有正数或负数的堆叠顺序：  </p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">img</span></div><div class="line">&#123;</div><div class="line">    <span class="attribute">position</span>:absolute;</div><div class="line">    <span class="attribute">left</span>:<span class="number">0px</span>;</div><div class="line">    <span class="attribute">top</span>:<span class="number">0px</span>;</div><div class="line">    <span class="attribute">z-index</span>:-<span class="number">1</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="CSS-Float-浮动"><a href="#CSS-Float-浮动" class="headerlink" title="CSS Float(浮动)"></a>CSS Float(浮动)</h3><p>CSS 的 Float（浮动），会使元素向左或向右移动，其周围的元素也会重新排列。<br>Float（浮动），往往是用于图像，但它在布局时一样非常有用。  </p>
<h4 id="元素怎样浮动"><a href="#元素怎样浮动" class="headerlink" title="元素怎样浮动"></a>元素怎样浮动</h4><p>元素的水平方向浮动，意味着元素只能左右移动而不能上下移动。<br>一个浮动元素会尽量向左或向右移动，直到它的外边缘碰到包含框或另一个浮动框的边框为止。<br>浮动元素之后的元素将围绕它。<br>浮动元素之前的元素将不会受到影响。<br>如果图像是右浮动，下面的文本流将环绕在它左边：  </p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">img</span></div><div class="line">&#123;</div><div class="line">    <span class="attribute">float</span>:right;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="彼此相邻的浮动元素"><a href="#彼此相邻的浮动元素" class="headerlink" title="彼此相邻的浮动元素"></a>彼此相邻的浮动元素</h4><p>如果把几个浮动的元素放到一起，如果有空间的话，它们将彼此相邻。<br>在这里，对图片廊使用 float 属性：  </p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.thumbnail</span> </div><div class="line">&#123;</div><div class="line">    <span class="attribute">float</span>:left;</div><div class="line">    <span class="attribute">width</span>:<span class="number">110px</span>;</div><div class="line">    <span class="attribute">height</span>:<span class="number">90px</span>;</div><div class="line">    <span class="attribute">margin</span>:<span class="number">5px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="清除浮动-使用-clear"><a href="#清除浮动-使用-clear" class="headerlink" title="清除浮动 - 使用 clear"></a>清除浮动 - 使用 clear</h4><p>元素浮动之后，周围的元素会重新排列，为了避免这种情况，使用 clear 属性。<br>clear 属性指定元素两侧不能出现浮动元素。<br>使用 clear 属性往文本中添加图片廊：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.text_line</span></div><div class="line">&#123;</div><div class="line">    <span class="attribute">clear</span>:both;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="CSS-布局-水平-amp-垂直对齐"><a href="#CSS-布局-水平-amp-垂直对齐" class="headerlink" title="CSS 布局 - 水平 &amp; 垂直对齐"></a>CSS 布局 - 水平 &amp; 垂直对齐</h3><h4 id="元素居中对齐"><a href="#元素居中对齐" class="headerlink" title="元素居中对齐"></a>元素居中对齐</h4><p>要水平居中对齐一个元素(如 div), 可以使用 margin: auto;。<br>设置到元素的宽度将防止它溢出到容器的边缘。<br>元素通过指定宽度，并将两边的空外边距平均分配：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.center</span> &#123;</div><div class="line">    <span class="attribute">margin</span>: auto;</div><div class="line">    <span class="attribute">width</span>: <span class="number">50%</span>;</div><div class="line">    <span class="attribute">border</span>: <span class="number">3px</span> solid green;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">10px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="文本居中对齐"><a href="#文本居中对齐" class="headerlink" title="文本居中对齐"></a>文本居中对齐</h4><p>如果仅仅是为了文本在元素内居中对齐，可以使用 text-align: center;  </p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.center</span> &#123;</div><div class="line">    <span class="attribute">text-align</span>: center;</div><div class="line">    <span class="attribute">border</span>: <span class="number">3px</span> solid green;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="图片居中对齐"><a href="#图片居中对齐" class="headerlink" title="图片居中对齐"></a>图片居中对齐</h4><p>要让图片居中对齐, 可以使用 margin: auto; 并将它放到 块 元素中:  </p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">img</span> &#123;</div><div class="line">    <span class="attribute">display</span>: block;</div><div class="line">    <span class="attribute">margin</span>: auto;</div><div class="line">    <span class="attribute">width</span>: <span class="number">40%</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="左右对齐-使用定位方式"><a href="#左右对齐-使用定位方式" class="headerlink" title="左右对齐 - 使用定位方式"></a>左右对齐 - 使用定位方式</h4><p>可以使用 position: absolute; 属性来对齐元素:<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.right</span> &#123;</div><div class="line">    <span class="attribute">position</span>: absolute;</div><div class="line">    <span class="attribute">right</span>: <span class="number">0px</span>;</div><div class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</div><div class="line">    <span class="attribute">border</span>: <span class="number">3px</span> solid <span class="number">#73AD21</span>;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">10px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="左右对齐-使用-float-方式"><a href="#左右对齐-使用-float-方式" class="headerlink" title="左右对齐 - 使用 float 方式"></a>左右对齐 - 使用 float 方式</h4><p>我们也可以使用 float 属性来对齐元素:  </p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.right</span> &#123;</div><div class="line">    <span class="attribute">float</span>: right;</div><div class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</div><div class="line">    <span class="attribute">border</span>: <span class="number">3px</span> solid <span class="number">#73AD21</span>;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">10px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="垂直居中对齐-使用-padding"><a href="#垂直居中对齐-使用-padding" class="headerlink" title="垂直居中对齐 - 使用 padding"></a>垂直居中对齐 - 使用 padding</h4><p>CSS 中有很多方式可以实现垂直居中对齐。 一个简单的方式就是头部顶部使用 padding:  </p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.center</span> &#123;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">70px</span> <span class="number">0</span>;</div><div class="line">    <span class="attribute">border</span>: <span class="number">3px</span> solid green;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>如果要水平和垂直都居中，可以使用 padding 和 text-align: center:  </p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.center</span> &#123;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">70px</span> <span class="number">0</span>;</div><div class="line">    <span class="attribute">border</span>: <span class="number">3px</span> solid green;</div><div class="line">    <span class="attribute">text-align</span>: center;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="垂直居中-使用-line-height"><a href="#垂直居中-使用-line-height" class="headerlink" title="垂直居中 - 使用 line-height"></a>垂直居中 - 使用 line-height</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.center</span> &#123;</div><div class="line">    <span class="attribute">line-height</span>: <span class="number">200px</span>;</div><div class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</div><div class="line">    <span class="attribute">border</span>: <span class="number">3px</span> solid green;</div><div class="line">    <span class="attribute">text-align</span>: center;</div><div class="line">&#125;</div><div class="line"> </div><div class="line"><span class="comment">/* 如果文本有多行，添加以下代码: */</span></div><div class="line"><span class="selector-class">.center</span> <span class="selector-tag">p</span> &#123;</div><div class="line">    <span class="attribute">line-height</span>: <span class="number">1.5</span>;</div><div class="line">    <span class="attribute">display</span>: inline-block;</div><div class="line">    <span class="attribute">vertical-align</span>: middle;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="垂直居中-使用-position-和-transform"><a href="#垂直居中-使用-position-和-transform" class="headerlink" title="垂直居中 - 使用 position 和 transform"></a>垂直居中 - 使用 position 和 transform</h4><p>除了使用 padding 和 line-height 属性外,我们还可以使用 transform 属性来设置垂直居中:<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.center</span> &#123; </div><div class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</div><div class="line">    <span class="attribute">position</span>: relative;</div><div class="line">    <span class="attribute">border</span>: <span class="number">3px</span> solid green; </div><div class="line">&#125;</div><div class="line"> </div><div class="line"><span class="selector-class">.center</span> <span class="selector-tag">p</span> &#123;</div><div class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">position</span>: absolute;</div><div class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</div><div class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</div><div class="line">    <span class="attribute">transform</span>: <span class="built_in">translate</span>(-50%, -50%);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="CSS-组合选择符"><a href="#CSS-组合选择符" class="headerlink" title="CSS 组合选择符"></a>CSS 组合选择符</h3><h4 id="后代选取器"><a href="#后代选取器" class="headerlink" title="后代选取器"></a>后代选取器</h4><p>后代选取器匹配所有值得元素的后代元素。<br>以下实例选取所有 p 元素插入到 div元素中:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">div p</span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">background-color</span><span class="selector-pseudo">:yellow</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>后代选择1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>后代选择2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>不在div3<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>不在div4<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="子元素选择器"><a href="#子元素选择器" class="headerlink" title="子元素选择器"></a>子元素选择器</h4><p>与后代选择器相比，子元素选择器（Childselectors）只能选择作为某元素子元素的元素。以下实例选择了div元素中所有直接子元素 p ：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">div</span>&gt;<span class="selector-tag">p</span></div><div class="line">&#123;</div><div class="line">  <span class="attribute">background-color</span>:yellow;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="相邻兄弟选择器"><a href="#相邻兄弟选择器" class="headerlink" title="相邻兄弟选择器"></a>相邻兄弟选择器</h4><p>相邻兄弟选择器（Adjacent sibling selector）可选择紧接在另一元素后的元素，且二者有相同父元素。如果需要选择紧接在另一个元素后的元素，而且二者有相同的父元素，可以使用相邻兄弟选择器（Adjacent sibling selector）。以下实例选取了所有位于div元素后的第一个p元素:<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">div</span>+<span class="selector-tag">p</span></div><div class="line">&#123;</div><div class="line">  <span class="attribute">background-color</span>:yellow;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="后续兄弟选择器"><a href="#后续兄弟选择器" class="headerlink" title="后续兄弟选择器"></a>后续兄弟选择器</h4><p>后续兄弟选择器选取所有指定元素之后的相邻兄弟元素。<br>以下实例选取了所有div元素之后的所有相邻兄弟元素p:<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">div</span>~<span class="selector-tag">p</span></div><div class="line">&#123;</div><div class="line">  <span class="attribute">background-color</span>:yellow;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="CSS-导航栏"><a href="#CSS-导航栏" class="headerlink" title="CSS 导航栏"></a>CSS 导航栏</h3><p>熟练使用导航栏，对于任何网站都非常重要。<br>使用CSS你可以转换成好看的导航栏而不是枯燥的HTML菜单。  </p>
<h4 id="导航栏-链接列表"><a href="#导航栏-链接列表" class="headerlink" title="导航栏=链接列表"></a>导航栏=链接列表</h4><p>作为标准的HTML基础一个导航栏是必须的。在我们的例子中我们将建立一个标准的HTML列表导航栏。导航条基本上是一个链接列表，所以使用ul和li元素非常有意义：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;ul&gt;</div><div class="line">  &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#home"</span>&gt;</span>主页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></div><div class="line">  &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#news"</span>&gt;</span>新闻<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></div><div class="line">  &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#contact"</span>&gt;</span>联系<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></div><div class="line">  &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#about"</span>&gt;</span>关于<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></div><div class="line">&lt;<span class="regexp">/ul&gt;</span></div></pre></td></tr></table></figure></p>
<p>注：这里用 href=”#”作为测试连接。但在一个真正的 web 站点上需要真实的 url。  </p>
<p>从列表中删除边距和填充：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">ul</span>&#123;</div><div class="line">  <span class="attribute">list-style-type</span>: none;</div><div class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</div><div class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>解析：<br>list-style-type：none 是移除列表前小标志，导航栏不需要列表标志。<br>移除浏览器的默认设置将边距和填充设置为0  </p>
<h4 id="垂直导航栏"><a href="#垂直导航栏" class="headerlink" title="垂直导航栏"></a>垂直导航栏</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">ul &#123;</span></div><div class="line"><span class="undefined">    list-style-type: none;</span></div><div class="line"><span class="undefined">    margin: 0;</span></div><div class="line"><span class="undefined">    padding: 0;</span></div><div class="line"><span class="undefined">    width: 200px;</span></div><div class="line"><span class="css">    <span class="selector-tag">background-color</span>: <span class="selector-id">#f1f1f1</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"> </span></div><div class="line"><span class="undefined">li a &#123;</span></div><div class="line"><span class="undefined">    display: block;</span></div><div class="line"><span class="css">    <span class="selector-tag">color</span>: <span class="selector-id">#000</span>;</span></div><div class="line"><span class="undefined">    padding: 8px 16px;</span></div><div class="line"><span class="undefined">    text-decoration: none;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"> </span></div><div class="line"><span class="css"><span class="comment">/* 鼠标移动到选项上修改背景颜色 */</span></span></div><div class="line"><span class="css"><span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span></div><div class="line"><span class="css">    <span class="selector-tag">background-color</span>: <span class="selector-id">#555</span>;</span></div><div class="line"><span class="undefined">    color: white;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#home"</span>&gt;</span>主页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#news"</span>&gt;</span>新闻<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#contact"</span>&gt;</span>联系<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#about"</span>&gt;</span>关于<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>背景颜色添加到链接中显示链接的区域<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>注意,整个区域是可点击的链接,而不仅仅是文本。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div></pre></td></tr></table></figure>
<p>display:block - 显示块元素的链接，让整体变为可点击链接区域（不只是文本），它允许我们指定宽度<br>width:60px - 块元素默认情况下是最大宽度。我们要指定一个60像素的宽度  </p>
<h4 id="垂直导航条实例"><a href="#垂直导航条实例" class="headerlink" title="垂直导航条实例"></a>垂直导航条实例</h4><p>创建一个简单的垂直导航条实例，在鼠标移动到选项时，修改背景颜色：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">ul &#123;</span></div><div class="line"><span class="undefined">    list-style-type: none;</span></div><div class="line"><span class="undefined">    margin: 0;</span></div><div class="line"><span class="undefined">    padding: 0;</span></div><div class="line"><span class="undefined">    width: 200px;</span></div><div class="line"><span class="css">    <span class="selector-tag">background-color</span>: <span class="selector-id">#f1f1f1</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"> </span></div><div class="line"><span class="undefined">li a &#123;</span></div><div class="line"><span class="undefined">    display: block;</span></div><div class="line"><span class="css">    <span class="selector-tag">color</span>: <span class="selector-id">#000</span>;</span></div><div class="line"><span class="undefined">    padding: 8px 16px;</span></div><div class="line"><span class="undefined">    text-decoration: none;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"> </span></div><div class="line"><span class="css"><span class="comment">/* 鼠标移动到选项上修改背景颜色 */</span></span></div><div class="line"><span class="css"><span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span></div><div class="line"><span class="css">    <span class="selector-tag">background-color</span>: <span class="selector-id">#555</span>;</span></div><div class="line"><span class="undefined">    color: white;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#home"</span>&gt;</span>主页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#news"</span>&gt;</span>新闻<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#contact"</span>&gt;</span>联系<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#about"</span>&gt;</span>关于<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>背景颜色添加到链接中显示链接的区域<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>注意,整个区域是可点击的链接,而不仅仅是文本。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="激活-当前导航条实例"><a href="#激活-当前导航条实例" class="headerlink" title="激活/当前导航条实例"></a>激活/当前导航条实例</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.active</span> &#123;</div><div class="line">    <span class="attribute">background-color</span>: <span class="number">#4CAF50</span>;</div><div class="line">    <span class="attribute">color</span>: white;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>实现：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">ul &#123;</span></div><div class="line"><span class="undefined">    list-style-type: none;</span></div><div class="line"><span class="undefined">    margin: 0;</span></div><div class="line"><span class="undefined">    padding: 0;</span></div><div class="line"><span class="undefined">    width: 200px;</span></div><div class="line"><span class="css">    <span class="selector-tag">background-color</span>: <span class="selector-id">#f1f1f1</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">li a &#123;</span></div><div class="line"><span class="undefined">    display: block;</span></div><div class="line"><span class="css">    <span class="selector-tag">color</span>: <span class="selector-id">#000</span>;</span></div><div class="line"><span class="undefined">    padding: 8px 16px;</span></div><div class="line"><span class="undefined">    text-decoration: none;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-class">.active</span> &#123;</span></div><div class="line"><span class="css">    <span class="selector-tag">background-color</span>: <span class="selector-id">#4CAF50</span>;</span></div><div class="line"><span class="undefined">    color: white;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">:not(.active)</span> &#123;</span></div><div class="line"><span class="css">    <span class="selector-tag">background-color</span>: <span class="selector-id">#555</span>;</span></div><div class="line"><span class="undefined">    color: white;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>垂直导航条<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>在点击了选项后，我们可以添加 "active" 类来标准哪个选项被选中。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"active"</span> <span class="attr">href</span>=<span class="string">"#home"</span>&gt;</span>主页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#news"</span>&gt;</span>新闻<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#contact"</span>&gt;</span>联系<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#about"</span>&gt;</span>关于<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="全屏高度的固定导航条"><a href="#全屏高度的固定导航条" class="headerlink" title="全屏高度的固定导航条"></a>全屏高度的固定导航条</h4><p>接下来创建一个左边是全屏高度的固定导航条，右边是可滚动的内容。(这不是和我博客一样了吗)<br>核心：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">ul</span> &#123;</div><div class="line">    <span class="attribute">list-style-type</span>: none;</div><div class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">width</span>: <span class="number">25%</span>;</div><div class="line">    <span class="attribute">background-color</span>: <span class="number">#f1f1f1</span>;</div><div class="line">    <span class="attribute">height</span>: <span class="number">100%</span>; <span class="comment">/* 全屏高度 */</span></div><div class="line">    <span class="attribute">position</span>: fixed; </div><div class="line">    <span class="attribute">overflow</span>: auto; <span class="comment">/* 如果导航栏选项多，允许滚动 */</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>实现：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">body &#123;</span></div><div class="line"><span class="undefined">    margin: 0;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">ul &#123;</span></div><div class="line"><span class="undefined">    list-style-type: none;</span></div><div class="line"><span class="undefined">    margin: 0;</span></div><div class="line"><span class="undefined">    padding: 0;</span></div><div class="line"><span class="undefined">    width: 25%;</span></div><div class="line"><span class="css">    <span class="selector-tag">background-color</span>: <span class="selector-id">#f1f1f1</span>;</span></div><div class="line"><span class="undefined">    position: fixed;</span></div><div class="line"><span class="undefined">    height: 100%;</span></div><div class="line"><span class="undefined">    overflow: auto;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">li a &#123;</span></div><div class="line"><span class="undefined">    display: block;</span></div><div class="line"><span class="css">    <span class="selector-tag">color</span>: <span class="selector-id">#000</span>;</span></div><div class="line"><span class="undefined">    padding: 8px 16px;</span></div><div class="line"><span class="undefined">    text-decoration: none;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-class">.active</span> &#123;</span></div><div class="line"><span class="css">    <span class="selector-tag">background-color</span>: <span class="selector-id">#4CAF50</span>;</span></div><div class="line"><span class="undefined">    color: white;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">:not(.active)</span> &#123;</span></div><div class="line"><span class="css">    <span class="selector-tag">background-color</span>: <span class="selector-id">#555</span>;</span></div><div class="line"><span class="undefined">    color: white;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"active"</span> <span class="attr">href</span>=<span class="string">"#home"</span>&gt;</span>主页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#news"</span>&gt;</span>新闻<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#contact"</span>&gt;</span>联系<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#about"</span>&gt;</span>关于<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"margin-left:25%;padding:1px 16px;height:1000px;"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Fixed Full-height Side Nav<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Try to scroll this area, and see how the sidenav sticks to the page<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Notice that this div element has a left margin of 25%. This is because the side navigation is set to 25% width. If you remove the margin, the sidenav will overlay/sit on top of this div.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Also notice that we have set overflow:auto to sidenav. This will add a scrollbar when the sidenav is too long (for example if it has over 50 links inside of it).<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Some text..<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Some text..<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Some text..<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Some text..<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Some text..<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Some text..<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Some text..<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="CSS-下拉菜单"><a href="#CSS-下拉菜单" class="headerlink" title="CSS 下拉菜单"></a>CSS 下拉菜单</h4><p>实例：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>下拉菜单实例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-class">.dropdown</span> &#123;</span></div><div class="line"><span class="undefined">  position: relative;</span></div><div class="line"><span class="undefined">  display: inline-block;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="css"><span class="selector-class">.dropdown-content</span> &#123;</span></div><div class="line"><span class="undefined">  display: none;</span></div><div class="line"><span class="undefined">  position: absolute;</span></div><div class="line"><span class="css">  <span class="selector-tag">background-color</span>: <span class="selector-id">#f9f9f9</span>;</span></div><div class="line"><span class="undefined">  min-width: 160px;</span></div><div class="line"><span class="css">  <span class="selector-tag">box-shadow</span>: 0<span class="selector-tag">px</span> 8<span class="selector-tag">px</span> 16<span class="selector-tag">px</span> 0<span class="selector-tag">px</span> <span class="selector-tag">rgba</span>(0,0,0,0<span class="selector-class">.2</span>);</span></div><div class="line"><span class="undefined">  padding: 12px 16px;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="css"><span class="selector-class">.dropdown</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.dropdown-content</span> &#123;</span></div><div class="line"><span class="undefined">  display: block;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>鼠标移动后出现下拉菜单<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>将鼠标移动到指定元素上就能看到下拉菜单。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"dropdown"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">span</span>&gt;</span>鼠标移动到我这！<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"dropdown-content"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>教程<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>www.runoob.com<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>实例解析<br>HTML 部分：<br>我们可以使用任何的HTML元素来打开下拉菜单，如：span, 或a button元素。<br>使用容器元素(如：div)来创建下拉菜单的内容，并放在任何你想放的位置上。<br>使用div元素来包裹这些元素，并使用CSS来设置下拉内容的样式。<br>CSS 部分：<br>.dropdown类使用 position:relative, 这将设置下拉菜单的内容放置在下拉按钮 (使用 position:absolute) 的右下角位置。<br>.dropdown-content 类中是实际的下拉菜单。默认是隐藏的，在鼠标移动到指定元素后会显示。 注意 min-width 的值设置为 160px。你可以随意修改它。<br>注意: 如果你想设置下拉内容与下拉按钮的宽度一致，可设置 width 为 100% ( overflow:auto 设置可以在小尺寸屏幕上滚动)。<br>我们使用 box-shadow 属性让下拉菜单看起来像一个”卡片”。<br>:hover 选择器用于在用户将鼠标移动到下拉按钮上时显示下拉菜单。  </p>
<h4 id="下拉菜单"><a href="#下拉菜单" class="headerlink" title="下拉菜单"></a>下拉菜单</h4><p>实例：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="css"><span class="comment">/* 下拉按钮样式 */</span></span></div><div class="line"><span class="css"><span class="selector-class">.dropbtn</span> &#123;</span></div><div class="line"><span class="css">    <span class="selector-tag">background-color</span>: <span class="selector-id">#4CAF50</span>;</span></div><div class="line"><span class="undefined">    color: white;</span></div><div class="line"><span class="undefined">    padding: 16px;</span></div><div class="line"><span class="undefined">    font-size: 16px;</span></div><div class="line"><span class="undefined">    border: none;</span></div><div class="line"><span class="undefined">    cursor: pointer;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="css"><span class="comment">/* 容器 &lt;div&gt; - 需要定位下拉内容 */</span></span></div><div class="line"><span class="css"><span class="selector-class">.dropdown</span> &#123;</span></div><div class="line"><span class="undefined">    position: relative;</span></div><div class="line"><span class="undefined">    display: inline-block;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="css"><span class="comment">/* 下拉内容 (默认隐藏) */</span></span></div><div class="line"><span class="css"><span class="selector-class">.dropdown-content</span> &#123;</span></div><div class="line"><span class="undefined">    display: none;</span></div><div class="line"><span class="undefined">    position: absolute;</span></div><div class="line"><span class="css">    <span class="selector-tag">background-color</span>: <span class="selector-id">#f9f9f9</span>;</span></div><div class="line"><span class="undefined">    min-width: 160px;</span></div><div class="line"><span class="css">    <span class="selector-tag">box-shadow</span>: 0<span class="selector-tag">px</span> 8<span class="selector-tag">px</span> 16<span class="selector-tag">px</span> 0<span class="selector-tag">px</span> <span class="selector-tag">rgba</span>(0,0,0,0<span class="selector-class">.2</span>);</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="css"><span class="comment">/* 下拉菜单的链接 */</span></span></div><div class="line"><span class="css"><span class="selector-class">.dropdown-content</span> <span class="selector-tag">a</span> &#123;</span></div><div class="line"><span class="undefined">    color: black;</span></div><div class="line"><span class="undefined">    padding: 12px 16px;</span></div><div class="line"><span class="undefined">    text-decoration: none;</span></div><div class="line"><span class="undefined">    display: block;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="css"><span class="comment">/* 鼠标移上去后修改下拉菜单链接颜色 */</span></span></div><div class="line"><span class="css"><span class="selector-class">.dropdown-content</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;<span class="attribute">background-color</span>: <span class="number">#f1f1f1</span>&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="css"><span class="comment">/* 在鼠标移上去后显示下拉菜单 */</span></span></div><div class="line"><span class="css"><span class="selector-class">.dropdown</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.dropdown-content</span> &#123;</span></div><div class="line"><span class="undefined">    display: block;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="css"><span class="comment">/* 当下拉内容显示后修改下拉按钮的背景颜色 */</span></span></div><div class="line"><span class="css"><span class="selector-class">.dropdown</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.dropbtn</span> &#123;</span></div><div class="line"><span class="css">    <span class="selector-tag">background-color</span>: <span class="selector-id">#3e8e41</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"dropdown"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"dropbtn"</span>&gt;</span>下拉菜单<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"dropdown-content"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>菜鸟教程 1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>菜鸟教程 2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>菜鸟教程 3<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="CSS-提示工具-Tooltip"><a href="#CSS-提示工具-Tooltip" class="headerlink" title="CSS 提示工具(Tooltip)"></a>CSS 提示工具(Tooltip)</h3><p>如何使用 HTML 与 CSS 来创建提示工具。  </p>
<h4 id="基础提示框-Tooltip"><a href="#基础提示框-Tooltip" class="headerlink" title="基础提示框(Tooltip)"></a>基础提示框(Tooltip)</h4><p>提示框在鼠标移动到指定元素上显示：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-class">.tooltip</span> &#123;</span></div><div class="line"><span class="undefined">    position: relative;</span></div><div class="line"><span class="undefined">    display: inline-block;</span></div><div class="line"><span class="undefined">    border-bottom: 1px dotted black;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-class">.tooltip</span> <span class="selector-class">.tooltiptext</span> &#123;</span></div><div class="line"><span class="undefined">    visibility: hidden;</span></div><div class="line"><span class="undefined">    width: 120px;</span></div><div class="line"><span class="undefined">    background-color: black;</span></div><div class="line"><span class="css">    <span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span></div><div class="line"><span class="undefined">    text-align: center;</span></div><div class="line"><span class="undefined">    border-radius: 6px;</span></div><div class="line"><span class="undefined">    padding: 5px 0;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="css">    <span class="comment">/* 定位 */</span></span></div><div class="line"><span class="undefined">    position: absolute;</span></div><div class="line"><span class="undefined">    z-index: 1;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-class">.tooltip</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.tooltiptext</span> &#123;</span></div><div class="line"><span class="undefined">    visibility: visible;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">style</span>=<span class="string">"text-align:center;"</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tooltip"</span>&gt;</span>鼠标移动到这</div><div class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"tooltiptext"</span>&gt;</span>提示文本<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>实例解析：<br>HTML) 使用容器元素 (like div) 并添加 “tooltip” 类。在鼠标移动到div 上时显示提示信息。提示文本放在内联函数上(如 span) 并使用class=”tooltiptext”。<br>CSS)tooltip 类使用 position:relative, 提示文本需要设置定位值 position:absolute。 注意: 接下来的实例会显示更多的定位效果。<br>tooltiptext 类用于实际的提示文本。模式是隐藏的，在鼠标移动到元素显示 。设置了一些宽度、背景色、字体色等样式。CSS3 border-radius 属性用于为提示框添加圆角。<br>:hover 选择器用于在鼠标移动到到指定元素div上时显示的提示。  </p>
<h3 id="图片廊"><a href="#图片廊" class="headerlink" title="图片廊"></a>图片廊</h3><p>以下是使用 CSS 创建图片廊：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span>  </div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-tag">div</span><span class="selector-class">.img</span> &#123;</span></div><div class="line"><span class="undefined">    margin: 5px;</span></div><div class="line"><span class="css">    <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#ccc</span>;</span></div><div class="line"><span class="undefined">    float: left;</span></div><div class="line"><span class="undefined">    width: 180px;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-tag">div</span><span class="selector-class">.img</span><span class="selector-pseudo">:hover</span> &#123;</span></div><div class="line"><span class="css">    <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#777</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-tag">div</span><span class="selector-class">.img</span> <span class="selector-tag">img</span> &#123;</span></div><div class="line"><span class="undefined">    width: 100%;</span></div><div class="line"><span class="undefined">    height: auto;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-tag">div</span><span class="selector-class">.desc</span> &#123;</span></div><div class="line"><span class="undefined">    padding: 15px;</span></div><div class="line"><span class="undefined">    text-align: center;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"responsive"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"img"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">href</span>=<span class="string">"http://static.runoob.com/images/demo/demo1.jpg"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://static.runoob.com/images/demo/demo1.jpg"</span> <span class="attr">alt</span>=<span class="string">"图片文本描述"</span> <span class="attr">width</span>=<span class="string">"300"</span> <span class="attr">height</span>=<span class="string">"200"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"desc"</span>&gt;</span>这里添加图片文本描述<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"responsive"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"img"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">href</span>=<span class="string">"http://static.runoob.com/images/demo/demo2.jpg"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://static.runoob.com/images/demo/demo2.jpg"</span> <span class="attr">alt</span>=<span class="string">"图片文本描述"</span> <span class="attr">width</span>=<span class="string">"300"</span> <span class="attr">height</span>=<span class="string">"200"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"desc"</span>&gt;</span>这里添加图片文本描述<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"responsive"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"img"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">href</span>=<span class="string">"http://static.runoob.com/images/demo/demo3.jpg"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://static.runoob.com/images/demo/demo3.jpg"</span> <span class="attr">alt</span>=<span class="string">"图片文本描述"</span> <span class="attr">width</span>=<span class="string">"300"</span> <span class="attr">height</span>=<span class="string">"200"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"desc"</span>&gt;</span>这里添加图片文本描述<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"responsive"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"img"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">href</span>=<span class="string">"http://static.runoob.com/images/demo/demo4.jpg"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://static.runoob.com/images/demo/demo4.jpg"</span> <span class="attr">alt</span>=<span class="string">"图片文本描述"</span> <span class="attr">width</span>=<span class="string">"300"</span> <span class="attr">height</span>=<span class="string">"200"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"desc"</span>&gt;</span>这里添加图片文本描述<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>叮：想到之前用的的博客排版，一直想做一个相册，其实这样就可以实现。  </p>
<h3 id="CSS-图像透明-不透明"><a href="#CSS-图像透明-不透明" class="headerlink" title="CSS 图像透明/不透明"></a>CSS 图像透明/不透明</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">img</span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">opacity</span><span class="selector-pseudo">:0.4</span>;</span></div><div class="line"><span class="undefined">  filter:alpha(opacity=40); /* 适用 IE8 及其更早版本 */</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">img</span><span class="selector-pseudo">:hover</span></span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">opacity</span><span class="selector-pseudo">:1.0</span>;</span></div><div class="line"><span class="undefined">  filter:alpha(opacity=100); /* 适用 IE8 及其更早版本 */</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>图片透明度<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>opacity 属性通常与 :hover 选择器一起使用，在鼠标移动到图片上后改变图片的透明度：<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"klematis.jpg"</span> <span class="attr">width</span>=<span class="string">"150"</span> <span class="attr">height</span>=<span class="string">"113"</span> <span class="attr">alt</span>=<span class="string">"klematis"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"/images/klematis2.jpg"</span> <span class="attr">width</span>=<span class="string">"150"</span> <span class="attr">height</span>=<span class="string">"113"</span> <span class="attr">alt</span>=<span class="string">"klematis"</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>注意:<span class="tag">&lt;/<span class="name">b</span>&gt;</span>在 IE 中必须声明 &amp;lt;!DOCTYPE&amp;gt; 才能保证 :hover 选择器能够有效。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="CSS-图像拼合技术"><a href="#CSS-图像拼合技术" class="headerlink" title="CSS 图像拼合技术"></a>CSS 图像拼合技术</h3><p>图像拼合就是单个图像的集合。<br>有许多图像的网页可能需要很长的时间来加载和生成多个服务器的请求。<br>使用图像拼合会降低服务器的请求数量，并节省带宽。  </p>
<h4 id="简单实例"><a href="#简单实例" class="headerlink" title="简单实例"></a>简单实例</h4><p>与其使用三个独立的图像，不如我们使用这种单个图像（”img_navsprites.gif”）：<br><img src="http://www.runoob.com/images/img_navsprites.gif" alt="img"><br>有了CSS，可以只显示需要的图像的一部分。在下面的例子CSS指定显示”img_navsprites.gif” 的图像的一部分：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span>  </div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-tag">img</span><span class="selector-class">.home</span> &#123;</span></div><div class="line"><span class="undefined">    width: 46px;</span></div><div class="line"><span class="undefined">    height: 44px;</span></div><div class="line"><span class="undefined">    background: url(/images/img_navsprites.gif) 0 0;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-tag">img</span><span class="selector-class">.next</span> &#123;</span></div><div class="line"><span class="undefined">    width: 43px;</span></div><div class="line"><span class="undefined">    height: 44px;</span></div><div class="line"><span class="undefined">    background: url(/images/img_navsprites.gif) -91px 0;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"home"</span> <span class="attr">src</span>=<span class="string">"/images/img_trans.gif"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"next"</span> <span class="attr">src</span>=<span class="string">"/images/img_trans.gif"</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>实例解析：<br>img class=”home” src=”img_trans.gif” / -因为不能为空,src属性只定义了一个小的透明图像。显示的图像将是我们在CSS中指定的背景图像宽度：46px;高度：44px; - 定义我们使用的那部分图像background:url(img_navsprites.gif) 0 0;定义背景图像和它的位置（左0px，顶部0px）这是使用图像拼合最简单的方法，现在我们使用链接和悬停效果。  </p>
<h3 id="CSS-媒体类型"><a href="#CSS-媒体类型" class="headerlink" title="CSS 媒体类型"></a>CSS 媒体类型</h3><p>一些CSS属性只设计了某些媒体。例如”voice-family”属性是专为听觉用户代理。其他一些属性可用于不同的媒体类型。例如，”font-size”属性可用于屏幕和印刷媒体，但有不同的值。屏幕和纸上的文件不同，通常需要一个更大的字体，sans - serif字体比较适合在屏幕上阅读，而serif字体更容易在纸上阅读。  </p>
<h4 id="media-规则"><a href="#media-规则" class="headerlink" title="@media 规则"></a>@media 规则</h4><p>@media 规则允许在相同样式表为不同媒体设置不同的样式。<br>在下面的例子告诉我们浏览器屏幕上显示一个14像素的Verdana字体样式。但是如果页面打印，将是10个像素的Times字体。请注意，font-weight在屏幕上和纸上设置为粗体：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="css">@<span class="keyword">media</span> screen</span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">    <span class="selector-tag">p</span><span class="selector-class">.test</span> &#123;<span class="attribute">font-family</span>:verdana,sans-serif;<span class="attribute">font-size</span>:<span class="number">14px</span>;&#125;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="css">@<span class="keyword">media</span> print</span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">    <span class="selector-tag">p</span><span class="selector-class">.test</span> &#123;<span class="attribute">font-family</span>:times,serif;<span class="attribute">font-size</span>:<span class="number">10px</span>;&#125;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="css">@<span class="keyword">media</span> screen,print</span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">    <span class="selector-tag">p</span><span class="selector-class">.test</span> &#123;<span class="attribute">font-weight</span>:bold;&#125;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">....</div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="CSS-属性-选择器"><a href="#CSS-属性-选择器" class="headerlink" title="CSS 属性 选择器"></a>CSS 属性 选择器</h3><h4 id="具有特定属性的HTML元素样式"><a href="#具有特定属性的HTML元素样式" class="headerlink" title="具有特定属性的HTML元素样式"></a>具有特定属性的HTML元素样式</h4><p>具有特定属性的HTML元素样式不仅仅是class和id。<br>注意：IE7和IE8需声明!DOCTYPE才支持属性选择器！IE6和更低的版本不支持属性选择器。  </p>
<h4 id="属性选择器"><a href="#属性选择器" class="headerlink" title="属性选择器"></a>属性选择器</h4><p>下面的例子是把包含标题（title）的所有元素变为蓝色：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-attr">[title]</span></span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css"><span class="selector-tag">color</span><span class="selector-pseudo">:blue</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>Will apply to:<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">title</span>=<span class="string">"Hello world"</span>&gt;</span>Hello world<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">title</span>=<span class="string">"runoob.com"</span> <span class="attr">href</span>=<span class="string">"http://www.runoob.com/"</span>&gt;</span>runoob.com<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>Will not apply to:<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Hello!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="属性和值选择器"><a href="#属性和值选择器" class="headerlink" title="属性和值选择器"></a>属性和值选择器</h4><p>下面的实例改变了标题title=’runoob’元素的边框样式:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span>  </div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-attr">[title=runoob]</span></span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">border</span><span class="selector-pseudo">:5px</span> <span class="selector-tag">solid</span> <span class="selector-tag">green</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>将适用:<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">title</span>=<span class="string">"runoob"</span> <span class="attr">src</span>=<span class="string">"logo.png"</span> <span class="attr">width</span>=<span class="string">"270"</span> <span class="attr">height</span>=<span class="string">"50"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">title</span>=<span class="string">"runoob"</span> <span class="attr">href</span>=<span class="string">"http://www.runoob.com/"</span>&gt;</span>runoob<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>将不适用:<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">title</span>=<span class="string">"greeting"</span>&gt;</span>Hi!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"runoob"</span> <span class="attr">href</span>=<span class="string">"http://www.runoob.com/"</span>&gt;</span>runoob<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="CSS-总结"><a href="#CSS-总结" class="headerlink" title="CSS 总结"></a>CSS 总结</h3><p>CSS创建样式表来同时控制多重页面的样式和布局。使用CSS来添加背景、格式化文本、以及格式化边框，并定义元素的填充和边距。<br>使用CSS定位元素、控制元素的可见性和尺寸、设置元素的形状、将一个元素置于另一个之后，以及向某些选择器添加特殊的效果，比如链接。  </p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;HTML已经做了简单了解，接下来是CSS的。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="https://x-nicolo.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="前端" scheme="https://x-nicolo.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="CSS" scheme="https://x-nicolo.github.io/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>前端入门学习--HTML</title>
    <link href="https://x-nicolo.github.io/2018/01/23/%E5%89%8D%E7%AB%AF%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0-HTML/"/>
    <id>https://x-nicolo.github.io/2018/01/23/前端入门学习-HTML/</id>
    <published>2018-01-23T03:10:30.000Z</published>
    <updated>2018-01-23T03:10:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>写在前面。<br>前端知识真的还是比较有用的。一直要把前端的学习提上日程，因为各种事情各种拖延，写爬虫的时候也是捎带学习前端的东西，还是需要系统的了解下。<br><a id="more"></a><br>All from <a href="http://www.w3school.com.cn/html/html_links.asp" target="_blank" rel="external">W3school.</a></p>
<h3 id="HTML简介"><a href="#HTML简介" class="headerlink" title="HTML简介"></a>HTML简介</h3><p>HTML是用来描述网页的一种语言。指的是超文本标记语言（Hyper Text Markup Language）,不是一种编程语言，而是一种标记语言。</p>
<h4 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h4><p>HTML标签是由尖括号包围的关键词比如html，便签通常是成对出现的，比如<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span>和<span class="tag">&lt;/<span class="name">b</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>第一个是开始，第二个标签是结束。  </p>
<h4 id="文档-网页"><a href="#文档-网页" class="headerlink" title="文档=网页"></a>文档=网页</h4><p>HTML文档描述网页，包含HTML标签和纯文本。Web浏览器的作用就是读取HTML文档，并以网页的形式显示他们。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>hello world<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个段落，嗯，我说他是他就是<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="例子解释"><a href="#例子解释" class="headerlink" title="例子解释"></a>例子解释</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span>与<span class="tag">&lt;/<span class="name">hrml</span>&gt;</span>之间的文本描述网页  </div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>与<span class="tag">&lt;/<span class="name">body</span>&gt;</span>之间的文本是可见的页面内容  </div><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>与<span class="tag">&lt;/<span class="name">h1</span>&gt;</span>之间的文本被显示为标题  </div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>与<span class="tag">&lt;/<span class="name">p</span>&gt;</span>之间的文本被显示为段落</div></pre></td></tr></table></figure>
<h3 id="HTML-基础"><a href="#HTML-基础" class="headerlink" title="HTML 基础"></a>HTML 基础</h3><h4 id="HTML-标题"><a href="#HTML-标题" class="headerlink" title="HTML 标题"></a>HTML 标题</h4><p>HTML标题是通过h1-h6等标签进行定义的。  </p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>这是个标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>嗯，这还是个标题<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>没错，又是一个标题<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="HTML-段落"><a href="#HTML-段落" class="headerlink" title="HTML 段落"></a>HTML 段落</h4><p>HTML段落通过p标签进行定义。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>段落一<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>段落二<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="HTML-链接"><a href="#HTML-链接" class="headerlink" title="HTML 链接"></a>HTML 链接</h4><p>HTML链接是通过a进行定义的。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://x-nicolo.github.io/"</span>&gt;</span>这是肖洒的博客<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>注释：在href属性中指定链接的地址。</p>
<h4 id="HTML-图像"><a href="#HTML-图像" class="headerlink" title="HTML 图像"></a>HTML 图像</h4><p>HTML图像是通过img标签进行定义的。  </p>
<figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;img <span class="attribute">src</span>=<span class="string">"img.jpg"</span> <span class="attribute">width</span>=<span class="string">"104"</span> <span class="attribute">height</span>=<span class="string">"142"</span> /&gt;</div></pre></td></tr></table></figure>
<p>注释：图像的名称和尺寸是以属性的形式提供的。</p>
<h3 id="HTML-元素"><a href="#HTML-元素" class="headerlink" title="HTML 元素"></a>HTML 元素</h3><p>HTML元素指的是从开始标签到结束标签的所有代码。 </p>
<h3 id="HTML-属性"><a href="#HTML-属性" class="headerlink" title="HTML 属性"></a>HTML 属性</h3><p>HTML标签可以拥有属性。属性提供了有关HTML元素的更多信息。<br>属性总是以名称/值对的形式出现。比如：name=”value”.<br>属性总是在HTML元素的开始标签中规定。</p>
<h4 id="属性例子"><a href="#属性例子" class="headerlink" title="属性例子"></a>属性例子</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="number">1</span>.  </div><div class="line">&lt;<span class="selector-tag">h1</span> align=<span class="string">"center"</span>&gt;拥有关于对齐方式的附加信息。  </div><div class="line"><span class="number">2</span>.  </div><div class="line">&lt;<span class="selector-tag">body</span> bgcolor=<span class="string">"yellow"</span>&gt;拥有关于背景颜色的附加信息。  </div><div class="line"><span class="number">3</span>.  </div><div class="line">&lt;<span class="selector-tag">table</span> <span class="attribute">border</span>=<span class="string">"1"</span>&gt;拥有关于表格边框的附加信息</div></pre></td></tr></table></figure>
<h3 id="HTML-标题-1"><a href="#HTML-标题-1" class="headerlink" title="HTML 标题"></a>HTML 标题</h3><p>标题是通过h1-h6等标签进行定义的。<br>h1定义最大的标题，h6定义最小的标题。  </p>
<h4 id="HTML-水平线"><a href="#HTML-水平线" class="headerlink" title="HTML 水平线"></a>HTML 水平线</h4><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="section">&lt;hr /&gt;</span></div></pre></td></tr></table></figure>
<p>标签在HTML页面中创建水平线hr元素可用与分隔内容。<br>例子：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是第一段<span class="tag">&lt;/<span class="name">p</span>&gt;</span>  </div><div class="line"><span class="tag">&lt;<span class="name">hr</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是第二段<span class="tag">&lt;/<span class="name">p</span>&gt;</span>  </div><div class="line"><span class="tag">&lt;<span class="name">hr</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是第三段<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div></pre></td></tr></table></figure>
<p>提示：使用水平线 (hr 标签)来分隔文章中的小节是一个办法（但并不是唯一的办法）。  </p>
<h4 id="HTML-注释"><a href="#HTML-注释" class="headerlink" title="HTML 注释"></a>HTML 注释</h4><p>科技将注释插入HTML代码中。<br>例子：  </p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!--这里是注释，不显示--&gt;</span></div></pre></td></tr></table></figure>
<h4 id="HTML-段落-1"><a href="#HTML-段落-1" class="headerlink" title="HTML 段落"></a>HTML 段落</h4><p>段落通过p标签定义。  </p>
<h4 id="HTML-折行"><a href="#HTML-折行" class="headerlink" title="HTML 折行"></a>HTML 折行</h4><p>不产生一个新段落的情况下进行换行。  </p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我就是<span class="tag">&lt;<span class="name">br</span> /&gt;</span>想试试<span class="tag">&lt;<span class="name">br</span> /&gt;</span>这个功能<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div></pre></td></tr></table></figure>
<p>注：br / 元素是一个空的 HTML 元素。由于关闭标签没有任何意义，因此它没有结束标签。<br>注:浏览器忽略了源代码中的排版（省略了多余的空格和换行）  </p>
<h3 id="HTML-样式"><a href="#HTML-样式" class="headerlink" title="HTML 样式"></a>HTML 样式</h3><p>style属性用于改变HTML元素的样式。  </p>
<h4 id="HTML的style属性"><a href="#HTML的style属性" class="headerlink" title="HTML的style属性"></a>HTML的style属性</h4><p>style属性的作用：提供了一种改变所有HTML元素的样式的通用方法。<br>样式是 HTML 4 引入的，它是一种新的首选的改变 HTML 元素样式的方式。通过 HTML 样式，能够通过使用style属性直接将样式添加到HTML元素，或者间接地在独立的样式表中（CSS 文件）进行定义。  </p>
<h4 id="HTML-样式实例-背景颜色"><a href="#HTML-样式实例-背景颜色" class="headerlink" title="HTML 样式实例-背景颜色"></a>HTML 样式实例-背景颜色</h4><p>background-color属性为元素定义 了背景颜色：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">style</span>=<span class="string">"background-color:yellow"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">style</span>=<span class="string">"background-color:red"</span>&gt;</span>这里是标题<span class="tag">&lt;/<span class="name">h2</span>&gt;</span>  </div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"background-color:green"</span>&gt;</span>这里是一个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>注意：style属性淘汰了旧的bgcolor属性。  </p>
<h4 id="HTML-样式实例-字体、颜色和尺寸"><a href="#HTML-样式实例-字体、颜色和尺寸" class="headerlink" title="HTML 样式实例-字体、颜色和尺寸"></a>HTML 样式实例-字体、颜色和尺寸</h4><p>front-family、color以及front-size属性分别定义元素中文字的字体系列、颜色和字体大小。<br><figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">style</span>=<span class="string">"front-family:verdana"</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"front-family:arial;color:red;font-size:20px;"</span>段落&lt;/<span class="attr">p</span>&gt;</span></span></div><div class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></div><div class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></div></pre></td></tr></table></figure></p>
<h4 id="HTML-样式实例-文本对齐"><a href="#HTML-样式实例-文本对齐" class="headerlink" title="HTML 样式实例-文本对齐"></a>HTML 样式实例-文本对齐</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">style</span>=<span class="string">"text-align:center"</span>&gt;</span>又是标题啊<span class="tag">&lt;/<span class="name">h1</span>&gt;</span>  </div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>听说上面的标题会居中<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="HTML-引用"><a href="#HTML-引用" class="headerlink" title="HTML 引用"></a>HTML 引用</h3><h4 id="HTML短的引用"><a href="#HTML短的引用" class="headerlink" title="HTML短的引用"></a>HTML短的引用</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>下面是引用：<span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">q</span>&gt;</span>上面说的对，我是引用<span class="tag">&lt;/<span class="name">q</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="HTML-长应用"><a href="#HTML-长应用" class="headerlink" title="HTML 长应用"></a>HTML 长应用</h4><p>HTML blockquote 元素定义被引用的节。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>下面的这个引用听说很长<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span>  </div><div class="line"><span class="tag">&lt;<span class="name">blockquote</span>&gt;</span>  </div><div class="line">我就是那个很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长的引用。  </div><div class="line"><span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="HTML-缩略词abbr"><a href="#HTML-缩略词abbr" class="headerlink" title="HTML 缩略词abbr"></a>HTML 缩略词abbr</h4><p>HTML abbr 元素定义缩写或首字母缩略语。<br>例子：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">abbr</span> <span class="attr">title</span>=<span class="string">"World Health Organization"</span>&gt;</span>WHO<span class="tag">&lt;/<span class="name">abbr</span>&gt;</span> 成立于 1948 年。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="HTML-计算机代码元素"><a href="#HTML-计算机代码元素" class="headerlink" title="HTML 计算机代码元素"></a>HTML 计算机代码元素</h3><h4 id="HTML-键盘格式"><a href="#HTML-键盘格式" class="headerlink" title="HTML 键盘格式"></a>HTML 键盘格式</h4><p>kbd 元素定义键盘输入<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>打开一个文件，选择<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">kbd</span>&gt;</span>File|Open...<span class="tag">&lt;/<span class="name">kbd</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="HTML-样本格式"><a href="#HTML-样本格式" class="headerlink" title="HTML 样本格式"></a>HTML 样本格式</h4><p>HTML code 元素定义编程代码示例。<br>注意：code 元素不保留多余的空格和折行。  </p>
<p>例子：<br><figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="params">&lt;p&gt;</span>Coding Example:<span class="params">&lt;/p&gt;</span></div><div class="line"><span class="params">&lt;code&gt;</span></div><div class="line">var person = &#123;</div><div class="line"><span class="symbol">    firstName:</span><span class="string">"Bill"</span>,</div><div class="line"><span class="symbol">    lastName:</span><span class="string">"Gates"</span>,</div><div class="line"><span class="symbol">    age:</span><span class="number">50</span>,</div><div class="line"><span class="symbol">    eyeColor:</span><span class="string">"bule"</span></div><div class="line">&#125;</div><div class="line"><span class="params">&lt;/code&gt;</span></div></pre></td></tr></table></figure></p>
<p>如果需要保留多余的空格和折行，必须在pre元素中包围代码。<br><figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="params">&lt;p&gt;</span>Coding Example<span class="params">&lt;/p&gt;</span></div><div class="line"><span class="params">&lt;code&gt;</span></div><div class="line"><span class="params">&lt;pre&gt;</span></div><div class="line">var person = &#123;</div><div class="line"><span class="symbol">    firstName:</span><span class="string">"Bill"</span>,</div><div class="line"><span class="symbol">    lastName:</span><span class="string">"Gates"</span>,</div><div class="line"><span class="symbol">    age:</span><span class="number">50</span>,</div><div class="line"><span class="symbol">    eyeColor:</span><span class="string">"bule"</span></div><div class="line">&#125;</div><div class="line"><span class="params">&lt;/pre&gt;</span></div><div class="line"><span class="params">&lt;/code&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="HTML-变量格式化"><a href="#HTML-变量格式化" class="headerlink" title="HTML 变量格式化"></a>HTML 变量格式化</h4><p>var 元素定义数学变量<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;p&gt;Einstein wrote:<span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></div><div class="line"></div><div class="line">&lt;p&gt;<span class="xml"><span class="tag">&lt;<span class="name">var</span>&gt;</span>E = m c<span class="tag">&lt;<span class="name">sup</span>&gt;</span>2<span class="tag">&lt;/<span class="name">sup</span>&gt;</span><span class="tag">&lt;/<span class="name">var</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></div></pre></td></tr></table></figure></p>
<h3 id="HTML-注释-1"><a href="#HTML-注释-1" class="headerlink" title="HTML 注释"></a>HTML 注释</h3><p><strong>注释标签&lt;！–与–&gt;用于在HTML插入注释</strong><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!--这里是注释，什么意思呢，就是写在这里的东西都不会显示，所以你懂了吧，注释注释////--&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="HTML-CSS"><a href="#HTML-CSS" class="headerlink" title="HTML CSS"></a>HTML CSS</h3><h4 id="如何使用样式"><a href="#如何使用样式" class="headerlink" title="如何使用样式"></a>如何使用样式</h4><p>当浏览器读到一个样式表，它就会按照这个样式来度文档进行格式化。有以下三种方式：  </p>
<h5 id="外部样式表"><a href="#外部样式表" class="headerlink" title="外部样式表"></a>外部样式表</h5><p>当样式需要被应用到很多页面的时候，外部样式表将是理想的选择。使用外部样式表，你就可以通过更改一个文件来改变整个站点的外观。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"mystyle.css"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h5 id="内部样式表"><a href="#内部样式表" class="headerlink" title="内部样式表"></a>内部样式表</h5><p>当单个文件需要特别样式时，就可以使用内部样式表。可以在head部分通过style标签定义内部样式表。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>= <span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-tag">body</span>&#123;<span class="attribute">background-color</span>:red&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">p</span>&#123;<span class="attribute">margin-left</span>:<span class="number">20px</span>&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h5 id="内联样式"><a href="#内联样式" class="headerlink" title="内联样式"></a>内联样式</h5><p>当特殊的样式需要应用到个别元素时，就可以使用内联样式。使用内联样式的方法是在相关的标签中使用样式属性，样式属性可以包含任何CSS属性，下面的例子显示如何改变段落的颜色和左外边距。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">P</span> <span class="attr">style</span> = <span class="string">"color:red;margin-left:20px"</span>&gt;</span></div><div class="line">这是一个段落。  </div><div class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="HTML-链接-1"><a href="#HTML-链接-1" class="headerlink" title="HTML  链接"></a>HTML  链接</h3><p>HTML 使用超级链接与网络上的另一个文档相连。<br>几乎可以在所有的网页中找到链接。点击链接可以从一张页面跳转到另一张页面。  </p>
<h4 id="HTML-链接语法"><a href="#HTML-链接语法" class="headerlink" title="HTML 链接语法"></a>HTML 链接语法</h4><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;<span class="keyword">a</span> href=<span class="string">"url"</span>&gt;link <span class="keyword">text</span>&lt;/<span class="keyword">a</span>&gt;</div></pre></td></tr></table></figure>
<p>href属性规定链接的目标。开始标签和结束标签之间的文字被作为超链接来显示。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://x-nicolo.github.io/"</span>&gt;</span>肖洒的博客<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="HTML-链接-target属性"><a href="#HTML-链接-target属性" class="headerlink" title="HTML 链接-target属性"></a>HTML 链接-target属性</h4><p>使用Target属性，你可以定义被链接的文档显示在何处。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span> = <span class="string">"http://x-nicolo.github.io"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>访问肖洒的博客！<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="HTML-链接-name属性"><a href="#HTML-链接-name属性" class="headerlink" title="HTML 链接-name属性"></a>HTML 链接-name属性</h4><p>name 属性规定锚（anchor）的名称。<br>您可以使用name属性创建HTML页面中的书签.书签不会以任何特殊方式显示，它对读者是不可见的。当使用命名锚（named anchors）时，我们可以创建直接跳至该命名锚（比如页面中某个小节）的链接，这样使用者就无需不停地滚动页面来寻找他们需要的信息了。  </p>
<h5 id="命名锚的语法："><a href="#命名锚的语法：" class="headerlink" title="命名锚的语法："></a>命名锚的语法：</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span> = <span class="string">"label"</span>&gt;</span>锚<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div></pre></td></tr></table></figure>
<p>例子：<br>首先，在HTML文档中对锚进行命名(创建一个书签)：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">"tips"</span>&gt;</span>基本的注意事项-有用的提示<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>然后，在同一个文档中创建指向该锚的链接：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#tips"</span>&gt;</span>有用的提示<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="HTML-图像-1"><a href="#HTML-图像-1" class="headerlink" title="HTML 图像"></a>HTML 图像</h3><p><strong>图像标签img 和源属性src</strong><br>在HTML中，图像由img标签定义，img是空标签，只包含属性，并且没有闭合标签。<br>要在页面上显示图像，需要使用源属性src，源属性的值是图像的URL地址。<br>定义图像的语法是：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;<span class="selector-tag">img</span> src = <span class="string">"url"</span> /&gt;</div></pre></td></tr></table></figure></p>
<p>URL指存储图像的位置。如果名为 “boat.gif” 的图像位于www.w3school.com.cn的images 目录中，那么其URL为./images/boat.gif  </p>
<h4 id="替换文本属性"><a href="#替换文本属性" class="headerlink" title="替换文本属性"></a>替换文本属性</h4><p>alt 属性用来为图像定义一串预备的可替换的文本。替换文本属性的值是用户定义的。<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;img <span class="attribute">src</span>=<span class="string">"boat.gif"</span> <span class="attribute">alt</span>=<span class="string">"Big Boat"</span>&gt;</div></pre></td></tr></table></figure></p>
<p>在浏览器无法载入图像时，替换文本属性告诉读者她们失去的信息。此时，浏览器将显示这个替代性的文本而不是图像。为页面上的图像都加上替换文本属性是个好习惯，这样有助于更好的显示信息，并且对于那些使用纯文本浏览器的人来说是非常有用的。  </p>
<h4 id="HTML背景图片"><a href="#HTML背景图片" class="headerlink" title="HTML背景图片"></a>HTML背景图片</h4><p>本例演示如何向HTML页面添加背景图片。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">background</span>=<span class="string">"/i/eg_background.jpg"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>图像背景<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>gif 和 jpg 文件均可用作 HTML 背景。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>如果图像小于页面，图像会进行重复。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="HTML-排列图片"><a href="#HTML-排列图片" class="headerlink" title="HTML 排列图片"></a>HTML 排列图片</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>未设置对齐方式的图像：<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>图像 <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span> =<span class="string">"/i/eg_cute.gif"</span>&gt;</span> 在文本中<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>已设置对齐方式的图像：<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>图像 <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"/i/eg_cute.gif"</span> <span class="attr">align</span>=<span class="string">"bottom"</span>&gt;</span> 在文本中<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>图像 <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span> =<span class="string">"/i/eg_cute.gif"</span> <span class="attr">align</span>=<span class="string">"middle"</span>&gt;</span> 在文本中<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>图像 <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span> =<span class="string">"/i/eg_cute.gif"</span> <span class="attr">align</span>=<span class="string">"top"</span>&gt;</span> 在文本中<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>请注意，bottom 对齐方式是默认的对齐方式。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="HTML-浮动图像"><a href="#HTML-浮动图像" class="headerlink" title="HTML 浮动图像"></a>HTML 浮动图像</h4><p>如何使图片浮动至段落的左边或右边。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span> =<span class="string">"/i/eg_cute.gif"</span> <span class="attr">align</span> =<span class="string">"left"</span>&gt;</span> </div><div class="line">带有图像的一个段落。图像的 align 属性设置为 "left"。图像将浮动到文本的左侧。</div><div class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span> =<span class="string">"/i/eg_cute.gif"</span> <span class="attr">align</span> =<span class="string">"right"</span>&gt;</span> </div><div class="line">带有图像的一个段落。图像的 align 属性设置为 "right"。图像将浮动到文本的右侧。</div><div class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="HTML-调整图像大小"><a href="#HTML-调整图像大小" class="headerlink" title="HTML 调整图像大小"></a>HTML 调整图像大小</h4><p>如何将图片调整到不同的尺寸.  </p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&lt;html&gt;</div><div class="line">&lt;body&gt;</div><div class="line">&lt;<span class="selector-tag">img</span> src=<span class="string">"/i/eg_mouse.jpg"</span> <span class="attribute">width</span>=<span class="string">"50"</span> height=<span class="string">"50"</span>&gt;</div><div class="line">&lt;br /&gt;</div><div class="line">&lt;<span class="selector-tag">img</span> src=<span class="string">"/i/eg_mouse.jpg"</span> <span class="attribute">width</span>=<span class="string">"100"</span> height=<span class="string">"100"</span>&gt;</div><div class="line">&lt;br /&gt;</div><div class="line">&lt;<span class="selector-tag">img</span> src=<span class="string">"/i/eg_mouse.jpg"</span> <span class="attribute">width</span>=<span class="string">"200"</span> height=<span class="string">"200"</span>&gt;</div><div class="line">&lt;p&gt;通过改变 <span class="selector-tag">img</span> 标签的 <span class="string">"height"</span> 和 <span class="string">"width"</span> 属性的值，您可以放大或缩小图像。&lt;/p&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
<h4 id="HTML-制作图像链接"><a href="#HTML-制作图像链接" class="headerlink" title="HTML 制作图像链接"></a>HTML 制作图像链接</h4><p>如何将图像作为一个链接使用。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></div><div class="line">可以把图像作为链接来使用：</div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/example/html/lastpage.html"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">border</span>=<span class="string">"0"</span> <span class="attr">src</span>=<span class="string">"/i/eg_buttonnext.gif"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="HTML-表格"><a href="#HTML-表格" class="headerlink" title="HTML 表格"></a>HTML 表格</h3><p>表格由table标签来定义。每个表格均有若干行（由tr标签定义），每行被分割为若干单元格（由td标签定义）。字母td指表格数据（table data），即数据单元格的内容。数据单元格可以包含文本、图片、列表、段落、表单、水平线、表格等等。  </p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>row 1, cell 1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>row 1, cell 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>row 2, cell 1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>row 2, cell 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="HTML-表格和边框属性"><a href="#HTML-表格和边框属性" class="headerlink" title="HTML 表格和边框属性"></a>HTML 表格和边框属性</h4><p>使用边框属性来显示一个带有边框的表格：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>Row 1, cell 1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>Row 1, cell 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="HTML-表格的表头"><a href="#HTML-表格的表头" class="headerlink" title="HTML  表格的表头"></a>HTML  表格的表头</h4><p>表格的表头使用th标签进行定义。大多数浏览器会把表头显示为粗体居中的文本：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>Heading<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>Another Heading<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>row 1, cell 1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>row 1, cell 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>row 2, cell 1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>row 2, cell 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="HTML-表格中的空单元格"><a href="#HTML-表格中的空单元格" class="headerlink" title="HTML 表格中的空单元格"></a>HTML 表格中的空单元格</h4><p>在一些浏览器中，没有内容的表格单元显示得不太好。如果某个单元格是空的（没有内容），浏览器可能无法显示出这个单元格的边框。比如：  </p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>row 1, cell 1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>row 1, cell 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>row 2, cell 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></div></pre></td></tr></table></figure>
<p>注意：这个空的单元格的边框没有被显示出来。为了避免这种情况，在空单元格中添加一个 <strong>空格占位符</strong>，就可以将边框显示出来。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>row 1, cell 1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>row 1, cell 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>&amp;nbsp;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>row 2, cell 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="跨行或跨列的表格单元格"><a href="#跨行或跨列的表格单元格" class="headerlink" title="跨行或跨列的表格单元格"></a>跨行或跨列的表格单元格</h4><p>如何定义跨行或跨列的表格单元格<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>横跨两列的单元格：<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">th</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span>电话<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>Bill Gates<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>555 77 854<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>555 77 855<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>横跨两行的单元格：<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>Bill Gates<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">th</span> <span class="attr">rowspan</span>=<span class="string">"2"</span>&gt;</span>电话<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>555 77 854<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>555 77 855<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="HTML-列表"><a href="#HTML-列表" class="headerlink" title="HTML 列表"></a>HTML 列表</h3><p>HTML支持有序、无序和定义列表。  </p>
<h4 id="HTML-无序列表"><a href="#HTML-无序列表" class="headerlink" title="HTML 无序列表"></a>HTML 无序列表</h4><p>无序列表是一个项目的列表，此列项目使用粗体原点进行标记。<br>无序列表使用 ul 标签。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>牛奶<span class="tag">&lt;<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>咖啡<span class="tag">&lt;<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="HTML-有序列表"><a href="#HTML-有序列表" class="headerlink" title="HTML 有序列表"></a>HTML 有序列表</h4><p>自定义列表不仅仅是一列项目，而是项目及其注释的组合。<br>自定义列表以 dl 标签开始，每个自定义列表项以 dt开始，每个自定义列表项的定义以 dd 开始。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dt</span>&gt;</span>Coffee<span class="tag">&lt;/<span class="name">dt</span>&gt;</span>  </div><div class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span>-black hot drink<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dt</span>&gt;</span>-white cold drink<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="HTML-区块"><a href="#HTML-区块" class="headerlink" title="HTML 区块"></a>HTML 区块</h3><p>HTML可以通过 div 和 span将元素组合起来。  </p>
<h4 id="HTML-区块元素"><a href="#HTML-区块元素" class="headerlink" title="HTML 区块元素"></a>HTML 区块元素</h4><p>块级元素在浏览器显示时，通常会以新行来开始。<br>例如 h1 p ul table  </p>
<h4 id="HTML-内联元素"><a href="#HTML-内联元素" class="headerlink" title="HTML 内联元素"></a>HTML 内联元素</h4><p>内联元素在显示时通常不会以新行开始。  </p>
<h4 id="HTML-div-元素"><a href="#HTML-div-元素" class="headerlink" title="HTML div 元素"></a>HTML div 元素</h4><p>div 是块级元素，可用于组合其他HTML元素的容器。  </p>
<h4 id="HTML-span-元素"><a href="#HTML-span-元素" class="headerlink" title="HTML span 元素"></a>HTML span 元素</h4><p>HTML span 元素是内联元素，可用作文本容器。  </p>
<h3 id="HTML-布局"><a href="#HTML-布局" class="headerlink" title="HTML 布局"></a>HTML 布局</h3><p>大多数网站可以使用 <div> 或者 <table> 元素来创建多列。CSS 用于对元素进行定位，或者为页面创建背景以及色彩丰富的外观  </table></div></p>
<h4 id="HTML-布局-使用-div元素"><a href="#HTML-布局-使用-div元素" class="headerlink" title="HTML 布局-使用 div元素"></a>HTML 布局-使用 div元素</h4><p>例子：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Nicolo<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"container"</span> <span class="attr">style</span>=<span class="string">"width:500px"</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"header"</span> <span class="attr">style</span>=<span class="string">"background-color:#FFA500;"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">style</span>=<span class="string">"margin-bottom:0;"</span>&gt;</span>主要的网页标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"menu"</span> <span class="attr">style</span>=<span class="string">"background-color:#FFD700;height:200px;width:100px;float:left;"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span>菜单<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">HTML<span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">CSS<span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">JavaScript<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"content"</span> <span class="attr">style</span>=<span class="string">"background-color:#EEEEEE;height:200px;width:400px;float:left;"</span>&gt;</span></div><div class="line">内容在这里<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"footer"</span> <span class="attr">style</span>=<span class="string">"background-color:#FFA500;clear:both;text-align:center;"</span>&gt;</span></div><div class="line">版权 © runoob.com<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="HTML-表单"><a href="#HTML-表单" class="headerlink" title="HTML 表单"></a>HTML 表单</h3><p>HTML表单用于收集不同类型的用户输入。<br>表单是一个包含表单元素的区域。表单元素是允许用户在表单中输入内容,比如：文本域(textarea)、下拉列表、单选框(radio-buttons)、复选框(checkboxes)等等。<br>表单使用表单标签 <form> 来设置:  </form></p>
<h4 id="HTML-表单-输入元素"><a href="#HTML-表单-输入元素" class="headerlink" title="HTML 表单-输入元素"></a>HTML 表单-输入元素</h4><p>多数情况下被用到的表单标签是输入标签。input.<br>输入类型是由类型属性定义的，大多数经常被用到的输入类型如下。<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;<span class="keyword">form</span>&gt;</div><div class="line">First name: &lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">"text"</span> name=<span class="string">"firstname"</span>&gt;&lt;<span class="keyword">br</span>&gt;</div><div class="line">Last name: &lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">"text"</span> name=<span class="string">"lastname"</span>&gt;</div><div class="line">&lt;/<span class="keyword">form</span>&gt;</div></pre></td></tr></table></figure></p>
<h4 id="密码字段"><a href="#密码字段" class="headerlink" title="密码字段"></a>密码字段</h4><p>密码字段通过标签 input type=”password”来定义。<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;<span class="keyword">form</span>&gt;</div><div class="line">Password:&lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">"password"</span> name=<span class="string">"pwd"</span>&gt;</div><div class="line">&lt;/<span class="keyword">form</span>&gt;</div></pre></td></tr></table></figure></p>
<h4 id="单选按钮"><a href="#单选按钮" class="headerlink" title="单选按钮"></a>单选按钮</h4><p>input type=”radio” 标签定义了表单单选边框选项。<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;<span class="keyword">form</span>&gt;</div><div class="line">&lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">"radio"</span> name=<span class="string">"sex"</span> value=<span class="string">"male"</span>&gt;Male&lt;<span class="keyword">br</span>&gt;</div><div class="line">&lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">"radio"</span> name=<span class="string">"sex"</span> value=<span class="string">"female"</span>&gt;Female</div><div class="line">&lt;/<span class="keyword">form</span>&gt;</div></pre></td></tr></table></figure></p>
<h4 id="复选框"><a href="#复选框" class="headerlink" title="复选框"></a>复选框</h4><p>input type=”checkbox” 定义了复选框. 用户需要从若干给定的选择中选取一个或若干选项。</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;form&gt;</div><div class="line">&lt;<span class="selector-tag">input</span> type=<span class="string">"checkbox"</span> name=<span class="string">"vehicle"</span> value=<span class="string">"Bike"</span>&gt;I have <span class="selector-tag">a</span> bike&lt;br&gt;</div><div class="line">&lt;<span class="selector-tag">input</span> type=<span class="string">"checkbox"</span> name=<span class="string">"vehicle"</span> value=<span class="string">"Car"</span>&gt;I have <span class="selector-tag">a</span> car </div><div class="line">&lt;/form&gt;</div></pre></td></tr></table></figure>
<h4 id="提交按钮"><a href="#提交按钮" class="headerlink" title="提交按钮"></a>提交按钮</h4><p>input type=”submit”定义了提交按钮.<br>当用户单击确认按钮时，表单的内容会被传送到另一个文件。表单的动作属性定义了目的文件的文件名。由动作属性定义的这个文件通常会对接收到的输入数据进行相关的处理。:<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;<span class="keyword">form</span> name=<span class="string">"input"</span> action=<span class="string">"html_form_action.php"</span> method=<span class="string">"get"</span>&gt;</div><div class="line">Username: &lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">"text"</span> name=<span class="string">"user"</span>&gt;</div><div class="line">&lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">"submit"</span> value=<span class="string">"Submit"</span>&gt;</div><div class="line">&lt;/<span class="keyword">form</span>&gt;</div></pre></td></tr></table></figure></p>
<h3 id="HTML-框架"><a href="#HTML-框架" class="headerlink" title="HTML 框架"></a>HTML 框架</h3><p>通过使用框架，你可以在同一个浏览器窗口中显示不止一个页面。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">iframe语法:</div><div class="line">&lt;iframe src=<span class="string">"URL"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span></div><div class="line">该URL指向不同的网页。</div></pre></td></tr></table></figure></p>
<h4 id="Iframe-设置高度与宽度"><a href="#Iframe-设置高度与宽度" class="headerlink" title="Iframe-设置高度与宽度"></a>Iframe-设置高度与宽度</h4><p>height和width属性用来定义iframe标签的高度与宽度。<br>属性默认以像素为单位，但是可以指定其按比例显示。<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;iframe <span class="attribute">src</span>=<span class="string">"demo_iframe.html"</span> <span class="attribute">frameborder</span>=<span class="string">"0"</span>&gt;&lt;/iframe&gt;</div></pre></td></tr></table></figure></p>
<h4 id="Iframe-移除边框"><a href="#Iframe-移除边框" class="headerlink" title="Iframe -移除边框"></a>Iframe -移除边框</h4><p>frameborder属性用于定义iframe表示是否显示边框。<br>设置属性值为”0”移除边框。<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;iframe <span class="attribute">src</span>=<span class="string">"demo_iframe.html"</span> <span class="attribute">frameborder</span>=<span class="string">"0"</span>&gt;&lt;/iframe&gt;</div></pre></td></tr></table></figure></p>
<h4 id="使用iframe来显示目标链接页面"><a href="#使用iframe来显示目标链接页面" class="headerlink" title="使用iframe来显示目标链接页面"></a>使用iframe来显示目标链接页面</h4><p>iframe可以显示一个目标链接的页面<br>目标链接的属性必须使用iframe的属性，如下实例:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;iframe src=<span class="string">"demo_iframe.htm"</span> name=<span class="string">"iframe_a"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span></div><div class="line">&lt;p&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://x-nicolo.github.io"</span> <span class="attr">target</span>=<span class="string">"iframe_a"</span>&gt;</span>Nicolo<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></div></pre></td></tr></table></figure></p>
<h3 id="HTML颜色"><a href="#HTML颜色" class="headerlink" title="HTML颜色"></a>HTML颜色</h3><p>HTML 颜色由红色、绿色、蓝色混合而成。  </p>
<h4 id="颜色值"><a href="#颜色值" class="headerlink" title="颜色值"></a>颜色值</h4><p>HTML 颜色由一个十六进制符号来定义，这个符号由红色、绿色和蓝色的值组成（RGB）。<br>每种颜色的最小值是0（十六进制：#00）。最大值是255（十六进制：#FF）。  </p>
<p>例子：<br>相对于使用rgb(255,255,0)使用rgba(255,255,0,0.25)可以实现设置颜色透明度的功能，这里的0.5表示透明度，范围0~1。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"background-color:rgb(255,255,0)"</span>&gt;</span></div><div class="line">通过 rbg 值设置背景颜色</div><div class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"background-color:rgba(255,255,0,0.25)"</span>&gt;</span></div><div class="line">通过 rbg 值设置背景颜色</div><div class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"background-color:rgba(255,255,0,0.5)"</span>&gt;</span></div><div class="line">通过 rbg 值设置背景颜色</div><div class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"background-color:rgba(255,255,0,0.75)"</span>&gt;</span></div><div class="line">通过 rbg 值设置背景颜色</div><div class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="HTML-颜色名"><a href="#HTML-颜色名" class="headerlink" title="HTML 颜色名"></a>HTML 颜色名</h3><p>目前所有浏览器都支持以下颜色名。<br>141个颜色名称是在HTML和CSS颜色规范定义的（17标准颜色，再加124）。下表列出了所有颜色的值，包括十六进制值。<br>Remark 提示: 17标准颜色：黑色，蓝色，水，紫红色，灰色，绿色，石灰，栗色，海军，橄榄，橙，紫，红，白，银，蓝绿色，黄色。点击其中一个颜色名称（或一个十六进制值）就可以查看与不同文字颜色搭配的背景颜色。  </p>
<h3 id="HTML-颜色值"><a href="#HTML-颜色值" class="headerlink" title="HTML 颜色值"></a>HTML 颜色值</h3><p>颜色由红(R)、绿(G)、蓝(B)组成。  </p>
<h4 id="颜色值-1"><a href="#颜色值-1" class="headerlink" title="颜色值"></a>颜色值</h4><p>颜色值由十六进制来表示红、绿、蓝（RGB）。<br>每个颜色的最低值为0(十六进制为00)，最高值为255(十六进制为FF)<br>十六进制值的写法为#号后跟三个或六个十六进制字符。<br>三位数表示法为：#RGB，转换为6位数表示为：#RRGGBB。  </p>
<h3 id="HTML-脚本"><a href="#HTML-脚本" class="headerlink" title="HTML 脚本"></a>HTML 脚本</h3><p>JavaScript 使 HTML 页面具有更强的动态和交互性。<br>插入一个脚本：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Nicolo<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript"><span class="built_in">document</span>.write(<span class="string">"Hello World"</span>)</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="HTML-script-标签"><a href="#HTML-script-标签" class="headerlink" title="HTML script 标签"></a>HTML script 标签</h4><p>script标签用于定义客户端脚本，比如JavaScript。<br>script元素既可包含脚本语句，也可通过 src 属性指向外部脚本文件。<br>JavaScript 最常用于图片操作、表单验证以及内容动态更新。<br>下面的脚本会向浏览器输出”Hello World!”：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript"><span class="built_in">document</span>.write(<span class="string">"Hello World!"</span>);</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="HTML-noscript-标签"><a href="#HTML-noscript-标签" class="headerlink" title="HTML noscript 标签"></a>HTML noscript 标签</h4><p>noscript 标签提供无法使用脚本时的替代内容，比方在浏览器禁用脚本时，或浏览器不支持客户端脚本时。<br>noscript元素可包含普通 HTML 页面的 body 元素中能够找到的所有元素。<br>只有在浏览器不支持脚本或者禁用脚本时，才会显示 noscript&gt;元素中的内容：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript"><span class="built_in">document</span>.write(<span class="string">"Hello World!"</span>)</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">noscript</span>&gt;</span>抱歉，你的浏览器不支持 JavaScript!<span class="tag">&lt;/<span class="name">noscript</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="JavaScript体验"><a href="#JavaScript体验" class="headerlink" title="JavaScript体验"></a>JavaScript体验</h4><p>JavaScript可以直接在HTML输出:<br><figure class="highlight abnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">document.write(<span class="string">"&lt;p&gt;这是一个段落。&lt;/p&gt;"</span>)<span class="comment">;</span></div></pre></td></tr></table></figure></p>
<p>JavaScript事件响应:<br><figure class="highlight hsp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;<span class="keyword">button</span> type=<span class="string">"button"</span> <span class="keyword">onclick</span>=<span class="string">"myFunction()"</span>&gt;点我！&lt;/<span class="keyword">button</span>&gt;</div></pre></td></tr></table></figure></p>
<p>JavaScript处理 HTML 样式:<br><figure class="highlight livescript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">document</span>.getElementById(<span class="string">"demo"</span>).style.color=<span class="string">"<span class="subst">#ff0000</span>"</span>;</div></pre></td></tr></table></figure></p>
<h3 id="HTML-字符实体"><a href="#HTML-字符实体" class="headerlink" title="HTML 字符实体"></a>HTML 字符实体</h3><p>HTML中的预留字符必须被替换为字符实体。<br>一些在键盘上找不到的字符也可以使用字符实体来替换。  </p>
<h4 id="HTML-实体"><a href="#HTML-实体" class="headerlink" title="HTML 实体"></a>HTML 实体</h4><p>在 HTML 中，某些字符是预留的。<br>在 HTML 中不能使用小于号（&lt;）和大于号（&gt;），这是因为浏览器会误认为它们是标签。<br>如果希望正确地显示预留字符，我们必须在 HTML 源代码中使用字符实体（character entities）。 字符实体类似这样：<br><figure class="highlight 1c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&amp;entity_name;</span></div><div class="line">或</div><div class="line"><span class="meta">&amp;#entity_number;</span></div></pre></td></tr></table></figure></p>
<p>如需显示小于号，我们必须这样写：&lt; 或 &#60; 或 &#060;</p>
<h4 id="不间断空格-Non-breaking-Space"><a href="#不间断空格-Non-breaking-Space" class="headerlink" title="不间断空格(Non-breaking Space)"></a>不间断空格(Non-breaking Space)</h4><p>HTML 中的常用字符实体是不间断空格(&nbsp;)。浏览器总是会截短 HTML 页面中的空格。如果您在文本中写10个空格，在显示该页面之前，浏览器会删除它们中的 9 个。如需在页面中增加空格的数量，您需要使用&nbsp;字符实体。  </p>
<h3 id="HTML-URL"><a href="#HTML-URL" class="headerlink" title="HTML URL"></a>HTML URL</h3><p>URL是一个网页地址。URL可以由字母组成，或互联网协议（IP）地址： 192.68.20.50。大多数人进入网站使用网站域名来访问，因为名字比数字更容易记住。  </p>
<h4 id="URL-统一资源定位器"><a href="#URL-统一资源定位器" class="headerlink" title="URL- 统一资源定位器"></a>URL- 统一资源定位器</h4><p>Web浏览器通过URL从Web服务器请求页面。当您点击 HTML 页面中的某个链接时，对应的a标签指向万维网上的一个地址。一个统一资源定位器(URL) 用于定位万维网上的文档。  </p>
<h4 id="URL-字符编码"><a href="#URL-字符编码" class="headerlink" title="URL 字符编码"></a>URL 字符编码</h4><p>URL只能使用ASCII字符集.来通过因特网进行发送。由于URL常常会包含ASCII合之外的字符，URL 必须转换为有效的 ASCII 格式。URL编码使用 “%”其后跟随两位的十六进制数来替换非 ASCII 字符。<br>URL不能包含空格。URL编码通常使用 + 来替换空格。   </p>
<h3 id="HTML-速查列表"><a href="#HTML-速查列表" class="headerlink" title="HTML 速查列表"></a>HTML 速查列表</h3><p>备日常使用。  </p>
<h4 id="HTML-基本文档"><a href="#HTML-基本文档" class="headerlink" title="HTML 基本文档"></a>HTML 基本文档</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>文档标题<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">可见文本...</div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="HTML-基本标签"><a href="#HTML-基本标签" class="headerlink" title="HTML 基本标签"></a>HTML 基本标签</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>最大的标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span> . . . <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span> . . . <span class="tag">&lt;/<span class="name">h3</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span> . . . <span class="tag">&lt;/<span class="name">h4</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h5</span>&gt;</span> . . . <span class="tag">&lt;/<span class="name">h5</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h6</span>&gt;</span>最小的标题<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span> （换行）</div><div class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span> （水平线）</div><div class="line"><span class="comment">&lt;!-- 这是注释 --&gt;</span></div></pre></td></tr></table></figure>
<h4 id="HTML-文本格式化"><a href="#HTML-文本格式化" class="headerlink" title="HTML 文本格式化"></a>HTML 文本格式化</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span>粗体文本<span class="tag">&lt;/<span class="name">b</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">code</span>&gt;</span>计算机代码<span class="tag">&lt;/<span class="name">code</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span>强调文本<span class="tag">&lt;/<span class="name">em</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">i</span>&gt;</span>斜体文本<span class="tag">&lt;/<span class="name">i</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">kbd</span>&gt;</span>键盘输入<span class="tag">&lt;/<span class="name">kbd</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span>预格式化文本<span class="tag">&lt;/<span class="name">pre</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">small</span>&gt;</span>更小的文本<span class="tag">&lt;/<span class="name">small</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span>重要的文本<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;<span class="name">abbr</span>&gt;</span> （缩写）</div><div class="line"><span class="tag">&lt;<span class="name">address</span>&gt;</span> （联系信息）</div><div class="line"><span class="tag">&lt;<span class="name">bdo</span>&gt;</span> （文字方向）</div><div class="line"><span class="tag">&lt;<span class="name">blockquote</span>&gt;</span> （从另一个源引用的部分）</div><div class="line"><span class="tag">&lt;<span class="name">cite</span>&gt;</span> （工作的名称）</div><div class="line"><span class="tag">&lt;<span class="name">del</span>&gt;</span> （删除的文本）</div><div class="line"><span class="tag">&lt;<span class="name">ins</span>&gt;</span> （插入的文本）</div><div class="line"><span class="tag">&lt;<span class="name">sub</span>&gt;</span> （下标文本）</div><div class="line"><span class="tag">&lt;<span class="name">sup</span>&gt;</span> （上标文本）</div></pre></td></tr></table></figure>
<h4 id="HTML-链接-2"><a href="#HTML-链接-2" class="headerlink" title="HTML 链接"></a>HTML 链接</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">普通的链接：&lt;a <span class="attribute">href</span>=<span class="string">"http://www.example.com/"</span>&gt;链接文本&lt;/a&gt;</div><div class="line">图像链接： &lt;a <span class="attribute">href</span>=<span class="string">"http://www.example.com/"</span>&gt;&lt;img <span class="attribute">src</span>=<span class="string">"URL"</span> <span class="attribute">alt</span>=<span class="string">"替换文本"</span>&gt;&lt;/a&gt;</div><div class="line">邮件链接： &lt;a <span class="attribute">href</span>=<span class="string">"mailto:webmaster@example.com"</span>&gt;发送e-mail&lt;/a&gt;</div><div class="line">书签：</div><div class="line">&lt;a <span class="attribute">id</span>=<span class="string">"tips"</span>&gt;提示部分&lt;/a&gt;</div><div class="line">&lt;a <span class="attribute">href</span>=<span class="string">"#tips"</span>&gt;跳到提示部分&lt;/a&gt;</div></pre></td></tr></table></figure>
<h4 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;img <span class="attribute">src</span>=<span class="string">"URL"</span> <span class="attribute">alt</span>=<span class="string">"替换文本"</span> <span class="attribute">height</span>=<span class="string">"42"</span> <span class="attribute">width</span>=<span class="string">"42"</span>&gt;</div></pre></td></tr></table></figure>
<h4 id="样式-区块"><a href="#样式-区块" class="headerlink" title="样式/区块"></a>样式/区块</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-tag">h1</span> &#123;<span class="attribute">color</span>:red;&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">p</span> &#123;<span class="attribute">color</span>:blue;&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>文档中的块级元素<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>文档中的内联元素<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>项目<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>项目<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>第一项<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>第二项<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="定义列表"><a href="#定义列表" class="headerlink" title="定义列表"></a>定义列表</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>项目 1<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>描述项目 1<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>项目 2<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>描述项目 2<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>表格标题<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>表格标题<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>表格数据<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>表格数据<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="框架"><a href="#框架" class="headerlink" title="框架"></a>框架</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">"demo_iframe.htm"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"demo_form.php"</span> <span class="attr">method</span>=<span class="string">"post/get"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">size</span>=<span class="string">"40"</span> <span class="attr">maxlength</span>=<span class="string">"50"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">checked</span>=<span class="string">"checked"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">checked</span>=<span class="string">"checked"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"Send"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">option</span>&gt;</span>苹果<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">selected</span>=<span class="string">"selected"</span>&gt;</span>香蕉<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">option</span>&gt;</span>樱桃<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">"comment"</span> <span class="attr">rows</span>=<span class="string">"60"</span> <span class="attr">cols</span>=<span class="string">"20"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="实体"><a href="#实体" class="headerlink" title="实体"></a>实体</h4><figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="variable">&amp;lt</span>; 等同于 <span class="params">&lt;</span></div><div class="line"><span class="params"><span class="variable">&amp;gt</span>; 等同于 &gt;</span></div><div class="line">&amp;<span class="meta">#169; 等同于 ©</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;写在前面。&lt;br&gt;前端知识真的还是比较有用的。一直要把前端的学习提上日程，因为各种事情各种拖延，写爬虫的时候也是捎带学习前端的东西，还是需要系统的了解下。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="https://x-nicolo.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="前端" scheme="https://x-nicolo.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="HTML" scheme="https://x-nicolo.github.io/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>跳一跳刷分指南（作弊攻略）</title>
    <link href="https://x-nicolo.github.io/2018/01/02/%E8%B7%B3%E4%B8%80%E8%B7%B3%E5%88%B7%E5%88%86%E6%8C%87%E5%8D%97%EF%BC%88%E4%BD%9C%E5%BC%8A%E6%94%BB%E7%95%A5%EF%BC%89-1/"/>
    <id>https://x-nicolo.github.io/2018/01/02/跳一跳刷分指南（作弊攻略）-1/</id>
    <published>2018-01-02T13:51:55.000Z</published>
    <updated>2018-01-02T13:51:55.000Z</updated>
    
    <content type="html"><![CDATA[<p>略略略。<br><a id="more"></a><br><img src="http://upload-images.jianshu.io/upload_images/2847713-a0cb36f928fde35d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="794994122028961310.jpg"><br>自从刷了分好多好友都来问我，我还是写一个指（作）南（弊）吧。<br>游戏虽好玩，且刷且珍惜。（谢好友们不删之恩<br>没耐心的直接拉到最后的总结，两步到位。  </p>
<h3 id="外挂"><a href="#外挂" class="headerlink" title="外挂"></a>外挂</h3><p>最近在微博看到好多物理外挂，还有一些基于图像识别的外挂。其实都算是伤神费力，毛爷爷说过，看问题要抓住关键矛盾,一切问题迎刃而解。所以抓包去看看。  </p>
<h3 id="抓包"><a href="#抓包" class="headerlink" title="抓包"></a>抓包</h3><p>以前使用过fiddle，觉得非常nice。但是这玩意在电脑端抓包，不还得设置代理，再去抓微信数据，比较烦，所以找个安卓机直接抓包。  </p>
<h4 id="Packet-Capture"><a href="#Packet-Capture" class="headerlink" title="Packet Capture"></a>Packet Capture</h4><p>安卓机上下载这个，一步一步来，会提示安装证书，安装即可。安装好后长这样：<br><img src="http://upload-images.jianshu.io/upload_images/2847713-0bbbd607f45c0642.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="409430815870541656.png">  </p>
<h4 id="session-ID"><a href="#session-ID" class="headerlink" title="session ID"></a>session ID</h4><p>点三角形开始的按钮，在抓包软件里找到微信，然后打开跳一跳玩一把。<br><img src="http://upload-images.jianshu.io/upload_images/2847713-4ea2220505b7098c.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="709930993861369338.jpg">  </p>
<p><img src="http://upload-images.jianshu.io/upload_images/2847713-c3e7e96f594ff3e3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="839620930425149610.png">  </p>
<p>返回抓包软件，查找有SSL的文件，点开找json文件，找session ID。  </p>
<p><img src="http://upload-images.jianshu.io/upload_images/2847713-71dabab8fe2a5380.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="236073869604834277.jpg"><br>就在这里。<br><img src="http://upload-images.jianshu.io/upload_images/2847713-4520c8d34165e640.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="TIM截图20180102211438.jpg"><br>把session ID后面双引号的序列保存下来。  </p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>此为开源的一个代码，直接改下面的session_id，和自己想要的”score”: 10086就可以，应该能跑起来，但是python的环境配置有时还是挺恶心的。<br><figure class="highlight makefile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line">import requests</div><div class="line">import json</div><div class="line">import time</div><div class="line">from Crypto.Cipher import AES</div><div class="line">import base64</div><div class="line"></div><div class="line">action_data = &#123;</div><div class="line">    <span class="string">"score"</span>: 10086,</div><div class="line">    <span class="string">"times"</span>: 666,</div><div class="line">    <span class="string">"game_data"</span>: <span class="string">"&#123;&#125;"</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">session_id = <span class="string">"5TrXoE7IXtM/Nr7vITnbU9bmR53VH0u8RkVnm6m/Fezg=="</span></div><div class="line"></div><div class="line">aes_key = session_id</div><div class="line">aes_iv  = aes_key</div><div class="line"></div><div class="line">cryptor = AES.new(aes_key, AES.MODE_CBC, aes_iv)</div><div class="line"></div><div class="line">str_action_data = json.dumps(action_data).encode(<span class="string">"utf-8"</span>)</div><div class="line">print(<span class="string">"json_str_action_data "</span>, str_action_data)</div><div class="line"></div><div class="line"><span class="comment">#Pkcs7</span></div><div class="line">length = 16 - (len(str_action_data) % 16)</div><div class="line">str_action_data += bytes([length])*length</div><div class="line"></div><div class="line">cipher_action_data = base64.b64encode(cryptor.encrypt(str_action_data)).decode(<span class="string">"utf-8"</span>)</div><div class="line">print(<span class="string">"action_data "</span>, cipher_action_data)</div><div class="line"></div><div class="line">post_data = &#123;</div><div class="line">  <span class="string">"base_req"</span>: &#123;</div><div class="line">    <span class="string">"session_id"</span>: session_id,</div><div class="line">    <span class="string">"fast"</span>: 1,</div><div class="line">  &#125;,</div><div class="line">  <span class="string">"action_data"</span>: cipher_action_data</div><div class="line">&#125;</div><div class="line"></div><div class="line">headers = &#123;</div><div class="line">    <span class="string">"charset"</span>: <span class="string">"utf-8"</span>,</div><div class="line">    <span class="string">"Accept-Encoding"</span>: <span class="string">"gzip"</span>,</div><div class="line">    <span class="string">"referer"</span>: <span class="string">"https://servicewechat.com/wx7c8d593b2c3a7703/3/page-frame.html"</span>,</div><div class="line">    <span class="string">"content-type"</span>: <span class="string">"application/json"</span>,</div><div class="line">    <span class="string">"User-Agent"</span>: <span class="string">"MicroMessenger/6.6.1.1200(0x26060130) NetType/WIFI Language/zh_CN"</span>,</div><div class="line">    <span class="string">"Content-Length"</span>: <span class="string">"0"</span>,</div><div class="line">    <span class="string">"Host"</span>: <span class="string">"mp.weixin.qq.com"</span>,</div><div class="line">    <span class="string">"Connection"</span>: <span class="string">"Keep-Alive"</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">url = <span class="string">"https://mp.weixin.qq.com/wxagame/wxagame_settlement"</span></div><div class="line"></div><div class="line"></div><div class="line">response = requests.post(url, json=post_data, headers=headers)</div><div class="line">print(json.loads(response.text))</div></pre></td></tr></table></figure></p>
<h3 id="web提交"><a href="#web提交" class="headerlink" title="web提交"></a>web提交</h3><p>当然，游戏通关的策略当然是越简单越好，有位大神写了一个这个程序的Java版，直接可以web端提交。<br><img src="http://upload-images.jianshu.io/upload_images/2847713-29dccef1a8381a63.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png">  </p>
<p><a href="http://java.zhaoxuyang.com/WxTyT/" target="_blank" rel="external">【点这个】填写sessionID和想要的分数，提交即可</a><br>真的是太暴力了。。这个漏洞目前还没修复。  </p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul>
<li>第一步：抓包，获取sessionID（请看<a href="">Packet Capture</a>）</li>
<li>第二步：web提交 </li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;略略略。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="https://x-nicolo.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Python" scheme="https://x-nicolo.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>西电睿思年度非官方关键字榜单</title>
    <link href="https://x-nicolo.github.io/2017/12/19/%E7%9D%BF%E6%80%9D%E6%A6%9C%E5%8D%95/"/>
    <id>https://x-nicolo.github.io/2017/12/19/睿思榜单/</id>
    <published>2017-12-19T13:03:46.000Z</published>
    <updated>2017-12-19T13:03:46.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://upload-images.jianshu.io/upload_images/2847713-7349c503240afeba.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="20150607.png"><br><a id="more"></a>  </p>
<h3 id="西电睿思"><a href="#西电睿思" class="headerlink" title="西电睿思"></a>西电睿思</h3><blockquote>
<p>西电睿思，建立于2009年9月，是一个面向西安电子科技大学师生的以资源共享为主，包括论坛在内诸多功能的综合集娱乐、学习、资源交流的平台。名字取自“睿智善思”和“resource”的谐音，网站的宗旨是“永远不去谋求任何商业利益，只为西电人有一个高速下载的地方，有一个开心聊天交朋友的地方而努力”。</p>
</blockquote>
<h3 id="初衷"><a href="#初衷" class="headerlink" title="初衷"></a>初衷</h3><p>首先要说的是真的特别喜欢睿思，也特别喜欢它的宗旨！“永远不去谋求任何商业利益，只为西电人有一个高速下载的地方，有一个开心聊天交朋友的地方而努力”。睿思背后的技术团队一定是伟大，灿烂的！技术也是有温度的！  </p>
<p>之前写了一个简单的爬虫登录睿思领金币（其实我也没怎么领，因为金币够用。[偷笑][偷笑]）。就有一个想法，希望年底能对睿思做一个报告分析,特别好奇西电er在学习磕盐之余关心什么。    </p>
<p>本来的计划是爬取睿思全站的信息，后来因为种种事情忙的不可开交，只对西电睿思灌水专区、相聚睿思板块的发帖人、帖子标题。帖子内容进行了采集。当然，采集的时长和网速都有控制，不会对睿思服务器造成影响的~(采集过程中出了好多幺蛾子！xue微的用了人工“断点采集”……)  </p>
<p><img src="http://upload-images.jianshu.io/upload_images/2847713-91fac6213c1d57a2.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="text2.gif"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2847713-9e9095949286f530.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="数据库.gif"></p>
<h3 id="采集内容统计"><a href="#采集内容统计" class="headerlink" title="采集内容统计"></a>采集内容统计</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">板块：西电睿思灌水专区  </div><div class="line">时间段： <span class="number">2017</span><span class="number">-12</span><span class="number">-18</span>~<span class="number">2016</span><span class="number">-10</span><span class="number">-7</span>  </div><div class="line">有效帖子数：<span class="number">24940</span>  </div><div class="line">字数：<span class="number">4102465</span></div></pre></td></tr></table></figure>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">板块：相聚睿思  </div><div class="line">时间段： <span class="number">2017</span><span class="number">-12</span><span class="number">-19</span>~<span class="number">2010</span><span class="number">-11</span><span class="number">-24</span>   </div><div class="line">有效帖子数：<span class="number">2618</span>  </div><div class="line">字数：<span class="number">439649</span></div></pre></td></tr></table></figure>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">帖子总计：<span class="number">27558</span>  </div><div class="line">字数总计：<span class="number">4130023</span></div></pre></td></tr></table></figure>
<h3 id="灌水专区关键字榜单"><a href="#灌水专区关键字榜单" class="headerlink" title="灌水专区关键字榜单"></a>灌水专区关键字榜单</h3><p>对采集的信息首先进行了结巴分词，然后做了词频统计。使用了停用表过滤（就是过滤嗯、啊、的这些没意思的词语），发现还是有很多BBS的用语，就自己又建立了一个过滤表，体现我个人倾向以及非官方的时候到了[哈哈]。得到以下排行：  </p>
<p><img src="http://upload-images.jianshu.io/upload_images/2847713-573664beaa4a38a0.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="水区ok.jpg"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2847713-96f47a4f85072ea0.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="水区哦看看.jpg"></p>
<h4 id="“可以”"><a href="#“可以”" class="headerlink" title="“可以”"></a>“可以”</h4><p>“可以”？什么可以？可以什么？ Are you ok ?<br>可以可以，很可以。我电孩纸们难道很佛系？<br>当然，也希望大家可以一直可以下去，2018年里一直可以!一直ok下去！  </p>
<h3 id="“他”-“她”"><a href="#“他”-“她”" class="headerlink" title="“他”  “她”"></a>“他”  “她”</h3><p>“他”的次数出现了3280次。“她”的次数出现了1739次。</p>
<p>本来以为“食堂”（580）、“餐厅”（249）、“空调”（359）会上榜。看到这个榜单，其实还是比较符合睿思上的情况的。“工作”、“毕业”、“手机”、“研究生”、“流量”、“宿舍”等等，就是我们日常的日常啊。</p>
<h3 id="缘聚睿思关键字榜单"><a href="#缘聚睿思关键字榜单" class="headerlink" title="缘聚睿思关键字榜单"></a>缘聚睿思关键字榜单</h3><p><img src="http://upload-images.jianshu.io/upload_images/2847713-1b0ee2dd4925bde2.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="缘34.jpg"><br><img src="http://upload-images.jianshu.io/upload_images/2847713-6221964de8baef70.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="缘.jpg"></p>
<h4 id="“老乡”"><a href="#“老乡”" class="headerlink" title="“老乡”"></a>“老乡”</h4><p>缘聚睿思的板块，采集的数据比较久远。“老乡”一共出现了734次。看来大家还是喜欢找一个老乡或者喜欢给老乡找一个。“可以”又出现了，到底什么可以呢？？？希望一切都可以吧。</p>
<h4 id="“妹子”"><a href="#“妹子”" class="headerlink" title="“妹子”"></a>“妹子”</h4><p>“妹子”出现排行第三，不知道怎么解释了。[尴尬]  </p>
<h4 id="“身高”"><a href="#“身高”" class="headerlink" title="“身高”"></a>“身高”</h4><p>我觉得这个可能是最有意义的了，到底睿思的标准是不是173？？刚刚写了个正则，发现还是不能很好的匹配出好的结果。（然而我要去忙了，后面再做分析吧）</p>
<p>（updating）<br>~~~</p>
<h3 id="问题集合"><a href="#问题集合" class="headerlink" title="问题集合"></a>问题集合</h3><p>遇到的问题:捕获异常、重复处理、网络异常502,504，数据库数据类型错误  </p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/2847713-7349c503240afeba.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;20150607.png&quot;&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="https://x-nicolo.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Python" scheme="https://x-nicolo.github.io/tags/Python/"/>
    
      <category term="爬虫" scheme="https://x-nicolo.github.io/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="数据分析" scheme="https://x-nicolo.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>Python网络数据采集</title>
    <link href="https://x-nicolo.github.io/2017/12/17/%E6%95%B0%E6%8D%AE%E9%87%87%E9%9B%86/"/>
    <id>https://x-nicolo.github.io/2017/12/17/数据采集/</id>
    <published>2017-12-17T01:11:46.000Z</published>
    <updated>2017-12-17T01:11:46.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<ol>
<li>“网络数据采集是为普通大众所喜闻乐见的计算机巫术”。</li>
<li>bug 是产品生命中的挑战，好产品是不断面对 bug 并战胜 bug 的结果。</li>
</ol>
</blockquote>
<p>有人说编程语言就是宗教，不同语言的设计哲学不同，行为方式各异，“非我族类，其心必异”，但本着美好生活、快乐修行的初衷，我们对所有语言都时刻保持敬畏之心，尊重信仰自由，努力做好自己的功课。对爱好Python的人来说，人生苦短，Python当歌！ </p>
<a id="more"></a>    
<p>学习笔记。ALL FROM：Web Scraping with Python: Collecting Data from the Modern Web<br>先填坑。</p>
<p><strong><em>第一部分 创建爬虫</em></strong></p>
<p><strong>第1章 初见网络爬虫</strong><br><strong>第2章 复杂HTML解析</strong><br><strong>第3章 开始采集</strong><br><strong>第4章 使用API</strong><br><strong>第5章 存储数据</strong><br><strong>第6章 读取文档</strong>  </p>
<p><strong><em>第二部分 高级数据采集</em></strong></p>
<p><strong>第7章 数据清洗</strong><br><strong>第8章 自然语言处理</strong><br><strong>第9章 穿越网页表单与登录窗口进行采集</strong><br><strong>第10章 采集JavaScript</strong><br><strong>第11章 图像识别与文字处理</strong><br><strong>第12章 避开采集陷阱</strong><br><strong>第13章 用爬虫测试网站</strong><br><strong>第14章 远程采集</strong>  </p>
<hr>
<h2 id="第一部分-创建爬虫"><a href="#第一部分-创建爬虫" class="headerlink" title="第一部分 创建爬虫"></a>第一部分 创建爬虫</h2><p>重点介绍网络数据采集的基本原理。如何用 Python 从网络服务器请求信息，如何对服务器的响应进行基本处理，以及如何以自动化手段与网站进行交互。  </p>
<h3 id="第1章-初见网络爬虫"><a href="#第1章-初见网络爬虫" class="headerlink" title="第1章 初见网络爬虫"></a>第1章 初见网络爬虫</h3><h4 id="网络链接"><a href="#网络链接" class="headerlink" title="网络链接"></a>网络链接</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">from urllib<span class="selector-class">.request</span> import urlopen </div><div class="line">#查找 Python 的 request 模块（在 urllib库里面），只导入一个urlopen 函数。</div><div class="line"><span class="selector-tag">html</span> = urlopen(<span class="string">"http://pythonscraping.com/pages/page1.html"</span>)</div><div class="line"><span class="function"><span class="title">print</span><span class="params">(html.read()</span></span>)</div></pre></td></tr></table></figure>
<p>这是一个获取<a href="http://pythonscraping.com/pages/page1.html" target="_blank" rel="external">http://pythonscraping.com/pages/page1.html</a> 网页的全部HTML代码的程序。  </p>
<p><strong>urllib &amp; urllib2</strong>:在 Python 3.x 里，urllib2改名为urllib，被分成一些子模块： urllib.request、urllib.parse 和 你urllib.error。<br>urllib是Python的标准库（就是说不用额外安装就可以运行这个例子），包含了从网络请求数据，处理 cookie，甚至改变像请求头和用户代理这些元数据的函数。  </p>
<p><strong>urlopen</strong>:用来打开并读取一个从网络获取的远程对象。因为它是一个非常通用的库（它可以轻松读取HTML文件、图像文件，或其他任何文件流)。  </p>
<h4 id="BeautifulSoup简介"><a href="#BeautifulSoup简介" class="headerlink" title="BeautifulSoup简介"></a>BeautifulSoup简介</h4><p>BeautifulSoup通过定位HTML标签来格式化和组织复杂的网络信息，用简单易用的Python对象展现XML结构信息。  </p>
<h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><p>安装 Python 的包管理器 pip，然后运行:<br><figure class="highlight gams"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta"><span class="meta-keyword">$pip</span> install beautifulsoup4</span></div></pre></td></tr></table></figure></p>
<p><strong>注意:</strong>Python2、Python3的版本问题。  </p>
<h6 id="运行Beautifulsoup4"><a href="#运行Beautifulsoup4" class="headerlink" title="运行Beautifulsoup4"></a>运行Beautifulsoup4</h6><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">from urllib<span class="selector-class">.request</span> import urlopen</div><div class="line">from bs4 import BeautifulSoup</div><div class="line"><span class="selector-tag">html</span> = urlopen(<span class="string">"http://www.pythonscraping.com/pages/page1.html"</span>)  </div><div class="line"></div><div class="line">bsObj = BeautifulSoup(<span class="selector-tag">html</span>.read())</div><div class="line">#调用 <span class="selector-tag">html</span>.read() 获取网页的 HTML 内容  </div><div class="line"></div><div class="line"><span class="function"><span class="title">print</span><span class="params">(bsObj.h1)</span></span></div></pre></td></tr></table></figure>
<p>输出结果：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>An Interesting Title<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>从网页中提取的h1标签被嵌在 BeautifulSoup 对象 bsObj 结构的第二层（html → body→ h1）。但是，当我们从对象里提取 h1 标签的时候，可以直接调用它:<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">bsObj</span><span class="selector-class">.h1</span></div></pre></td></tr></table></figure></p>
<p>其实，下面的所有函数调用都可以产生同样的结果：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">bsObj<span class="selector-class">.html</span><span class="selector-class">.body</span><span class="selector-class">.h1</span></div><div class="line">bsObj<span class="selector-class">.body</span><span class="selector-class">.h1</span></div><div class="line">bsObj<span class="selector-class">.html</span><span class="selector-class">.h1</span></div></pre></td></tr></table></figure></p>
<h5 id="可靠的网络链接"><a href="#可靠的网络链接" class="headerlink" title="可靠的网络链接"></a>可靠的网络链接</h5><figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">html</span> = urlopen(<span class="string">"http://www.pythonscraping.com/pages/page1.html"</span>)</div></pre></td></tr></table></figure>
<p>这行代码主要可能会发生两种异常：<br>• 网页在服务器上不存在（或者获取页面的时候出现错误）<br>• 服务器不存在<br>第一种异常发生时，程序会返回HTTP错误。HTTP错误可能是“404 Page Not Found”“500Internal Server Error”等。所有类似情形，urlopen函数都会抛出“HTTPError”异常。我们可以用下面的方式处理这种异常：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">try</span>:</div><div class="line">    html = urlopen(<span class="string">"http://www.pythonscraping.com/pages/page1.html"</span>)</div><div class="line"><span class="keyword">except</span> HTTPError <span class="keyword">as</span> e:</div><div class="line">    print(e)</div><div class="line">    <span class="comment"># 返回空值，中断程序，或者执行另一个方案</span></div><div class="line"><span class="keyword">else</span>:</div><div class="line">    <span class="comment"># 程序继续。注意：如果你已经在上面异常捕捉那一段代码里返回或中断（break）那么就不需要使用else语句了，这段代码也不会执行</span></div></pre></td></tr></table></figure></p>
<p>如果程序返回 HTTP 错误代码，程序就会显示错误内容，不再执行else语句后面的代码。  </p>
<h3 id="第2章-复杂HTML解析"><a href="#第2章-复杂HTML解析" class="headerlink" title="第2章 复杂HTML解析"></a>第2章 复杂HTML解析</h3><p>面对页面解析难题（Gordian Knot）的时候，不假思索地直接写几行语句来抽取信息是非常直接的做法。但是，像这样鲁莽放纵地使用技术，只会让程序变得难以调试或脆弱不堪，甚至二者兼具。<br>正确的做法：<br>• 寻找“打印此页”的链接，或者看看网站有没有 HTML 样式更友好的 <strong>移动版</strong>（把自己的请求头设置成处于移动设备的状态，然后接收网站移动版。移动版后面还会提到，是一个获取数据非常好的渠道。当有一个网页很难爬去的时候，应该去试试它的移动版。<br>• 寻找隐藏在 JavaScript 文件里的信息。要实现这一点，你可能需要查看网页加载的JavaScript 文件。<br>• 虽然网页标题经常会用到，但是这个信息也许可以从网页的URL链接里获取。<br>• 如果要找的信息只存在于一个网站上， 别处没有，那确实是运气不佳。如果不只限于这个网站，那么可以找找其他数据源。有没有其他网站也显示了同样的数据？网站上显示的数据是不是从其他网站上抓取后攒出来的？  </p>
<h4 id="BeautifulSoup"><a href="#BeautifulSoup" class="headerlink" title="BeautifulSoup"></a>BeautifulSoup</h4><p>将介绍通过属性查找标签的方法，标签组的使用，以及标签解析树的导航过程。<br>CSS的发明是网络爬虫的福音。CSS可以让HTML元素呈现出差异化，使那些具有完全相同修饰的元素呈现出不同的样式。  </p>
<p>例子：创建一个网络爬虫来抓取<a href="http://www.pythonscraping.com/pages/warandpeace.html" target="_blank" rel="external">http://www.pythonscraping.com/pages/warandpeace.html</a> 这个网页。  </p>
<p>创建一个 BeautifulSoup 对象，和第1章里使用的程序类似：<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">from</span> urllib.request <span class="meta">import</span> urlopen</div><div class="line"><span class="symbol">from</span> <span class="keyword">bs4 </span><span class="meta">import</span> <span class="keyword">BeautifulSoup</span></div><div class="line"><span class="keyword">html </span>= urlopen(<span class="string">"http://www.pythonscraping.com/pages/warandpeace.html"</span>)</div><div class="line"><span class="keyword">bsObj </span>= <span class="keyword">BeautifulSoup(html)</span></div></pre></td></tr></table></figure></p>
<p>通过BeautifulSoup对象，可以用findAll函数抽取只包含在<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"green"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></div></pre></td></tr></table></figure></p>
<p>标签里的文字，这样就会得到一个人物名称的Python列表（findAll是一个非常灵活的函数，后面会经常用到它）：<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">nameList = bsObj.findAll(<span class="string">"span"</span>, &#123;<span class="string">"class"</span>:<span class="string">"green"</span>&#125;)</div><div class="line"><span class="keyword">for</span> <span class="built_in">name</span> <span class="keyword">in</span> nameList:</div><div class="line">    print(<span class="built_in">name</span>.get_text())</div></pre></td></tr></table></figure></p>
<p>之前调用 bsObj.tagName 只能获取页面中的第一个指定的标签。现在调用 bsObj.findAll(tagName, tagAttributes)可以获取页面中所有指定的标签，不再只是第一个了。<br>获取人名列表之后,程序遍历列表中所有的名字，然后打印name.get_text()，就可以把标签中的内容分开显示了。  </p>
<p><strong>get_text()</strong>:.get_text()会把正在处理的HTML文档中所有的标签都清除，然后返回一个只包含文字的字符串。 假如正在处理一个包含许多超链接、段落和标签的大段源代码，那么 .get_text()会把这些超链接、段落和标签都清除掉，只剩下一串不带标签的文字。<br>用BeautifulSoup对象查找想要的信息，比直接在HTML文本里查找信息要简单得多。 通常在准备打印、存储和操作数据时，应该最后才使用.get_text()。一般情况下，应该尽可能地保留HTML文档的标签结构。后面说不定还会用到的。  </p>
<h4 id="BeautifulSoup的find-和findAll"><a href="#BeautifulSoup的find-和findAll" class="headerlink" title="BeautifulSoup的find()和findAll()"></a>BeautifulSoup的find()和findAll()</h4><p>BeautifulSoup里的find()和findAll()可能是最常用的两个函数。借助它们可以通过标签的不同属性轻松地过滤 HTML页面，查找需要的标签组或单个标签。<br>这两个函数非常相似，BeautifulSoup文档里两者的定义就是这样：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="title">findAll</span><span class="params">(tag, attributes, recursive, text, limit, keywords)</span></span></div><div class="line"><span class="function"><span class="title">find</span><span class="params">(tag, attributes, recursive, text, keywords)</span></span></div></pre></td></tr></table></figure></p>
<ul>
<li><p>标签参数tag前面已经介绍过——可以传一个标签的名称或多个标签名称组成的Python列表做标签参数。例如，下面的代码将返回一个包含HTML文档中所有标题标签的列表:  </p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.<span class="keyword">findAll</span>(&#123;<span class="string">"h1"</span>,<span class="string">"h2"</span>,<span class="string">"h3"</span>,<span class="string">"h4"</span>,<span class="string">"h5"</span>,<span class="string">"h6"</span>&#125;)</div></pre></td></tr></table></figure>
</li>
<li><p>属性参数attributes是用一个Python字典封装一个标签的若干属性和对应的属性值。例<br>如，下面这个函数会返回HTML文档里红色与绿色两种颜色的span标签：  </p>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.findAll(<span class="string">"span"</span>, &#123;<span class="string">"class"</span>:&#123;<span class="string">"green"</span>, <span class="string">"red"</span>&#125;&#125;)</div></pre></td></tr></table></figure>
</li>
<li><p>递归参数recursive是一个布尔变量。你想抓取HTML文档标签结构里多少层的信息？如果recursive 设置为True，findAll就会根据你的要求去查找标签参数的所有子标签，以及子标签的子标签。如果recursive设置为False，findAll 就只查找文档的一级标签。findAll默认是支持递归查找的（recursive默认值是True）；一般情况下这个参数不需要设置，除非你真正了解自己需要哪些信息，而且抓取速度非常重要，那时你可以设置递归参数。  </p>
</li>
</ul>
<p>PS：之前感觉都是在瞎胡爬啊，现在再回头看，遇到的问题都是讲过的。书，还是要看三遍才算看过。    </p>
<ul>
<li>文本参数text有点不同，它是用标签的文本内容去匹配，而不是用标签的属性。假如想查找前面网页中包含“the prince”内容的标签数量，可以把之前的findAll方法换成下面的代码：<figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">nameList = bsObj.findAll(<span class="attribute">text</span>=<span class="string">"the prince"</span>)</div><div class="line"><span class="builtin-name">print</span>(len(nameList))</div></pre></td></tr></table></figure>
</li>
</ul>
<p>输出结果为“ 7”。  </p>
<ul>
<li><p>范围限制参数limit，显然只用于findAll方法。find其实等价于findAll的limit等于1时的情形。如果你只对网页中获取的前x项结果感兴趣，就可以设置它。但是要注意，这个参数设置之后，获得的前几项结果是按照网页上的顺序排序的，未必是你想要的那前几项。<br>PS:之前的爬虫，也遇到过这种情况。解决的办法是切片的方法。  </p>
</li>
<li><p>还有一个关键词参数keyword，可以让你选择那些具有指定属性的标签。例如：  </p>
<figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">allText = bsObj.findAll(<span class="attribute">id</span>=<span class="string">"text"</span>)  </div><div class="line"><span class="builtin-name">print</span>(allText[0].get_text())</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="其他BeautifulSoup对象"><a href="#其他BeautifulSoup对象" class="headerlink" title="其他BeautifulSoup对象"></a>其他BeautifulSoup对象</h4><p>BeautifulSoup库里的两种对象。<br>• BeautifulSoup对象：前面代码示例中的bsObj<br>• 标签Tag对象：BeautifulSoup对象通过find和findAll，或者直接调用子标签获取的一列对象或单个对象，就像：bsObj.div.h1<br>• NavigableString对象：用来表示标签里的文字，不是标签（有些函数可以操作和生成NavigableString 对象，而不是标签对象）。<br>• Comment对象：用来查找HTML文档的注释标签，<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- 像这样 --&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="导航树"><a href="#导航树" class="headerlink" title="导航树"></a>导航树</h4><p>findAll函数通过标签的名称和属性来查找标签。但是如果需要通过标签在文档中的位置来查找标签，该怎么办？这就是导航树（Navigating Trees）的作用。在第1章里，我们看过用单一方向进行BeautifulSoup标签树的导航：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bsObj<span class="selector-class">.tag</span><span class="selector-class">.subTag</span><span class="selector-class">.anotherSubTag</span>。</div></pre></td></tr></table></figure></p>
<h5 id="处理子标签和其他后代标签"><a href="#处理子标签和其他后代标签" class="headerlink" title="处理子标签和其他后代标签"></a>处理子标签和其他后代标签</h5><p>在 BeautifulSoup库里，孩子（child）和后代（descendant）有显著的不同：和人类的家谱一样，子标签就是一个父标签的下一级，而后代标签是指一个父标签下面所有级别的标签。例如，tr标签是tabel标签的子标签，而tr、th、td、img和span标签都是tabel 标签的后代标签（我们的示例页面中就是如此）。所有的子标签都是后代标签，但不是所有的后代标签都是子标签。<br>如果你只想找出子标签，可以用 .children 标签：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">from urllib<span class="selector-class">.request</span> import urlopen</div><div class="line">from bs4 import BeautifulSoup</div><div class="line"><span class="selector-tag">html</span> = urlopen(<span class="string">"http://www.pythonscraping.com/pages/page3.html"</span>)</div><div class="line">bsObj = BeautifulSoup(html)</div><div class="line"><span class="keyword">for</span> child <span class="keyword">in</span> bsObj.find(<span class="string">"table"</span>,&#123;<span class="string">"id"</span>:<span class="string">"giftList"</span>&#125;)<span class="selector-class">.children</span>:</div><div class="line"><span class="function"><span class="title">print</span><span class="params">(child)</span></span></div></pre></td></tr></table></figure></p>
<p>这段代码会打印giftList表格中所有产品的数据行。如果你用descendants()函数而不是children() 函数，那么就会有二十几个标签打印出来，包括img标签、span标签，以及每个td标签。掌握子标签与后代标签的差别十分重要！  </p>
<h5 id="处理兄弟标签"><a href="#处理兄弟标签" class="headerlink" title="处理兄弟标签"></a>处理兄弟标签</h5><p>BeautifulSoup 的 next_siblings()函数可以让收集表格数据成为简单的事情，尤其是处理带标题行的表格：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">from urllib<span class="selector-class">.request</span> import urlopen</div><div class="line">from bs4 import BeautifulSoup</div><div class="line"><span class="selector-tag">html</span> = urlopen(<span class="string">"http://www.pythonscraping.com/pages/page3.html"</span>)</div><div class="line">bsObj = BeautifulSoup(html)</div><div class="line"><span class="keyword">for</span> sibling <span class="keyword">in</span> bsObj.find(<span class="string">"table"</span>,&#123;<span class="string">"id"</span>:<span class="string">"giftList"</span>&#125;)<span class="selector-class">.tr</span><span class="selector-class">.next_siblings</span>:</div><div class="line">    print(sibling)</div></pre></td></tr></table></figure></p>
<p>这段代码会打印产品列表里的所有行的产品，第一行表格标题除外。为什么标题行被跳过了呢？有两个理由。首先，对象不能把自己作为兄弟标签。任何时候你获取一个标签的兄弟标签，都不会包含这个标签本身。其次，这个函数只调用后面的兄弟标签。例如，如果我们选择一组标签中位于中间位置的一个标签，然后用next_siblings()函数，那么它就只会返回在它后面的兄弟标签。因此，选择标签行然后调用next_siblings，可以选择表格中除了标题行以外的所有行。  </p>
<p><strong>让标签的选择更具体</strong>:如果我们选择bsObj.table.tr或直接就用bsObj.tr来获取表格中的第一行，上面的代码也可以获得正确的结果。但是，我们还是采用更长的形式写了一行代码，这可以避免各种意外：<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bsObj.<span class="builtin-name">find</span>(<span class="string">"table"</span>,&#123;<span class="string">"id"</span>:<span class="string">"giftList"</span>&#125;).tr</div></pre></td></tr></table></figure></p>
<p>即使页面上只有一个表格（或其他目标标签），只用标签也很容易丢失细节。另外，页面布局总是不断变化的。一个标签这次是在表格中第一行的位置，没准儿哪天就在第二行或第三行了。 如果想让你的爬虫更稳定，最好还是让标签的选择更加具体。如果有属性，就利用标签的属性。和next_siblings一样，如果你很容易找到一组兄弟标签中的最后一个标签，那么previous_siblings函数也会很有用。当然，还有next_sibling和previous_sibling函数，与next_siblings和previous_siblings的作用类似，只是它们返回的是单个标签，而不是一组标签。  </p>
<h5 id="父标签处理"><a href="#父标签处理" class="headerlink" title="父标签处理"></a>父标签处理</h5><p>偶尔在特殊情况下你也会用到BeautifulSoup 的父标签查找函数， parent 和 parents。例如：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">from urllib<span class="selector-class">.request</span> import urlopen</div><div class="line">from bs4 import BeautifulSoup  </div><div class="line"></div><div class="line"><span class="selector-tag">html</span> = urlopen(<span class="string">"http://www.pythonscraping.com/pages/page3.html"</span>)</div><div class="line">bsObj = BeautifulSoup(html)</div><div class="line"><span class="function"><span class="title">print</span><span class="params">(bsObj.find(<span class="string">"img"</span>,&#123;<span class="string">"src"</span>:<span class="string">"../img/gifts/img1.jpg"</span>&#125;)</span></span><span class="selector-class">.parent</span><span class="selector-class">.previous_sibling</span><span class="selector-class">.get_text</span>())</div></pre></td></tr></table></figure></p>
<p>这是如何实现的呢？下面的图形是我们正在处理的HTML页面的部分结构，用数字表示步骤的话：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">• <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">    — <span class="tag">&lt;<span class="name">td</span>&gt;</span></div><div class="line">    — <span class="tag">&lt;<span class="name">td</span>&gt;</span></div><div class="line">    — <span class="tag">&lt;<span class="name">td</span>&gt;</span>(3)</div><div class="line">        — "$15.00" (4)</div><div class="line">    — <span class="tag">&lt;<span class="name">td</span>&gt;</span>(2)</div><div class="line">        — <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../img/gifts/img1.jpg"</span>&gt;</span> (1)</div></pre></td></tr></table></figure></p>
<p>(1) 选择图片标签 src=”../img/gifts/img1.jpg”；<br>(2) 选择图片标签的父标签（在示例中是 td 标签）；<br>(3)选择td标签的前一个兄弟标签previous_sibling（在示例中是包含美元价格的td标签）；<br>(4) 选择标签中的文字，“ $15.00”。  </p>
<h4 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h4><blockquote>
<p>如果你有一个问题要用到正则表达式，那么这就成两个问题了。  </p>
</blockquote>
<p>之所以叫正则表达式，是因为它们可以识别正则字符串（regular string）；也就是说，它们可以这么定义：“如果你给我的字符串符合规则，我就返回它”，或者是“如果字符串不符合规则，我就忽略它”。这在要求快速浏览大文档，以查找像电话号码和邮箱地址之类的字符串时是非常方便的。<br>比如：“aaaabbbbbccccd”“aabbbbbcc”等<br>正则表达式就是表达这组规则的缩写。这组规则的正则表达式如下所示：<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">aa*bbbbb(<span class="name">cc</span>)*(<span class="name">d</span>|)</div></pre></td></tr></table></figure></p>
<p>分解之后就会很清楚了。<br>• aa<em><br>a后面跟着的a</em>（读作a星）表示“重复 <em>任意次</em> a，包括0次”。这样就可以保证字母a至少出现一次。<br>• bbbbb<br>这没有什么特别的——就是5次b。<br>• (cc)<em><br>任意偶数个字符都可以编组， 这个规则是用括号两个c，然后后面跟一个星号，表示有<br>任意次两个c（也可以是0次）。<br>• (d|)<br>增加一个竖线（ |）在表达式里表示“这个 </em>或* 那个”。本例是表示“增加一个后面跟着空格的d，或者只有一个空格”。这样我们可以保证字符串的结尾最多是一个后面跟着空格的d。<br>正则表达式在实际中的一个经典应用是识别邮箱地址。虽然不同邮箱服务器的邮箱地址的<br>具体规则不尽相同， 但是我们还是可以创建几条通用规则.  </p>
<ul>
<li>规则：邮箱地址的第一部分至少包括一种内容： 大<br>写字母、小写字母、数字 0~9、点号（.）、加号（+）或下划线（ _）  </li>
</ul>
<p>正则表达式：[A-Za-z0-9._+]+：这个正则表达式简写非常智慧。例如，它用“A-Z”表示“任意A~Z的大写字母”。把所有可能的序列和符号放在中括号（不是小括号）里表示“括号中的符号里任何一个”。要注意后面的加号，它表示“这些符号都可以出现多次，且至少出现1次”  </p>
<ul>
<li>规则：邮箱地址会包含一个@符号<br>正则表达式：@：这个符号很直接。@符号必须出现在中间位置，有且仅有 1 次    </li>
<li>规则：在符合@之后，邮箱地址还必须至少包含一个大写或小写字母<br>正则表达式：[A-Za-z]+：可能只在域名的前半部分、符号@后面用字母。而且，至少有一个字。  </li>
<li>规则：之后跟一个点号（ .）<br>正则表达式：.：在域名前必须有一个点号（ .）  </li>
<li>规则：最后邮箱地址用com、org、edu、net结尾（实际上，顶级域名有很多种可能，但是作为示例演示这四个后缀够用了）。<br>正则表达式：(com|org|edu|net)：这样列出了邮箱地址中可能出现在点号之后的字母序列<br>把上面的规则连接起来，就获得了完整的正则表达式：  <figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-attr">[A-Za-z0-9\._+]</span>+@[<span class="keyword">A</span>-<span class="keyword">Za</span>-<span class="keyword">z</span>]+\.(<span class="keyword">com</span>|<span class="keyword">org</span>|<span class="keyword">edu</span>|<span class="keyword">net</span>)</div></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/2847713-0dff7324eb234503.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png">  </p>
<h4 id="正则表达式和BeautifulSoup"><a href="#正则表达式和BeautifulSoup" class="headerlink" title="正则表达式和BeautifulSoup"></a>正则表达式和BeautifulSoup</h4><p>直接定位那些标签来查找信息。直接通图片的文件路径来查找：<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlopen</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"><span class="keyword">import</span> re</div><div class="line">html = urlopen(<span class="string">"http://www.pythonscraping.com/pages/page3.html"</span>)</div><div class="line">bsObj = BeautifulSoup(html)</div><div class="line">images = bsObj.<span class="keyword">findAll</span>(<span class="string">"img"</span>,&#123;<span class="string">"src"</span>:re.<span class="keyword">compile</span>(<span class="string">"\.\.\/img\/gifts/img.*\.jpg"</span>)&#125;)</div><div class="line"><span class="keyword">for</span> image in images:</div><div class="line"><span class="keyword">print</span>(image[<span class="string">"src"</span>])</div></pre></td></tr></table></figure></p>
<p>这段代码会打印出图片的相对路径，都是以../img/gifts/img开头，以.jpg结尾，其结果如下所示：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">../img/gifts/img1.jpg</div><div class="line">../img/gifts/img2.jpg</div><div class="line">../img/gifts/img3.jpg</div><div class="line">../img/gifts/img4.jpg</div><div class="line">../img/gifts/img6.jpg</div></pre></td></tr></table></figure></p>
<p>正则表达式可以作为BeautifulSoup语句的任意一个参数，让目标元素查找工作极具灵活性。  </p>
<h4 id="获取属性"><a href="#获取属性" class="headerlink" title="获取属性"></a>获取属性</h4><p>在网络数据采集时经常不需要查找标签的内容，而是需要查找标签属性。比如标签:a指向的URL链接包含在href属性中，或者img标签的图片文件包含在src属性中，这时获取标签属性就变得非常有用了。对于一个标签对象，可以用下面的代码获取它的全部属性：myTag.attrs要注意这行代码返回的是一个Python字典对象，可以获取和操作这些属性。比如要获取图<br>片的资源位置 src，可以用下面这行代码：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">myImgTag<span class="selector-class">.attrs</span>[<span class="string">"src"</span>]</div></pre></td></tr></table></figure></p>
<h4 id="Lambda表达式"><a href="#Lambda表达式" class="headerlink" title="Lambda表达式"></a>Lambda表达式</h4><p>这个在前博客的Python3集合学习中已经提交到了。<br>Lambda表达式本质上就是一个函数，可以作为其他函数的变量使用；也就是说，一个函数不是定义成 f(x, y)，而是定义成 f(g(x), y)，或f(g(x),h(x))的形式。<br>BeautifulSoup 允许我们把特定函数类型当作findAll函数的参数。唯一的限制条件是这些<br>函数必须把一个标签作为参数且返回结果是布尔类型。BeautifulSoup用这个函数来评估它遇到的每个标签对象，最后把评估结果为“真”的标签保留，把其他标签剔除。例如，下面的代码就是获取有两个属性的标签：  </p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">soup.findAll(lambda <span class="keyword">ta</span><span class="variable">g:</span> <span class="built_in">len</span>(<span class="keyword">tag</span>.attrs) == <span class="number">2</span>)</div></pre></td></tr></table></figure>
<p>这行代码会找出下面的标签：  </p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"body"</span> id=<span class="string">"content"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></div><div class="line">&lt;span style=<span class="string">"color:red"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"title"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></div></pre></td></tr></table></figure>
<h4 id="超越BeautifulSoup"><a href="#超越BeautifulSoup" class="headerlink" title="超越BeautifulSoup"></a>超越BeautifulSoup</h4><p>• lxml<br>这个库（ <a href="http://lxml.de/）" target="_blank" rel="external">http://lxml.de/）</a> 可以用来解析HTML和XML文档，以非常底层的实现而闻名于世，大部分源代码是用C语言写的。虽然学习它需要花一些时间（其实学习曲线越陡峭，表明你可以越快地学会它），但它在处理绝大多数HTML文档时速度都非常快。<br>• HTML parser<br>这是Python自带的解析库（ <a href="https://docs.python.org/3/library/html.parser.html）。" target="_blank" rel="external">https://docs.python.org/3/library/html.parser.html）。</a> 因为它不用安装（只要装Python就有），所以可以很方便地使用。  </p>
<h3 id="第3章-开始采集"><a href="#第3章-开始采集" class="headerlink" title="第3章 开始采集"></a>第3章 开始采集</h3><h4 id="遍历单个域名"><a href="#遍历单个域名" class="headerlink" title="遍历单个域名"></a>遍历单个域名</h4><p>西电睿思首页：<img src="http://upload-images.jianshu.io/upload_images/2847713-8915ce2dade9a482.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="rs.xidian.edu.cn-portal.php(iPad Pro) (1).png">  </p>
<p>获取西电睿思首页并提取页面链接的 Python 代码：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">from urllib<span class="selector-class">.request</span> import urlopen</div><div class="line">from bs4 import BeautifulSoup</div><div class="line">        <span class="selector-tag">html</span> = urlopen(<span class="string">"http://rs.xidian.edu.cn/portal.php"</span>)</div><div class="line">        bsObj = BeautifulSoup(html)</div><div class="line">        <span class="keyword">for</span> link <span class="keyword">in</span> bsObj.findAll(<span class="string">"a"</span>):</div><div class="line">            <span class="keyword">if</span> <span class="string">'href'</span> <span class="keyword">in</span> link<span class="selector-class">.attrs</span>:</div><div class="line">                <span class="keyword">if</span> (link<span class="selector-class">.attrs</span>[<span class="string">'href'</span>][:<span class="number">5</span>] == <span class="string">"forum"</span>):</div><div class="line">                    print(<span class="string">"http://rs.xidian.edu.cn/"</span> + link<span class="selector-class">.attrs</span>[<span class="string">'href'</span>])</div><div class="line">                elif((link<span class="selector-class">.attrs</span>[<span class="string">'href'</span>][:<span class="number">4</span>] == <span class="string">"home"</span>)):</div><div class="line">                    print(<span class="string">"http://rs.xidian.edu.cn/"</span> + link<span class="selector-class">.attrs</span>[<span class="string">'href'</span>])</div><div class="line">                elif ((link<span class="selector-class">.attrs</span>[<span class="string">'href'</span>][:<span class="number">6</span>] == <span class="string">"portal"</span>)):</div><div class="line">                    print(<span class="string">"http://rs.xidian.edu.cn/"</span> + link<span class="selector-class">.attrs</span>[<span class="string">'href'</span>])</div><div class="line">                <span class="keyword">else</span>:</div><div class="line">                    print(link<span class="selector-class">.attrs</span>[<span class="string">'href'</span>])</div></pre></td></tr></table></figure></p>
<p>forum和home开头的RUL都是主页的链接。  </p>
<p>首页爬取的URL：<br><figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div><div class="line">344</div><div class="line">345</div><div class="line">346</div><div class="line">347</div><div class="line">348</div><div class="line">349</div><div class="line">350</div><div class="line">351</div><div class="line">352</div><div class="line">353</div><div class="line">354</div><div class="line">355</div><div class="line">356</div><div class="line">357</div><div class="line">358</div><div class="line">359</div><div class="line">360</div><div class="line">361</div><div class="line">362</div><div class="line">363</div><div class="line">364</div><div class="line">365</div><div class="line">366</div><div class="line">367</div><div class="line">368</div><div class="line">369</div><div class="line">370</div><div class="line">371</div><div class="line">372</div><div class="line">373</div><div class="line">374</div><div class="line">375</div><div class="line">376</div><div class="line">377</div><div class="line">378</div><div class="line">379</div><div class="line">380</div><div class="line">381</div><div class="line">382</div><div class="line">383</div><div class="line">384</div><div class="line">385</div><div class="line">386</div><div class="line">387</div><div class="line">388</div><div class="line">389</div><div class="line">390</div><div class="line">391</div><div class="line">392</div><div class="line">393</div><div class="line">394</div><div class="line">395</div><div class="line">396</div><div class="line">397</div><div class="line">398</div><div class="line">399</div><div class="line">400</div><div class="line">401</div><div class="line">402</div><div class="line">403</div><div class="line">404</div><div class="line">405</div><div class="line">406</div><div class="line">407</div><div class="line">408</div><div class="line">409</div><div class="line">410</div><div class="line">411</div><div class="line">412</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//weibo.com/xdrsbt</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/static/image/common/banner/weichat.jpg</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//bbs.rs.xidian.me</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/uTorrent.zip</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/utorrentForMac.zip</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/AndroidRS.apk</span></div><div class="line"><span class="symbol">https:</span><span class="comment">//jq.qq.com/?_wv=1027&amp;k=43TLwVI</span></div><div class="line"><span class="symbol">javascript:</span>;</div><div class="line"><span class="symbol">javascript:</span>;</div><div class="line">member.php?mod=register</div><div class="line">./</div><div class="line"><span class="symbol">javascript:</span>;</div><div class="line">member.php?mod=register</div><div class="line"><span class="symbol">javascript:</span>;</div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/portal.php</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php</span></div><div class="line">bt.php?mod=browse<span class="variable">&amp;t</span>=all</div><div class="line">bt.php?mod=upload</div><div class="line"><span class="meta">#</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=forumdisplay&amp;fid=566</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//doufm.info/#</span></div><div class="line">rsjc.php</div><div class="line">misc.php?mod=faq</div><div class="line">misc.php?mod=ranklist</div><div class="line">plugin.php?id=dsu_paulsign:sign</div><div class="line"><span class="symbol">http:</span><span class="comment">//bbs.xidian.edu.cn</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//123.xidian.edu.cn</span></div><div class="line">plugin.php?id=dsu_paulsign:sign</div><div class="line">bt.php?mod=browse<span class="variable">&amp;t</span>=digest</div><div class="line">bt.php?mod=browse<span class="variable">&amp;t</span>=hot</div><div class="line">bt.php?mod=browse<span class="variable">&amp;t</span>=highlight</div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=662797</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//hdtv.neu6.edu.cn/</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//tv.byr.cn/</span></div><div class="line"><span class="symbol">javascript:</span>;</div><div class="line">search.php?mod=forum<span class="variable">&amp;srchtxt</span>=%E5%<span class="number">81</span>%<span class="number">9</span>A%E7%A7%<span class="number">8</span>D%<span class="number">20</span>%E6%<span class="number">95</span>%<span class="number">99</span>%E7%A8%<span class="number">8</span>B<span class="variable">&amp;formhash</span>=<span class="number">0</span>ede9aec<span class="variable">&amp;searchsubmit</span>=true<span class="variable">&amp;source</span>=hotsearch</div><div class="line">search.php?mod=forum<span class="variable">&amp;srchtxt</span>=%E7%<span class="number">94</span>%B5%E5%BD%B1%<span class="number">20</span>%E6%AC%A7%E7%BE%<span class="number">8</span>E<span class="variable">&amp;formhash</span>=<span class="number">0</span>ede9aec<span class="variable">&amp;searchsubmit</span>=true<span class="variable">&amp;source</span>=hotsearch</div><div class="line">search.php?mod=forum<span class="variable">&amp;srchtxt</span>=%E5%<span class="number">89</span>%A7%E9%<span class="number">9</span>B%<span class="number">86</span>%<span class="number">20</span>%E9%<span class="number">9F</span>%A9%E5%<span class="number">89</span>%A7<span class="variable">&amp;formhash</span>=<span class="number">0</span>ede9aec<span class="variable">&amp;searchsubmit</span>=true<span class="variable">&amp;source</span>=hotsearch</div><div class="line">search.php?mod=forum<span class="variable">&amp;srchtxt</span>=%E8%A7%<span class="number">86</span>%E9%A2%<span class="number">91</span><span class="variable">&amp;formhash</span>=<span class="number">0</span>ede9aec<span class="variable">&amp;searchsubmit</span>=true<span class="variable">&amp;source</span>=hotsearch</div><div class="line"><span class="symbol">javascript:</span>;</div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=285587</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=880644</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=285411</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=862260</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=298698</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=862155</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=287561</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=861570</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=284186</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=860952</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=304543</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=860425</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=288755</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=855711</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=301434</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=855579</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=62484</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=847337</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=71870</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=837603</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=898059</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=896025</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=889965</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=887913</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=885831</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=885753</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=885651</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=870379</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=885048</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=880420</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=869432</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=874905</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=874304</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=872229</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=869049</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=868111</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=867138</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=867859</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=866769</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=820179</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=forumdisplay&amp;fid=157</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901386</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=287668</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901386</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901350</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=42884</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901350</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=900991</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=42884</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=900991</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=900689</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=42884</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=900689</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=forumdisplay&amp;fid=21</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=276989</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=895317</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=300656</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=890614</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=190294</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=890170</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=64489</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=889730</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=260560</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=889749</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=262727</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=889568</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=284115</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=732034</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=214850</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=457107</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=214850</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=721807</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=193867</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=649913</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=241562</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=720116</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901529</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901528</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901527</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901526</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901525</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901524</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901523</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901522</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901521</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901520</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=898030</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=309281</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=898030</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=899628</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=284864</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=899628</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=897855</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=309281</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=897855</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=897772</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=287887</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=897772</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=900547</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=297044</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=900547</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=896544</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=276989</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=896544</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=898344</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=307663</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=898344</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=898217</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=297712</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=898217</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=896939</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=276989</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=896939</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=897157</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=285304</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=897157</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=900044</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=298621</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=900044</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=896872</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=300590</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=896872</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=897235</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=284908</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=897235</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=897655</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=298003</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=897655</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=900110</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=298621</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=900110</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=898835</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=297712</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=898835</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=900341</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=297712</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=900341</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=896838</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=276989</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=896838</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=896817</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=297712</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=896817</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=899482</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=295399</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=899482</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=900162</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=276989</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=900162</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=900161</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=276989</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=900161</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901281</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=260969</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901281</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=899262</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=306330</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=899262</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=899630</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=284864</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=899630</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=791978</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=276190</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=791978</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=792036</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=279056</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=792036</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=791500</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=214409</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=791500</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=790482</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=295512</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=790482</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=792195</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=288815</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=792195</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=791826</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=272010</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=791826</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=790813</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=19696</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=790813</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=790630</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=260560</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=790630</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=790729</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=278537</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=790729</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=790172</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=293161</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=790172</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=790194</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=280451</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=790194</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=791029</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=241562</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=791029</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=790691</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=268786</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=790691</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=790862</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=268789</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=790862</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=790669</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=284320</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=790669</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=790164</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=167042</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=790164</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=791694</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=276989</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=791694</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=791037</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=241562</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=791037</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=791386</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=241562</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=791386</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=790912</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=241562</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=790912</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=96501</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=195196</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=19530</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=143142</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=397</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=452</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=15621</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=1390</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=5029</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=18833</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=116495</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=259166</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=269195</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=17917</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=241562</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=39423</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=272685</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=98773</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=275662</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=193867</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=275662</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=291835</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=116495</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=127482</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=57588</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=238092</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=269642</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=244973</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=98773</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=269195</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//shang.qq.com/wpa/qunwpa?idkey=89cc0b526cd16ab6cee4506996b3963ceb22f7c9007c8810572122c7c5d838a4</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//jq.qq.com/?_wv=1027&amp;k=2IofhVV</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=285032</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901435</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=268862</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901399</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=0</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901548</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=300782</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901458</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=285032</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901406</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=252309</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901467</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=295850</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901395</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=299876</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901464</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=217937</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901530</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=295399</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901544</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=forumdisplay&amp;fid=142</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901579</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901507</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901450</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901438</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901314</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901270</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901250</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901217</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901165</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901117</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=forumdisplay&amp;fid=554</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901564</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901562</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901547</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901543</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901540</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901530</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901503</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901496</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901485</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901479</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/portal.php?mod=list&amp;catid=1</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/portal.php?mod=view&amp;aid=52</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/portal.php?mod=view&amp;aid=51</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/portal.php?mod=view&amp;aid=50</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/portal.php?mod=view&amp;aid=49</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=forumdisplay&amp;fid=115</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=900642&amp;from=portal</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=897118&amp;from=portal</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=895378&amp;from=portal</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=893467&amp;from=portal</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=311203</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=311203&amp;do=blog&amp;id=1900</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=307289</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=307289&amp;do=blog&amp;id=1898</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=310426</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=310426&amp;do=blog&amp;id=1897</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=307289</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=307289&amp;do=blog&amp;id=1896</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=307331</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=307331&amp;do=blog&amp;id=1894</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=307289</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=307289&amp;do=blog&amp;id=1893</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=308946</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=308946&amp;do=blog&amp;id=1891</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=305834</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=305834&amp;do=blog&amp;id=1890</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=287055</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=287055&amp;do=blog&amp;id=1889</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=291359</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=291359&amp;do=blog&amp;id=1888</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=309479</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=309479&amp;do=blog&amp;id=1885</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=310727</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=310727&amp;do=blog&amp;id=1881</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=307541</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=307541&amp;do=blog&amp;id=1878</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=307289</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=307289&amp;do=blog&amp;id=1893</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=307541</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=307541&amp;do=blog&amp;id=1887</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=291359</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=291359&amp;do=blog&amp;id=1888</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=298067</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=298067&amp;do=blog&amp;id=1882</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=287055</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=287055&amp;do=blog&amp;id=1889</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=308946</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=308946&amp;do=blog&amp;id=1891</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=309134</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=309134&amp;do=blog&amp;id=1877</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=298086</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=298086&amp;do=blog&amp;id=1665</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=302366</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=302366&amp;do=blog&amp;id=1699</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=302489</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=302489&amp;do=blog&amp;id=1673</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=298086</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=298086&amp;do=blog&amp;id=1670</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=304068</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=304068&amp;do=blog&amp;id=1685</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=285379</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=285379&amp;do=blog&amp;id=1664</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=311126</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=311126&amp;do=blog&amp;id=1871</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=298086</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=298086&amp;do=blog&amp;id=1738</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=252175</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=252175&amp;do=blog&amp;id=1719</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=309479</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=309479&amp;do=blog&amp;id=1857</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=misc&amp;action=showdarkroom</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//weibo.com/xdrsbt</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/data/attachment/forum/201411/20/131007gaghl2s997wxzhy8.jpg</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//www.discuz.net</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//www.comsenz.com</span></div></pre></td></tr></table></figure></p>
<h3 id="采集整个网站"><a href="#采集整个网站" class="headerlink" title="采集整个网站"></a>采集整个网站</h3><p>爬取一个页面比较简单，但是如果需要系统地把整个网站按目录分类，或者要搜索网站上的每一个页面，怎么办？<br>那就得采集整个网站，那是一种非常耗费内存资源的过程，尤其是处理大型网站时，最合适的工具就是用一个数据库来储存采集的资源。但是，我们可以掌握这类工具的行为，并不需要通过大规模地运行它们。<br><img src="http://upload-images.jianshu.io/upload_images/2847713-1d017e0850d713a5.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="TIM截图20171127162657.jpg"></p>
<p>遍历整个网站的网络数据采集有许多好处。  </p>
<ul>
<li>生成网站地图  </li>
<li><p>收集数据<br>“ 5 个页面深度，每页 10 个链接”是网站的主流配置。为了避免一个页面被采集两次，链接去重是非常重要的。在代码运行时，把已发现的所有链接都放到一起，并保存在方便查询的列表里（下文示例指Python的集合set类型）。只有“新”链接才会被采集，之后再从页面中搜索其他链接：  </p>
<figure class="highlight haxe"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">from urllib.request <span class="keyword">import</span> urlopen</div><div class="line">from bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"><span class="keyword">import</span> re</div><div class="line">pages = <span class="keyword">set</span>()</div><div class="line">def getLinks(pageUrl):<span class="type"></span></div><div class="line"><span class="type">    global pages</span></div><div class="line"><span class="type">    html </span>= urlopen(<span class="string">"http://en.wikipedia.org"</span>+pageUrl)</div><div class="line">    bsObj = BeautifulSoup(html)</div><div class="line">    <span class="keyword">for</span> link <span class="keyword">in</span> bsObj.findAll(<span class="string">"a"</span>, href=re.compile(<span class="string">"^(/wiki/)"</span>)):<span class="type"></span></div><div class="line"><span class="type">        if </span>'href<span class="string">' in link.attrs:</span></div><div class="line"><span class="string">            if link.attrs['</span>href<span class="string">'] not in pages:</span></div><div class="line"><span class="string">            # 我们遇到了新页面</span></div><div class="line"><span class="string">                newPage = link.attrs['</span>href<span class="string">']</span></div><div class="line"><span class="string">                print(newPage)</span></div><div class="line"><span class="string">                pages.add(newPage)</span></div><div class="line"><span class="string">                getLinks(newPage)</span></div><div class="line"><span class="string">getLinks("")</span></div></pre></td></tr></table></figure>
</li>
<li></li>
</ul>
<h3 id="采集睿思发现了一个新的公网地址-美滋滋"><a href="#采集睿思发现了一个新的公网地址-美滋滋" class="headerlink" title="采集睿思发现了一个新的公网地址 美滋滋"></a>采集睿思发现了一个新的公网地址 美滋滋</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -*-coding:utf-8-*-</span></div><div class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlopen</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rspider</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Store</span><span class="params">(self)</span>:</span></div><div class="line"></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</div><div class="line">            pages = <span class="string">'http://rsbbs.xidian.edu.cn/forum.php?mod=forumdisplay&amp;fid=72&amp;page='</span>+str(i)+<span class="string">'&amp;mobile=2'</span></div><div class="line">            html = urlopen(pages)</div><div class="line">            bsObj = BeautifulSoup(html.read())</div><div class="line">            tiezi = bsObj.findAll(<span class="string">"ul"</span>)</div><div class="line">            <span class="keyword">for</span> tiaos <span class="keyword">in</span> tiezi:</div><div class="line">                <span class="keyword">for</span> tiao <span class="keyword">in</span> tiaos.findAll(<span class="string">'a'</span>):</div><div class="line">                    <span class="keyword">for</span> person <span class="keyword">in</span> tiao.findAll(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"by"</span>&#125;):</div><div class="line">                        print(<span class="string">"发帖人：   "</span> + person.get_text().strip())</div><div class="line"></div><div class="line">                    [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> tiao.findAll(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"by"</span>&#125;)]</div><div class="line">                    print(<span class="string">"帖子:     "</span>+tiao.get_text().strip())</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    RS = Rspider()</div><div class="line">    RS.Store()</div></pre></td></tr></table></figure>
<h3 id="存入数据库"><a href="#存入数据库" class="headerlink" title="存入数据库"></a>存入数据库</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -*-coding:utf-8-*-</span></div><div class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlopen</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"><span class="keyword">import</span> csv</div><div class="line"><span class="keyword">import</span> pymysql</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rspider</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Store</span><span class="params">(self)</span>:</span></div><div class="line"></div><div class="line">        connection = pymysql.connect(host=<span class="string">'127.0.0.1'</span>, user=<span class="string">'root'</span>, password=<span class="string">'root'</span>, db=<span class="string">'rs'</span>, charset=<span class="string">'utf8'</span>,</div><div class="line">                                     cursorclass=pymysql.cursors.DictCursor)</div><div class="line">        cur = connection.cursor()</div><div class="line">        cur.execute(<span class="string">"USE rs"</span>)</div><div class="line"></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</div><div class="line">            pages = <span class="string">'http://rsbbs.xidian.edu.cn/forum.php?mod=forumdisplay&amp;fid=72&amp;page='</span>+str(i)+<span class="string">'&amp;mobile=2'</span></div><div class="line">            html = urlopen(pages)</div><div class="line">            bsObj = BeautifulSoup(html.read())</div><div class="line">            tiezi = bsObj.findAll(<span class="string">"ul"</span>)</div><div class="line">            <span class="keyword">for</span> tiaos <span class="keyword">in</span> tiezi:</div><div class="line">                <span class="keyword">for</span> tiao <span class="keyword">in</span> tiaos.findAll(<span class="string">'a'</span>):</div><div class="line">                    <span class="keyword">for</span> person <span class="keyword">in</span> tiao.findAll(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"by"</span>&#125;):</div><div class="line">                        T = person.get_text().strip()</div><div class="line">                        print(<span class="string">"发帖人：   "</span> + person.get_text().strip())</div><div class="line">                        [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> tiao.findAll(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"by"</span>&#125;)]</div><div class="line">                    P = tiao.get_text().strip()</div><div class="line">                    print(<span class="string">"帖子:     "</span>+tiao.get_text().strip())</div><div class="line"></div><div class="line"></div><div class="line">                    cur.execute(<span class="string">"INSERT INTO rstiezi (person,tiezi) VALUES (\"%s\",\"%s\")"</span>, (T, P))</div><div class="line">                    cur.connection.commit()</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    RS = Rspider()</div><div class="line">    RS.Store()</div></pre></td></tr></table></figure>
<h3 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -*-coding:utf-8-*-</span></div><div class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlopen</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"><span class="keyword">import</span> csv</div><div class="line"><span class="keyword">import</span> pymysql</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rspider</span>:</span></div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Store</span><span class="params">(self)</span>:</span></div><div class="line"></div><div class="line">        connection = pymysql.connect(host=<span class="string">'127.0.0.1'</span>, user=<span class="string">'root'</span>, password=<span class="string">'root'</span>, db=<span class="string">'rs'</span>, charset=<span class="string">'utf8'</span>,</div><div class="line">                                     cursorclass=pymysql.cursors.DictCursor)</div><div class="line">        cur = connection.cursor()</div><div class="line">        cur.execute(<span class="string">"USE rs"</span>)</div><div class="line"></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>):</div><div class="line">            pages = <span class="string">'http://rsbbs.xidian.edu.cn/forum.php?mod=forumdisplay&amp;fid=72&amp;page='</span>+str(i)+<span class="string">'&amp;mobile=2'</span></div><div class="line">            html = urlopen(pages)</div><div class="line">            bsObj = BeautifulSoup(html.read())</div><div class="line">            tiezi = bsObj.findAll(<span class="string">"ul"</span>)</div><div class="line">            <span class="keyword">for</span> tiaos <span class="keyword">in</span> tiezi:</div><div class="line">                <span class="keyword">for</span> tiao <span class="keyword">in</span> tiaos.findAll(<span class="string">'a'</span>):</div><div class="line">                    <span class="keyword">for</span> person <span class="keyword">in</span> tiao.findAll(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"by"</span>&#125;):</div><div class="line">                        T = person.get_text().strip()</div><div class="line">                        print(<span class="string">"发帖人："</span> + person.get_text().strip())</div><div class="line">                        [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> tiao.findAll(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"by"</span>&#125;)]</div><div class="line">                    P = tiao.get_text().strip()</div><div class="line">                    print(<span class="string">"标题: "</span>+tiao.get_text().strip())</div><div class="line"></div><div class="line">                    <span class="comment">#get every tiao Likn</span></div><div class="line">                    <span class="keyword">if</span> <span class="string">'href'</span> <span class="keyword">in</span> tiao.attrs:</div><div class="line">                        tiao_links= <span class="string">"http://rsbbs.xidian.edu.cn/"</span> + tiao.attrs[<span class="string">'href'</span>]</div><div class="line">                        tiao_html = urlopen(tiao_links)</div><div class="line">                        tiao_bsObj = BeautifulSoup(tiao_html.read())</div><div class="line">                        <span class="comment"># [q.extract() for q in tiao_bsObj.findAll('blockquote')]</span></div><div class="line">                        content = tiao_bsObj.findAll(<span class="string">"div"</span>, &#123;<span class="string">"class"</span>: <span class="string">"message"</span>&#125;)[<span class="number">0</span>]</div><div class="line">                        R = content.get_text().strip()</div><div class="line">                        print(<span class="string">"帖子内容: "</span>+R)</div><div class="line">                        print(<span class="string">'\n'</span>)</div><div class="line"></div><div class="line">                    <span class="comment">#将发帖人、帖子标题、帖子内容插入数据库</span></div><div class="line">                    cur.execute(<span class="string">"INSERT INTO rstiezi (person,tiezi,content) VALUES (\"%s\",\"%s\",\"%s\")"</span>, (T, P, R))</div><div class="line">                    cur.connection.commit()</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    RS = Rspider()</div><div class="line">    RS.Store()</div></pre></td></tr></table></figure>
<h3 id="遇到异常、重复处理"><a href="#遇到异常、重复处理" class="headerlink" title="遇到异常、重复处理"></a>遇到异常、重复处理</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -*-coding:utf-8-*-</span></div><div class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlopen</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"><span class="keyword">import</span> csv</div><div class="line"><span class="keyword">import</span> pymysql</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rspider</span>:</span></div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Store</span><span class="params">(self)</span>:</span></div><div class="line"></div><div class="line">        connection = pymysql.connect(host=<span class="string">'127.0.0.1'</span>, user=<span class="string">'root'</span>, password=<span class="string">'root'</span>, db=<span class="string">'rs'</span>, charset=<span class="string">'utf8'</span>,</div><div class="line">                                     cursorclass=pymysql.cursors.DictCursor)</div><div class="line">        cur = connection.cursor()</div><div class="line">        cur.execute(<span class="string">"USE rs"</span>)</div><div class="line"></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">3</span>):</div><div class="line">            pages = <span class="string">'http://rsbbs.xidian.edu.cn/forum.php?mod=forumdisplay&amp;fid=72&amp;page='</span>+str(i)+<span class="string">'&amp;mobile=2'</span></div><div class="line">            html = urlopen(pages)</div><div class="line">            bsObj = BeautifulSoup(html.read())</div><div class="line">            tiezi = bsObj.findAll(<span class="string">"ul"</span>)</div><div class="line">            <span class="keyword">for</span> tiaos <span class="keyword">in</span> tiezi:</div><div class="line">                <span class="keyword">for</span> tiao <span class="keyword">in</span> tiaos.findAll(<span class="string">'a'</span>):</div><div class="line">                    <span class="keyword">for</span> person <span class="keyword">in</span> tiao.findAll(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"by"</span>&#125;):</div><div class="line">                        T = person.get_text().strip()</div><div class="line">                        print(<span class="string">"发帖人："</span> + person.get_text().strip())</div><div class="line">                        [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> tiao.findAll(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"by"</span>&#125;)]</div><div class="line">                    P = tiao.get_text().strip()</div><div class="line">                    print(<span class="string">"标题: "</span>+tiao.get_text().strip())</div><div class="line"></div><div class="line">                    <span class="comment">#get every tiao Likn</span></div><div class="line">                    <span class="keyword">if</span> <span class="string">'href'</span> <span class="keyword">in</span> tiao.attrs:</div><div class="line">                        tiao_links= <span class="string">"http://rsbbs.xidian.edu.cn/"</span> + tiao.attrs[<span class="string">'href'</span>]</div><div class="line">                        tiao_html = urlopen(tiao_links)</div><div class="line">                        tiao_bsObj = BeautifulSoup(tiao_html.read())</div><div class="line">                        <span class="comment"># [q.extract() for q in tiao_bsObj.findAll('blockquote')]</span></div><div class="line">                        <span class="keyword">try</span>:</div><div class="line">                            content = tiao_bsObj.findAll(<span class="string">"div"</span>, &#123;<span class="string">"class"</span>: <span class="string">"message"</span>&#125;)[<span class="number">0</span>]</div><div class="line">                            R = content.get_text().strip()</div><div class="line">                            print(<span class="string">"帖子内容: "</span> + R)</div><div class="line">                            print(<span class="string">'\n'</span>)</div><div class="line">                        <span class="keyword">finally</span>:</div><div class="line">                            <span class="keyword">pass</span></div><div class="line"></div><div class="line"></div><div class="line">                    <span class="comment">#将发帖人、帖子标题、帖子内容插入数据库</span></div><div class="line">                    cur.execute(<span class="string">"INSERT INTO rstiezi (person,tiezi,content) VALUES (\"%s\",\"%s\",\"%s\")"</span>, (T, P, R))</div><div class="line">                    cur.connection.commit()</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    RS = Rspider()</div><div class="line">    RS.Store()</div></pre></td></tr></table></figure>
<h3 id="1218备份"><a href="#1218备份" class="headerlink" title="1218备份"></a>1218备份</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -*-coding:utf-8-*-</span></div><div class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlopen</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"><span class="keyword">import</span> csv</div><div class="line"><span class="keyword">import</span> pymysql</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rspider</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Store</span><span class="params">(self)</span>:</span></div><div class="line"></div><div class="line">        <span class="comment">#链接数据库</span></div><div class="line">        connection = pymysql.connect(host=<span class="string">'127.0.0.1'</span>, user=<span class="string">'root'</span>, password=<span class="string">'root'</span>, db=<span class="string">'rs'</span>, charset=<span class="string">'utf8'</span>,</div><div class="line">                                     cursorclass=pymysql.cursors.DictCursor)</div><div class="line">        cur = connection.cursor()</div><div class="line">        cur.execute(<span class="string">"USE rs"</span>)</div><div class="line"></div><div class="line">        pageURL = set()</div><div class="line"></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>):</div><div class="line">            pages = <span class="string">'http://rsbbs.xidian.edu.cn/forum.php?mod=forumdisplay&amp;fid=72&amp;page='</span>+str(i)+<span class="string">'&amp;mobile=2'</span></div><div class="line">            print(pages)</div><div class="line"></div><div class="line">            <span class="keyword">if</span> pages <span class="keyword">not</span> <span class="keyword">in</span> pageURL:</div><div class="line">                html = urlopen(pages)</div><div class="line">                bsObj = BeautifulSoup(html.read())</div><div class="line">                tiezi = bsObj.findAll(<span class="string">"ul"</span>)</div><div class="line"></div><div class="line">                <span class="keyword">for</span> tiaos <span class="keyword">in</span> tiezi:</div><div class="line">                    <span class="keyword">for</span> tiao <span class="keyword">in</span> tiaos.findAll(<span class="string">'a'</span>):</div><div class="line">                        <span class="keyword">for</span> person <span class="keyword">in</span> tiao.findAll(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"by"</span>&#125;):</div><div class="line">                            T = person.get_text().strip()</div><div class="line">                            print(<span class="string">"发帖人："</span> + person.get_text().strip())</div><div class="line">                            [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> tiao.findAll(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"by"</span>&#125;)]</div><div class="line"></div><div class="line">                        P = tiao.get_text().strip()</div><div class="line">                        print(<span class="string">"标题: "</span>+tiao.get_text().strip())</div><div class="line"></div><div class="line">                        <span class="comment">#get every tiao Likn</span></div><div class="line">                        <span class="keyword">if</span> <span class="string">'href'</span> <span class="keyword">in</span> tiao.attrs:</div><div class="line">                            tiao_links= <span class="string">"http://rsbbs.xidian.edu.cn/"</span> + tiao.attrs[<span class="string">'href'</span>]</div><div class="line">                            tiao_html = urlopen(tiao_links)</div><div class="line">                            tiao_bsObj = BeautifulSoup(tiao_html.read())</div><div class="line">                            <span class="comment"># [q.extract() for q in tiao_bsObj.findAll('blockquote')]</span></div><div class="line">                            <span class="keyword">try</span>:</div><div class="line">                                content = tiao_bsObj.findAll(<span class="string">"div"</span>, &#123;<span class="string">"class"</span>: <span class="string">"message"</span>&#125;)[<span class="number">0</span>]</div><div class="line">                                R = content.get_text().strip()</div><div class="line">                                print(<span class="string">"帖子内容: "</span> + R)</div><div class="line">                                print(<span class="string">'\n'</span>)</div><div class="line"></div><div class="line">                            <span class="keyword">finally</span>:</div><div class="line">                                <span class="keyword">pass</span></div><div class="line">                            pageURL.add(pages)</div><div class="line"></div><div class="line"></div><div class="line">                        <span class="comment">#将发帖人、帖子标题、帖子内容插入数据库</span></div><div class="line">                        cur.execute(<span class="string">"INSERT INTO rstiezi (person,tiezi,content) VALUES (\"%s\",\"%s\",\"%s\")"</span>, (T, P, R))</div><div class="line">                        cur.connection.commit()</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    RS = Rspider()</div><div class="line">    RS.Store()</div></pre></td></tr></table></figure>
<h3 id="灌水区and缘聚睿思终极版"><a href="#灌水区and缘聚睿思终极版" class="headerlink" title="灌水区and缘聚睿思终极版"></a>灌水区and缘聚睿思终极版</h3><p>灌水区<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -*-coding:utf-8-*-</span></div><div class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlopen</div><div class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"><span class="keyword">import</span> csv</div><div class="line"><span class="keyword">import</span> pymysql</div><div class="line"></div><div class="line"><span class="keyword">import</span> time<span class="comment">#导入包</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">import</span> urllib.request</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rspider</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Store</span><span class="params">(self)</span>:</span></div><div class="line"></div><div class="line">        <span class="comment">#链接数据库</span></div><div class="line">        connection = pymysql.connect(host=<span class="string">'127.0.0.1'</span>, user=<span class="string">'root'</span>, password=<span class="string">'root'</span>, db=<span class="string">'rs'</span>, charset=<span class="string">'utf8'</span>,</div><div class="line">                                     cursorclass=pymysql.cursors.DictCursor)</div><div class="line">        cur = connection.cursor()</div><div class="line">        cur.execute(<span class="string">"USE rs"</span>)</div><div class="line"></div><div class="line">        pageURL = set()</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">1000</span>):</div><div class="line">            pages = <span class="string">'http://rsbbs.xidian.edu.cn/forum.php?mod=forumdisplay&amp;fid=72&amp;page='</span>+str(i)+<span class="string">'&amp;mobile=2'</span></div><div class="line">            print(<span class="string">"【这是第"</span>+str(i)+<span class="string">"页】"</span>+pages)</div><div class="line"></div><div class="line">            <span class="keyword">if</span> pages <span class="keyword">not</span> <span class="keyword">in</span> pageURL:</div><div class="line"></div><div class="line"></div><div class="line">                <span class="comment">#header</span></div><div class="line"></div><div class="line">                <span class="comment"># url = r'http://rsbbs.xidian.edu.cn'</span></div><div class="line"></div><div class="line">                headers = &#123;</div><div class="line">                <span class="string">'User-Agent'</span>: <span class="string">r'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) '</span></div><div class="line">                <span class="string">r'Chrome/45.0.2454.85 Safari/537.36 115Browser/6.0.3'</span>,</div><div class="line">                <span class="string">'Referer'</span>: <span class="string">r'http://rsbbs.xidian.edu.cn'</span>,</div><div class="line">                <span class="string">'Connection'</span>: <span class="string">'keep-alive'</span>&#125;</div><div class="line"></div><div class="line">                req = request.Request(pages, headers=headers)</div><div class="line"></div><div class="line">                html = request.urlopen(req)</div><div class="line"></div><div class="line"></div><div class="line">                <span class="comment"># html = urlopen(pages)</span></div><div class="line">                bsObj = BeautifulSoup(html.read())</div><div class="line">                tiezi = bsObj.findAll(<span class="string">"ul"</span>)</div><div class="line"></div><div class="line">                <span class="keyword">for</span> tiaos <span class="keyword">in</span> tiezi:</div><div class="line">                    <span class="keyword">for</span> tiao <span class="keyword">in</span> tiaos.findAll(<span class="string">'a'</span>):</div><div class="line">                        <span class="keyword">for</span> person <span class="keyword">in</span> tiao.findAll(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"by"</span>&#125;):</div><div class="line">                            T = person.get_text().strip()</div><div class="line">                            print(<span class="string">"发帖人："</span> + person.get_text().strip())</div><div class="line">                            [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> tiao.findAll(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"by"</span>&#125;)]</div><div class="line"></div><div class="line">                        P = tiao.get_text().strip()</div><div class="line">                        print(<span class="string">"标题: "</span>+tiao.get_text().strip())</div><div class="line"></div><div class="line">                        <span class="comment">#get every tiao Likn</span></div><div class="line">                        <span class="keyword">if</span> <span class="string">'href'</span> <span class="keyword">in</span> tiao.attrs:</div><div class="line">                            <span class="keyword">try</span>:</div><div class="line">                                tiao_links = <span class="string">"http://rsbbs.xidian.edu.cn/"</span> + tiao.attrs[<span class="string">'href'</span>]</div><div class="line">                                tiao_html = urlopen(tiao_links)</div><div class="line">                                tiao_bsObj = BeautifulSoup(tiao_html.read())</div><div class="line">                                <span class="comment"># [q.extract() for q in tiao_bsObj.findAll('blockquote')]</span></div><div class="line">                                content = tiao_bsObj.findAll(<span class="string">"div"</span>, &#123;<span class="string">"class"</span>: <span class="string">"message"</span>&#125;)[<span class="number">0</span>]</div><div class="line">                                R = content.get_text().strip()</div><div class="line">                                print(<span class="string">"帖子内容: "</span> + R)</div><div class="line">                                print(<span class="string">'\n'</span>)</div><div class="line">                            <span class="keyword">except</span> (ValueError, IndexError) <span class="keyword">as</span> e:</div><div class="line">                                <span class="keyword">pass</span></div><div class="line"></div><div class="line">                            pageURL.add(pages)</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">                        <span class="comment">#将发帖人、帖子标题、帖子内容插入数据库</span></div><div class="line">                        cur.execute(<span class="string">"INSERT INTO rstiezi (person,tiezi,content) VALUES (\"%s\",\"%s\",\"%s\")"</span>, (T, P, R))</div><div class="line">                        cur.connection.commit()</div><div class="line">            time.sleep(<span class="number">3</span>)  <span class="comment"># 设置时间间隔为3秒</span></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    RS = Rspider()</div><div class="line">    RS.Store()</div><div class="line">板块：西电睿思灌水专区</div><div class="line">时间段： <span class="number">2017</span><span class="number">-12</span><span class="number">-18</span>~<span class="number">2016</span><span class="number">-10</span><span class="number">-7</span> </div><div class="line">有效帖子数：<span class="number">24940</span></div></pre></td></tr></table></figure></p>
<p>缘聚睿思<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -*-coding:utf-8-*-</span></div><div class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlopen</div><div class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"><span class="keyword">import</span> csv</div><div class="line"><span class="keyword">import</span> pymysql</div><div class="line"><span class="keyword">import</span> time<span class="comment">#导入包</span></div><div class="line"><span class="keyword">import</span> urllib.request</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rspider</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Store</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="comment">#链接数据库</span></div><div class="line">        connection = pymysql.connect(host=<span class="string">'127.0.0.1'</span>, user=<span class="string">'root'</span>, password=<span class="string">'root'</span>, db=<span class="string">'rs'</span>, charset=<span class="string">'utf8'</span>,</div><div class="line">                                     cursorclass=pymysql.cursors.DictCursor)</div><div class="line">        cur = connection.cursor()</div><div class="line">        cur.execute(<span class="string">"USE rs"</span>)</div><div class="line">        pageURL = set()</div><div class="line"></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">122</span>):</div><div class="line">            pages = <span class="string">'http://rsbbs.xidian.edu.cn/forum.php?mod=forumdisplay&amp;fid=217&amp;page='</span>+str(i)+<span class="string">'&amp;mobile=2'</span></div><div class="line">            print(<span class="string">"【这是第"</span>+str(i)+<span class="string">"页】"</span>+pages)</div><div class="line">            <span class="keyword">if</span> pages <span class="keyword">not</span> <span class="keyword">in</span> pageURL:</div><div class="line">                headers = &#123;</div><div class="line">                <span class="string">'User-Agent'</span>: <span class="string">r'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) '</span></div><div class="line">                <span class="string">r'Chrome/45.0.2454.85 Safari/537.36 115Browser/6.0.3'</span>,</div><div class="line">                <span class="string">'Referer'</span>: <span class="string">r'http://rsbbs.xidian.edu.cn'</span>,</div><div class="line">                <span class="string">'Connection'</span>: <span class="string">'keep-alive'</span>&#125;</div><div class="line">                req = request.Request(pages, headers=headers)</div><div class="line">                html = request.urlopen(req)</div><div class="line">                bsObj = BeautifulSoup(html.read())</div><div class="line">                tiezi = bsObj.findAll(<span class="string">"ul"</span>)</div><div class="line">                <span class="keyword">for</span> tiaos <span class="keyword">in</span> tiezi:</div><div class="line">                    <span class="keyword">for</span> tiao <span class="keyword">in</span> tiaos.findAll(<span class="string">'a'</span>):</div><div class="line">                        <span class="keyword">for</span> person <span class="keyword">in</span> tiao.findAll(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"by"</span>&#125;):</div><div class="line">                            X = person.get_text().strip()</div><div class="line">                            <span class="comment"># print("发帖人：" + person.get_text().strip())</span></div><div class="line">                            print(<span class="string">"发帖人："</span> + X)</div><div class="line">                            [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> tiao.findAll(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"by"</span>&#125;)]</div><div class="line">                        Y = tiao.get_text().strip()</div><div class="line">                        print(<span class="string">"标题: "</span>+tiao.get_text().strip())</div><div class="line">                        <span class="comment">#get every tiao Likn</span></div><div class="line">                        <span class="keyword">if</span> <span class="string">'href'</span> <span class="keyword">in</span> tiao.attrs:</div><div class="line">                            <span class="keyword">try</span>:</div><div class="line">                                tiao_links = <span class="string">"http://rsbbs.xidian.edu.cn/"</span> + tiao.attrs[<span class="string">'href'</span>]</div><div class="line">                                tiao_html = urlopen(tiao_links)</div><div class="line">                                tiao_bsObj = BeautifulSoup(tiao_html.read())</div><div class="line">                                content = tiao_bsObj.findAll(<span class="string">"div"</span>, &#123;<span class="string">"class"</span>: <span class="string">"message"</span>&#125;)[<span class="number">0</span>]</div><div class="line">                                Z = content.get_text().strip()</div><div class="line">                                print(<span class="string">"帖子内容: "</span> + Z)</div><div class="line">                                print(<span class="string">'\n'</span>)</div><div class="line">                                cur.execute(<span class="string">"INSERT INTO love (person,tiezi,content) VALUES (\"%s\",\"%s\",\"%s\")"</span>,</div><div class="line">                                            (X, Y, Z))</div><div class="line">                                cur.connection.commit()</div><div class="line">                            <span class="keyword">except</span> (ValueError, IndexError) <span class="keyword">as</span> e:</div><div class="line">                                <span class="keyword">pass</span></div><div class="line">                            pageURL.add(pages)</div><div class="line">                        <span class="comment">#将发帖人、帖子标题、帖子内容插入数据库</span></div><div class="line">                        <span class="comment"># cur.execute("INSERT INTO love (person,tiezi,content) VALUES (\"%s\",\"%s\",\"%s\")", (X, Y, Z))</span></div><div class="line">                    <span class="comment"># cur.execute("INSERT INTO love (person,tiezi,content) VALUES (\"%s\",\"%s\",\"%s\")", (X, Y, Z))</span></div><div class="line">                    <span class="comment"># cur.connection.commit()</span></div><div class="line">            time.sleep(<span class="number">3</span>)  <span class="comment"># 设置时间间隔为3秒</span></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    RS = Rspider()</div><div class="line">    RS.Store()</div><div class="line">板块：相聚睿思</div><div class="line">时间段： <span class="number">2017</span><span class="number">-12</span><span class="number">-19</span>~<span class="number">2010</span><span class="number">-11</span><span class="number">-24</span> </div><div class="line">有效帖子数：<span class="number">2618</span></div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;“网络数据采集是为普通大众所喜闻乐见的计算机巫术”。&lt;/li&gt;
&lt;li&gt;bug 是产品生命中的挑战，好产品是不断面对 bug 并战胜 bug 的结果。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;有人说编程语言就是宗教，不同语言的设计哲学不同，行为方式各异，“非我族类，其心必异”，但本着美好生活、快乐修行的初衷，我们对所有语言都时刻保持敬畏之心，尊重信仰自由，努力做好自己的功课。对爱好Python的人来说，人生苦短，Python当歌！ &lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="https://x-nicolo.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Python" scheme="https://x-nicolo.github.io/tags/Python/"/>
    
      <category term="爬虫" scheme="https://x-nicolo.github.io/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="数据分析" scheme="https://x-nicolo.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>移动终端比赛之旅</title>
    <link href="https://x-nicolo.github.io/2017/12/04/%E7%A7%BB%E5%8A%A8%E7%BB%88%E7%AB%AF%E6%AF%94%E8%B5%9B%E4%B9%8B%E6%97%85/"/>
    <id>https://x-nicolo.github.io/2017/12/04/移动终端比赛之旅/</id>
    <published>2017-12-04T12:12:55.000Z</published>
    <updated>2017-12-04T12:12:55.000Z</updated>
    
    <content type="html"><![CDATA[<p>轮子哥说他都是用编译的时间来刷微博，那我也不知羞耻的（不想学习）来更博。    </p>
<a id="more"></a> 
<p>敲代码的水平没有增长多少，PS和做视频的本事倒是提高了不少。</p>
<ul>
<li><a href="http://oeiseebmx.bkt.clouddn.com/%E5%BF%AB%E9%93%831121PPT%E8%A7%86%E9%A2%91_x264.mp4" target="_blank" rel="external">快铃PPT</a></li>
<li><a href="http://opms50p58.bkt.clouddn.com/%E5%BF%AB%E9%93%83_%E6%B4%BB%E5%8A%9B%E5%B7%A5%E4%BD%9C%E5%AE%A4.mp4" target="_blank" rel="external">快铃宣传视频</a>  </li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/2847713-88ed85d7ffbc1199.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="微信图片_20171204211938.jpg"><br><img src="http://upload-images.jianshu.io/upload_images/2847713-adafaf84351ff247.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="微信图片_20171204212036.jpg"><br><img src="http://upload-images.jianshu.io/upload_images/2847713-3c7633cc3e6ef614.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="微信图片_20171204212044.jpg"><br>谈谈这次的全国移动终端的比赛吧。  </p>
<h3 id="一"><a href="#一" class="headerlink" title="一"></a>一</h3><p>一个偶然的机会加入工作室，从还没开始学Python就直接上手爬虫。最深的体会就是，结果导向的驱动真的最有用。看了一万本书可能真的不如亲手去操作一番。<br>开始学Python，了解协议，抓包，去学HTML，去学数据库。我都不敢相信我本科四年搞硬件的。整个流程走下来，好像是真的有学习到很多。但是还是差很远，现在也是。从不认为自己牛逼，敬畏一切可敬畏的。  </p>
<h3 id="二"><a href="#二" class="headerlink" title="二"></a>二</h3><p>后面就是多花时间去尝试，去调代码，从一开始的不知道写什么，到后来去想能不能用好一点的算法去实现。感谢团队的力量，代码写到半夜也是有的。<br>这是一段很难忘的经历。去明白、去了解一个产品从无到有的流程。  </p>
<h3 id="三"><a href="#三" class="headerlink" title="三"></a>三</h3><p>先是准备校内赛。<br>我还记得我第一次做的PPT，和第一次预演答辩的样子。磕磕绊绊，简直尴尬到死。<br>还在背答辩的稿子。整个过程也是极度的不自信。   </p>
<p>后来进入决赛，指导老师每周一次的答辩演练。我的PPT也开始不是以版本来命名，而是以日期来命名，每天都会出一个新的版本。  </p>
<h3 id="四"><a href="#四" class="headerlink" title="四"></a>四</h3><p>去了大连理工，还是非常见了世面的。有敬畏之心是对的。总有人比你准备的更充分，东西比你做的更好。这些差距不是没有的。 还好算是发挥出自己最好的状态，整个答辩环节也算是十分自信不磕绊，感觉人只要自信了，问题就会解决掉一半。 </p>
<h3 id="五"><a href="#五" class="headerlink" title="五"></a>五</h3><p>Say Little, Do Much.做自己想做的，最纯粹的。<br>最后，感谢队友。 </p>
<blockquote>
<p>很享受这次角色的转变 表达自我很重要 也是这一年多来成长最多的<br>虽然没有摆脱千年二等的怪圈 不过这次真的离一只差2.8分 不遗憾<br>感谢给力的队友 指导老师和Holi团队<br>不求凛冬的暮色天光 只乞胸前的微束心火  </p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;轮子哥说他都是用编译的时间来刷微博，那我也不知羞耻的（不想学习）来更博。    &lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="https://x-nicolo.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="日常" scheme="https://x-nicolo.github.io/tags/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>基于Python的微信好友分析</title>
    <link href="https://x-nicolo.github.io/2017/10/23/Python%E5%BE%AE%E4%BF%A1%E5%A5%BD%E5%8F%8B%E5%88%86%E6%9E%90/"/>
    <id>https://x-nicolo.github.io/2017/10/23/Python微信好友分析/</id>
    <published>2017-10-23T02:42:37.000Z</published>
    <updated>2017-10-23T02:42:37.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://oeiseebmx.bkt.clouddn.com/all.png" alt="friends"><br>“如果我比别人看得远,那是因为我站在巨人的肩膀上”–不知道牛顿说了没<br><a id="more"></a><br>本文利用Python3的itchat包简单的分析了一下自己的微信好友。  </p>
<h3 id="itchat"><a href="#itchat" class="headerlink" title="itchat"></a>itchat</h3><p><a href="https://itchat.readthedocs.io/zh/latest/" target="_blank" rel="external">itchat</a></p>
<blockquote>
<p>itchat是一个开源的微信个人号接口，使用python调用微信从未如此简单。<br>使用不到三十行的代码，你就可以完成一个能够处理所有信息的微信机器人。<br>当然，该api的使用远不止一个机器人，更多的功能等着你来发现，比如这些。<br>该接口与公众号接口itchatmp共享类似的操作方式，学习一次掌握两个工具。<br>如今微信已经成为了个人社交的很大一部分，希望这个项目能够帮助你扩展你的个人的微信号、方便自己的生活。  </p>
</blockquote>
<h3 id="运行环境"><a href="#运行环境" class="headerlink" title="运行环境"></a>运行环境</h3><p>本文采用Python3，然后顺便吐槽下Python的向后不兼容真的好烦好烦，真的是体验超差。当然为了解决这个不是问题的小问题，我装了两个运行环境，毕竟是要站在巨人肩膀上去瞭望远方，那就站在两个肩膀上好了。<a href="https://x-nicolo.github.io/2017/09/15/Python-Opencv%E7%9A%84%E5%AE%89%E8%A3%85/">sublime的Python3和2的配置（点进去往下翻。。。）</a>  =_+<br>关于Pycharm里面Py2和Py3的转换更是简单，百度一下就ok。转换如下：<br><img src="http://upload-images.jianshu.io/upload_images/2847713-5f4d274955817a08.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png">   </p>
<h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p>需要安装itchat、matplotlib、numpy等依赖。<br>老生常谈之安装方式：<br><figure class="highlight cmake"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">pip <span class="keyword">install</span> itchat</div><div class="line">pip <span class="keyword">install</span> matplotlib</div><div class="line">pip <span class="keyword">install</span> numpy</div><div class="line">pip <span class="keyword">install</span> PIL/Pillow</div></pre></td></tr></table></figure></p>
<p><strong>注意：</strong>是不是上面的命令我早都忘了（我此时此刻觉得应该是这样的!），所以。。你们自己看着安装吧，反正不出问题都感觉不正常。按照使用的Python运行环境来安装相应的依赖包。pip/pip3  </p>
<h4 id="安装包介绍"><a href="#安装包介绍" class="headerlink" title="安装包介绍"></a>安装包介绍</h4><h5 id="itchat-1"><a href="#itchat-1" class="headerlink" title="itchat"></a>itchat</h5><p>本文的主角，我给它起个slogan吧“不仅仅是微信机器人。”   </p>
<h5 id="Matplotlib"><a href="#Matplotlib" class="headerlink" title="Matplotlib"></a>Matplotlib</h5><p>Matplotlib是Python的可视化包。  </p>
<blockquote>
<p>Matplotlib是Python中最常用的可视化工具之一，可以非常方便地创建海量类型地2D图表和一些基本的3D图表。Matplotlib最早是为了可视化癫痫病人的脑皮层电图相关的信号而研发，因为在函数的设计上参考了MATLAB，所以叫做Matplotlib。Matplotlib首次发表于2007年，在开源和社区的推动下，现在在基于Python的各个科学计算领域都得到了广泛应用。Matplotlib的原作者John D. Hunter博士是一名神经生物学家，2012年不幸因癌症去世，感谢他创建了这样一个伟大的库。</p>
</blockquote>
<h5 id="numpy"><a href="#numpy" class="headerlink" title="numpy"></a>numpy</h5><p>Numpy是Python的科学计算包。  </p>
<blockquote>
<p>numpy(Numerical Python extensions)是一个第三方的Python包，用于科学计算。这个库的前身是1995年就开始开发的一个用于数组运算的库。经过了长时间的发展，基本上成了绝大部分Python科学计算的基础包，当然也包括所有提供Python接口的深度学习框架。  </p>
</blockquote>
<p>关于Matplotlib和numpy，推荐知乎上的一篇文章，感觉不错：<a href="https://zhuanlan.zhihu.com/p/24309547" target="_blank" rel="external">给深度学习入门者的Python快速教程 - numpy和Matplotlib篇</a>  </p>
<h5 id="PIL-Pillow"><a href="#PIL-Pillow" class="headerlink" title="PIL/Pillow"></a>PIL/Pillow</h5><p>PIL:Python Imaging Library，已经是Python平台事实上的图像处理标准库了。<br>Pillow 是 PIL的对Python3支持的另外一个分支，当然他对Python2也兼容，由于PIL安装起来比较烦，而使用pip可以很轻松的安装Pillow，所以我选择Pillow使用，但是其核心还是PIL库的。</p>
<h3 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h3><p> 好了，奠基石和肩膀都已经准备好了，上车！<br> <figure class="highlight xl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"> #-*-coding:utf-<span class="number">8</span>-*-</div><div class="line"></div><div class="line"><span class="keyword">import</span> itchat</div><div class="line"><span class="keyword">import</span> re</div><div class="line"><span class="keyword">import</span> os</div><div class="line"><span class="keyword">import</span> matplotlib <span class="keyword">as</span> mpl</div><div class="line">from matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</div><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"><span class="keyword">import</span> PIL.Image <span class="keyword">as</span> Image</div><div class="line">from os <span class="keyword">import</span> listdir</div><div class="line"><span class="keyword">import</span> math</div><div class="line"></div><div class="line"></div><div class="line">plt.rcParams[<span class="string">'font.sans-serif'</span>]=[<span class="string">'SimHei'</span>] #用来正常显示中文标签</div><div class="line">plt.rcParams[<span class="string">'axes.unicode_minus'</span>]=False #用来正常显示负号</div><div class="line">zhfont = mpl.font_manager.FontProperties(fname=<span class="string">'E:\PythonWorkSpace\WeChat\msyh.ttf'</span>, size=<span class="number">14</span>)</div></pre></td></tr></table></figure></p>
<p>有时候不得不说说外国的月亮比较圆啊。<br>使用的Matplotlib绘图是不能显示中文字符的，需要做一点小设置。<br>这两句：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">plt<span class="selector-class">.rcParams</span>[<span class="string">'font.sans-serif'</span>]=[<span class="string">'SimHei'</span>] #用来正常显示中文标签</div><div class="line">plt<span class="selector-class">.rcParams</span>[<span class="string">'axes.unicode_minus'</span>]=False #用来正常显示负号</div></pre></td></tr></table></figure></p>
<p>这一句为指定字体的设置：<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">zhfont = mpl.font_manager.FontProperties(<span class="attribute">fname</span>=<span class="string">'E:\PythonWorkSpace\WeChat\msyh.ttf'</span>, <span class="attribute">size</span>=14)</div></pre></td></tr></table></figure></p>
<p>关于上面的xx.tff为c盘windows下front字体包里的字体，我拷到目录下面了。<br>这样，我们就可以好好编程了+_+ ，想编个程序心也是蛮累的，不是在配置环境的路上，就是在改bug的路上，奈何程序员都是打不死的小强！  </p>
<h3 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h3><blockquote>
<p>爬取目标网站的时候，看看有没有 HTML样式更友好的移动版（把自己的请求头设置成处于移动设备的状态，然后接收网站移动版。移动版是一个获取数据非常好的渠道。当有一个网页很难爬去的时候，应该去试试它的移动版。）    </p>
</blockquote>
<p>微信就已经是移动设备上的了，腾讯粑粑又没有开发微信的API，所以我们只能另辟蹊径！反向思维-&gt;Web端有木有！This is itChat!  </p>
<p>使用itchat登录Web端的微信，代码很简单：<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">itchat.auto_login(<span class="attribute">hotReload</span>=<span class="literal">True</span>)</div></pre></td></tr></table></figure></p>
<p><strong>注：</strong>  传入True hotReload使得程序关闭后一定时间内也可以登录，该方法会生一个静态文件itchat.pkl，用于存储登陆的状态。即使程序关闭，一定时间内重新开启也可以不用重新扫码。</p>
<p>执行上面这句代码后会弹出一个Web微信登录的二维码QR，拿手机微信扫一扫后有以下显示：<br><img src="http://upload-images.jianshu.io/upload_images/2847713-1559487f1d7cb053.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>这样就登录成功了！好简单有木有！用大神的包就是好，自己写模拟登陆的话还得抓包，分析报头，然后模拟登录。itchat简直良心到想哭。&gt;_&lt;  </p>
<h3 id="获取好友信息"><a href="#获取好友信息" class="headerlink" title="获取好友信息"></a>获取好友信息</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attr">friends</span> = itchat.get_friends(update=<span class="literal">True</span>)  </div><div class="line"><span class="comment"># 爬取好友的相关信息，返回json文件</span></div></pre></td></tr></table></figure>
<p>上面这个json文件就包括了微信好友的信息。  </p>
<h3 id="好友性别"><a href="#好友性别" class="headerlink" title="好友性别"></a>好友性别</h3><p>直接上代码:<br><figure class="highlight xl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">def friend_analysis(friends):</div><div class="line">    labels = [<span class="string">'男'</span>, <span class="string">'女'</span>, <span class="string">'其他'</span>]</div><div class="line">    <span class="keyword">data</span> = [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>]</div><div class="line"></div><div class="line">    # friends[<span class="number">0</span>] 是自己的信息</div><div class="line">    <span class="keyword">for</span> friend <span class="built_in">in</span> friends[<span class="number">1</span>:]:</div><div class="line">        sex = friend[<span class="string">"Sex"</span>]</div><div class="line">        <span class="keyword">if</span> sex == <span class="number">1</span>:</div><div class="line">            <span class="keyword">data</span>[<span class="number">0</span>] += <span class="number">1</span></div><div class="line">        elif sex == <span class="number">2</span>:</div><div class="line">            <span class="keyword">data</span>[<span class="number">1</span>] += <span class="number">1</span></div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            <span class="keyword">data</span>[<span class="number">2</span>] += <span class="number">1</span></div><div class="line"></div><div class="line">    fig = plt.figure()</div><div class="line">    plt.pie(<span class="keyword">data</span>, labels=labels,autopct=<span class="string">"%.2f%%"</span>)</div><div class="line">    plt.<span class="built_in">title</span>(<span class="string">"微信好友分析"</span>,fontsize=<span class="number">18</span>,fontproperties=zhfont)</div><div class="line">    plt.show()</div></pre></td></tr></table></figure></p>
<p>labels是我们要画的饼图的标注。<br>男、女和其他性别的提取很简单了，当然需要注意的是如果没有我们准备阶段对于Matplotlib绘图的中文字符的处理，画出来的图是显示不了汉字滴！<br>运行结果：<br><img src="http://upload-images.jianshu.io/upload_images/2847713-d695657454189ff6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Figure_1.png">  </p>
<p>看来我的微信好友男女差不多是1:1吧，还有那5.31%不知性别的好友，他们可能对性别的要求并不是那么严格吧，毕竟人与人也没那么多的隔阂是不是 =_*  </p>
<h3 id="区域分析"><a href="#区域分析" class="headerlink" title="区域分析"></a>区域分析</h3><p>关于这个，自己之前写了一个简单的省份分析，就是从friends里去匹配Province，但是画的太丑了。所以，又找到一个<a href="https://github.com/IsaacChanghau/AmusingPythonCodes/blob/master/wechat_exploration/wechat_explore.ipynb" target="_blank" rel="external">肩膀</a><br><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># extract the variables: NickName, Sex, City, Province, Signature</span></div><div class="line">def get_features(friends):</div><div class="line">    features = []</div><div class="line">    for friend in friends:</div><div class="line">        feature = &#123;<span class="string">'NickName'</span>: friend[<span class="string">'NickName'</span>], <span class="string">'Sex'</span>: friend[<span class="string">'Sex'</span>], <span class="string">'City'</span>: friend[<span class="string">'City'</span>], </div><div class="line">                  <span class="string">'Province'</span>: friend[<span class="string">'Province'</span>], <span class="string">'Signature'</span>: friend[<span class="string">'Signature'</span>]&#125;</div><div class="line">        features.append(feature)</div><div class="line">    return pd.DataFrame(features)</div><div class="line">features = get_features(friends[<span class="number">1</span>:])</div><div class="line">print(features.columns)</div><div class="line">features.head()</div><div class="line">locations = features.loc[:, [<span class="string">'Province'</span>, <span class="string">'City'</span>]]  <span class="comment"># get location columns</span></div><div class="line">locations = locations[locations[<span class="string">'Province'</span>] != <span class="string">''</span>]  <span class="comment"># clean empty city or province records</span></div><div class="line">data = locations.groupby([<span class="string">'Province'</span>, <span class="string">'City'</span>]).size().unstack()  <span class="comment"># group by and count</span></div><div class="line">count_subset = data.take(data.sum(<span class="number">1</span>).argsort())[-<span class="number">20</span>:]  <span class="comment"># obtain the 20 highest data</span></div><div class="line"></div><div class="line"><span class="comment"># plot</span></div><div class="line">subset_plot = count_subset.plot(kind=<span class="string">'bar'</span>, stacked=True, figsize=(<span class="number">24</span>, <span class="number">24</span>))</div><div class="line"></div><div class="line"><span class="comment"># set fonts</span></div><div class="line">xtick_labels = subset_plot.get_xticklabels()</div><div class="line">for <span class="keyword">label</span><span class="bash"> <span class="keyword">in</span> xtick_labels: </span></div><div class="line"><span class="bash">    label.set_fontproperties(font)</span></div><div class="line"><span class="bash">legend_labels = subset_plot.legend().texts</span></div><div class="line"><span class="bash"><span class="keyword">for</span> label <span class="keyword">in</span> legend_labels:</span></div><div class="line"><span class="bash">    label.set_fontproperties(font)</span></div><div class="line"><span class="bash">    label.set_fontsize(10)</span></div><div class="line"><span class="bash"></span></div><div class="line"><span class="bash">plt.xlabel(<span class="string">'Province'</span>, fontsize=20)</span></div><div class="line"><span class="bash">plt.ylabel(<span class="string">'Number'</span>, fontsize=20)</span></div><div class="line"><span class="bash">plt.show()</span></div></pre></td></tr></table></figure></p>
<p>上面这段代码更是厉害，提取了昵称,性别, 城市, 省份, 签名。<br>我只用他的省市画图部分locations，结果如下；<br><img src="http://upload-images.jianshu.io/upload_images/2847713-96ef196cb9a822b9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="TIM截图20170929195104.png"><br>emmmm,放不大了，全图看不到，而且放大拖动起来巨卡，这个图也是辛苦了i3了。<br>从上面可以看到，我大陕西的乡党们在哪里！！我大西安的乡党们在哪里!!<br>排名第二、三的北京和广东，就是那群在北（上？）广深那一波人吧，向他们致敬！<br>从排名第四开始，某种程度上可以说是在陕西的各省学霸的分布了吧！尤其是河北、河南、山东！这些省份的同学一直都是学神一样的存在，陕西欢迎你们，学生生涯请轻虐+_+  </p>
<h3 id="签名"><a href="#签名" class="headerlink" title="签名"></a>签名</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">signature_analysis</span><span class="params">(friends)</span>:</span></div><div class="line">    signature_list = list()</div><div class="line"></div><div class="line">    <span class="keyword">for</span> friend <span class="keyword">in</span> friends[<span class="number">1</span>:]:</div><div class="line">        signature = friend[<span class="string">'Signature'</span>].strip()</div><div class="line">        signature_list.append(signature)</div><div class="line">        print(friend[<span class="string">'NickName'</span>] + <span class="string">"\t"</span> + signature)</div></pre></td></tr></table></figure>
<p>这是从friends中分析出好友签名的，.strip()是用来删除空白符。<br>最后的输出是打印出昵称+签名。这个比较隐私就不展示了哈。有时间的还可以整理下这些签名，使用jieba分词+Wordcloud云词生成一个图片。  </p>
<h3 id="获取好友头像"><a href="#获取好友头像" class="headerlink" title="获取好友头像"></a>获取好友头像</h3><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">def getImage(friends):</div><div class="line">    <span class="comment">#下载所有好友的头像图片</span></div><div class="line">    <span class="built_in">num</span> = <span class="number">0</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> friends:</div><div class="line">     img = itchat.get_head_img(i[<span class="string">"UserName"</span>])</div><div class="line">     <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">'./headImg/'</span> + str(<span class="built_in">num</span>) + <span class="string">".png"</span>,<span class="string">'wb'</span>) <span class="keyword">as</span> f:</div><div class="line">      f.<span class="built_in">write</span>(img)</div><div class="line">      f.<span class="built_in">close</span>()</div><div class="line">      <span class="built_in">num</span> += <span class="number">1</span></div><div class="line">    <span class="comment">#获取文件夹内的文件个数</span></div><div class="line">    <span class="built_in">length</span> = <span class="built_in">len</span>(os.listdir(<span class="string">'./headImg'</span>))</div><div class="line">    <span class="comment">#根据总面积求每一个的大小</span></div><div class="line">    each_size = int(math.<span class="built_in">sqrt</span>(float(<span class="number">810</span>*<span class="number">810</span>)/<span class="built_in">length</span>))</div><div class="line">    <span class="comment">#每一行可以放多少个</span></div><div class="line">    <span class="keyword">lines</span> = int(<span class="number">810</span>/each_size)</div><div class="line">    <span class="comment">#生成白色背景新图片</span></div><div class="line">    image = Image.<span class="built_in">new</span>(<span class="string">'RGBA'</span>, (<span class="number">810</span>, <span class="number">810</span>),<span class="string">'white'</span>)</div><div class="line">    x = <span class="number">0</span></div><div class="line">    y = <span class="number">0</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="built_in">length</span>):</div><div class="line">     <span class="keyword">try</span>:</div><div class="line">      img = Image.<span class="built_in">open</span>(<span class="string">'./headImg/'</span> + str(i) + <span class="string">".png"</span>)</div><div class="line">     except IOError:</div><div class="line">      print(i)</div><div class="line">      print(<span class="string">"Error"</span>)</div><div class="line">     <span class="keyword">else</span>:</div><div class="line">      img = img.resize((each_size, each_size), Image.ANTIALIAS) <span class="comment">#resize image with high-quality</span></div><div class="line">      image.paste(img, (x * each_size, y * each_size))</div><div class="line">      x += <span class="number">1</span></div><div class="line">      <span class="keyword">if</span> x == <span class="keyword">lines</span>:</div><div class="line">       x = <span class="number">0</span></div><div class="line">       y += <span class="number">1</span></div><div class="line">    image.save(<span class="string">'./headImg/'</span> + <span class="string">"all.png"</span>)</div><div class="line">    <span class="comment">#通过文件传输助手发送到自己微信中</span></div><div class="line">    itchat.send_image(<span class="string">'./headImg/'</span> + <span class="string">"all.png"</span>,<span class="string">'filehelper'</span>)</div><div class="line">    image.show()</div></pre></td></tr></table></figure>
<p>注释里写的应该算很清楚，需要注意的是：<br>开始想截取好友头像图片遇到了一个报错：<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cannot <span class="keyword">write</span> <span class="keyword">mode</span> rgba <span class="keyword">as</span> jpg</div></pre></td></tr></table></figure></p>
<p><strong>google后如下:</strong>  </p>
<blockquote>
<p>这是因为，JPG只有三个通道，而程序中一定用到了RGBA四个通道，所以程序不知道多出来的一个通道怎么处理，就会报错了。  </p>
</blockquote>
<p><strong>解决如下:</strong>  </p>
<ol>
<li>PNG图像有RGBA四个通道，而BMP和JPG图像只有RGB三个通道，所以我们可以将程序中所有图片的保存形式改为PNG.(本文采用的是这种方法。)  </li>
<li>不想改变图片格式，就添加判断，进行转换  </li>
</ol>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> <span class="built_in">len</span>(toImage.<span class="built_in">split</span>())==<span class="number">4</span>:</div><div class="line">   r,g,b,<span class="keyword">a</span>=toImage.<span class="built_in">split</span>()        <span class="comment">#利用split和merge将通道从四个转换为三个</span></div><div class="line">   toImage=Image.<span class="built_in">merge</span>(<span class="string">"RGB"</span>,(r,g,b))</div><div class="line">    toImage.save(user + <span class="string">".jpg"</span>)</div></pre></td></tr></table></figure>
<p>“全世界的程序员们联合起来，那些bug的坑我们填一个它就少一个！”<br><strong>结果：</strong><br><img src="http://upload-images.jianshu.io/upload_images/2847713-665aaa9dceb62fbf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="all.png"><br>来来来，找自己，找到三个自己就可以Bingo了…  </p>
<h3 id="最后，人生苦短，且行且珍惜"><a href="#最后，人生苦短，且行且珍惜" class="headerlink" title="最后，人生苦短，且行且珍惜"></a>最后，人生苦短，且行且珍惜</h3><p><strong>强烈建议仅使用小号（小号怎么会有好友？反正我给你们建议了…日后可不要搞个大新闻把我批判一番）</strong><br>小道消息：从近期 (17年6月下旬)反馈来看，使用itchat及其他微信机器人（类爬虫程序）存在一定概率被限制登录的可能性。主要表现为无法登陆 Web 微信 (但不影响手机等其他平台)。<br>现在感觉都是爬一次少一次，Web微信有时候也登不上去+_+，前几天还被封号两天，微信消息只能看，不能回复，朋友圈不能评论，不能点赞，这对一个话痨来说简直就是无声的摧残！</p>
<h3 id="最后的最后：反思"><a href="#最后的最后：反思" class="headerlink" title="最后的最后：反思"></a>最后的最后：反思</h3><p><a href="">微信是不是太强大了，生活、学习、工作中真的是一分一秒都离不开！所以，还是建议大家时不时的用下QQ，用下微博，多和新老好友们尬聊下，不然，真到了微信垄断那一天，你我联系只能靠漂流瓶了！全看缘分！</a></p>
<h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>一晚上的访问量破三百了！三百！1024程序员节日快乐！<br>盖个戳！本文的访问数据，google analytics：<br>访问数据：<br><img src="http://upload-images.jianshu.io/upload_images/2847713-bcd6a5f21a66261c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="TIM截图20171024095959.png"><br>访问者国家和地区：<br><img src="http://upload-images.jianshu.io/upload_images/2847713-48219243e1dd40e5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="TIM截图20171024100028.png"><br>地理位置：<br><img src="http://upload-images.jianshu.io/upload_images/2847713-9ddc57c9f935f21c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="TIM截图20171024100148.png">  </p>
<p>访问者城市分布：<br><img src="http://upload-images.jianshu.io/upload_images/2847713-8a42b1c8f20468ab.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="TIM截图20171024100202.png"><br>服务提供商：<br><img src="http://upload-images.jianshu.io/upload_images/2847713-a6e1096c56470d63.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="TIM截图20171024100303.png"><br>网页浏览分析：<br><img src="http://upload-images.jianshu.io/upload_images/2847713-c060957628cf2ffc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="TIM截图20171024100517.png"><br>访问者行为流：<br><img src="http://upload-images.jianshu.io/upload_images/2847713-c4a4c11d0af771c6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="TIM截图20171024100600.png"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://oeiseebmx.bkt.clouddn.com/all.png&quot; alt=&quot;friends&quot;&gt;&lt;br&gt;“如果我比别人看得远,那是因为我站在巨人的肩膀上”–不知道牛顿说了没&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="https://x-nicolo.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Python" scheme="https://x-nicolo.github.io/tags/Python/"/>
    
      <category term="数据分析" scheme="https://x-nicolo.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
</feed>
