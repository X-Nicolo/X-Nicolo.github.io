<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>肖洒</title>
  <subtitle>好记性不如烂键盘</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://x-nicolo.github.io/"/>
  <updated>2018-12-03T09:06:30.000Z</updated>
  <id>https://x-nicolo.github.io/</id>
  
  <author>
    <name>肖洒</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>十大经典排序算法动画</title>
    <link href="https://x-nicolo.github.io/2018/12/03/%E5%8D%81%E5%A4%A7%E7%BB%8F%E5%85%B8%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E5%8A%A8%E7%94%BB/"/>
    <id>https://x-nicolo.github.io/2018/12/03/十大经典排序算法动画/</id>
    <published>2018-12-03T09:06:30.000Z</published>
    <updated>2018-12-03T09:06:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>排序算法是《数据结构与算法》中最基本的算法之一。</p>
<p>排序算法可以分为内部排序和外部排序。</p>
<p>内部排序是数据记录在内存中进行排序。</p>
<p>而外部排序是因排序的数据很大，一次不能容纳全部的排序记录，在排序过程中需要访问外存。</p>
<p>常见的内部排序算法有：插入排序、希尔排序、选择排序、冒泡排序、归并排序、快速排序、堆排序、基数排序等。<br>本文from<a href="https://www.v2ex.com/t/513678#reply34" target="_blank" rel="external">https://www.v2ex.com/t/513678#reply34</a><br><a id="more"></a><br>用一张图概括：<br><img src="https://upload-images.jianshu.io/upload_images/2847713-ddfca9663fa411af.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png">  </p>
<h3 id="关于时间复杂度："><a href="#关于时间复杂度：" class="headerlink" title="关于时间复杂度："></a>关于时间复杂度：</h3><ol>
<li>平方阶 (O(n2)) 排序 各类简单排序：直接插入、直接选择和冒泡排序</li>
<li>线性对数阶 (O(nlog2n)) 排序 快速排序、堆排序和归并排序</li>
<li>O(n1+§)) 排序，§ 是介于 0 和 1 之间的常数。 希尔排序</li>
<li>线性阶 (O(n)) 排序 基数排序，此外还有桶、箱排序。</li>
</ol>
<h3 id="关于稳定性："><a href="#关于稳定性：" class="headerlink" title="关于稳定性："></a>关于稳定性：</h3><ol>
<li>稳定的排序算法：冒泡排序、插入排序、归并排序和基数排序。</li>
<li>不是稳定的排序算法：选择排序、快速排序、希尔排序、堆排序。  </li>
</ol>
<h3 id="1-冒泡排序"><a href="#1-冒泡排序" class="headerlink" title="1.冒泡排序"></a>1.冒泡排序</h3><p><img src="https://upload-images.jianshu.io/upload_images/2847713-82fc8b9e80bf7db1.gif?imageMogr2/auto-orient/strip" alt="1.gif"> </p>
<h3 id="2-选择排序"><a href="#2-选择排序" class="headerlink" title="2.选择排序"></a>2.选择排序</h3><p><img src="https://upload-images.jianshu.io/upload_images/2847713-e61eacb961a97dc3.gif?imageMogr2/auto-orient/strip" alt="2.gif"> </p>
<h3 id="3-插入排序"><a href="#3-插入排序" class="headerlink" title="3.插入排序"></a>3.插入排序</h3><p><img src="https://upload-images.jianshu.io/upload_images/2847713-8b4cfadbadf6aeb1.gif?imageMogr2/auto-orient/strip" alt="3.gif"> </p>
<h3 id="4-希尔排序"><a href="#4-希尔排序" class="headerlink" title="4.希尔排序"></a>4.希尔排序</h3><p><img src="https://upload-images.jianshu.io/upload_images/2847713-02dff43f5d8b7d0a.gif?imageMogr2/auto-orient/strip" alt="4.gif"></p>
<h3 id="5-归并排序"><a href="#5-归并排序" class="headerlink" title="5.归并排序"></a>5.归并排序</h3><p><img src="https://upload-images.jianshu.io/upload_images/2847713-ba12ba67a00aadc1.gif?imageMogr2/auto-orient/strip" alt="5.gif"></p>
<h3 id="6-快速排序"><a href="#6-快速排序" class="headerlink" title="6.快速排序"></a>6.快速排序</h3><p><img src="https://upload-images.jianshu.io/upload_images/2847713-1984db5732180fbc.gif?imageMogr2/auto-orient/strip" alt="6.gif"></p>
<h3 id="7-堆排序"><a href="#7-堆排序" class="headerlink" title="7.堆排序"></a>7.堆排序</h3><p><img src="https://upload-images.jianshu.io/upload_images/2847713-aceda2287b9b1ed8.gif?imageMogr2/auto-orient/strip" alt="7.gif"></p>
<h3 id="8-计数排序"><a href="#8-计数排序" class="headerlink" title="8.计数排序"></a>8.计数排序</h3><p><img src="https://upload-images.jianshu.io/upload_images/2847713-0d3c59eb39df91fb.gif?imageMogr2/auto-orient/strip" alt="8.gif"></p>
<h3 id="9-桶排序"><a href="#9-桶排序" class="headerlink" title="9.桶排序"></a>9.桶排序</h3><p><img src="https://upload-images.jianshu.io/upload_images/2847713-8e5807c77d7aa3db.gif?imageMogr2/auto-orient/strip" alt="9.gif"></p>
<h3 id="10-基数排序"><a href="#10-基数排序" class="headerlink" title="10.基数排序"></a>10.基数排序</h3><p><img src="https://upload-images.jianshu.io/upload_images/2847713-fb7fb4a7829ef836.gif?imageMogr2/auto-orient/strip" alt="10.gif"> </p>
<p>此外，再推荐一个特别神奇的学习算法的网站<a href="https://visualgo.net/zh" target="_blank" rel="external">https://visualgo.net/zh</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;排序算法是《数据结构与算法》中最基本的算法之一。&lt;/p&gt;
&lt;p&gt;排序算法可以分为内部排序和外部排序。&lt;/p&gt;
&lt;p&gt;内部排序是数据记录在内存中进行排序。&lt;/p&gt;
&lt;p&gt;而外部排序是因排序的数据很大，一次不能容纳全部的排序记录，在排序过程中需要访问外存。&lt;/p&gt;
&lt;p&gt;常见的内部排序算法有：插入排序、希尔排序、选择排序、冒泡排序、归并排序、快速排序、堆排序、基数排序等。&lt;br&gt;本文from&lt;a href=&quot;https://www.v2ex.com/t/513678#reply34&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.v2ex.com/t/513678#reply34&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="https://x-nicolo.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="算法" scheme="https://x-nicolo.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>GPS/北斗串口数据实时定位百度地图</title>
    <link href="https://x-nicolo.github.io/2018/11/15/GPS%E4%B8%B2%E5%8F%A3%E6%95%B0%E6%8D%AE%E5%AE%9E%E6%97%B6%E6%A0%87%E8%AE%B0%E5%9C%A8%E7%99%BE%E5%BA%A6%E5%9C%B0%E5%9B%BE/"/>
    <id>https://x-nicolo.github.io/2018/11/15/GPS串口数据实时标记在百度地图/</id>
    <published>2018-11-15T07:23:34.000Z</published>
    <updated>2018-11-15T07:23:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>一个小项目，做点总结。<br><img src="https://upload-images.jianshu.io/upload_images/2847713-455415bc5286817c.gif?imageMogr2/auto-orient/strip" alt="俱乐部2.gif"><br><a id="more"></a></p>
<h2 id="项目需求"><a href="#项目需求" class="headerlink" title="项目需求"></a>项目需求</h2><p>本项目为从串口读取GPS/北斗设备接收数据，进行处理后使用百度地图api实时显示定位。  </p>
<h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>这里有几个关键的信息，需要一步一步进行实现。  </p>
<h3 id="串口"><a href="#串口" class="headerlink" title="串口"></a>串口</h3><p>串口通信这里就不做介绍。本意是使用百度地图的api，但是这是一个静态的网页。如果要动态显示，且由前端直接读取PC端的串口数据其实不好实现，在网上查了很多资料，最通常的做法是在前端使用一个active控件读取串口的数据。这样有缺点，一是技术过于老套，只兼容IE，其他浏览器就不行；二是怎么做到动态实时定位呢？这个没有想明白。放弃了从前端直接读取PC串口的想法。还是需要去用后台采集数据，搭建后台和前端进行通信。  </p>
<h4 id="串口模拟"><a href="#串口模拟" class="headerlink" title="串口模拟"></a>串口模拟</h4><p>路是一步一步走的，胖子也是一口一口吃的，直接去读取GPSS/北斗设备的数据是不可行的。<br>先采用电脑端的串口助手进行数据的发送和接收。  </p>
<ol>
<li>首先采用VSPD（很著名）在PC端模拟出一怼串口，再使用某个串口助手实现数据的发送和接收显示。串口助手很多，随便选择一种即可。  </li>
<li>这样就可以保证有可靠的数据发送和接收的通信是没有问题的。保证发送端数据的一直发送，接着用程序去读取串口的数据。 <figure class="highlight haskell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#语言版本：Python3</span></div><div class="line"><span class="meta">#依赖库：serial，pyserial</span></div><div class="line"><span class="meta">#串口助手发送数据：108.111,34.111</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> serial</div><div class="line"><span class="title">from</span> time <span class="keyword">import</span> sleep</div><div class="line"></div><div class="line"><span class="title">if</span> __name__ == '__main__':</div><div class="line">    serial = serial.<span class="type">Serial</span>('<span class="type">COM2'</span>, <span class="number">115200</span>)#根据自己模拟的端口确定com</div><div class="line">    <span class="keyword">if</span> serial.isOpen() :</div><div class="line">        print(<span class="string">"open success"</span>)</div><div class="line">    <span class="keyword">else</span> :</div><div class="line">        print(<span class="string">"open failed"</span>)</div><div class="line"></div><div class="line">    while <span class="type">True</span>:</div><div class="line">        n = serial.inWaiting()</div><div class="line">        <span class="keyword">if</span> n:</div><div class="line">            <span class="class"><span class="keyword">data</span>= str(<span class="title">serial</span>.<span class="title">read</span>(<span class="title">n</span>))[2:-1].split(',')#对读取的数据进行简单的处理</span></div><div class="line">            j = <span class="class"><span class="keyword">data</span>[0]</span></div><div class="line">            w = <span class="class"><span class="keyword">data</span>[1]</span></div><div class="line">            print(<span class="class"><span class="keyword">data</span>)</span></div></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="读取串口"><a href="#读取串口" class="headerlink" title="读取串口"></a>读取串口</h3><p>保证程序可以正确的读取发送的数据后，再去处理真实的数据，开启GPS/北斗设备，将USB插在电脑上，开始读取原始数据。原始数据包含的信息比较多，而且发送频率也比较高，数据眼花缭乱，这里只匹配想要的数据进行处理。在百度地图上定位只需要“经度”、“纬度”。（这里牵扯到一个坐标系的转换，后面说），这是一个Ajax的程序：<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">def ajax_list(request):</div><div class="line">    s = serial.Serial(<span class="string">'COM5'</span>, <span class="number">115200</span>)</div><div class="line">    #定义接收数据的次数</div><div class="line">    l = <span class="number">0</span></div><div class="line">    data=[]</div><div class="line">    <span class="keyword">while</span> True:</div><div class="line">        <span class="built_in">line</span> = <span class="built_in">str</span>(<span class="built_in">str</span>(s.readline())[<span class="number">2</span>:])</div><div class="line">        # <span class="built_in">print</span>(<span class="built_in">line</span>)#原始数据</div><div class="line">        <span class="keyword">if</span> <span class="built_in">line</span>.startswith(<span class="string">'$GNGGA'</span>):#只匹配以“$GNGGA”开头的数据</div><div class="line">            <span class="built_in">line</span>=<span class="built_in">str</span>(<span class="built_in">line</span>).<span class="built_in">split</span>(<span class="string">','</span>)</div><div class="line">            # <span class="built_in">print</span>(<span class="string">"接收的数据："</span>+ <span class="built_in">str</span>(<span class="built_in">line</span>))</div><div class="line">            # <span class="built_in">print</span>(<span class="string">"OK:"</span>+<span class="built_in">str</span>(<span class="built_in">line</span>))</div><div class="line">            # <span class="built_in">print</span>(<span class="string">"指令名称: "</span>, <span class="built_in">line</span>[<span class="number">0</span>])</div><div class="line">            # <span class="built_in">print</span>(<span class="string">"发送时间: "</span>, <span class="built_in">line</span>[<span class="number">1</span>][:<span class="number">6</span>])</div><div class="line"></div><div class="line">            # 经纬度转换</div><div class="line">            #经度数据处理</div><div class="line">            j = <span class="built_in">float</span>(<span class="built_in">line</span>[<span class="number">4</span>][:<span class="number">-7</span>])+<span class="built_in">float</span>(<span class="built_in">line</span>[<span class="number">4</span>][<span class="number">-7</span>:])/<span class="number">60</span></div><div class="line">            #纬度数据处理</div><div class="line">            w = <span class="built_in">float</span>(<span class="built_in">line</span>[<span class="number">2</span>][:<span class="number">-7</span>])+<span class="built_in">float</span>(<span class="built_in">line</span>[<span class="number">2</span>][<span class="number">-7</span>:])/<span class="number">60</span></div><div class="line"></div><div class="line">            #时间</div><div class="line">            gpstime=time.strftime(<span class="string">'%H:%M:%S'</span>,time.localtime(time.time()))</div><div class="line"></div><div class="line">            # id</div><div class="line">            global l </div><div class="line">            l= l + <span class="number">1</span></div><div class="line"></div><div class="line">            # 添加数据</div><div class="line">            data.<span class="built_in">append</span>(j)</div><div class="line">            data.<span class="built_in">append</span>(w)</div><div class="line">            data.<span class="built_in">append</span>(l)</div><div class="line">            data.<span class="built_in">append</span>(gpstime)</div><div class="line">            <span class="built_in">print</span>(data)</div><div class="line">            <span class="keyword">return</span> HttpResponse(json.dumps(data), content_type=<span class="string">'application/json'</span>)</div></pre></td></tr></table></figure></p>
<h3 id="百度地图api"><a href="#百度地图api" class="headerlink" title="百度地图api"></a>百度地图api</h3><p>先去申请百度地图api 的 key。然后看这里：<a href="http://lbsyun.baidu.com/jsdemo.htm#i8_4" target="_blank" rel="external">http://lbsyun.baidu.com/jsdemo.htm#i8_4</a><br>这里放出百度地图定位aip的源码：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=utf-8"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"initial-scale=1.0, user-scalable=no"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="css">        <span class="selector-tag">body</span>, <span class="selector-tag">html</span>&#123;<span class="attribute">width</span>: <span class="number">100%</span>;<span class="attribute">height</span>: <span class="number">100%</span>;<span class="attribute">margin</span>:<span class="number">0</span>;<span class="attribute">font-family</span>:<span class="string">"微软雅黑"</span>;&#125;</span></div><div class="line"><span class="css">        <span class="selector-id">#allmap</span>&#123;<span class="attribute">height</span>:<span class="number">500px</span>;<span class="attribute">width</span>:<span class="number">100%</span>;&#125;</span></div><div class="line"><span class="css">        <span class="selector-id">#r-result</span>&#123;<span class="attribute">width</span>:<span class="number">100%</span>; <span class="attribute">font-size</span>:<span class="number">14px</span>;&#125;</span></div><div class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"http://api.map.baidu.com/api?v=2.0&amp;ak=您的密钥"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>城市名定位<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"allmap"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"r-result"</span>&gt;</span></div><div class="line">        经度: <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"longitude"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">style</span>=<span class="string">"width:100px; margin-right:10px;"</span> /&gt;</span></div><div class="line">        纬度: <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"latitude"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">style</span>=<span class="string">"width:100px; margin-right:10px;"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"查询"</span> <span class="attr">onclick</span>=<span class="string">"theLocation()"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="actionscript">    <span class="comment">// 百度地图API功能</span></span></div><div class="line"><span class="actionscript">    <span class="keyword">var</span> map = <span class="keyword">new</span> BMap.Map(<span class="string">"allmap"</span>);</span></div><div class="line"><span class="actionscript">    map.centerAndZoom(<span class="keyword">new</span> BMap.Point(<span class="number">116.331398</span>,<span class="number">39.897445</span>),<span class="number">11</span>);</span></div><div class="line"><span class="actionscript">    map.enableScrollWheelZoom(<span class="literal">true</span>);</span></div><div class="line"><span class="undefined">    </span></div><div class="line"><span class="actionscript">    <span class="comment">// 用经纬度设置地图中心点</span></span></div><div class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">theLocation</span><span class="params">()</span></span>&#123;</span></div><div class="line"><span class="javascript">        <span class="keyword">if</span>(<span class="built_in">document</span>.getElementById(<span class="string">"longitude"</span>).value != <span class="string">""</span> &amp;&amp; <span class="built_in">document</span>.getElementById(<span class="string">"latitude"</span>).value != <span class="string">""</span>)&#123;</span></div><div class="line"><span class="undefined">            map.clearOverlays(); </span></div><div class="line"><span class="javascript">            <span class="keyword">var</span> new_point = <span class="keyword">new</span> BMap.Point(<span class="built_in">document</span>.getElementById(<span class="string">"longitude"</span>).value,<span class="built_in">document</span>.getElementById(<span class="string">"latitude"</span>).value);</span></div><div class="line"><span class="actionscript">            <span class="keyword">var</span> marker = <span class="keyword">new</span> BMap.Marker(new_point);  <span class="comment">// 创建标注</span></span></div><div class="line"><span class="actionscript">            map.addOverlay(marker);              <span class="comment">// 将标注添加到地图中</span></span></div><div class="line"><span class="undefined">            map.panTo(new_point);      </span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>上面的程序是静态的，项目需求把从串口源源不断读取的数据在百度地图上进行显示。这里想到使用了Ajax。  </p>
<h3 id="Ajax"><a href="#Ajax" class="headerlink" title="Ajax"></a>Ajax</h3><blockquote>
<p>Ajax 即“Asynchronous Javascript And XML”（异步 JavaScript 和 XML），是指一种创建交互式网页应用的网页开发技术。<br>Ajax = 异步 JavaScript 和 XML（标准通用标记语言的子集）。<br>Ajax 是一种用于创建快速动态网页的技术。<br>Ajax 是一种在无需重新加载整个网页的情况下，能够更新部分网页的技术。<br>通过在后台与服务器进行少量数据交换，Ajax 可以使网页实现异步更新。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。<br>传统的网页（不使用 Ajax）如果需要更新内容，必须重载整个网页页面。</p>
</blockquote>
<h4 id="Django"><a href="#Django" class="headerlink" title="Django"></a>Django</h4><p>使用的是Python语言，用Django后台框架就很简单，这里推荐一个博客，学习到很多。<a href="https://code.ziqiangxuetang.com/django/django-tutorial.html" target="_blank" rel="external">自强学堂-Django教程</a><br>花了点时间学习了下，Django还是很容易上手的最后将接收到处理的数据存储为csv文件。<br>这里给出本项目的Django和前端的程序。  </p>
<h5 id="view-py"><a href="#view-py" class="headerlink" title="view.py"></a>view.py</h5><figure class="highlight processing"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line">from django.http <span class="keyword">import</span> HttpResponse</div><div class="line">from django.shortcuts <span class="keyword">import</span> render</div><div class="line"><span class="keyword">import</span> json</div><div class="line"><span class="keyword">import</span> serial</div><div class="line"><span class="keyword">import</span> time</div><div class="line"><span class="keyword">import</span> csv</div><div class="line">from time <span class="keyword">import</span> sleep</div><div class="line"></div><div class="line">def ajax_list(request):</div><div class="line">    data=[]</div><div class="line">    <span class="keyword">while</span> True:</div><div class="line">        <span class="built_in">line</span> = <span class="built_in">str</span>(<span class="built_in">str</span>(s.readline())[<span class="number">2</span>:])</div><div class="line">        # <span class="built_in">print</span>(<span class="built_in">line</span>)</div><div class="line">        <span class="keyword">if</span> <span class="built_in">line</span>.startswith(<span class="string">'$GNGGA'</span>):</div><div class="line">            <span class="built_in">line</span>=<span class="built_in">str</span>(<span class="built_in">line</span>).<span class="built_in">split</span>(<span class="string">','</span>)</div><div class="line">            # <span class="built_in">print</span>(<span class="string">"接收的数据："</span>+ <span class="built_in">str</span>(<span class="built_in">line</span>))</div><div class="line">            # <span class="built_in">print</span>(<span class="string">"OK:"</span>+<span class="built_in">str</span>(<span class="built_in">line</span>))</div><div class="line">            # <span class="built_in">print</span>(<span class="string">"指令名称: "</span>, <span class="built_in">line</span>[<span class="number">0</span>])</div><div class="line">            # <span class="built_in">print</span>(<span class="string">"发送时间: "</span>, <span class="built_in">line</span>[<span class="number">1</span>][:<span class="number">6</span>])</div><div class="line"></div><div class="line">            # 经纬度转换</div><div class="line">            j = <span class="built_in">float</span>(<span class="built_in">line</span>[<span class="number">4</span>][:<span class="number">-7</span>])+<span class="built_in">float</span>(<span class="built_in">line</span>[<span class="number">4</span>][<span class="number">-7</span>:])/<span class="number">60</span></div><div class="line">            w = <span class="built_in">float</span>(<span class="built_in">line</span>[<span class="number">2</span>][:<span class="number">-7</span>])+<span class="built_in">float</span>(<span class="built_in">line</span>[<span class="number">2</span>][<span class="number">-7</span>:])/<span class="number">60</span></div><div class="line"></div><div class="line">            #时间</div><div class="line">            gpstime=time.strftime(<span class="string">'%H:%M:%S'</span>,time.localtime(time.time()))</div><div class="line"></div><div class="line">            # id</div><div class="line">            global l </div><div class="line">            l= l + <span class="number">1</span></div><div class="line"></div><div class="line">            # 添加数据</div><div class="line">            data.<span class="built_in">append</span>(j)</div><div class="line">            data.<span class="built_in">append</span>(w)</div><div class="line">            data.<span class="built_in">append</span>(l)</div><div class="line">            data.<span class="built_in">append</span>(gpstime)</div><div class="line">            <span class="built_in">print</span>(data)</div><div class="line">            with <span class="built_in">open</span>(<span class="string">'./rec_gps.csv'</span>,<span class="string">'a'</span>,newline=<span class="string">''</span>) as csvFile1:</div><div class="line">                writer = csv.writer(csvFile1)</div><div class="line">                writer.writerow((l,gpstime,j,w))</div><div class="line">                csvFile.close()</div><div class="line">            <span class="keyword">return</span> HttpResponse(json.dumps(data), content_type=<span class="string">'application/json'</span>)</div><div class="line">s = serial.Serial(<span class="string">'COM5'</span>, <span class="number">115200</span>)</div><div class="line">global l </div><div class="line">l = <span class="number">0</span></div><div class="line">csvFile = <span class="built_in">open</span>(<span class="string">'./rec_gps.csv'</span>, <span class="string">'a'</span>,encoding = <span class="string">'utf-8'</span>,newline=<span class="string">''</span>)</div><div class="line">writer = csv.writer(csvFile)</div><div class="line">writer.writerow((<span class="string">'id'</span>,<span class="string">'time'</span>,<span class="string">'longitude'</span>,<span class="string">'latitude'</span>))</div></pre></td></tr></table></figure>
<h5 id="index-html"><a href="#index-html" class="headerlink" title="index.html"></a>index.html</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=utf-8"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"initial-scale=1.0, user-scalable=no"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="css">        <span class="selector-tag">body</span>, <span class="selector-tag">html</span>&#123;<span class="attribute">width</span>: <span class="number">100%</span>;<span class="attribute">height</span>: <span class="number">100%</span>;<span class="attribute">margin</span>:<span class="number">0</span>;<span class="attribute">font-family</span>:<span class="string">"微软雅黑"</span>;&#125;</span></div><div class="line"><span class="undefined">        /* #allmap&#123;height:500px;width:100%;&#125;</span></div><div class="line"><span class="undefined">        #r-result&#123;width:100%; font-size:14px;&#125; */</span></div><div class="line"><span class="css">        <span class="selector-id">#allmap</span>&#123;<span class="attribute">float</span>: right;<span class="attribute">height</span>:<span class="number">100%</span>;<span class="attribute">width</span>:<span class="number">80%</span>;&#125;</span></div><div class="line"><span class="css">        <span class="selector-id">#r-result</span>&#123;<span class="attribute">float</span>: left;<span class="attribute">height</span>:<span class="number">80%</span>;<span class="attribute">width</span>:<span class="number">20%</span>; <span class="attribute">overflow</span>:auto;<span class="attribute">text-align</span>: center&#125;</span></div><div class="line"><span class="css">        <span class="selector-id">#list</span>&#123;<span class="attribute">position</span>:fixed;<span class="attribute">top</span>:-<span class="number">16px</span>;&#125;</span></div><div class="line"><span class="css">        <span class="selector-id">#title</span>&#123;<span class="attribute">position</span>:fixed;<span class="attribute">top</span>:<span class="number">5px</span>;&#125;</span></div><div class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"http://api.map.baidu.com/api?v=2.0&amp;ak=这里写你申请的百度地图api的key"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://apps.bdimg.com/libs/jquery/1.11.1/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- WGS84转BD09 start--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://unpkg.com/gcoord/dist/gcoord.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- end --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>经纬度定位<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- 框架测试start --&gt;</span></div><div class="line"></div><div class="line"><span class="comment">&lt;!-- end --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"allmap"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"r-result"</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"list"</span>&gt;</span></div><div class="line">             <span class="tag">&lt;<span class="name">p</span>  <span class="attr">style</span>=<span class="string">"background-color:rgb(0, 255, 221)"</span>&gt;</span>经纬度数据(WGS84坐标)<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </div><div class="line">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> = <span class="string">"title"</span> &gt;</span></div><div class="line">              <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"background-color:rgb(0, 255, 221)"</span>&gt;</span>ID  |  Time  |  Longitude  | Latitude<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </div><div class="line">         <span class="tag">&lt;<span class="name">p</span>&gt;</span>&amp;nbsp<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"list_result"</span> <span class="attr">style</span>=<span class="string">"font-size: 90%"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="actionscript">    <span class="comment">// 百度地图API功能</span></span></div><div class="line"><span class="actionscript">    <span class="keyword">var</span> map = <span class="keyword">new</span> BMap.Map(<span class="string">"allmap"</span>);</span></div><div class="line"><span class="actionscript">    map.centerAndZoom(<span class="keyword">new</span> BMap.Point(<span class="number">108.953445</span>,<span class="number">34.265721</span>),<span class="number">15</span>);</span></div><div class="line"><span class="actionscript">    map.enableScrollWheelZoom(<span class="literal">true</span>);</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="javascript">    $(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></div><div class="line"><span class="actionscript">      <span class="comment">// 列表 list</span></span></div><div class="line"><span class="javascript">      $(<span class="string">'#list'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></div><div class="line"><span class="javascript">          $.getJSON(<span class="string">'/ajax_list/'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">ret</span>)</span>&#123;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="actionscript">            <span class="comment">//</span></span></div><div class="line"><span class="javascript">            $(<span class="string">'#list_result'</span>).append(ret[<span class="number">2</span>]+<span class="string">",  "</span>+ret[<span class="number">3</span>]+<span class="string">",  "</span>+ret[<span class="number">0</span>].toFixed(<span class="number">6</span>)+<span class="string">",  "</span>+ret[<span class="number">1</span>].toFixed(<span class="number">6</span>) +<span class="string">"&lt;br /&gt;"</span>);</span></div><div class="line"><span class="actionscript">            <span class="comment">// $('#list_result').append("纬度：" + ret[1]+"&lt;br /&gt;" );</span></span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="actionscript">           <span class="comment">// WGS84坐标</span></span></div><div class="line"><span class="actionscript">            <span class="keyword">var</span> result = gcoord.transform(</span></div><div class="line"><span class="actionscript">                [ret[<span class="number">0</span>], ret[<span class="number">1</span>]],    <span class="comment">// 经纬度坐标</span></span></div><div class="line"><span class="actionscript">                gcoord.WGS84,               <span class="comment">// 当前坐标系</span></span></div><div class="line"><span class="actionscript">                gcoord.BD09                 <span class="comment">// 目标坐标系</span></span></div><div class="line"><span class="undefined">                );</span></div><div class="line"><span class="actionscript">            <span class="comment">//BD09坐标</span></span></div><div class="line"><span class="actionscript">            <span class="keyword">var</span> longitude = result[<span class="number">0</span>];</span></div><div class="line"><span class="actionscript">            <span class="keyword">var</span> latitude  = result[<span class="number">1</span>];</span></div><div class="line"><span class="actionscript">            <span class="keyword">var</span> id </span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">            map.clearOverlays(); </span></div><div class="line"><span class="actionscript">            <span class="keyword">var</span> new_point = <span class="keyword">new</span> BMap.Point(longitude,latitude);</span></div><div class="line"><span class="actionscript">            <span class="keyword">var</span> marker = <span class="keyword">new</span> BMap.Marker(new_point);  <span class="comment">// 创建标注</span></span></div><div class="line"><span class="actionscript">            map.addOverlay(marker);              <span class="comment">// 将标注添加到地图中</span></span></div><div class="line"><span class="undefined">            map.panTo(new_point);    </span></div><div class="line"><span class="javascript">            <span class="built_in">document</span>.getElementById(<span class="string">"longitude"</span>).innerHTML=longitude;  </span></div><div class="line"><span class="javascript">            <span class="built_in">document</span>.getElementById(<span class="string">"latitude"</span>).innerHTML=latitude; </span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="actionscript">            <span class="comment">// $('#list_result').append("经度：" + ret[0]+"&lt;br /&gt;" );</span></span></div><div class="line"><span class="actionscript">            <span class="comment">// $('#list_result').append("纬度：" + ret[1]+"&lt;br /&gt;" );</span></span></div><div class="line"><span class="undefined">          &#125;)</span></div><div class="line"><span class="undefined">      &#125;)</span></div><div class="line"><span class="undefined">    &#125;);</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- # 自动点击按钮js --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">myrefresh</span><span class="params">()</span></span>&#123; </span></div><div class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">'list'</span>).click();</span></div><div class="line"><span class="undefined">    &#125; </span></div><div class="line"><span class="actionscript">    setInterval(<span class="string">"myrefresh()"</span>,<span class="string">"2000"</span>); </span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h5 id="urls-py"><a href="#urls-py" class="headerlink" title="urls.py"></a>urls.py</h5><figure class="highlight xl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">from django.urls <span class="keyword">import</span> <span class="built_in">path</span></div><div class="line">from gps <span class="keyword">import</span> views <span class="keyword">as</span> gps_views</div><div class="line">from django.contrib <span class="keyword">import</span> admin</div><div class="line"></div><div class="line">urlpatterns = [</div><div class="line">    <span class="built_in">path</span>(<span class="string">''</span>, gps_views.index),</div><div class="line">    <span class="built_in">path</span>(<span class="string">'ajax_list/'</span>, gps_views.ajax_list)</div><div class="line">]</div></pre></td></tr></table></figure>
<h5 id="Run-me-bat"><a href="#Run-me-bat" class="headerlink" title="Run_me.bat"></a>Run_me.bat</h5><p>批处理文件，方便不懂Django的人开启服务  </p>
<figure class="highlight livescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">@echo <span class="literal">on</span></div><div class="line">python3 .<span class="string">\manage.py</span> runserver</div><div class="line">cmd /k</div></pre></td></tr></table></figure>
<h5 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h5><p><img src="https://upload-images.jianshu.io/upload_images/2847713-455415bc5286817c.gif?imageMogr2/auto-orient/strip" alt="俱乐部2.gif"> </p>
<p><img src="https://upload-images.jianshu.io/upload_images/2847713-125cd865b70b8f0d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="微信截图_20181115165343.png"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一个小项目，做点总结。&lt;br&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/2847713-455415bc5286817c.gif?imageMogr2/auto-orient/strip&quot; alt=&quot;俱乐部2.gif&quot;&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="https://x-nicolo.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Python" scheme="https://x-nicolo.github.io/tags/Python/"/>
    
      <category term="前端" scheme="https://x-nicolo.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>Schedule</title>
    <link href="https://x-nicolo.github.io/2018/09/14/Schedule/"/>
    <id>https://x-nicolo.github.io/2018/09/14/Schedule/</id>
    <published>2018-09-14T11:27:26.000Z</published>
    <updated>2018-09-14T11:27:26.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">私密博客，只能小可爱看</h3><link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css"> <link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css"> <script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <script src="//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js"></script> <div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none">  </div>]]></content>
    
    <summary type="html">
    
      私密博客，只能小可爱看
    
    </summary>
    
      <category term="编程" scheme="https://x-nicolo.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="前端" scheme="https://x-nicolo.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>关于简历，关于面试</title>
    <link href="https://x-nicolo.github.io/2018/08/31/%E5%85%B3%E4%BA%8E%E7%AE%80%E5%8E%86%EF%BC%8C%E5%85%B3%E4%BA%8E%E9%9D%A2%E8%AF%95/"/>
    <id>https://x-nicolo.github.io/2018/08/31/关于简历，关于面试/</id>
    <published>2018-08-31T07:13:46.000Z</published>
    <updated>2018-08-31T07:13:46.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">私密博客，只能小可爱看</h3><link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css"> <link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css"> <script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <script src="//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js"></script> <div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none"> 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 </div>]]></content>
    
    <summary type="html">
    
      私密博客，只能小可爱看
    
    </summary>
    
      <category term="随笔" scheme="https://x-nicolo.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>DO部署Python爬虫应用</title>
    <link href="https://x-nicolo.github.io/2018/07/28/DO%E9%83%A8%E7%BD%B2Python%E7%88%AC%E8%99%AB%E5%BA%94%E7%94%A8/"/>
    <id>https://x-nicolo.github.io/2018/07/28/DO部署Python爬虫应用/</id>
    <published>2018-07-28T02:31:31.000Z</published>
    <updated>2018-07-28T02:31:31.000Z</updated>
    
    <content type="html"><![CDATA[<p>DigitalOcean里面还有60美金，可以用一下，部署了服务器，我可能就不会再去折腾这个爬虫应用了。  </p>
<a id="more"></a>
<h2 id="创建Digital-Ocean账户，准备CentOS系统"><a href="#创建Digital-Ocean账户，准备CentOS系统" class="headerlink" title="创建Digital Ocean账户，准备CentOS系统"></a>创建Digital Ocean账户，准备CentOS系统</h2><p>DO账户GItHub上GET学生包。  </p>
<h3 id="创建Droplet"><a href="#创建Droplet" class="headerlink" title="创建Droplet"></a>创建Droplet</h3><p>毫不犹豫5刀乞丐版。别问为啥，因为穷，一小时0.7美元，资本主义就是好！<br><img src="https://upload-images.jianshu.io/upload_images/2847713-4a59c3102f2a4bf9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>选择旧金山的数据中心。<br><img src="https://upload-images.jianshu.io/upload_images/2847713-ddb50cd1b9118cf9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png">  </p>
<p>最后不需要的就不用看了，一路下来，CREAT。<br>OK  </p>
<p><img src="https://upload-images.jianshu.io/upload_images/2847713-12df869ec9b211fc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png">  </p>
<h3 id="初始配置"><a href="#初始配置" class="headerlink" title="初始配置"></a>初始配置</h3><p>邮箱收到邮件：<br><img src="https://upload-images.jianshu.io/upload_images/2847713-9eb13d1a00c9e154.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png">  </p>
<p>告诉了你IP地址（IP Address）、用户名（Username）和初始密码（Password），记住这3项内容下面会用到。<br>下载putty来登陆服务器。<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">打开putty，输入如下内容：</div><div class="line">Host Name：输入自己的IP</div><div class="line">Port：输入22</div><div class="line">Connection type：SSH</div><div class="line">Saved Sessions：给自己取个炫酷的登录名即可</div></pre></td></tr></table></figure></p>
<p>按照邮件中的信息登录putty。<br><img src="https://upload-images.jianshu.io/upload_images/2847713-ae73417ea4813642.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>在login as处输入自己的用户名即root，回车，提示输入密码，输入密码后点击回车即可登陆（ps.注意这里输入的密码是不可见的，也就是你输入密码的时候你看不到输入了任何东西。pps. putty中的粘贴快捷键是鼠标右键，千万不要用ctrl+v，也就是说你在邮件中复制了初始密码，在这里点一下右键，虽然什么都没有看到但是也点击回车即可。  </p>
<p><img src="https://upload-images.jianshu.io/upload_images/2847713-efacd2d779dff61e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>初始密码校验成功后，会让你必须修改初始密码：<br><img src="https://upload-images.jianshu.io/upload_images/2847713-dd65df08da826d21.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png">  </p>
<p>输初始密码后，输入新密码两次，出现#号即表示登录成功。<br><img src="https://upload-images.jianshu.io/upload_images/2847713-a38c28559eb35200.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png">  </p>
<h3 id="配置运行文件"><a href="#配置运行文件" class="headerlink" title="配置运行文件"></a>配置运行文件</h3><p>先查看Python版本：<br><img src="https://upload-images.jianshu.io/upload_images/2847713-f7263bf0d26f2742.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>确定Python就好了。  </p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;DigitalOcean里面还有60美金，可以用一下，部署了服务器，我可能就不会再去折腾这个爬虫应用了。  &lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="https://x-nicolo.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Python" scheme="https://x-nicolo.github.io/tags/Python/"/>
    
      <category term="爬虫" scheme="https://x-nicolo.github.io/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="服务器" scheme="https://x-nicolo.github.io/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>校招助手数据存储PyMySQL</title>
    <link href="https://x-nicolo.github.io/2018/07/23/%E6%A0%A1%E6%8B%9B%E5%8A%A9%E6%89%8B%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8PyMySQL/"/>
    <id>https://x-nicolo.github.io/2018/07/23/校招助手数据存储PyMySQL/</id>
    <published>2018-07-23T11:39:10.000Z</published>
    <updated>2018-07-23T11:39:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>之前做了<a href="https://x-nicolo.github.io/2018/06/13/%E6%8B%9B%E8%81%98%E4%BC%9A%E4%BF%A1%E6%81%AF%E6%8F%90%E9%86%92%E4%B9%8B%E5%BE%AE%E4%BF%A1%E6%9C%BA%E5%99%A8%E4%BA%BA/">招聘会信息提醒之微信机器人</a>，微信群已经建了7西电+5个西邮，总体的用户大概有3000多。小目标是让西电今年找工作的人都能用上。<br>和几个小伙伴一拍即合，做个小程序吧！<br><a id="more"></a><br>老生长谈，爬虫的三步走：  </p>
<ul>
<li>模拟登陆  </li>
<li>数据下载</li>
<li>数据存储  </li>
</ul>
<p>今天就做了这第三步。作为小程序的数据来源。 </p>
<h2 id="建数据库"><a href="#建数据库" class="headerlink" title="建数据库"></a>建数据库</h2><p>建库建表。<br><img src="https://upload-images.jianshu.io/upload_images/2847713-18bdcb5e204d749a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>
<p>要注意的问题：  </p>
<ul>
<li>infoid 选择自动递增</li>
<li>contents的文本信息较多，应选择text </li>
</ul>
<h2 id="数据库链接"><a href="#数据库链接" class="headerlink" title="数据库链接"></a>数据库链接</h2><p>Python中先导入PyMySQL，链接语句(私密信息已做处理)：<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">connection = pymysql.connect(<span class="attribute">host</span>=<span class="string">'XXXX'</span>, <span class="attribute">user</span>=<span class="string">'XXX'</span>, <span class="attribute">password</span>=<span class="string">'XXX'</span>, <span class="attribute">db</span>=<span class="string">'campushire'</span>, <span class="attribute">charset</span>=<span class="string">'utf8'</span>,</div><div class="line">                                     <span class="attribute">cursorclass</span>=pymysql.cursors.DictCursor)</div><div class="line">cur = connection.cursor()</div><div class="line">cur.execute(<span class="string">"USE campushire"</span>)</div></pre></td></tr></table></figure></p>
<p>这样就可以链接到数据库，选择自己要插入数据的表。  </p>
<h2 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h2><p>数据好插入，复杂的地方在于如何插入自己想要的数据，剔除掉不想要的数据。简单的几个函数，这里还是要再次提及，之前有使用过，但是又忘了。。。<br><figure class="highlight scheme"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[<span class="name">s.extract</span>() for s in tiao_bsObj.findAll(<span class="symbol">'p</span>', attrs=&#123;<span class="symbol">'class</span><span class="symbol">':</span> <span class="string">"windowClose"</span>&#125;)]</div></pre></td></tr></table></figure></p>
<p>嗯，这个的语句的意思是，去除指定标签下的所以内容。这里用于剔除睿思具体内容之前的编辑信息，以及就业信息网上的关闭窗口等等诸如此类不是正文的信息。  </p>
<p>插入语句：  </p>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">cur.execute(<span class="string">"INSERT INTO hireinfo (title,links,viewnum,class,contents) VALUES (<span class="subst">\"</span>%s<span class="subst">\"</span>,<span class="subst">\"</span>%s<span class="subst">\"</span>,<span class="subst">\"</span>%s<span class="subst">\"</span>,<span class="subst">\"</span>%s<span class="subst">\"</span>,<span class="subst">\"</span>%s<span class="subst">\"</span>)"</span>, (P,L,V,C,R))</div><div class="line">cur.connection.commit()</div><div class="line">time.sleep(<span class="number">3</span>)</div></pre></td></tr></table></figure>
<p>插入，提交。延时还是要做的，好像是之前访问数据库太快导致中断？？？  </p>
<p>需要注意的是，表里列的名称要写对，以及VALUES的个数，还有后面要插入的数据与之前的一一对应。  </p>
<p>基本这样就OK了。  </p>
<p><img src="https://upload-images.jianshu.io/upload_images/2847713-3d84ccdbe27dbc47.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png">  </p>
<p>吃饭去，饿死了。  </p>
<p>代码：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># coding:utf - 8</span></div><div class="line"><span class="keyword">import</span> urllib.request</div><div class="line"><span class="keyword">import</span> sys, io</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"><span class="keyword">import</span> itchat</div><div class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</div><div class="line"><span class="keyword">import</span> time</div><div class="line"><span class="keyword">import</span> re</div><div class="line"><span class="keyword">import</span> _thread</div><div class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlopen</div><div class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"><span class="keyword">import</span> time  <span class="comment"># 导入包</span></div><div class="line"><span class="keyword">import</span> urllib.request</div><div class="line"><span class="keyword">import</span> pymysql</div><div class="line">sys.stdout = io.TextIOWrapper(sys.stdout.buffer,encoding=<span class="string">'utf8'</span>)</div><div class="line"></div><div class="line"><span class="comment"># from __future__ import with_statement</span></div><div class="line"><span class="keyword">import</span> contextlib</div><div class="line"><span class="keyword">try</span>:</div><div class="line">    <span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlencode</div><div class="line"><span class="keyword">except</span> ImportError:</div><div class="line">    <span class="keyword">from</span> urllib <span class="keyword">import</span> urlencode</div><div class="line"><span class="keyword">try</span>:</div><div class="line">    <span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlopen</div><div class="line"><span class="keyword">except</span> ImportError:</div><div class="line">    <span class="keyword">from</span> urllib2 <span class="keyword">import</span> urlopen</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">getPageContent</span><span class="params">(url)</span>:</span></div><div class="line">    headers = &#123;<span class="string">'User-Agent'</span> : <span class="string">'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:29.0) Gecko/20100101 Firefox/29.0'</span>&#125;</div><div class="line">    req = urllib.request.Request(url=url,headers=headers)</div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        res = urllib.request.urlopen(req)</div><div class="line">    <span class="keyword">except</span> urllib.error.URLError <span class="keyword">as</span> e:</div><div class="line">        <span class="keyword">return</span> e</div><div class="line">    page_content = res.read()</div><div class="line">    page_content=BeautifulSoup(page_content,<span class="string">"lxml"</span>)</div><div class="line">    <span class="keyword">return</span> page_content</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">    itchat.send_msg(jobinfo2, userName)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">make_tiny</span><span class="params">(url)</span>:</span></div><div class="line">    request_url = (<span class="string">'http://tinyurl.com/api-create.php?'</span> +</div><div class="line">                   urlencode(&#123;<span class="string">'url'</span>: url&#125;))</div><div class="line">    <span class="keyword">with</span> contextlib.closing(urlopen(request_url)) <span class="keyword">as</span> response:</div><div class="line">        <span class="keyword">return</span> response.read().decode(<span class="string">'utf-8'</span>)</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">timer</span><span class="params">(n)</span>:</span></div><div class="line">    itchat.auto_login(hotReload=<span class="keyword">True</span>)  <span class="comment"># 可设置hotReload = True</span></div><div class="line">    time.sleep(n)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">rs</span><span class="params">()</span>:</span></div><div class="line">    pageURL = set()</div><div class="line">    <span class="comment"># job_rs = '🔴今日睿思校园招聘'+"\n"+'[机器喵自动获取，仅供参考]'+"\n"+'有问题请艾特群主@肖洒'+"\n"+'更多有意思的小玩意'+"\n"+'👉https://x-nicolo.github.io/'+"\n"+"--------------------"+"\n"</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">10</span>):</div><div class="line">        pages = <span class="string">'http://rsbbs.xidian.edu.cn/forum.php?mod=forumdisplay&amp;fid=554&amp;page='</span> + str(i) + <span class="string">'&amp;mobile=2'</span></div><div class="line">        <span class="keyword">if</span> pages <span class="keyword">not</span> <span class="keyword">in</span> pageURL:</div><div class="line">            headers = &#123;</div><div class="line">                <span class="string">'User-Agent'</span>: <span class="string">r'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) '</span></div><div class="line">                              <span class="string">r'Chrome/45.0.2454.85 Safari/537.36 115Browser/6.0.3'</span>,</div><div class="line">                <span class="string">'Referer'</span>: <span class="string">r'http://rsbbs.xidian.edu.cn'</span>,</div><div class="line">                <span class="string">'Connection'</span>: <span class="string">'keep-alive'</span>&#125;</div><div class="line">            req = request.Request(pages, headers=headers)</div><div class="line">            html = request.urlopen(req)</div><div class="line">            bsObj = BeautifulSoup(html.read(), <span class="string">"lxml"</span>)</div><div class="line">            [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> bsObj.findAll(<span class="string">'i'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"pstatus"</span>&#125;)]</div><div class="line">            tiezi = bsObj.findAll(<span class="string">"ul"</span>)</div><div class="line">            <span class="keyword">for</span> tiaos <span class="keyword">in</span> tiezi:</div><div class="line">                <span class="keyword">for</span> tiao <span class="keyword">in</span> tiaos.findAll(<span class="string">'a'</span>):</div><div class="line">                    <span class="keyword">for</span> person <span class="keyword">in</span> tiao.findAll(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"by"</span>&#125;):</div><div class="line">                        T = person.get_text().strip()</div><div class="line">                        [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> tiao.findAll(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"by"</span>&#125;)]</div><div class="line">                    <span class="comment"># title</span></div><div class="line">                    P = tiao.get_text().strip().strip(<span class="string">'【散金币】'</span>).strip(<span class="string">'【金币】'</span>).strip(<span class="string">'（散金币）'</span>).strip(<span class="string">'（金币）'</span>) </div><div class="line">                    <span class="keyword">if</span> <span class="string">'href'</span> <span class="keyword">in</span> tiao.attrs:</div><div class="line">                        <span class="keyword">try</span>:</div><div class="line">                            tiao_links = <span class="string">"http://rsbbs.xidian.edu.cn/"</span> + tiao.attrs[<span class="string">'href'</span>]</div><div class="line">                            tiao_html = urlopen(tiao_links)</div><div class="line">                            L=str(make_tiny(tiao_links))</div><div class="line">                            tiao_bsObj = BeautifulSoup(tiao_html.read(), <span class="string">"lxml"</span>)</div><div class="line">                            [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> tiao_bsObj.findAll(<span class="string">'i'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"pstatus"</span>&#125;)]</div><div class="line">                            content = tiao_bsObj.findAll(<span class="string">"div"</span>, &#123;<span class="string">"class"</span>: <span class="string">"message"</span>&#125;)[<span class="number">0</span>]</div><div class="line">                            R = content.get_text().strip()</div><div class="line">                            V=<span class="number">0</span></div><div class="line">                            C=<span class="string">'rs'</span></div><div class="line"></div><div class="line">                        <span class="keyword">except</span> (ValueError, IndexError) <span class="keyword">as</span> e:</div><div class="line">                            <span class="keyword">pass</span></div><div class="line">                        pageURL.add(pages)</div><div class="line">                                            </div><div class="line">                        cur.execute(<span class="string">"INSERT INTO hireinfo (title,links,contents,viewnum,class) VALUES (%s,%s,%s,%s,%s)"</span>, (P,L,R,V,C))</div><div class="line">                        cur.connection.commit()</div><div class="line">        time.sleep(<span class="number">3</span>)  <span class="comment"># 设置时间间隔为3秒</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">xdjobs</span><span class="params">()</span>:</span></div><div class="line">    <span class="comment"># job_rs = '🔴就业信息网最新10条信息'+"\n"+'[机器喵自动获取，仅供参考]'+"\n"+'有问题请艾特群主@肖洒'+"\n"+'更多有意思的小玩意'+"\n"+'👉https://x-nicolo.github.io/'+"\n"+"--------------------"+"\n"</span></div><div class="line">    url = <span class="string">'http://job.xidian.edu.cn/html/zpxx/jobs/'</span></div><div class="line">    headers = &#123;<span class="string">'User-Agent'</span> : <span class="string">'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:29.0) Gecko/20100101 Firefox/29.0'</span>&#125;  </div><div class="line">    req = urllib.request.Request(url=url,headers=headers)</div><div class="line">    res = urllib.request.urlopen(req)</div><div class="line">    page_content = res.read()</div><div class="line">    page_content=BeautifulSoup(page_content,<span class="string">"lxml"</span>)</div><div class="line">    job_content = page_content.find(<span class="string">"div"</span>, &#123;<span class="string">"class"</span>: <span class="string">"content"</span>&#125;)</div><div class="line">    rows = job_content.findAll(<span class="string">"span"</span>)</div><div class="line">    job_info=[]</div><div class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> rows:</div><div class="line">        <span class="keyword">for</span> cell <span class="keyword">in</span> row.findAll(<span class="string">'a'</span>):</div><div class="line">            info=cell.get_text()</div><div class="line">            P = cell.get_text().strip()</div><div class="line">            tiao_links = <span class="string">"http://job.xidian.edu.cn"</span> + cell.attrs[<span class="string">'href'</span>]</div><div class="line">            L=str(make_tiny(tiao_links))</div><div class="line"></div><div class="line">            tiao_html = urllib.request.Request(url=tiao_links,headers=headers)</div><div class="line">            tiao_res = urllib.request.urlopen(tiao_html)</div><div class="line">            tiao_bsObj = BeautifulSoup(tiao_res.read(), <span class="string">"lxml"</span>)</div><div class="line"></div><div class="line">            [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> tiao_bsObj.findAll(<span class="string">'p'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"windowClose"</span>&#125;)]</div><div class="line">            [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> tiao_bsObj.findAll(<span class="string">'p'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"arcInfo"</span>&#125;)]</div><div class="line"></div><div class="line">            [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> tiao_bsObj.findAll(<span class="string">'a'</span>, attrs=&#123;<span class="string">'href'</span>: <span class="string">"javascript:window.print()"</span>&#125;)]</div><div class="line">            [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> tiao_bsObj.findAll(<span class="string">'a'</span>, attrs=&#123;<span class="string">'href'</span>: <span class="string">"javascript:window.close()"</span>&#125;)]</div><div class="line">            [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> tiao_bsObj.findAll(<span class="string">'div'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"context"</span>&#125;)]</div><div class="line">            </div><div class="line">            content = tiao_bsObj.findAll(<span class="string">"div"</span>, &#123;<span class="string">"class"</span>: <span class="string">"content"</span>&#125;)[<span class="number">0</span>]</div><div class="line">            R = content.get_text().strip()</div><div class="line">            <span class="comment"># print(R)</span></div><div class="line"></div><div class="line">            V=<span class="number">0</span></div><div class="line">            C=<span class="string">"就业信息网"</span></div><div class="line"></div><div class="line">            cur.execute(<span class="string">"INSERT INTO hireinfo (title,links,viewnum,class,contents) VALUES (%s,%s,%s,%s,%s)"</span>, (P,L,V,C,R))</div><div class="line">            cur.connection.commit()</div><div class="line">            time.sleep(<span class="number">3</span>) </div><div class="line"></div><div class="line">connection = pymysql.connect(host=<span class="string">'XXX'</span>, user=<span class="string">'XXX'</span>, password=<span class="string">'XXX'</span>, db=<span class="string">'campushire'</span>, charset=<span class="string">'utf8'</span>,</div><div class="line">                                     cursorclass=pymysql.cursors.DictCursor)</div><div class="line">cur = connection.cursor()</div><div class="line">cur.execute(<span class="string">"USE campushire"</span>)</div><div class="line">xdjobs()</div><div class="line">rs()</div></pre></td></tr></table></figure></p>
<p>sql：<a href="http://oeiseebmx.bkt.clouddn.com/campushire.sql" target="_blank" rel="external">点击下载</a></p>
<h2 id="程序及数据库更新"><a href="#程序及数据库更新" class="headerlink" title="程序及数据库更新"></a>程序及数据库更新</h2><ul>
<li>增加了宣讲会信息的爬取 </li>
<li>增加了数据库操作的时间插入<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment"># coding:utf - 8</span></div><div class="line"><span class="keyword">import</span> urllib.request</div><div class="line"><span class="keyword">import</span> sys, io</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"><span class="keyword">import</span> itchat</div><div class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</div><div class="line"><span class="keyword">import</span> time</div><div class="line"><span class="keyword">import</span> re</div><div class="line"><span class="keyword">import</span> _thread</div><div class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlopen</div><div class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"><span class="keyword">import</span> urllib.request</div><div class="line"><span class="keyword">import</span> pymysql</div><div class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</div><div class="line"><span class="keyword">import</span> datetime</div><div class="line"><span class="keyword">import</span> time</div><div class="line">sys.stdout = io.TextIOWrapper(sys.stdout.buffer,encoding=<span class="string">'utf8'</span>)</div><div class="line"><span class="keyword">import</span> contextlib</div><div class="line"><span class="keyword">try</span>:</div><div class="line">    <span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlencode</div><div class="line"><span class="keyword">except</span> ImportError:</div><div class="line">    <span class="keyword">from</span> urllib <span class="keyword">import</span> urlencode</div><div class="line"><span class="keyword">try</span>:</div><div class="line">    <span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlopen</div><div class="line"><span class="keyword">except</span> ImportError:</div><div class="line">    <span class="keyword">from</span> urllib2 <span class="keyword">import</span> urlopen</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">getJobInfo</span><span class="params">(page_content)</span>:</span></div><div class="line">    job_content = page_content.find(<span class="string">"table"</span>, &#123;<span class="string">"class"</span>: <span class="string">"table cxxt-table"</span>&#125;)</div><div class="line">    rows = job_content.findAll(<span class="string">"tr"</span>)[<span class="number">1</span>:]</div><div class="line">    job_info=[]</div><div class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> rows:</div><div class="line">        <span class="keyword">for</span> cell <span class="keyword">in</span> row.findAll(<span class="string">'td'</span>)[:<span class="number">-2</span>]:</div><div class="line">            info=cell.get_text().replace(<span class="string">'&amp;nbsp'</span>,<span class="string">''</span>).strip(<span class="string">"官云宣讲"</span>).strip(<span class="string">"官"</span>).strip(<span class="string">"西电"</span>).strip(<span class="string">"交大"</span>).strip(<span class="string">"西工大"</span>)</div><div class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> cell.findAll(<span class="string">'span'</span>)[<span class="number">1</span>:<span class="number">2</span>]:</div><div class="line">                info1=i.get_text()</div><div class="line">                job_info.append(info1)</div><div class="line">            job_info.append(info)</div><div class="line">    <span class="keyword">return</span> job_info[<span class="number">1</span>:]</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">getPageContent</span><span class="params">(url)</span>:</span></div><div class="line">    headers = &#123;<span class="string">'User-Agent'</span> : <span class="string">'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:29.0) Gecko/20100101 Firefox/29.0'</span>&#125;</div><div class="line">    req = urllib.request.Request(url=url,headers=headers)</div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        res = urllib.request.urlopen(req)</div><div class="line">    <span class="keyword">except</span> urllib.error.URLError <span class="keyword">as</span> e:</div><div class="line">        <span class="keyword">return</span> e</div><div class="line">    page_content = res.read()</div><div class="line">    page_content=BeautifulSoup(page_content,<span class="string">"lxml"</span>)</div><div class="line">    <span class="keyword">return</span> page_content</div><div class="line">    </div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">make_tiny</span><span class="params">(url)</span>:</span></div><div class="line">    request_url = (<span class="string">'http://tinyurl.com/api-create.php?'</span> +</div><div class="line">                   urlencode(&#123;<span class="string">'url'</span>: url&#125;))</div><div class="line">    <span class="keyword">with</span> contextlib.closing(urlopen(request_url)) <span class="keyword">as</span> response:</div><div class="line">        <span class="keyword">return</span> response.read().decode(<span class="string">'utf-8'</span>)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">timer</span><span class="params">(n)</span>:</span></div><div class="line">    itchat.auto_login(hotReload=<span class="keyword">True</span>)</div><div class="line">    time.sleep(n)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">rs</span><span class="params">()</span>:</span></div><div class="line">    pageURL = set()</div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">10</span>):</div><div class="line">        pages = <span class="string">'http://rsbbs.xidian.edu.cn/forum.php?mod=forumdisplay&amp;fid=554&amp;page='</span> + str(i) + <span class="string">'&amp;mobile=2'</span></div><div class="line">        <span class="keyword">if</span> pages <span class="keyword">not</span> <span class="keyword">in</span> pageURL:</div><div class="line">            headers = &#123;</div><div class="line">                <span class="string">'User-Agent'</span>: <span class="string">r'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) '</span></div><div class="line">                              <span class="string">r'Chrome/45.0.2454.85 Safari/537.36 115Browser/6.0.3'</span>,</div><div class="line">                <span class="string">'Referer'</span>: <span class="string">r'http://rsbbs.xidian.edu.cn'</span>,</div><div class="line">                <span class="string">'Connection'</span>: <span class="string">'keep-alive'</span>&#125;</div><div class="line">            req = request.Request(pages, headers=headers)</div><div class="line">            html = request.urlopen(req)</div><div class="line">            bsObj = BeautifulSoup(html.read(), <span class="string">"lxml"</span>)</div><div class="line">            [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> bsObj.findAll(<span class="string">'i'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"pstatus"</span>&#125;)]</div><div class="line">            tiezi = bsObj.findAll(<span class="string">"ul"</span>)</div><div class="line">            <span class="keyword">for</span> tiaos <span class="keyword">in</span> tiezi:</div><div class="line">                <span class="keyword">for</span> tiao <span class="keyword">in</span> tiaos.findAll(<span class="string">'a'</span>):</div><div class="line">                    <span class="keyword">for</span> person <span class="keyword">in</span> tiao.findAll(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"by"</span>&#125;):</div><div class="line">                        T = person.get_text().strip()</div><div class="line">                        [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> tiao.findAll(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"by"</span>&#125;)]</div><div class="line">                    P = tiao.get_text().strip().strip(<span class="string">'【散金币】'</span>).strip(<span class="string">'【金币】'</span>).strip(<span class="string">'（散金币）'</span>).strip(<span class="string">'（金币）'</span>) </div><div class="line">                    <span class="keyword">if</span> <span class="string">'href'</span> <span class="keyword">in</span> tiao.attrs:</div><div class="line">                        <span class="keyword">try</span>:</div><div class="line">                            tiao_links = <span class="string">"http://rsbbs.xidian.edu.cn/"</span> + tiao.attrs[<span class="string">'href'</span>]</div><div class="line">                            tiao_html = urlopen(tiao_links)</div><div class="line">                            L=str(make_tiny(tiao_links))</div><div class="line">                            tiao_bsObj = BeautifulSoup(tiao_html.read(), <span class="string">"lxml"</span>)</div><div class="line">                            [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> tiao_bsObj.findAll(<span class="string">'i'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"pstatus"</span>&#125;)]</div><div class="line">                            content = tiao_bsObj.findAll(<span class="string">"div"</span>, &#123;<span class="string">"class"</span>: <span class="string">"message"</span>&#125;)[<span class="number">0</span>]</div><div class="line">                            R = content.get_text().strip()</div><div class="line">                            V=<span class="number">0</span></div><div class="line">                            C=<span class="string">'rs'</span></div><div class="line">                            time_now = time.strftime(<span class="string">'%H%M'</span>, time.localtime(time.time()))</div><div class="line">                            DBT = datetime.datetime.now().strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>)</div><div class="line">                        <span class="keyword">except</span> (ValueError, IndexError) <span class="keyword">as</span> e:</div><div class="line">                            <span class="keyword">pass</span></div><div class="line">                        pageURL.add(pages)</div><div class="line">                                            </div><div class="line">                        cur.execute(<span class="string">"INSERT INTO hireinfo (title,links,contents,viewnum,classname,dbtime) VALUES (%s,%s,%s,%s,%s,%s)"</span>, (P,L,R,V,C,DBT))</div><div class="line">                        cur.connection.commit()</div><div class="line">        time.sleep(<span class="number">3</span>)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">xdjobs</span><span class="params">()</span>:</span></div><div class="line">    url = <span class="string">'http://job.xidian.edu.cn/html/zpxx/jobs/'</span></div><div class="line">    headers = &#123;<span class="string">'User-Agent'</span> : <span class="string">'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:29.0) Gecko/20100101 Firefox/29.0'</span>&#125;  </div><div class="line">    req = urllib.request.Request(url=url,headers=headers)</div><div class="line">    res = urllib.request.urlopen(req)</div><div class="line">    page_content = res.read()</div><div class="line">    page_content=BeautifulSoup(page_content,<span class="string">"lxml"</span>)</div><div class="line">    job_content = page_content.find(<span class="string">"div"</span>, &#123;<span class="string">"class"</span>: <span class="string">"content"</span>&#125;)</div><div class="line">    rows = job_content.findAll(<span class="string">"span"</span>)</div><div class="line">    job_info=[]</div><div class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> rows:</div><div class="line">        <span class="keyword">for</span> cell <span class="keyword">in</span> row.findAll(<span class="string">'a'</span>):</div><div class="line">            info=cell.get_text()</div><div class="line">            P = cell.get_text().strip()</div><div class="line">            tiao_links = <span class="string">"http://job.xidian.edu.cn"</span> + cell.attrs[<span class="string">'href'</span>]</div><div class="line">            L=str(make_tiny(tiao_links))</div><div class="line">            tiao_html = urllib.request.Request(url=tiao_links,headers=headers)</div><div class="line">            tiao_res = urllib.request.urlopen(tiao_html)</div><div class="line">            tiao_bsObj = BeautifulSoup(tiao_res.read(), <span class="string">"lxml"</span>)</div><div class="line">            [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> tiao_bsObj.findAll(<span class="string">'p'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"windowClose"</span>&#125;)]</div><div class="line">            [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> tiao_bsObj.findAll(<span class="string">'p'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"arcInfo"</span>&#125;)]</div><div class="line">            [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> tiao_bsObj.findAll(<span class="string">'a'</span>, attrs=&#123;<span class="string">'href'</span>: <span class="string">"javascript:window.print()"</span>&#125;)]</div><div class="line">            [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> tiao_bsObj.findAll(<span class="string">'a'</span>, attrs=&#123;<span class="string">'href'</span>: <span class="string">"javascript:window.close()"</span>&#125;)]</div><div class="line">            [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> tiao_bsObj.findAll(<span class="string">'div'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"context"</span>&#125;)]</div><div class="line">            content = tiao_bsObj.findAll(<span class="string">"div"</span>, &#123;<span class="string">"class"</span>: <span class="string">"content"</span>&#125;)[<span class="number">0</span>]</div><div class="line">            R = content.get_text().strip()</div><div class="line">            time_now = time.strftime(<span class="string">'%H%M'</span>, time.localtime(time.time()))</div><div class="line">            DBT = datetime.datetime.now().strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>)</div><div class="line">            V=<span class="number">0</span></div><div class="line">            C=<span class="string">"就业信息网"</span></div><div class="line">            cur.execute(<span class="string">"INSERT INTO hireinfo (title,links,viewnum,classname,contents,dbtime) VALUES (%s,%s,%s,%s,%s,%s)"</span>, (P,L,V,C,R,DBT))</div><div class="line">            cur.connection.commit()</div><div class="line">            time.sleep(<span class="number">3</span>) </div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">seminar</span><span class="params">()</span>:</span></div><div class="line">    url = [<span class="string">'https://xjh.haitou.cc/xa/uni-29'</span>,<span class="string">'https://xjh.haitou.cc/xa/uni-28'</span>,<span class="string">'https://xjh.haitou.cc/xa/uni-27'</span>]</div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> url:</div><div class="line">            page_content=getPageContent(i)</div><div class="line">            job_content = page_content.find(<span class="string">"table"</span>, &#123;<span class="string">"class"</span>: <span class="string">"table cxxt-table"</span>&#125;)</div><div class="line">            rows = job_content.findAll(<span class="string">"tr"</span>)[<span class="number">1</span>:]</div><div class="line">            job_info=[]</div><div class="line">            <span class="keyword">for</span> row <span class="keyword">in</span> rows:</div><div class="line">                <span class="keyword">for</span> cell <span class="keyword">in</span> row.findAll(<span class="string">'td'</span>)[:<span class="number">-2</span>]:</div><div class="line">                    info=cell.get_text().replace(<span class="string">'&amp;nbsp'</span>,<span class="string">''</span>).strip(<span class="string">"官云宣讲"</span>).strip(<span class="string">"热"</span>).strip(<span class="string">"官"</span>).strip(<span class="string">"西电"</span>).strip(<span class="string">"交大"</span>).strip(<span class="string">"西工大"</span>)</div><div class="line">                    <span class="keyword">for</span> i <span class="keyword">in</span> cell.findAll(<span class="string">'span'</span>)[<span class="number">1</span>:<span class="number">2</span>]:</div><div class="line">                        info1=i.get_text()</div><div class="line">                        job_info.append(info1)</div><div class="line">                    job_info.append(info)</div><div class="line">                    jobinfo=job_info[<span class="number">1</span>:]</div><div class="line">                time_now = time.strftime(<span class="string">'%H%M'</span>, time.localtime(time.time()))</div><div class="line">                DBT = datetime.datetime.now().strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>)</div><div class="line">                U = jobinfo[<span class="number">0</span>]</div><div class="line">                C = jobinfo[<span class="number">1</span>]</div><div class="line">                T = jobinfo[<span class="number">3</span>]</div><div class="line">                P = jobinfo[<span class="number">4</span>]</div><div class="line">                cur.execute(<span class="string">"INSERT INTO seminar (university,company,time1,position,dbtime) VALUES (%s,%s,%s,%s,%s)"</span>, (U,C,T,P,DBT))</div><div class="line">                cur.connection.commit()</div><div class="line">                job_info=[]</div><div class="line">    <span class="keyword">except</span>:</div><div class="line">        jobinfo=[<span class="string">"【西电今日无招聘会信息哦】"</span>]</div><div class="line">        print(<span class="string">"jobinfo"</span>)</div><div class="line">connection = pymysql.connect(host=<span class="string">'localhost'</span>, user=<span class="string">'root'</span>, password=<span class="string">'root'</span>, db=<span class="string">'campushire'</span>, charset=<span class="string">'utf8'</span>,</div><div class="line">                                     cursorclass=pymysql.cursors.DictCursor)</div><div class="line">cur = connection.cursor()</div><div class="line">cur.execute(<span class="string">"USE campushire"</span>)</div><div class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">    time_now = time.strftime(<span class="string">'%H%M'</span>,time.localtime(time.time()))</div><div class="line">    <span class="keyword">if</span> int(time_now)  == <span class="number">0000</span>:</div><div class="line">        xdjobs()</div><div class="line">        rs()</div><div class="line">        seminar()</div></pre></td></tr></table></figure>
</li>
</ul>
<p><a href="http://oeiseebmx.bkt.clouddn.com/CampusHire.sql" target="_blank" rel="external">new sql downlaod</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前做了&lt;a href=&quot;https://x-nicolo.github.io/2018/06/13/%E6%8B%9B%E8%81%98%E4%BC%9A%E4%BF%A1%E6%81%AF%E6%8F%90%E9%86%92%E4%B9%8B%E5%BE%AE%E4%BF%A1%E6%9C%BA%E5%99%A8%E4%BA%BA/&quot;&gt;招聘会信息提醒之微信机器人&lt;/a&gt;，微信群已经建了7西电+5个西邮，总体的用户大概有3000多。小目标是让西电今年找工作的人都能用上。&lt;br&gt;和几个小伙伴一拍即合，做个小程序吧！&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="https://x-nicolo.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Python" scheme="https://x-nicolo.github.io/tags/Python/"/>
    
      <category term="爬虫" scheme="https://x-nicolo.github.io/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="MySQL" scheme="https://x-nicolo.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Java面试笔记</title>
    <link href="https://x-nicolo.github.io/2018/07/23/Java%E9%9D%A2%E8%AF%95%E7%AC%94%E8%AE%B0/"/>
    <id>https://x-nicolo.github.io/2018/07/23/Java面试笔记/</id>
    <published>2018-07-23T01:19:17.000Z</published>
    <updated>2018-07-23T01:19:17.000Z</updated>
    
    <content type="html"><![CDATA[<p>站在巨人的肩膀上，好记性不如烂键盘。  </p>
<p>All from <a href="https://love2.io/@hakukata/doc/Java-Interview-Question/java/what_ate_object-oriented_features.md" target="_blank" rel="external">java面试笔记</a><br><a id="more"></a></p>
<blockquote>
<p>本开源书 forked from Java 面试笔记，作者为 <a href="https://github.com/DONGChuan" target="_blank" rel="external">DONGChuan</a>，欢迎大家 star 原作者的 repo，以便获得最新更新，谢谢！  </p>
</blockquote>
<h2 id="说一说Java"><a href="#说一说Java" class="headerlink" title="说一说Java"></a>说一说Java</h2><p>sun公司在1995创建。<br>特点：  </p>
<ul>
<li>面向对象</li>
<li>平台独立</li>
<li>解释性语言</li>
<li>多线程</li>
</ul>
<p>Java最重要的特点就平台独立，平台独立意味着可以在一个系统编译它然后在另一个系统使用它。  </p>
<h3 id="Java为什么是高效的？"><a href="#Java为什么是高效的？" class="headerlink" title="Java为什么是高效的？"></a>Java为什么是高效的？</h3><p>因为Java使用Just-In-Time（即时）编译器。<br>把Java字节码直接转换成可以直接发送给处理器的指令的程序。  </p>
<h3 id="列举出2个IDE"><a href="#列举出2个IDE" class="headerlink" title="列举出2个IDE"></a>列举出2个IDE</h3><p>eclipse，NetBeans。  </p>
<h3 id="面向对象的特征有那些方面？"><a href="#面向对象的特征有那些方面？" class="headerlink" title="面向对象的特征有那些方面？"></a>面向对象的特征有那些方面？</h3><ul>
<li>封装</li>
</ul>
<p>让变量和访问这个变量的方法放在一起，将一个类中的成员变量全部定义成私有的，只有这个类自己的方法才可以访问到这些成员变量。</p>
<ul>
<li>抽象  </li>
</ul>
<p>声明方法的存在而不去实现它的类叫做抽象类。 </p>
<ul>
<li>继承  </li>
</ul>
<p>继承是子类自动共享父类数据和方法的机制。是类之间的一种关系，提高了软件的可重用性和可扩展性。  </p>
<ul>
<li>多态  </li>
</ul>
<p>一个方法或者一个对象可以有不同的形式。  </p>
<h3 id="JDK-JRE-JVM"><a href="#JDK-JRE-JVM" class="headerlink" title="JDK JRE JVM"></a>JDK JRE JVM</h3><ul>
<li>解释它们的区别  </li>
</ul>
<h4 id="JDK"><a href="#JDK" class="headerlink" title="JDK"></a>JDK</h4><p>Java Development Kit用作开发，包含JRE，编译器和其他的工具。可以让开发者开发，编译，执行Java应用程序。  </p>
<h4 id="JRE"><a href="#JRE" class="headerlink" title="JRE"></a>JRE</h4><p>Java运行时环境是将要执行Java虚拟机，可以想象成它是一个容器，JVM是它的内容。  </p>
<p>JRE = JVM + Java Packages Classes(like util, math, lang, awt,swing etc)+runtime libraries.  </p>
<h4 id="JVM"><a href="#JVM" class="headerlink" title="JVM"></a>JVM</h4><p>Java virtual machine（Java虚拟机）是一个可以执行Java编译产生的Java class文件的虚拟机进程，是一个纯的运行环境。  </p>
<h4 id="JVM不是平台独立的"><a href="#JVM不是平台独立的" class="headerlink" title="JVM不是平台独立的"></a>JVM不是平台独立的</h4><p>Java被设计成允许应用程序可以运行在任意的平台，而不需要程序员为每一个平台单独重写或者是重新编译。Java虚拟机让这个变为可能，因为它知道底层硬件平台的指令长度和其他特性。  </p>
<h2 id="什么是对象？"><a href="#什么是对象？" class="headerlink" title="什么是对象？"></a>什么是对象？</h2><ul>
<li>对象是程序运行时的实体  </li>
<li>它的状态存储在变量  </li>
<li>行为是通过方法实现的</li>
<li>方法上操作对象的内部状态</li>
<li>方法是对象对对象的通信的主要手段</li>
</ul>
<h3 id="一个类是由哪些变量构成的？"><a href="#一个类是由哪些变量构成的？" class="headerlink" title="一个类是由哪些变量构成的？"></a>一个类是由哪些变量构成的？</h3><ul>
<li>本地变量<br>在方法体，构造体内部定义的变量。</li>
<li>实例变量<br>在类里但是不在方法里。<br>在类被载入的时候被实例化。</li>
<li>类变量<br>在类里但在方法外，加了static关键字，也叫做静态变量。  </li>
</ul>
<h3 id="静态变量和实例变量的区别？"><a href="#静态变量和实例变量的区别？" class="headerlink" title="静态变量和实例变量的区别？"></a>静态变量和实例变量的区别？</h3><ul>
<li>语法上定义区别：静态变量前要加static关键字，而实例变量前则不加。  </li>
<li>在程序运行时的区别：<br>实例变量属于某个对象的属性，必须创建了实例对象（new一个)其中的实例变量才会被分配空间，才能使用这个实例变量。  </li>
</ul>
<p>静态变量不属于某个实例对象，而是属于类，所以也称为类变量，只要程序加载了类的字节码，不用创建任何实例对象，静态变量就会被分配空间，静态变量就可以被使用了。  </p>
<ul>
<li>总结：实例变量必须创建对象后才可以通过这个对象来使用，静态变量则可以直接使用类名来引用。  </li>
</ul>
<h2 id="封装Encapsulation"><a href="#封装Encapsulation" class="headerlink" title="封装Encapsulation"></a>封装Encapsulation</h2><ul>
<li>使一个类的变量私有化private  </li>
<li>提供public方法来调用这些变量。所以外部类是进不去的。这些变量被隐藏在类里。只能通过已经定义的public方法调用。  </li>
</ul>
<p>好处：<br>当我们修改我们的实现的代码时，不会破坏其他调用我们这部分代码的代码。可维护性，灵活性和可扩展。  </p>
<h2 id="多态Polymorphism"><a href="#多态Polymorphism" class="headerlink" title="多态Polymorphism"></a>多态Polymorphism</h2><p>多态就是指一个变量，一个方法或者一个对象可以有不同的形式。  </p>
<ul>
<li><p>重载overloading<br>就是一个类里有两个或更多的函数，名字相同而他们的参数不同。  </p>
</li>
<li><p>覆盖overriding  </p>
</li>
</ul>
<p>是发生在子类中！也就是说必须有继承的情况下才有覆盖发生。当你继承父类的方法时，如果感到那个方法不爽，功能要变，就把那个函数在子类中重新实现一遍。  </p>
<h3 id="构造器是否可以被覆盖？"><a href="#构造器是否可以被覆盖？" class="headerlink" title="构造器是否可以被覆盖？"></a>构造器是否可以被覆盖？</h3><p>构造器不能被继承，所以不能被覆盖，但是可以被重载。  </p>
<h2 id="接口Interface"><a href="#接口Interface" class="headerlink" title="接口Interface"></a>接口Interface</h2><p>接口是抽象方法的集合。一个类实现一个或多个接口。因此继承了接口的抽象方法。  </p>
<p><strong>接口的特点</strong>  </p>
<ul>
<li>不能实例化  </li>
<li>没有构造体  </li>
<li>所有方法都是抽象的（abstract）。同时也是隐式的public static。也就是说声明时，可以省略public static。</li>
<li>只能含有声明为finalstatic的field。  </li>
</ul>
<h3 id="接口和抽象的区别"><a href="#接口和抽象的区别" class="headerlink" title="接口和抽象的区别"></a>接口和抽象的区别</h3><ul>
<li>抽象类可以有构造方法，接口不行  </li>
<li>抽象类可以有普通成员变量，接口没有  </li>
<li>抽象类可以有非抽象的方法，接口必须全部抽象</li>
<li>抽象类的访问类型都可以，接口只能是public abstract<br><strong>一个类可以实现多个接口，但只能继承一个抽象类</strong></li>
</ul>
<h3 id="基础概念题"><a href="#基础概念题" class="headerlink" title="基础概念题"></a>基础概念题</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">下面哪一项说法是正确的</div><div class="line"></div><div class="line">在一个子类里,一个方法不是 public 就不能重载</div><div class="line">覆盖一个方法只需要满足相同的方法名和参数类型</div><div class="line">覆盖一个方法必须方法名,参数和返回类型都相同</div><div class="line">一个覆盖的方法必须有相同的方法名,参数名和参数类型</div><div class="line">答案 <span class="number">3</span></div><div class="line"></div><div class="line">覆盖函数与被覆盖函数只有函数体不同</div><div class="line"></div><div class="line">下面哪一项说法是错误的</div><div class="line"></div><div class="line">重载函数的函数名必须相同</div><div class="line">重载函数必须在参数个数或类型上有所不同</div><div class="line">重载函数的返回值必须相同</div><div class="line">重载函数的函数体可以不同</div><div class="line">答案 <span class="number">3</span></div><div class="line"></div><div class="line">函数的重载与函数的返回值无关</div><div class="line"></div><div class="line">下面哪一项说法是正确的</div><div class="line"></div><div class="line">静态方法不能被覆盖</div><div class="line">静态方法不能被声明称私有</div><div class="line">私有方法不能被重载</div><div class="line">一个重载的方法在基类中不通过检查不能抛出异常</div><div class="line">答案 <span class="number">1</span></div></pre></td></tr></table></figure>
<h3 id="super关键字"><a href="#super关键字" class="headerlink" title="super关键字"></a>super关键字</h3><ul>
<li>调用父类（superclass）的成员或者方法  </li>
<li>调用父类的构造函数  </li>
<li>调用父类的成员或者方法  </li>
</ul>
<p>如果你的方法复写一个父类成员的方法，可以通过super关键字调用父类的方法。考虑下面的父类：<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Superclass</span>&#123;</div><div class="line">    <span class="function">pubulic <span class="keyword">void</span> <span class="title">printMethod</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        System.<span class="keyword">out</span>.println(<span class="string">"Printed in Superclass"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>下面一个子类叫做Subclass，覆写了printMethond():<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">public <span class="class"><span class="keyword">class</span> <span class="title">Subclass</span> <span class="keyword">extends</span> <span class="title">Superclass</span></span>&#123;</div><div class="line">    <span class="comment">//overrides printMethod in Superclass</span></div><div class="line">    public void printMethod()&#123;</div><div class="line">        <span class="keyword">super</span>.printMethod();</div><div class="line">        <span class="type">System</span>.out.println(<span class="string">"Printed in Subclass"</span>);</div><div class="line">    &#125;</div><div class="line">    public static void main(<span class="type">String</span>[] args)&#123;</div><div class="line">        <span class="type">Subclass</span> s = <span class="keyword">new</span> <span class="type">Subclass</span>&#123;&#125;;</div><div class="line">        s.printMethod();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>输出<br><figure class="highlight erlang"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Printed Superclass.</div><div class="line">Printed Subclsaa</div></pre></td></tr></table></figure></p>
<ul>
<li>调用父类的构造函数  </li>
</ul>
<p>使用super关键字调用父类的构造函数，下面的MountainBike类是Bicycle类的子类，它调用了父类的构造方法并加入了自己的初始化代码：<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="title">MountainBike</span><span class="params">(<span class="keyword">int</span> startHeight,<span class="keyword">int</span> startCadence,<span class="keyword">int</span> startSpeed,<span class="keyword">int</span> startGear)</span></span>&#123;</div><div class="line">    <span class="keyword">super</span>(startCadence,startSpeed,StartGear);</div><div class="line">    seatHeight = startHeight;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>调用父类的构造体必须放在 <strong>第一行</strong><br>使用：<br><figure class="highlight abnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">super()<span class="comment">;</span></div></pre></td></tr></table></figure></p>
<p>或者：<br><figure class="highlight gams"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">super(<span class="keyword">parameter</span> list);</div></pre></td></tr></table></figure></p>
<p>通过super（），父类的无参构造体会被调用。通过super(parameter list)，父类对应参数的构造体会被调用。  </p>
<p>注意：构造体如果没有显式的调用父类的构造体，Java编译器会自动调用父类的无参构造。如果父类没有无参构造，就会报错。  </p>
<h3 id="Super程序题"><a href="#Super程序题" class="headerlink" title="Super程序题"></a>Super程序题</h3><p><strong>题目一</strong>  </p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Base</span></span>&#123;</div><div class="line"><span class="type">Base</span>()&#123;</div><div class="line"><span class="type">System</span>.out.println(“<span class="type">Base</span>”);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">public <span class="class"><span class="keyword">class</span> <span class="title">Checket</span> <span class="keyword">extends</span> <span class="title">Base</span></span>&#123;</div><div class="line"><span class="type">Checket</span>()&#123;</div><div class="line"><span class="type">System</span>.out.println(“<span class="type">Checket</span>”);</div><div class="line"><span class="keyword">super</span>();</div><div class="line">&#125;</div><div class="line">public static void main(<span class="type">String</span> argv[])&#123;</div><div class="line"><span class="type">Checket</span> a = <span class="keyword">new</span> <span class="type">Checket</span>();</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>输出是什么？ 是 compile time error. super() 必须放在前面.放在前面之后,输出为 Base Checket  </p>
<p><strong>题目二</strong>  </p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.util.<span class="type">Date</span>;</div><div class="line"></div><div class="line">public <span class="class"><span class="keyword">class</span> <span class="title">Test</span> <span class="keyword">extends</span> <span class="title">Date</span></span>&#123;</div><div class="line"></div><div class="line">public static void main(<span class="type">String</span>[] args) &#123;</div><div class="line"><span class="keyword">new</span> <span class="type">Test</span>().test();</div><div class="line">&#125;</div><div class="line"></div><div class="line">public void test()&#123;</div><div class="line"><span class="type">System</span>.out.println(<span class="keyword">super</span>.getClass().getName());</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>返回的结果是 Test<br>因为super.getClass().getName() 调用了父类的 getClass() 方法, 返回当前类<br>如果想得到父类的名称，应该用如下代码：<br>getClass().getSuperClass().getName()  </p>
<p><strong>题目三</strong>  </p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Car</span> </span>&#123;</div><div class="line"></div><div class="line">String name = “Car”;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span></span>&#123;</div><div class="line"><span class="keyword">return</span> name;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">demarre</span><span class="params">()</span></span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">B</span> <span class="keyword">extends</span> <span class="title">Car</span></span>&#123;</div><div class="line">String name = “B”;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span></span>&#123;</div><div class="line"><span class="keyword">return</span> name;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demarre</span><span class="params">()</span> </span>&#123;</div><div class="line">System.out.println(getName() + “ demarre”);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">C</span> <span class="keyword">extends</span> <span class="title">B</span></span>&#123;</div><div class="line">String name = “C”;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span></span>&#123;</div><div class="line"><span class="keyword">return</span> name;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demarreWithSuper</span><span class="params">()</span> </span>&#123;</div><div class="line">System.out.println(<span class="keyword">super</span>.getName() + “ demarre”);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demarreNoSuper</span><span class="params">()</span> </span>&#123;</div><div class="line">System.out.println(getName() + “ demarre”);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">D</span> <span class="keyword">extends</span> <span class="title">B</span></span>&#123;</div><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span></span>&#123;</div><div class="line"><span class="keyword">return</span> name;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demarreNoSuper</span><span class="params">()</span> </span>&#123;</div><div class="line">System.out.println(getName() + “ demarre”);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">B b = <span class="keyword">new</span> B();</div><div class="line">b.demarre();</div><div class="line"></div><div class="line">Car bCar = <span class="keyword">new</span> B();</div><div class="line">bCar.demarre();</div><div class="line"></div><div class="line">C c = <span class="keyword">new</span> C();</div><div class="line">c.demarre(); <span class="comment">// c 里并没有定义这个函数</span></div><div class="line">c.demarreWithSuper();</div><div class="line">c.demarreNoSuper();</div><div class="line"></div><div class="line">D d = <span class="keyword">new</span> D();</div><div class="line">d.demarre();</div><div class="line"></div><div class="line">transfer(c); <span class="comment">// TransferC</span></div><div class="line">transfer((B)c); <span class="comment">// TransferB</span></div><div class="line">transfer(d); <span class="comment">// TransferB</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">transfer</span><span class="params">(B b)</span></span>&#123;</div><div class="line">System.out.println(“TransferB”);</div><div class="line">b.demarre();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">transfer</span><span class="params">(C c)</span></span>&#123;</div><div class="line">System.out.println(“TransferC”);</div><div class="line">c.demarre();</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>输出是<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">B </span>demarre</div><div class="line"><span class="keyword">B </span>demarre</div><div class="line">C demarre</div><div class="line"><span class="keyword">B </span>demarre</div><div class="line">C demarre</div><div class="line"><span class="keyword">B </span>demarre</div><div class="line"><span class="symbol">TransferC</span></div><div class="line">C demarre</div><div class="line"><span class="symbol">TransferB</span></div><div class="line">C demarre</div><div class="line"><span class="symbol">TransferB</span></div><div class="line"><span class="keyword">B </span>demarre</div></pre></td></tr></table></figure></p>
<h3 id="this程序题"><a href="#this程序题" class="headerlink" title="this程序题"></a>this程序题</h3><p><strong>题目一</strong><br><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">class</span> <span class="title">Tester</span>&#123;</div><div class="line"><span class="keyword">int</span> <span class="keyword">var</span>;</div><div class="line">Tester(<span class="keyword">double</span> <span class="keyword">var</span>)&#123;<span class="keyword">this</span>.<span class="keyword">var</span> = (<span class="keyword">int</span>)<span class="keyword">var</span>&#125;;</div><div class="line">Tester(<span class="keyword">int</span> <span class="keyword">var</span>)&#123;<span class="keyword">this</span>(“hello”);</div><div class="line">Tester(String s)&#123;</div><div class="line"><span class="keyword">this</span>();</div><div class="line">System.<span class="keyword">out</span>.println(s);</div><div class="line">&#125;</div><div class="line"></div><div class="line">Tester()&#123; System.<span class="keyword">out</span>.println(“good-bye”);&#125;貌似和 <span class="keyword">this</span> 无关但是很重要</div><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Base</span> &#123;</div><div class="line"><span class="keyword">int</span> i;</div><div class="line"></div><div class="line">Base()&#123;</div><div class="line"><span class="keyword">add</span>(<span class="number">1</span>);</div><div class="line">System.<span class="keyword">out</span>.println(i);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span>(<span class="params"><span class="keyword">int</span> v</span>)</span>&#123;</div><div class="line">i+=v;</div><div class="line">System.<span class="keyword">out</span>.println(i);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MyBase</span> <span class="title">extends</span> <span class="title">Base</span>&#123;</div><div class="line">MyBase()&#123;</div><div class="line">System.<span class="keyword">out</span>.println(“MyBase”);</div><div class="line"><span class="keyword">add</span>(<span class="number">2</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span>(<span class="params"><span class="keyword">int</span> v</span>)</span>&#123;</div><div class="line">System.<span class="keyword">out</span>.println(“MyBase Add”);</div><div class="line">i+=v*<span class="number">2</span>;</div><div class="line">System.<span class="keyword">out</span>.println(i);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Test</span> &#123;</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(<span class="params">String[] args</span>) </span>&#123;</div><div class="line">go(<span class="keyword">new</span> MyBase());</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">go</span>(<span class="params">Base b</span>)</span>&#123;</div><div class="line">b.<span class="keyword">add</span>(<span class="number">8</span>);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">输出的结果是 <span class="number">22</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">Tester t = <span class="keyword">new</span> Tester(<span class="number">5</span>) 的输出是什么?</div><div class="line"></div><div class="line">good-bye</div><div class="line">hello</div></pre></td></tr></table></figure></p>
<p><strong>题目二</strong><br><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">貌似和 <span class="keyword">this</span> 无关但是很重要</div><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Base</span> &#123;</div><div class="line"><span class="keyword">int</span> i;</div><div class="line"></div><div class="line">Base()&#123;</div><div class="line"><span class="keyword">add</span>(<span class="number">1</span>);</div><div class="line">System.<span class="keyword">out</span>.println(i);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span>(<span class="params"><span class="keyword">int</span> v</span>)</span>&#123;</div><div class="line">i+=v;</div><div class="line">System.<span class="keyword">out</span>.println(i);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MyBase</span> <span class="title">extends</span> <span class="title">Base</span>&#123;</div><div class="line">MyBase()&#123;</div><div class="line">System.<span class="keyword">out</span>.println(“MyBase”);</div><div class="line"><span class="keyword">add</span>(<span class="number">2</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span>(<span class="params"><span class="keyword">int</span> v</span>)</span>&#123;</div><div class="line">System.<span class="keyword">out</span>.println(“MyBase Add”);</div><div class="line">i+=v*<span class="number">2</span>;</div><div class="line">System.<span class="keyword">out</span>.println(i);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Test</span> &#123;</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(<span class="params">String[] args</span>) </span>&#123;</div><div class="line">go(<span class="keyword">new</span> MyBase());</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">go</span>(<span class="params">Base b</span>)</span>&#123;</div><div class="line">b.<span class="keyword">add</span>(<span class="number">8</span>);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">输出的结果是 <span class="number">22</span></div></pre></td></tr></table></figure></p>
<p>子类会首先调用父类的构造函数,在父类的构造函数 Base() 中执行 add() 方法. 但这个 add()方法由于是在新建MyBase对象时调用的. 所以是执行的MyBase中的add方法在Java中，子类的构造过程中，必须 调用其父类的构造函数,是因为有继承关系存在时,子类要把父类的内容继承下来,通过什么手段做到的？这样：当你new一个子类对象的时候,必须首先要new一个父类的对像出来,这个父类对象位于子类对象的内部,所以说，子类对象比父类对象大,子类对象里面包含了一个父类的对象,这是内存中真实的情况.构造方法是new一个对象的时候,必须要调的方法,这是规定,要new父类对象出来,那么肯定要调用其构造方法,所以<br><strong>第一个规则</strong>：子类的构造过程中，必须 调用其父类的构造方法一个类,如果我们不写构造方法,那么编译器会帮我们加上一个默认的构造方法,所谓默认的构造方法,就是没有参数的构造方法,但是如果你自己写了构造方法,那么编译器就不会给你添加了所以有时候当你new一个子类对象的时候，肯定调用了子类的构造方法，但是在子类构造方法中我们并没有显示的调用基类的构造方法，就是没写，如：super(); 并没有这样写，但是 <strong>第二个规则</strong>：如果子类的构造方法中没有显示的调用基类构造方法，则系统默认调用基类无参数的构造方法.</p>
<p>注意：如果子类的构造方法中既没有显示的调用基类构造方法，而基类中又没有默认无参的构造方法，则编译出错，所以，通常我们需要显示的：super(参数列表)，来调用父类有参数的构造函数  </p>
<h3 id="抽象abstract"><a href="#抽象abstract" class="headerlink" title="抽象abstract"></a>抽象abstract</h3><p><strong>Abstract类</strong>  </p>
<ul>
<li>不能被实例化<br><strong>Abstract方法</strong>  </li>
<li>在父类里定义抽象方法，在子类里定义这个具体的方法，所以它是抽象的。  </li>
</ul>
<p><strong>好处</strong><br>减少复杂度和提高可维护性  </p>
<h3 id="abstract相关问题"><a href="#abstract相关问题" class="headerlink" title="abstract相关问题"></a>abstract相关问题</h3><p><strong>题目一</strong><br>什么是抽象类  </p>
<ul>
<li>A class with no methods  </li>
<li>A class with no concrete subclasses</li>
<li>A class with at least one undefiend message</li>
<li>None of above</li>
</ul>
<p>答案是第四个，可以定义一个抽象空类：<br>abstract class emptyAb{}   </p>
<p><strong>题目二</strong>  </p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Base</span></span>&#123;</div><div class="line"><span class="function"><span class="keyword">abstract</span> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">myfunc</span><span class="params">()</span></span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Abs</span> <span class="keyword">extends</span> <span class="title">Base</span></span>&#123;</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String argv[])</span></span>&#123;</div><div class="line">Abs a = <span class="keyword">new</span> Abs();</div><div class="line">a.amethod();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">amethod</span><span class="params">()</span></span>&#123;</div><div class="line">System.out.println(“A method”);</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>运行的结果：  </p>
<p>The compiler will complain errors in Abs class  </p>
<h3 id="this（）和-super-在构造体里怎么用？"><a href="#this（）和-super-在构造体里怎么用？" class="headerlink" title="this（）和 super()在构造体里怎么用？"></a>this（）和 super()在构造体里怎么用？</h3><p>this()在同一个类的构造体被调用，this（“toto”，“tata”,1)相当于调用对应参数的构造体。<br>super（）用来调用父类构造体。  </p>
<h2 id="Static关键字"><a href="#Static关键字" class="headerlink" title="Static关键字"></a>Static关键字</h2><p>Static关键字表明一个成员变量或者是成员方法可以在没有所属的类的实例的情况下直接被访问。<br>声明为static的方法有一下几条限制：  </p>
<ul>
<li>仅能调用其他的static方法</li>
<li>只能访问static变量</li>
<li>不能以任何方式引用this或super</li>
<li>不能被覆盖</li>
</ul>
<p><strong>声明为static的变量实质上就是全局变量</strong>  （+final就是全局变量）<br>当声明一个对象时，并不产生static变量的拷贝，而是该类所有的实例变量共用同一个static变量。<br>对于静态类，只能用于嵌套类内部类中。  </p>
<h3 id="Static相关问题"><a href="#Static相关问题" class="headerlink" title="Static相关问题"></a>Static相关问题</h3><h4 id="Static关键字是什么意思？"><a href="#Static关键字是什么意思？" class="headerlink" title="Static关键字是什么意思？"></a>Static关键字是什么意思？</h4><p>Static关键字表明一个成员变量或者成员方法可以在没有所属的类的实例的情况下直接被访问。  </p>
<h4 id="是否可以override一个static的方法？"><a href="#是否可以override一个static的方法？" class="headerlink" title="是否可以override一个static的方法？"></a>是否可以override一个static的方法？</h4><p>不能被覆盖，因为方法覆盖是基于运行时动态绑定的，而static方法是编译时静态绑定的。  </p>
<h4 id="一个static方法内部调用非static方法？"><a href="#一个static方法内部调用非static方法？" class="headerlink" title="一个static方法内部调用非static方法？"></a>一个static方法内部调用非static方法？</h4><p>不可以。因为非static方法是要与对象关联在一起的，须创建一个对象的实例后，才可以在该对象上进行方法调用。而static方法被调用时不需要创建对象，可以直接调用，也就是说，当一个static方法被调用时，可能还没有创建任何实例对象。如果从一个static方法中发出对非static方法的调用，那个非static方法是关联到哪个对象上的呢？这个逻辑无法成立。所以，一个static方法内部发出对非static方法的调用。  </p>
<h4 id="是否可以在static环境中访问非static变量"><a href="#是否可以在static环境中访问非static变量" class="headerlink" title="是否可以在static环境中访问非static变量"></a>是否可以在static环境中访问非static变量</h4><p>同上。  </p>
<h2 id="单例模式-Singleton"><a href="#单例模式-Singleton" class="headerlink" title="单例模式  Singleton"></a>单例模式  Singleton</h2><p>Java中单例模式定义：“一个类有且仅有一个实例，并且自行实例化向整个系统提供。”  </p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="comment">// do something</span></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">SingletonHolder</span> </span>&#123;</div><div class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Singleton INSTANCE = <span class="keyword">new</span> Singleton();</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Singleton <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> SingletonHolder.INSTANCE;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>多选题注意</strong>  </p>
<ul>
<li>一是单例模式的类只提供私有的构造函数</li>
<li>二是类定义中含有一个该类的静态私有对象</li>
<li>三是该类提供一个静态的公有的函数用于创建或获取它本身的静态私有对象  </li>
</ul>
<h2 id="equals-与-hashcode"><a href="#equals-与-hashcode" class="headerlink" title="equals() 与 hashcode()"></a>equals() 与 hashcode()</h2><h3 id="equals"><a href="#equals" class="headerlink" title="equals"></a>equals</h3><p>如果需要比较对象的值，就要equal方法。JDK中equal方法的实现：<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object obj)</span></span>&#123;</div><div class="line">    <span class="keyword">return</span>(<span class="keyword">this</span>==obj);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>也就是说，默认情况下比较的还是对象的地址，所以如果把对象放入Set中等操作，就要重写equal方法。重写之后的equals()比较的就是对象的内容了。  </p>
<h3 id="和equal的区别"><a href="#和equal的区别" class="headerlink" title="== 和equal的区别"></a>== 和equal的区别</h3><ul>
<li>==比较引用的地址  </li>
<li>equal比较引用的内容（Object类本身除外）</li>
</ul>
<figure class="highlight vhdl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">String</span> obj1 = <span class="keyword">new</span> <span class="built_in">String</span>(“xyz”);</div><div class="line"><span class="built_in">String</span> obj2 = <span class="keyword">new</span> <span class="built_in">String</span>(“xyz”);</div><div class="line"></div><div class="line">// <span class="keyword">If</span> <span class="built_in">String</span> obj2 = obj1, the output will be <span class="literal">true</span></div><div class="line"></div><div class="line"><span class="keyword">if</span>(obj1 == obj2)</div><div class="line">System.<span class="keyword">out</span>.printlln(“obj1==obj2 <span class="keyword">is</span> <span class="literal">TRUE</span>”);</div><div class="line"><span class="keyword">else</span></div><div class="line">System.<span class="keyword">out</span>.println(“obj1==obj2 <span class="keyword">is</span> <span class="literal">FALSE</span>”);</div><div class="line"></div><div class="line">// It will print obj1==obj2 <span class="keyword">is</span> <span class="literal">False</span></div><div class="line">// <span class="keyword">If</span> <span class="built_in">String</span> obj2 = obj1, the output will be <span class="literal">true</span></div></pre></td></tr></table></figure>
<p>默认的, equals() 方法实际上和 “==” 在 object 类里是一样的. 但是这个方法在每一个子类里都会被覆写用来比较引用的内容 (因为每个类都继承了 object 类并覆写了这个方法)<br><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">String</span> obj1 = <span class="keyword">new</span> <span class="built_in">String</span>(“xyz”);</div><div class="line"><span class="built_in">String</span> obj2 = <span class="keyword">new</span> <span class="built_in">String</span>(“xyz”);</div><div class="line"></div><div class="line"><span class="keyword">if</span>(obj1.equals(obj2))</div><div class="line">System.<span class="keyword">out</span>.printlln(“obj1==obj2 <span class="keyword">is</span> <span class="literal">TRUE</span>”);</div><div class="line"><span class="keyword">else</span></div><div class="line">System.<span class="keyword">out</span>.println(“obj1==obj2 <span class="keyword">is</span> <span class="literal">FALSE</span>”);</div><div class="line"></div><div class="line">Resultat: obj1==obj2 <span class="keyword">is</span> <span class="literal">TRUE</span></div></pre></td></tr></table></figure></p>
<h2 id="所有类的基类是哪个类？"><a href="#所有类的基类是哪个类？" class="headerlink" title="所有类的基类是哪个类？"></a>所有类的基类是哪个类？</h2><p>java.lang.Object  </p>
<h2 id="Java支持多继承吗？"><a href="#Java支持多继承吗？" class="headerlink" title="Java支持多继承吗？"></a>Java支持多继承吗？</h2><p>Java不支持多继承。  </p>
<h2 id="Path与Classpath"><a href="#Path与Classpath" class="headerlink" title="Path与Classpath"></a>Path与Classpath</h2><p>Path和Classpath是操作系统的环境变量  </p>
<ul>
<li>Path定义了系统可以在哪里找到可执行文件（.exe）  </li>
<li>calsspath定义了.class文件的位置</li>
</ul>
<h2 id="反射机制"><a href="#反射机制" class="headerlink" title="反射机制"></a>反射机制</h2><p>Java反射机制是在运行状态中，对于任意一个类，都能够知道这个类的所有属性和方法；对于任意一个对象，都能够调用它的任意一个方法和属性；这种动态获取的信息以及动态调用对象的方法的功能称为Java语言的反射机制。    </p>
<p><strong>主要作用</strong>  </p>
<ul>
<li>运行时去得类的方法和字段的相关信息  </li>
<li>创建某个类的新实例（.newInstance()）</li>
<li>取得字段引用直接获取和设置对象字段，无论访问修饰符是什么  </li>
</ul>
<p><strong>用处如下</strong>  </p>
<ul>
<li>观察或操作应用程序的运行时行为</li>
<li>调试或测试程序，因为可以直接访问方法、构造函数和成员字段</li>
<li>通过名字调用不知道的方法并使用该信息来创建对象和调用方法  </li>
</ul>
<h2 id="final关键字"><a href="#final关键字" class="headerlink" title="final关键字"></a>final关键字</h2><p>final类是不能被继承的，这个类就是最终的了，不需要再被继承，比如很多Java标准库就是final类。<br>final方法不能被子方法重写，fianl+static变量表示常量  </p>
<h3 id="一个-Java源文件是否可以包含多个类"><a href="#一个-Java源文件是否可以包含多个类" class="headerlink" title="一个.Java源文件是否可以包含多个类"></a>一个.Java源文件是否可以包含多个类</h3><p>可以的，但只能有一个是public的类而且这个public类必须与文件名一样  </p>
<h2 id="amp-与-amp-amp"><a href="#amp-与-amp-amp" class="headerlink" title="&amp;与&amp;&amp;"></a>&amp;与&amp;&amp;</h2><p>都可以表示逻辑与and，但是&amp;&amp;具有短路功能，第一个表达式错了，第二个就被忽略。&amp;的表达式是先计算后求与。  </p>
<p>除此之外&amp;可以用作位运算。<br>| 也有类似差异。  </p>
<h2 id="int与integer"><a href="#int与integer" class="headerlink" title="int与integer"></a>int与integer</h2><p>int是数据类型，integer是int的封装。  </p>
<p>int默认值为0，integer默认值为null，所以integer可以用来判断变量是否赋值，即null和0的区别。  </p>
<h3 id="integer通过与-比较"><a href="#integer通过与-比较" class="headerlink" title="integer通过与==比较"></a>integer通过与==比较</h3><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">Integer</span> a=<span class="number">10</span>;</div><div class="line"><span class="built_in">Integer</span> b=<span class="number">10</span>;</div><div class="line"><span class="built_in">Integer</span> c=<span class="keyword">new</span> <span class="built_in">Integer</span>(<span class="number">10</span>);</div><div class="line"><span class="built_in">Integer</span> d=<span class="keyword">new</span> <span class="built_in">Integer</span>(<span class="number">10</span>);</div><div class="line"></div><div class="line">System.<span class="keyword">out</span>.println(a==b);</div><div class="line">System.<span class="keyword">out</span>.println(c==d);</div><div class="line"></div><div class="line">System.<span class="keyword">out</span>.println(a.equals(b));</div><div class="line">System.<span class="keyword">out</span>.println(c.equals(d));</div><div class="line"></div><div class="line">System.<span class="keyword">out</span>.println(a.equals(c));</div></pre></td></tr></table></figure>
<p>结果：<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="literal">true</span></div><div class="line"><span class="literal">false</span></div><div class="line"><span class="literal">true</span></div><div class="line"><span class="literal">true</span></div><div class="line"><span class="literal">true</span></div></pre></td></tr></table></figure></p>
<p>==比较的是对象的引用<br>当且仅当比较的两个引用指向同一对象才返回true  </p>
<figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">Integer a = <span class="number">127</span><span class="comment">;</span></div><div class="line">Integer <span class="keyword">b </span>= <span class="number">127</span><span class="comment">;</span></div><div class="line">Integer c = <span class="number">128</span><span class="comment">;</span></div><div class="line">Integer d = <span class="number">128</span><span class="comment">;</span></div><div class="line">System.out.println(a == <span class="keyword">b);</span></div><div class="line"><span class="keyword">System.out.println(c </span>== d)<span class="comment">;</span></div></pre></td></tr></table></figure>
<p>结果：<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="literal">true</span></div><div class="line"><span class="literal">false</span></div></pre></td></tr></table></figure></p>
<p>Integer i = XXX<br>看看Integer的源代码就知道了，其实就是Integer吧-128-127（一个字节的二进制补码）之间的每个值都建立了一个对应的Integer对象，类似一个缓存，由于Integer是不可变类，因此这些缓存的Integer对象可以安全的重复使用。  </p>
<p>Integer i= XXX，就是Integer i=Integer.valueOf(XXX),首先判断XXX是否在-128-127之间，如果是直接return已经存在的对象，所以是同一个引用，否则就只能new一个了，那就是不同的引用了。  </p>
<h2 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h2><p>异常是指Java程序运行时（非编译）所发生的非正常情况或错误。Java使用面向对象的方式来处理异常，它把程序中发生的每个异常也都分别封装到一个对象来表示的，该对象中包含有异常的信息。。Java对异常进行了分类，所有异常的根类为java.lang.Throwable,Throwable下面又派生了两个子类：Error和Exception。  </p>
<h3 id="error和exception"><a href="#error和exception" class="headerlink" title="error和exception"></a>error和exception</h3><p>Error表示应用程序本身无法克服和恢复的一种严重问题，程序只有死的份。<br>例如，说内存溢出和线程死锁等系统问题。Exception表示程序还能够克服和恢复的问题，比如一个输入参数不对引起的异常，其中又分为系统异常和普通异常。</p>
<h3 id="Checked异常与Runtime异常"><a href="#Checked异常与Runtime异常" class="headerlink" title="Checked异常与Runtime异常"></a>Checked异常与Runtime异常</h3><ul>
<li>Runtime exceptions是runtime阶段碰到的异常，在编译的时候不需要检查，例如：  </li>
</ul>
<p>数组脚本越界，空指针异常，类转换异常。  </p>
<ul>
<li>Checked exception是在编译阶段的异常，并且强制检查。  </li>
</ul>
<p>编译器强制checked异常必须try..catch处理或用throws声明继续抛给上层调用方法处理，这就是为什么叫checked异常，而runtime异常可以处理也可以不处理，所以，编译器不强制用try..catch处理或用throws声明，所以Runtime异常也称为unchecked异常。  </p>
<h3 id="把对象声明成异常"><a href="#把对象声明成异常" class="headerlink" title="把对象声明成异常"></a>把对象声明成异常</h3><ul>
<li>如果想要一个对象作为一个异常对象被抛出，应该怎么做？  </li>
</ul>
<p>继承Exception类，或者继承exception类里面的子类，这样可以更加具体的表明哪一类异常。  </p>
<ul>
<li>如果我的类已经继承了其他的类，那应该怎么做？  </li>
</ul>
<p>这样其实就没有办法，Java不支持多继承，目前版本的JDK没有相关的接口。  </p>
<h3 id="处理异常的方法"><a href="#处理异常的方法" class="headerlink" title="处理异常的方法"></a>处理异常的方法</h3><ul>
<li>try catch</li>
<li>throws</li>
</ul>
<p>这两种方法有什么区别：</p>
<p>第一种方法是自己处理异常。<br>第二种异常是把异常抛给调用这个方法的模块去处理。一般Java的库就是这么处理的。  </p>
<h3 id="每一个try都必须有一个catch吗"><a href="#每一个try都必须有一个catch吗" class="headerlink" title="每一个try都必须有一个catch吗?"></a>每一个try都必须有一个catch吗?</h3><p>不是必须的，至少要有一个catch或者finally块。  </p>
<h3 id="try模块里的return"><a href="#try模块里的return" class="headerlink" title="try模块里的return"></a>try模块里的return</h3><ul>
<li>如果在try模块里最后加了个return，finally模块还会执行吗？  </li>
</ul>
<p>是的，finally模块会先执行再return。  </p>
<ul>
<li>如果换成system.exit(0)?</li>
</ul>
<p>那就不会了，System.exit(0)时。会立马跳出程序。  </p>
<ul>
<li>try catch finally的执行顺序  </li>
</ul>
<p>特殊情况就是里面加return。</p>
<p>举个例子理解：  </p>
<figure class="highlight abnf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">public int getNumber() &#123;</div><div class="line"></div><div class="line">int a = <span class="number">0</span><span class="comment">;</span></div><div class="line"></div><div class="line">try &#123;</div><div class="line">String s = “t”<span class="comment">; ————————（1）</span></div><div class="line"><span class="attribute">a</span> = Integer.parseInt(s)<span class="comment">;———–（2）</span></div><div class="line">return a<span class="comment">;</span></div><div class="line">&#125; catch (NumberFormatException e) &#123;</div><div class="line"><span class="attribute">a</span> = <span class="number">1</span><span class="comment">;———————————–（3）</span></div><div class="line">return a<span class="comment">;——————————-（4）</span></div><div class="line">&#125; finally &#123;</div><div class="line"><span class="attribute">a</span> = <span class="number">2</span><span class="comment">;———————————–（5）</span></div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>1、程序中标记的代码的执行顺序？<br>2、改程序的最后返回值（外部调用时）？<br>程序按顺序从上到下执行到（2），字符”t”转换成整数失败，产生异常并被捕获，<br>于是对a赋值成1，并将此值作为此方法的返回值（可以这么认为，该方法有一个存放返回值的空间，此时将1放在此处）。由于存在finally块，在返回前将该方法的内部变量a修改成2。<br>所以程序将按标记的顺序执行，外部调用该方法时得到的结果是1  </p>
<p>先执行try或catch里里面的代码，然后再执行finally，再执行try或catch里面的return.  </p>
<h2 id="final，finally，finalize的区别"><a href="#final，finally，finalize的区别" class="headerlink" title="final，finally，finalize的区别"></a>final，finally，finalize的区别</h2><ul>
<li>final用于声明属性，方法和类，分别表示属性不可变，方法不可覆盖，类不可继承。  </li>
<li>finally是异常处理语句结构的一部分，表示总是在执行。  </li>
<li>finalize是Object类的一个方法，在垃圾收集器执行的时候会被调用被回收对象的此方法，可以覆盖此方法提供垃圾收集时的其他资源回收，例如关闭文件等。JVM不保证此方法总被调用。  </li>
</ul>
<h2 id="垃圾回收-Gabage-Collection"><a href="#垃圾回收-Gabage-Collection" class="headerlink" title="垃圾回收 Gabage Collection"></a>垃圾回收 Gabage Collection</h2><h3 id="什么是GC？"><a href="#什么是GC？" class="headerlink" title="什么是GC？"></a>什么是GC？</h3><p>GC是垃圾收集的意思，内存处理是编程人员容易出现问题的地方，忘记或者错误的内存回收会导致程序或系统的不稳定甚至崩溃。Java提供的GC功能可以自动检测对象是否超过作用域从而达到自动回收内存的目的，Java语言没有提供释放已分配内存的显示操作方法。  </p>
<h3 id="垃圾回收器的基本原理是什么？"><a href="#垃圾回收器的基本原理是什么？" class="headerlink" title="垃圾回收器的基本原理是什么？"></a>垃圾回收器的基本原理是什么？</h3><p>当程序员创建对象时，GC就开始监控这个对象的地址、大小以及使用情况。<br>通常，GC采用有向图的方式记录和管理堆（heap）中的所有对象。通过这种方式确定哪些对象是“可达的”，哪些对象是”不可达的”。当GC确定一些对象为“不可达”时（比如设置为null），GC就有责任回收这些内存空间。  </p>
<h3 id="有什么办法主动通知虚拟机进行垃圾回收？"><a href="#有什么办法主动通知虚拟机进行垃圾回收？" class="headerlink" title="有什么办法主动通知虚拟机进行垃圾回收？"></a>有什么办法主动通知虚拟机进行垃圾回收？</h3><p>可以，程序员可以手动执行System.gc()，通知GC运行，但是Java语言规范并不保证GC一定会执行，这个选择题的时候有考。   </p>
<h3 id="heap和stack"><a href="#heap和stack" class="headerlink" title="heap和stack"></a>heap和stack</h3><p>Java的内存分为两类：  </p>
<ul>
<li>堆内存heap</li>
<li>栈内存stack</li>
</ul>
<p><strong>stack</strong>是指程序进入一个方法时，会为这个方法单独分配一块私属存储空间，用于存储这个方法内部的局部变量。当这个方法结束时，分配给这个方法的栈会释放，这个栈中的变量也将随之释放。  </p>
<p><strong>heap</strong>一般用于存放不放在当前方法栈中的那些数据。例如，使用new创建的对象都放在堆里，所以，它不会随方法的结束而消失。方法中的局部变量使用final修饰后，放在堆中，而不是栈。  </p>
<h3 id="GC就一定能保证内存不溢出吗？"><a href="#GC就一定能保证内存不溢出吗？" class="headerlink" title="GC就一定能保证内存不溢出吗？"></a>GC就一定能保证内存不溢出吗？</h3><p>No。程序员可能创建一个对象，以后一直不再使用这个对象，这个对象却一直被引用，这个对象无用但是却无法被垃圾回收器回收的。  </p>
<h2 id="字节流与字符流"><a href="#字节流与字符流" class="headerlink" title="字节流与字符流"></a>字节流与字符流</h2><ul>
<li>字节流继承于InputStream OutputStream  </li>
<li>字符流继承于InputStreamReader OutputStreamWriter  </li>
</ul>
<p>字符流使用了缓冲区（buffer），而字节流没有使用缓冲区。<br>底层设备永远只接受字节数据。<br>字符是字节通过不同的编码的包装。<br>字符向字节转换时，要注意编码的问题。  </p>
<h2 id="Collection"><a href="#Collection" class="headerlink" title="Collection"></a>Collection</h2><p>Collection的子类是List和Set。  </p>
<h3 id="ArrayList和Vector"><a href="#ArrayList和Vector" class="headerlink" title="ArrayList和Vector"></a>ArrayList和Vector</h3><p>这两个类都实现了List接口（List接口继承了Collection接口）<br>他们都是有序列集合，即存储在这两个集合中的元素的位置都是有顺序的，相当于一种动态的数组。并且其中的数据是允许重复的。<br>ArrayList和Vector的区别：  </p>
<ul>
<li>Vector是线程安全的，也就是线程同步的，而ArrayList是线程不安全的。对于Vector&amp;ArrayList，Hashtable&amp;HashMap，要记住线程安全的问题。记住Vector与HashMap是旧的，是Java一诞生就提供了的。它们是线程安全的，ArrayList与HashMap是Java2时才提供的，它们是线程不安全的。  </li>
<li>ArrayList与Vector都有一个初始的容量大小，当存储进它们里面的元素的个数超过了容量时，就需要增加ArrayList与Vector的存储空间。Vector默认增长为原来两倍，而ArrayList的增长策略在文档中没有明确规定。ArrayList与Vector都可以设置初始的空间大小，Vector还可以设置增长的空间大小，而ArrayList没有提供设置增长空间的方法。  </li>
</ul>
<p>**总结：即vector增长原来的一倍，ArrayList增加原来的0.5倍。Vector线程安全，ArrayList不是。  </p>
<h3 id="HashMap和Hashtable"><a href="#HashMap和Hashtable" class="headerlink" title="HashMap和Hashtable"></a>HashMap和Hashtable</h3><p>Hashtable是基于陈旧的Dictionary类的，HashMap是Java1.2引进的Map接口的一个实现。  </p>
<p>Hashtable是线程安全的，也就是说是同步的。而HashMap是线程不安全的，不是同步的。  </p>
<p>只有HashMap可以让你将空值NULL作为一个表的条目的key或value。但是HashTable不允许。  </p>
<h3 id="HashMap-HashTable-LinkedHashMap-TreeMap"><a href="#HashMap-HashTable-LinkedHashMap-TreeMap" class="headerlink" title="HashMap HashTable LinkedHashMap TreeMap"></a>HashMap HashTable LinkedHashMap TreeMap</h3><p>不允许键重复，值可以重复。  </p>
<p>HashMap是一个最常用的Map, 它根据键的hashCode值存储数据,根据键可以直接获取它的值,具有很快的访问速度.HashMap最多只允许一条记录的键为null,不允许多条记录的值为null.HashMap不支持线程的同步,如果需要同步,可以用Collections.synchronizedMap(HashMap map)方法使HashMap具有同步的能力.  </p>
<p>Hashtable与HashMap类似,不同的是:它不允许记录的键或者值为空;它支持线程的同步.</p>
<p>LinkedHashMap保存了记录的插入顺序,在用Iteraor遍历LinkedHashMap时,先得到的记录肯定是先插入的.在遍历的时候会比HashMap慢.有HashMap的全部特性.  </p>
<p>TreeMap能够把它保存的记录根据键排序,默认是按升序排序,也可以指定排序的比较器.当用Iteraor遍历TreeMap时,得到的记录是排过序的.TreeMap的键和值都不能为空.  </p>
<h3 id="Collection相关问题"><a href="#Collection相关问题" class="headerlink" title="Collection相关问题"></a>Collection相关问题</h3><p><strong>题目一</strong><br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">题目一</div><div class="line"></div><div class="line">You need <span class="keyword">to</span> store elements <span class="keyword">in</span> a collection that guarantees that <span class="literal">no</span> duplicates are stored <span class="keyword">and</span> all elements can be access <span class="keyword">in</span> nature order, which<span class="built_in"> interface </span>provies that capabiliy?</div><div class="line">A. java.util.Map</div><div class="line">B. java.util.Collection</div><div class="line">C. java.util.List</div><div class="line">D. java.util.Set</div><div class="line">答案 D</div></pre></td></tr></table></figure></p>
<p><strong>题目二</strong>  </p>
<ul>
<li>List，Set，Map是否继承自Collection接口，它们有什么区别？  </li>
</ul>
<p>List，Set是，Map不是。  </p>
<p>区别：<br>Set不允许有重复的元素，且没有顺路Set取元素时，没法说取第几个，只能以Iterator接口取得所有的元素,再逐一遍历各个元素.  </p>
<p>List表示有先后顺序的集合并且允许重复。  </p>
<p>Map与List和Set不同，存储一对key/value，不能存储重复的key.  </p>
<p><strong>题目三</strong>  </p>
<figure class="highlight lasso"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> static <span class="literal">void</span> main()&#123;</div><div class="line">    <span class="built_in">Map</span>&lt;<span class="built_in">String</span>,<span class="built_in">String</span>&gt; <span class="built_in">map</span> = <span class="literal">new</span> HashMap&lt;<span class="built_in">String</span>,<span class="built_in">String</span>&gt;();</div><div class="line">    <span class="built_in">map</span>.out(<span class="built_in">String</span>.valueOf(System.currentTimeMillis())+<span class="string">"a"</span>,<span class="number">1</span>);</div><div class="line">    <span class="built_in">map</span>.out(<span class="built_in">String</span>.valueOf(System.currentTimeMillis())+<span class="string">"a"</span>,<span class="number">2</span>);</div><div class="line">    <span class="built_in">map</span>.out(<span class="built_in">String</span>.valueOf(System.currentTimeMillis())+<span class="string">"a"</span>,<span class="number">3</span>);</div><div class="line">    for(<span class="built_in">Map</span>.Entry&lt;<span class="built_in">String</span>,<span class="built_in">String</span>&gt; entry : <span class="built_in">map</span>.entrySet())&#123;</div><div class="line">        System.out.printf(entry.getValue());</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">输出顺序是 <span class="number">123</span>顺序无法确定. <span class="built_in">Map</span> 中的键是 <span class="built_in">Set</span>. <span class="built_in">Set</span> 顺序是随机的.</div></pre></td></tr></table></figure>
<h2 id="Multi-Thread-多线程"><a href="#Multi-Thread-多线程" class="headerlink" title="Multi-Thread 多线程"></a>Multi-Thread 多线程</h2><h3 id="sleep（）和wait-的区别"><a href="#sleep（）和wait-的区别" class="headerlink" title="sleep（）和wait()的区别"></a>sleep（）和wait()的区别</h3><p>举个例子：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="title">sleep</span><span class="params">(<span class="number">1000</span>)</span></span></div></pre></td></tr></table></figure></p>
<p>会把线程放到一边，直到整整一秒之后才再次启动。  </p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="title">wait</span><span class="params">(<span class="number">1000</span>)</span></span></div></pre></td></tr></table></figure>
<p>则是把线程放到一边至多一秒。如果碰到notify（）或者notifyAll（）就会提前启动。<br>而且wait（）方法是在Object类里。而sleep()是在Thread类里。  </p>
<h3 id="同步-synchronized"><a href="#同步-synchronized" class="headerlink" title="同步 synchronized"></a>同步 synchronized</h3><p>举个例子：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Synchronized</span> <span class="title">Counter</span> </span>&#123;</div><div class="line"><span class="keyword">private</span> <span class="keyword">int</span> c = <span class="number">0</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">increment</span><span class="params">()</span> </span>&#123;</div><div class="line">c++;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">decrement</span><span class="params">()</span> </span>&#123;</div><div class="line">c–;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">int</span> <span class="title">value</span><span class="params">()</span> </span>&#123;</div><div class="line"><span class="keyword">return</span> c;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>如果 count 是这个类的实例化将有两个效果:  </p>
<ul>
<li>不可能同时调用同一个对象的同一个方法, 防止造成冲突.同一时间只有一个线程可以调用这对象的同步方法.比如在一个账户里同时存钱和转当一个同步方法退出时,账.</li>
<li>它会和随后一个同步方法的调用自动建立happens-before关系. 这保证了所有线程都知道对象的状态改变了.  </li>
</ul>
<h2 id="如何实现muliti-Thread？"><a href="#如何实现muliti-Thread？" class="headerlink" title="如何实现muliti-Thread？"></a>如何实现muliti-Thread？</h2><ul>
<li>继承Thread类  </li>
<li>实现Runable接口  </li>
</ul>
<h3 id="Thread与Runable？"><a href="#Thread与Runable？" class="headerlink" title="Thread与Runable？"></a>Thread与Runable？</h3><p>实现Runable接口比继承Thread类所具有的优势：  </p>
<ul>
<li>适合多个相同的程序代码的线程去处理同一个资源  </li>
<li>可以避免Java中的单继承的限制</li>
<li>增加程序的健壮性，代码可以被多个线程共享，代码和数据独立  </li>
</ul>
<h3 id="Transient-关键字"><a href="#Transient-关键字" class="headerlink" title="Transient 关键字"></a>Transient 关键字</h3><p>当持久化对象时，可能有一个特殊的对象数据成员，我们不想用serialization机制来保存它。为了在一个特定对象的一个域上关闭serialization，可以在这个域前加上关键字transient。  </p>
<h3 id="preemptive-scheduling-和-time-slicing"><a href="#preemptive-scheduling-和-time-slicing" class="headerlink" title="preemptive scheduling 和 time slicing?"></a>preemptive scheduling 和 time slicing?</h3><p>preemptive scheduling,优先级别最高的任务会被执行,除非它进入等待状态或者死了或者一个更高优先权的任务进来.  </p>
<h3 id="一个线程的初始状态是什么？"><a href="#一个线程的初始状态是什么？" class="headerlink" title="一个线程的初始状态是什么？"></a>一个线程的初始状态是什么？</h3><p>一个线程被创建和开始之后是“Ready”状态。  </p>
<h3 id="守护线程daemon-Thread"><a href="#守护线程daemon-Thread" class="headerlink" title="守护线程daemon Thread"></a>守护线程daemon Thread</h3><p>守护线程,是指在程序运行的时候在后台提供一种通用服务的线程,比如垃圾回收线程就是一个很称职的守护者,并且这种线程并不属于程序中不可或缺的部分.因此,当所有的非守护线程结束时,程序也就终止了,同时会杀死进程中的所有守护线程.反过来说,只要任何非守护线程还在运行,程序就不会终止.  </p>
<p>用户线程和守护线程两者几乎没有区别,唯一的不同之处就在于虚拟机的离开:如果用户线程已经全部退出运行了,只剩下守护线程存在了,虚拟机也就退出了.将线程转换为守护线程可以通过调用Thread对象的setDaemon(true)方法来实现.  </p>
<h3 id="所有的线程都必须实现那个方法？"><a href="#所有的线程都必须实现那个方法？" class="headerlink" title="所有的线程都必须实现那个方法？"></a>所有的线程都必须实现那个方法？</h3><p>run方法，不管是继承Thread还是实现Runable接口。  </p>
<h2 id="StringBuffer相关问题"><a href="#StringBuffer相关问题" class="headerlink" title="StringBuffer相关问题"></a>StringBuffer相关问题</h2><p><strong>题目一</strong>  </p>
<p>StringBuffer和StringBuilder  </p>
<ul>
<li>StringBuilder比StringBuffer快  </li>
<li>当需要保证线程安全的时候用StringBuffer</li>
<li>StringBuffer是synchroinzed,StringBuilder不是  </li>
</ul>
<p>String类一般被认为是不可改变的。如果需要对一个string做许多修改就需要使用StringBuilder或StringBuffer。<br>另外需要注意，String类是final类不可以被继承，有时候会在考察final关键字的时候考这个。  </p>
<h2 id="序列化-serialization"><a href="#序列化-serialization" class="headerlink" title="序列化 serialization"></a>序列化 serialization</h2><p>Java 提供了一种对象序列化的机制，该机制中，一个对象可以被表示为一个字节序列，该字节序列包括该对象的数据、有关对象的类型的信息和存储在对象中数据的类型。<br>将序列化对象写入文件之后，可以从文件中读取出来，并且对它进行反序列化，也就是说，对象的类型信息、对象的数据，还有对象中的数据类型可以用来在内存中新建对象。<br>整个过程都是 Java 虚拟机（JVM）独立的，也就是说，在一个平台上序列化的对象可以在另一个完全不同的平台上反序列化该对象。  </p>
<p>类 ObjectInputStream 和 ObjectOutputStream 是高层次的数据流，它们包含反序列化和序列化对象的方法。<br>Java中实现serialization主要靠两个类：  </p>
<ul>
<li>ObjectOutputStream  </li>
<li>ObjectInputStream  </li>
</ul>
<p>他们是Java IO系统里的OutputStream和InputStream的子类  </p>
<h3 id="如何序列化一个对象到一个文件？"><a href="#如何序列化一个对象到一个文件？" class="headerlink" title="如何序列化一个对象到一个文件？"></a>如何序列化一个对象到一个文件？</h3><p>要被序列化的实例所对应的类必须实现 Serializable接口。然后你可以把实例传递给ObjectOutputStream，同时ObjectOutputStream也必须连接至fileoutputstream。这样就会把一个对象存储到一个文件里。  </p>
<h3 id="必须实现Serializable接口的哪个方法？"><a href="#必须实现Serializable接口的哪个方法？" class="headerlink" title="必须实现Serializable接口的哪个方法？"></a>必须实现Serializable接口的哪个方法？</h3><p>Serializable 接口是一个空接口.所以我们不实现它的任何方法.  </p>
<h2 id="初始化和清理"><a href="#初始化和清理" class="headerlink" title="初始化和清理"></a>初始化和清理</h2><p><strong>构造器初始化</strong>  </p>
<p>初始化顺序  </p>
<p>类内部变量定义的先后顺序决定了其初始化的顺序，并且会在任何方法被调用之前也会得到初始化。对于静态对象与非静态对象：先初始话静态对象，然后是非静态对象。  </p>
<p>静态数据的初始化  </p>
<p>静态数据只占用一份存储区域，static关键字不能用于局部变量，因为它只能作用于域。如果一个域是静态的基本类型域且未对其进行初始化，那么它就会获得基本类型的标准初值；如果是一个对象引用，则初始化为null.  </p>
<p>静态初始化只有在必要时才会进行，且只被初始化一次，即如果不创建相应的对象或是引用相应的静态对象，那么则不会被初始化。  </p>
<p>对象创建的过程：  </p>
<ul>
<li>构造器实际上也是静态方法，Java解释器首先查找类路径定位相应class文件。</li>
<li>载入class文件，执行静态初始化，静态初始化只在类对象首次加载的时候进行一次。  </li>
<li>使用new创建对象时首先将在堆上为对象分配足够的存储空间。  </li>
<li>存储空间清零，故其所有基本类型数据置为默认值。  </li>
<li>执行所有定义处的初始化动作。  </li>
<li>执行构造器。  </li>
</ul>
<h2 id="Java-Data-Type-Java数据类型"><a href="#Java-Data-Type-Java数据类型" class="headerlink" title="Java Data Type -Java数据类型"></a>Java Data Type -Java数据类型</h2><p>JVM可以操作的数据类型分为两类：primitive types和 reference types.类型检查通常在编译期完成，不同指令操作数的类型可以通过虚拟机的字节码指令本身确定。  </p>
<h3 id="Primitive-type"><a href="#Primitive-type" class="headerlink" title="Primitive type"></a>Primitive type</h3><p>JVM所支持的基本数据类型有：数值类型，布尔类型和returnAddress类型。其中数值类型又可以分为整型和浮点型两种。  </p>
<ul>
<li>整型：byte(8 bit), short(16 bit), int(32 bit), long(64 bit), char(16 bit unsigned)  </li>
<li>浮点型：float（32 bit),double(64 bit)  </li>
<li>布尔型：boolean 通常用 int 型表示，Oracle 中用 byte 表示</li>
<li>returnAddress：一条字节码指令的操作码  </li>
</ul>
<h3 id="Reference-type"><a href="#Reference-type" class="headerlink" title="Reference type"></a>Reference type</h3><p>引用类型分为三种：Class Types, Array Types 和 Interface Types, 这些引用类型的值分别由类实例、数组实例和实现了某个接口的类实例或者数组实例动态创建。引用类型中有一特殊的值null, 引用类型的默认值就是 null.  </p>
<h3 id="形式参数传递"><a href="#形式参数传递" class="headerlink" title="形式参数传递"></a>形式参数传递</h3><p>基本类型作为形式参数传递不会改变实际参数，引用类型作为形式参数传递会改变实际参数。JDK1.5之后含有基本类型的包装类型，即自动拆装箱的功能，故将基本类型的相应对象作为参数传递时会自动拆箱为基本类型，故也不改变实际参数的值。  </p>
<h2 id="Run-Time-Data-Area-运行时数据区域"><a href="#Run-Time-Data-Area-运行时数据区域" class="headerlink" title="Run-Time Data Area-运行时数据区域"></a>Run-Time Data Area-运行时数据区域</h2><p>JVM运行时会有几个运行时数据区域，如下图所示。<br><img src="https://upload-images.jianshu.io/upload_images/2847713-0f92f3abda0c670f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png">  </p>
<h3 id="程序计数器"><a href="#程序计数器" class="headerlink" title="程序计数器"></a>程序计数器</h3><p>线程私有内存，保存 <strong>当前线程所执行的字节码的行号指示器</strong>，这里和计算机组成原理中的计数器不太一样，计组中的PC指的是下一条要执行的指令的地址。JVM中常有多个线程执行，故每条线程都需要有一个独立的程序计数器。<br>如果线程执行的是Java方法，哪儿计数器记录的就是正在执行的虚拟机字节码指令的地址；如果执行的是 Native 方法，这个计数器则为空。<br>P.S. 这块内存无OutOfMemoryError</p>
<h3 id="虚拟机栈"><a href="#虚拟机栈" class="headerlink" title="虚拟机栈"></a>虚拟机栈</h3><p>线程私有，虚拟机栈描述的是Java方法执行的内存模型，每个方法在执行时会创建一个栈帧，栈帧中保存有局部变量表、操作数栈、动态链接和方法出口。粗略来讲Java内存区分为堆和栈，实际上栈指的往往是虚拟机栈中的局部变量表部分。<br>局部变量表中存放了编译期可知的各种基本数据类型、对象引用类型和returnAddress类型。方法运行期间局部变量表大小不变。  </p>
<h3 id="本地方法栈"><a href="#本地方法栈" class="headerlink" title="本地方法栈"></a>本地方法栈</h3><p>和虚拟机类似，不过区别在于虚拟机栈为Java方法（字节码）服务，而本地方法栈为Native方法服务。  </p>
<h3 id="堆"><a href="#堆" class="headerlink" title="堆"></a>堆</h3><p>堆是被所有线程共享的一块内存区域。一般来说所有的对象实例和数组都要在堆上分配，但一些优化技术导致不一定所有对象实例都在堆上分配。  </p>
<h3 id="方法区"><a href="#方法区" class="headerlink" title="方法区"></a>方法区</h3><p>各线程共享的一块内存区域，和操作系统中进程中的文本段有些类似，用于存储虚拟机加载的类信息、常量、静态常量和即时编译后的代码数据等。  </p>
<h3 id="运行时常量池"><a href="#运行时常量池" class="headerlink" title="运行时常量池"></a>运行时常量池</h3><p>这一部分是方法区的一部分，用于保存Class文件中编译期生成的字面值和符号引用。  </p>
<h3 id="直接内存"><a href="#直接内存" class="headerlink" title="直接内存"></a>直接内存</h3><p>这一部分并不是虚拟机运行时的数据区域，用于Native函数分配堆外内存，提高性能。  </p>
<h2 id="J2EE应用的四个部分"><a href="#J2EE应用的四个部分" class="headerlink" title="J2EE应用的四个部分"></a>J2EE应用的四个部分</h2><ul>
<li>客户端层  </li>
<li>web层（Servlet and JSP）</li>
<li>业务层（JavaBeans）</li>
<li>企业信息系统层</li>
</ul>
<h2 id="什么是事务"><a href="#什么是事务" class="headerlink" title="什么是事务"></a>什么是事务</h2><p>事务是应用程序中一系列严密的操作，所有操作必须成功完成，否则在每个操作中所做的所有更改都会被撤销。</p>
<h2 id="什么是servlet"><a href="#什么是servlet" class="headerlink" title="什么是servlet"></a>什么是servlet</h2><p>Servlets是服务器端的部件，是纯的Java对象，设计用于多种协议，特别是HTTP。  </p>
<h3 id="创建servlet"><a href="#创建servlet" class="headerlink" title="创建servlet"></a>创建servlet</h3><p>Servlet在容器中运行时，其实例的创建以及销毁等是由容器进行控制。  </p>
<p>Servlet的创建有两种方法。  </p>
<ul>
<li>客户端请求对应的Servlet时，创建Servlet实例。大部分Servlet都是这种Servlet、  </li>
<li>通过在web.xml中设置loaf-on-startup来创建servlet实例，这种实例在Web应用启东时，立即创建Servlet实例。  </li>
</ul>
<h3 id="Servlet必须实现什么接口？"><a href="#Servlet必须实现什么接口？" class="headerlink" title="Servlet必须实现什么接口？"></a>Servlet必须实现什么接口？</h3><p>Servlet Interface  </p>
<h3 id="servlet生命周期"><a href="#servlet生命周期" class="headerlink" title="servlet生命周期"></a>servlet生命周期</h3><ul>
<li>读取Servlet类</li>
<li>创建Servlet实例</li>
<li>Web容器调用Servlet的init()方法</li>
<li>响应客户端请求通过Servlet中service（）方法中相应的doXXX()方法</li>
<li>调用Servlet的destroy  </li>
</ul>
<h2 id="什么是Spring"><a href="#什么是Spring" class="headerlink" title="什么是Spring"></a>什么是Spring</h2><p>Spring是Java EE的一个轻量级的开源框架，使J2EE开发更容易。<br>通过实现基于POJO的编程模型，Spring的核心design pattern是IOC  </p>
<h2 id="什么是Spring的配置文件"><a href="#什么是Spring的配置文件" class="headerlink" title="什么是Spring的配置文件"></a>什么是Spring的配置文件</h2><p>Spring的配置文件是一个XML文件，这个文件包含类的或者说bean的信息以及它们是如何配置的。  </p>
<h2 id="IOC有什么好处"><a href="#IOC有什么好处" class="headerlink" title="IOC有什么好处"></a>IOC有什么好处</h2><ul>
<li>减少代码 </li>
<li>适应于更容易测试 </li>
</ul>
<h2 id="什么是Spring-Beans"><a href="#什么是Spring-Beans" class="headerlink" title="什么是Spring Beans"></a>什么是Spring Beans</h2><p>一个Bean是被实例化，组装，以及由Spring IoC容器管理的对象  </p>
<h2 id="Singleton-bean-是线程安全吗"><a href="#Singleton-bean-是线程安全吗" class="headerlink" title="Singleton bean 是线程安全吗"></a>Singleton bean 是线程安全吗</h2><p>不是。  </p>
<p><strong>什么叫线程安全</strong><br>一段代码，同时几个线程同时使用，结果都是正确的，就叫线程安全。<br>比如我们打开百度知道的首页，全世界很多人都在打开，都是正确的，证明百度知道首页的那段代码是线程安全的。  </p>
<h2 id="Spring-MVC理解"><a href="#Spring-MVC理解" class="headerlink" title="Spring MVC理解"></a>Spring MVC理解</h2><p><strong>Model（模型）</strong>是应用程序中用于处理应用程序数据逻辑的部分。通常模型对象负责在数据库中存取数据。  </p>
<p><strong>View（视图）</strong>是应用程序中处理数据显示的部分。通常视图是依据模型数据创建的。  </p>
<p><strong>Controller（控制器）</strong>是应用程序中处理用户交互的部分。通常控制器负责从视图读取数据，控制用户输入，并向模型发送数据。  </p>
<p><strong>MVC处理过程</strong>：对于每一个用户输入的请求，先被控制器接收，并决定由哪个模型来进行处理，然后模型通过业务逻辑层处理用户的请求并返回数据，最后控制器用相应的视图格式化模型返回的数据，并通过显示页面呈现给用户。  </p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;站在巨人的肩膀上，好记性不如烂键盘。  &lt;/p&gt;
&lt;p&gt;All from &lt;a href=&quot;https://love2.io/@hakukata/doc/Java-Interview-Question/java/what_ate_object-oriented_features.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;java面试笔记&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="https://x-nicolo.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Java" scheme="https://x-nicolo.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>我的秋招进度表</title>
    <link href="https://x-nicolo.github.io/2018/07/07/%E6%88%91%E7%9A%84%E7%A7%8B%E6%8B%9B%E8%BF%9B%E5%BA%A6%E8%A1%A8/"/>
    <id>https://x-nicolo.github.io/2018/07/07/我的秋招进度表/</id>
    <published>2018-07-07T03:06:46.000Z</published>
    <updated>2018-06-15T03:06:46.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">密码不能告诉你</h3><link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css"> <link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css"> <script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <script src="//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js"></script> <div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none">  </div>]]></content>
    
    <summary type="html">
    
      私密博客，秋招后解禁
    
    </summary>
    
      <category term="随笔" scheme="https://x-nicolo.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="找工作" scheme="https://x-nicolo.github.io/tags/%E6%89%BE%E5%B7%A5%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>Python3五行代码实现缩短网址功能</title>
    <link href="https://x-nicolo.github.io/2018/07/04/%E4%BA%94%E8%A1%8C%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0Python%E7%BC%A9%E7%9F%AD%E7%BD%91%E5%9D%80%E5%8A%9F%E8%83%BD/"/>
    <id>https://x-nicolo.github.io/2018/07/04/五行代码实现Python缩短网址功能/</id>
    <published>2018-07-04T03:51:05.000Z</published>
    <updated>2018-07-04T03:51:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>折腾了一晚上，百度和新浪的都试了，都不太好用。感谢国外的<a href="https://pythontips.com/2013/08/03/a-url-shortener-in-python/" target="_blank" rel="external">大牛</a>。<br><a id="more"></a>  </p>
<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>最近一直在更新校招微信机器人，详情看这里<a href="https://x-nicolo.github.io/2018/06/13/%E6%8B%9B%E8%81%98%E4%BC%9A%E4%BF%A1%E6%81%AF%E6%8F%90%E9%86%92%E4%B9%8B%E5%BE%AE%E4%BF%A1%E6%9C%BA%E5%99%A8%E4%BA%BA/">叮！你的校招提醒微信机器人已上线！</a><br>其中爬取的招聘信息链接太长了，本人是个强迫狂魔，这看起来太不美观了，必须缩短！<br><figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">『睿思校园招聘信息，机器喵自动获取，仅供参考』</div><div class="line">阿里巴巴数据技术及产品部-校园交流﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951547&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">阿里-菜鸟<span class="number">2018</span>年网络测试开发工程师部门直招﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951510&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">（散金币）百度搜索公司SRE团队<span class="number">2019</span>年校招提前批﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951473&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">错投男儿胎，找个家教兼职都这么难（都要求女生）﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951464&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">阿里巴巴菜鸟 测试开发工程师 内推招聘﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951463&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">乐馨托管招聘作业辅导老师一名﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951461&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">[散金币]  西安葡萄城信息技术有限公司<span class="number">2019</span>校园招聘﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951451&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">西安诺瓦科技<span class="number">2019</span>届提前批校招开始啦，与独角兽一起开疆拓土~~~~~﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951338&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">平安租赁招实习生啦﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951331&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">新校区附近寻找初中家教找初中家教﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951299&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">拼多多技术校招内推﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951283&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">百度招实习生﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951276&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">【散金币】西安闻泰电子科技有限公司人力资源<span class="number">2018</span>校园招聘﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951258&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">拼多多<span class="number">2019</span>届 校招开始啦！﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951250&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">乐馨托管招作业辅导老师一名﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951246&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">【找家教】给高一的两个孩子找家教﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951235&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">「商务运营实习」「网联」「央行、阿里、腾讯、京东入股企业」「北京」﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951189&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">老校区附近想找份家教工作，初高中数学理综均可﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951184&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">招女生家教﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951181&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">招募一名会微信小程序的同学开发一个公众号，报酬丰厚﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951140&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">【金币】【招兼职老师】短期老师﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951096&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">【散金币】+家教咯，初三英语、数学、物理、化学﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951023&amp;extra=page%3D1&amp;mobile=2</span></div></pre></td></tr></table></figure></p>
<h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>在网上看了一大堆原理和各种API，然而用python3实现的不多，凑巧看到国外大神的，站在巨人肩膀搞定！看代码。<br>先来导入包和使用try，保证鲁棒性。<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> contextlib</div><div class="line"><span class="keyword">try</span>:</div><div class="line">    <span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlencode</div><div class="line"><span class="keyword">except</span> <span class="type">ImportError</span>:</div><div class="line">    <span class="keyword">from</span> urllib <span class="keyword">import</span> urlencode</div><div class="line"><span class="keyword">try</span>:</div><div class="line">    <span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlopen</div><div class="line"><span class="keyword">except</span> <span class="type">ImportError</span>:</div><div class="line">    <span class="keyword">from</span> urllib2 <span class="keyword">import</span> urlopen</div><div class="line"><span class="keyword">import</span> sys</div></pre></td></tr></table></figure></p>
<p>剩下的就是五行代码了。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">make_tiny</span><span class="params">(url)</span>:</span></div><div class="line">    request_url = (<span class="string">'http://tinyurl.com/api-create.php?'</span> + </div><div class="line">    urlencode(&#123;<span class="string">'url'</span>:url&#125;))</div><div class="line">    <span class="keyword">with</span> contextlib.closing(urlopen(request_url)) <span class="keyword">as</span> response:</div><div class="line">        <span class="keyword">return</span> response.read().decode(<span class="string">'utf-8'</span>)</div></pre></td></tr></table></figure></p>
<p>测试一下：<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">print(<span class="name">make_tiny</span>(<span class="string">"http://rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951443"</span>))</div></pre></td></tr></table></figure></p>
<p>输出：<br><figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/y7we9xnu</span></div></pre></td></tr></table></figure></p>
<p>用浏览器打开ok，完美！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;折腾了一晚上，百度和新浪的都试了，都不太好用。感谢国外的&lt;a href=&quot;https://pythontips.com/2013/08/03/a-url-shortener-in-python/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;大牛&lt;/a&gt;。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="https://x-nicolo.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Python" scheme="https://x-nicolo.github.io/tags/Python/"/>
    
      <category term="爬虫" scheme="https://x-nicolo.github.io/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>叮！你的校招提醒微信机器人已上线！</title>
    <link href="https://x-nicolo.github.io/2018/06/13/%E6%8B%9B%E8%81%98%E4%BC%9A%E4%BF%A1%E6%81%AF%E6%8F%90%E9%86%92%E4%B9%8B%E5%BE%AE%E4%BF%A1%E6%9C%BA%E5%99%A8%E4%BA%BA/"/>
    <id>https://x-nicolo.github.io/2018/06/13/招聘会信息提醒之微信机器人/</id>
    <published>2018-06-13T07:33:26.000Z</published>
    <updated>2018-07-15T07:33:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>招聘季即将到来，如何实时的得知招聘信息呢？自然是爬虫+微信了。<br><a id="more"></a><br>这几日在票圈和各微信群看到大家疯狂刷“京东”、“腾讯”等秋招类的“广告”，我对这些营销方式存怀疑态度，觉得一定不是官方的！总感觉有恶意营销在里面。<br>有需求就有市场，为什么不自己写一个校招提醒机器人呢？简单的想了下，爬虫+微信模式应该是最好的搭配了。 </p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>先说使用方法，再讲原理。<br><img src="https://upload-images.jianshu.io/upload_images/2847713-0df71c32cd18bc36.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="386754908630342029.jpg"></p>
<ul>
<li>打开微信扫一扫，扫描上方二维码</li>
<li>添加它为好友</li>
<li>接受它发出的群聊邀请(自动邀请功能暂时取消，请告诉它要进哪个群，后面统一拉)</li>
<li>每日更新招聘会信息（现阶段仅支持西电就业信息网招聘会信息）</li>
</ul>
<h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p><img src="https://upload-images.jianshu.io/upload_images/2847713-0df204fa527c2b96.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="微信图片_20180613201454.jpg"></p>
<p>这是一个西电求职交流群，大家有更好的招聘信息也可以甩到群里。  </p>
<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>原理主要分为两部分：爬虫+微信机器人。  </p>
<h3 id="爬虫"><a href="#爬虫" class="headerlink" title="爬虫"></a>爬虫</h3><p>讲道理西电就业信息应该挺好爬的吧，网站虽然丑一点，但是内容才是最重要的。就用最简单的请求方式去获取网站内容，居然Forbidden了。<br><img src="https://upload-images.jianshu.io/upload_images/2847713-3b281e954e9b5859.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="26475337410507141.png"><br>那好吧，只能伪装浏览器了。<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">headers = &#123;<span class="string">'User-Agent'</span> : <span class="string">'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:29.0) Gecko/20100101 Firefox/29.0'</span>&#125;  </div><div class="line">    req = urllib<span class="selector-class">.request</span><span class="selector-class">.Request</span>(url=url,headers=headers)</div></pre></td></tr></table></figure></p>
<p>这样就ok。  </p>
<p>完整的抓取网站信息代码：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">getPageContent</span><span class="params">(url)</span>:</span></div><div class="line">    headers = &#123;<span class="string">'User-Agent'</span> : <span class="string">'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:29.0) Gecko/20100101 Firefox/29.0'</span>&#125;  </div><div class="line">    req = urllib.request.Request(url=url,headers=headers)</div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        res = urllib.request.urlopen(req)</div><div class="line">    <span class="keyword">except</span> urllib.error.URLError <span class="keyword">as</span> e:</div><div class="line">        <span class="keyword">return</span> e</div><div class="line">    page_content = res.read()</div><div class="line">    page_content=BeautifulSoup(page_content,<span class="string">"lxml"</span>)</div><div class="line">    <span class="keyword">return</span> page_content</div></pre></td></tr></table></figure></p>
<p>就业信息网长这样：<br><img src="https://upload-images.jianshu.io/upload_images/2847713-5b062097ea604b31.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>北校区招聘会信息的table长这样：<br><img src="https://upload-images.jianshu.io/upload_images/2847713-caa3d1b099e85ff0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>找到标签那就剥洋葱的爬呗：<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">getJobInfo</span><span class="params">(page_content)</span></span><span class="symbol">:</span></div><div class="line">    job_content = page_content.find(<span class="string">"table"</span>, &#123;<span class="string">"class"</span>: <span class="string">"zphTable"</span>&#125;)</div><div class="line">    rows = job_content.findAll(<span class="string">"tr"</span>)[<span class="number">1</span><span class="symbol">:</span>]</div><div class="line">    job_info=[]</div><div class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> <span class="symbol">rows:</span></div><div class="line">        <span class="keyword">for</span> cell <span class="keyword">in</span> row.findAll(<span class="string">'td'</span>)<span class="symbol">:</span></div><div class="line">            info=cell.get_text()</div><div class="line">            job_info.append(info)</div><div class="line">    <span class="keyword">return</span> job_info</div></pre></td></tr></table></figure></p>
<p>南校区的信息结构和北校区一样，同样试用上面的程序。  </p>
<p>对于爬虫的招聘会信息还需做处理，用于后面微信发送。<br>处理的代码：<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">xdjob</span><span class="params">(jobinfo)</span></span><span class="symbol">:</span></div><div class="line">    urlN = <span class="string">'http://job.xidian.edu.cn/html/zpxx/bxqzph/'</span></div><div class="line">    urlS = <span class="string">'http://job.xidian.edu.cn/html/zpxx/nxqzph/'</span></div><div class="line">    page_contentN=getPageContent(urlN)</div><div class="line">    page_contentS=getPageContent(urlS)</div><div class="line">    job_infoN=[<span class="string">"【北校区招聘会信息】"</span>]+getJobInfo(page_contentN)</div><div class="line">    job_infoS=[<span class="string">"【南校区招聘会信息】"</span>]+getJobInfo(page_contentS)</div><div class="line">    job_info = job_infoS+job_infoN</div><div class="line">    jobinfo=<span class="string">'『本条由机器喵自动发出，是个机器人大家勿撩哦』'</span>+<span class="string">"\n"</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="symbol">job_info:</span></div><div class="line">        jobinfo=jobinfo+ <span class="string">"\n"</span> +i</div><div class="line">    <span class="keyword">return</span> jobinfo</div></pre></td></tr></table></figure></p>
<p>至此，爬虫的工作已完成。  </p>
<h3 id="微信机器人"><a href="#微信机器人" class="headerlink" title="微信机器人"></a>微信机器人</h3><p>之前微信<a href="https://x-nicolo.github.io/2017/10/23/Python%E5%BE%AE%E4%BF%A1%E5%A5%BD%E5%8F%8B%E5%88%86%E6%9E%90/">好友分析</a>使用过itchat，真的是非常好的一个库。  </p>
<p>这次要做的工作简单点，找到指定的群聊名，将爬取的就业信息发送即可。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">wx</span><span class="params">(jobinfo2)</span>:</span></div><div class="line"></div><div class="line">    itchat.auto_login(hotReload = <span class="keyword">True</span>)<span class="comment"># 可设置hotReload = True</span></div><div class="line">    i=itchat.get_chatrooms(update=<span class="keyword">True</span>)</div><div class="line">    name = <span class="string">"西电求职交流群"</span></div><div class="line">    iRoom = itchat.search_chatrooms(name)</div><div class="line">    <span class="keyword">for</span> room <span class="keyword">in</span> iRoom:</div><div class="line">        <span class="keyword">if</span> room[<span class="string">'NickName'</span>] == name:</div><div class="line">            userName = room[<span class="string">'UserName'</span>]</div><div class="line">        <span class="keyword">break</span></div><div class="line">    itchat.send_msg(jobinfo2, userName)</div></pre></td></tr></table></figure></p>
<p>具体的工作流程为：</p>
<ul>
<li>登录微信</li>
<li>获取所有群聊名称</li>
<li>匹配要发送信息的微信群</li>
<li>发送指定信息</li>
</ul>
<p>至此爬虫+微信机器人的工作均已完成。<br>可是总不能天天手动去运行程序吧，那我为什么不去看就业信息网站上的信息呢。<br><strong>做程序员呢，最重要的就是一定要懒。</strong><br>设置一个定时器呗，每天运行一次。基本上就能满足需求了。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">timer</span><span class="params">(n)</span>:</span></div><div class="line">    itchat.auto_login(hotReload=<span class="keyword">True</span>)  <span class="comment"># 可设置hotReload = True</span></div><div class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">        jobinfo=<span class="string">''</span></div><div class="line">        wx(xdjob(jobinfo))</div><div class="line">        time.sleep(n)</div></pre></td></tr></table></figure></p>
<p>这样就行了，主程序运行timer(86400)，每日更新一波。最后再部署到云服务器就好了。  </p>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>这点信息总感觉太少，还望大家多多提供点靠谱的招聘信息网站，有兴趣的也可以联系我，一起把这个功能丰富起来。<br>方便他人，方便自己。</p>
<h2 id="V1-2"><a href="#V1-2" class="headerlink" title="V1.2"></a>V1.2</h2><p>同学给的几点建议：  </p>
<ul>
<li>去掉过期的招聘会信息  </li>
<li>增加交大、西工大的招聘会信息  </li>
<li>增加应届生招聘网站上的信息  </li>
</ul>
<p>我是从西电就业信息网直接爬取，网站上的信息并为做过期处理。<br>这样一想有没有可能从其他招聘网站上抓取第二手信息呢，他们应该做过处理。<br>果不其然，海投网！直接解决了第一第二点的建议。<br>上代码：<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">xdjob</span></span>(jobinfo):</div><div class="line">    urlXD = <span class="symbol">'https</span>:<span class="comment">//xjh.haitou.cc/xa/uni-29'</span></div><div class="line">    urlXJ = <span class="symbol">'https</span>:<span class="comment">//xjh.haitou.cc/xa/uni-27'</span></div><div class="line">    urlGD = <span class="symbol">'https</span>:<span class="comment">//xjh.haitou.cc/xa/uni-28'</span></div><div class="line">    urlEnterprise=<span class="symbol">'http</span>:<span class="comment">//www.yingjiesheng.com/2019/'</span></div><div class="line">    page_contentN=getPageContent(urlXD)</div><div class="line">    page_contentS=getPageContent(urlXJ)</div><div class="line">    page_contentG = getPageContent(urlGD)</div><div class="line">    job_infoXD=[<span class="string">"--------------------"</span>+<span class="string">"\n"</span>+<span class="string">"【西电招聘会信息】"</span>]+getJobInfo(page_contentN)</div><div class="line">    job_infoXJ=[<span class="string">"--------------------"</span>+<span class="string">"\n"</span>+<span class="string">"【西交招聘会信息】"</span>]+getJobInfo(page_contentS)</div><div class="line">    job_infoGD = [<span class="string">"--------------------"</span>+<span class="string">"\n"</span>+<span class="string">"【瓜大招聘会信息】"</span>] + getJobInfo(page_contentG)</div><div class="line">    job_info = job_infoXD+job_infoXJ+job_infoGD</div><div class="line">    jobinfo='『今日招聘信息，以下数据为机器喵自动获取，仅供参考。有任何问题请艾特我群主爸爸@肖洒』'+<span class="string">"\n"</span></div><div class="line">    <span class="keyword">for</span> i in job_info:</div><div class="line">        jobinfo=jobinfo+ <span class="string">"\n"</span> +i</div><div class="line">    jobinfo=jobinfo + <span class="string">"\n"</span>+<span class="string">"--------------------"</span>+<span class="string">"\n"</span>+<span class="string">"【名企2019校园招聘进度表】"</span> + getEnter(urlEnterprise)</div><div class="line">    <span class="keyword">return</span> jobinfo</div></pre></td></tr></table></figure></p>
<p>完美！<br>关于第三点，这个应届生的网站真心写的好乱。。不过不能扒的网站呢！<br>上代码：<br><figure class="highlight nix"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">def getEnter(urlEnterprise):</div><div class="line">    <span class="attr">page_content</span> = getPageContent(urlEnterprise)</div><div class="line">    <span class="attr">job_content</span> = page_content.findAll(<span class="string">"div"</span>, &#123;<span class="string">"class"</span>: <span class="string">"s_clear tit floatl"</span>&#125;)[<span class="number">2</span>:]</div><div class="line">    <span class="attr">job_info</span> = []</div><div class="line">    for div <span class="keyword">in</span> job_content:</div><div class="line">        <span class="attr">url</span> = div.a.attrs[<span class="string">"href"</span>]</div><div class="line">        <span class="keyword">if</span> url[:<span class="number">4</span>] == <span class="string">"http"</span>:</div><div class="line">            pass</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            <span class="attr">url</span> = <span class="string">"http://www.yingjiesheng.com"</span> + url</div><div class="line">        <span class="attr">info</span> = div.get_text() + <span class="string">"\n"</span>+ url</div><div class="line">        job_info.append(info)</div><div class="line">    <span class="attr">jobinfo</span> = <span class="string">""</span></div><div class="line">    for i <span class="keyword">in</span> job_info:</div><div class="line">        <span class="attr">jobinfo</span> = jobinfo + <span class="string">"\n"</span> + i</div><div class="line">    return jobinfo</div></pre></td></tr></table></figure></p>
<p>最后现在的效果：<br><img src="https://upload-images.jianshu.io/upload_images/2847713-8d498166dd2ce908.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="7213390981083791.jpg"></p>
<h2 id="V1-3"><a href="#V1-3" class="headerlink" title="V1.3"></a>V1.3</h2><h3 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h3><p>西电这几日没有招聘会信息发布，所以西电部分的爬虫抛出异常。<br>已解决，修改如下：<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">xdjob</span></span>(jobinfo):</div><div class="line">   </div><div class="line">    urlXD = <span class="symbol">'https</span>:<span class="comment">//xjh.haitou.cc/xa/uni-29'</span></div><div class="line">    urlXJ = <span class="symbol">'https</span>:<span class="comment">//xjh.haitou.cc/xa/uni-27'</span></div><div class="line">    urlGD = <span class="symbol">'https</span>:<span class="comment">//xjh.haitou.cc/xa/uni-28'</span></div><div class="line">    urlEnterprise=<span class="symbol">'http</span>:<span class="comment">//www.yingjiesheng.com/2019/'</span></div><div class="line">    <span class="keyword">try</span>: </div><div class="line">        page_contentN=getPageContent(urlXD)</div><div class="line">        job_infoXD=[<span class="string">"--------------------"</span>+<span class="string">"\n"</span>+<span class="string">"【西电招聘会信息】"</span>]+getJobInfo(page_contentN)</div><div class="line">    except:</div><div class="line">        job_infoXD=[<span class="string">"--------------------"</span>+<span class="string">"\n"</span>+<span class="string">"【西电今日无招聘会信息哦】"</span>]</div><div class="line"></div><div class="line">    <span class="keyword">try</span>:</div><div class="line"></div><div class="line">        page_contentS=getPageContent(urlXJ)</div><div class="line">        job_infoXJ=[<span class="string">"--------------------"</span>+<span class="string">"\n"</span>+<span class="string">"【西交招聘会信息】"</span>]+getJobInfo(page_contentS)</div><div class="line">    except:</div><div class="line">        job_infoXJ=[<span class="string">"--------------------"</span>+<span class="string">"\n"</span>+<span class="string">"【西交今日无招聘会信息哦】"</span>]</div><div class="line"></div><div class="line">    <span class="keyword">try</span>:</div><div class="line"></div><div class="line">        page_contentG = getPageContent(urlGD)</div><div class="line">        job_infoGD = [<span class="string">"--------------------"</span>+<span class="string">"\n"</span>+<span class="string">"【瓜大招聘会信息】"</span>] + getJobInfo(page_contentG)</div><div class="line">    except:</div><div class="line">        job_infoXJ=[<span class="string">"--------------------"</span>+<span class="string">"\n"</span>+<span class="string">"【瓜大今日无招聘会信息哦】"</span>]</div><div class="line">    job_info = job_infoXD+job_infoXJ+job_infoGD</div><div class="line">    jobinfo='『今日招聘信息，以下数据为机器喵自动获取，仅供参考。有任何问题请艾特我群主爸爸@肖洒』'+<span class="string">"\n"</span></div><div class="line">    <span class="keyword">for</span> i in job_info:</div><div class="line">        jobinfo=jobinfo+ <span class="string">"\n"</span> +i</div><div class="line">    # jobinfo=jobinfo + <span class="string">"\n"</span>+<span class="string">"--------------------"</span>+<span class="string">"\n"</span>+<span class="string">"【名企2019校园招聘进度表】"</span> + getEnter(urlEnterprise)</div><div class="line">    <span class="keyword">return</span> jobinfo</div></pre></td></tr></table></figure></p>
<h2 id="V1-4"><a href="#V1-4" class="headerlink" title="V1.4"></a>V1.4</h2><h3 id="遇到的问题-1"><a href="#遇到的问题-1" class="headerlink" title="遇到的问题"></a>遇到的问题</h3><p>由于itchat的问题，网页版微信并不能一直保持在线，导致定时发送服务总是因为掉线而抛出异常。<br>解决办法：itchat在移动端微信保持稳定登录的情况下，30分钟内是可以保证在线的。所以想到每30分钟发一次信息，保持登录的状态，每24小时给求职群里发一次招聘会信息。具体实现方法：<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">n=<span class="number">0</span></div><div class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">    itchat.auto_login(hotReload=<span class="keyword">True</span>)  # 可设置hotReload = <span class="keyword">True</span></div><div class="line">    wx(<span class="string">'TEST'</span>,<span class="string">'别玩手机哦'</span>)</div><div class="line">    timer(<span class="number">1800</span>)</div><div class="line">    n=n+<span class="number">1</span></div><div class="line">    <span class="keyword">print</span>(<span class="string">"循环到第："</span>+str(n)+<span class="string">"次，还剩"</span>+str(<span class="number">48</span>-n)+<span class="string">"次即可触发爬虫"</span>)</div><div class="line">    <span class="keyword">while</span> n == <span class="number">48</span> :</div><div class="line">        jobinfo=<span class="string">""</span></div><div class="line">        wx(<span class="string">'西电求职交流群'</span>,xdjob(jobinfo))</div><div class="line">        n=<span class="number">0</span></div></pre></td></tr></table></figure></p>
<h2 id="V2-0"><a href="#V2-0" class="headerlink" title="V2.0"></a>V2.0</h2><h3 id="增加睿思的招聘信息"><a href="#增加睿思的招聘信息" class="headerlink" title="增加睿思的招聘信息"></a>增加睿思的招聘信息</h3><p>这几天已经用获得的招聘信息疯狂投递简历了。为了丰富招聘信息，根据之前的经验和代码，整合了下，抓取睿思校园招聘板块的信息，进行处理后进行微信发送。<br>睿思板块抓取的程序：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">rs</span><span class="params">()</span>:</span></div><div class="line">    pageURL = set()</div><div class="line">    job_rs = <span class="string">'『睿思校园招聘信息，机器喵自动获取，仅供参考』'</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">2</span>):</div><div class="line">        pages = <span class="string">'http://rsbbs.xidian.edu.cn/forum.php?mod=forumdisplay&amp;fid=554&amp;page='</span> + str(i) + <span class="string">'&amp;mobile=2'</span></div><div class="line">        <span class="keyword">if</span> pages <span class="keyword">not</span> <span class="keyword">in</span> pageURL:</div><div class="line">            headers = &#123;</div><div class="line">                <span class="string">'User-Agent'</span>: <span class="string">r'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) '</span></div><div class="line">                              <span class="string">r'Chrome/45.0.2454.85 Safari/537.36 115Browser/6.0.3'</span>,</div><div class="line">                <span class="string">'Referer'</span>: <span class="string">r'http://rsbbs.xidian.edu.cn'</span>,</div><div class="line">                <span class="string">'Connection'</span>: <span class="string">'keep-alive'</span>&#125;</div><div class="line">            req = request.Request(pages, headers=headers)</div><div class="line">            html = request.urlopen(req)</div><div class="line">            bsObj = BeautifulSoup(html.read(), <span class="string">"lxml"</span>)</div><div class="line">            tiezi = bsObj.findAll(<span class="string">"ul"</span>)</div><div class="line">            <span class="keyword">for</span> tiaos <span class="keyword">in</span> tiezi:</div><div class="line">                <span class="keyword">for</span> tiao <span class="keyword">in</span> tiaos.findAll(<span class="string">'a'</span>):</div><div class="line">                    <span class="keyword">for</span> person <span class="keyword">in</span> tiao.findAll(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"by"</span>&#125;):</div><div class="line">                        T = person.get_text().strip()</div><div class="line">                        [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> tiao.findAll(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"by"</span>&#125;)]</div><div class="line">                    P = tiao.get_text().strip() + <span class="string">"﹝详细信息﹞:"</span></div><div class="line">                    job_rs = job_rs + <span class="string">"\n"</span> + str(P)</div><div class="line">                    <span class="keyword">if</span> <span class="string">'href'</span> <span class="keyword">in</span> tiao.attrs:</div><div class="line">                        <span class="keyword">try</span>:</div><div class="line">                            tiao_links = <span class="string">"http://rsbbs.xidian.edu.cn/"</span> + tiao.attrs[<span class="string">'href'</span>]</div><div class="line">                            tiao_html = urlopen(tiao_links)</div><div class="line">                            job_rs = job_rs + <span class="string">"\n"</span> + str(tiao_links)</div><div class="line">                            tiao_bsObj = BeautifulSoup(tiao_html.read(), <span class="string">"lxml"</span>)</div><div class="line">                            content = tiao_bsObj.findAll(<span class="string">"div"</span>, &#123;<span class="string">"class"</span>: <span class="string">"message"</span>&#125;)[<span class="number">0</span>]</div><div class="line">                            R = content.get_text().strip()</div><div class="line">                        <span class="keyword">except</span> (ValueError, IndexError) <span class="keyword">as</span> e:</div><div class="line">                            <span class="keyword">pass</span></div><div class="line">                        pageURL.add(pages)</div><div class="line">        time.sleep(<span class="number">3</span>)  <span class="comment"># 设置时间间隔为3秒</span></div><div class="line">        <span class="keyword">return</span> job_rs</div></pre></td></tr></table></figure></p>
<p>得到的信息如下：<br><figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">『睿思校园招聘信息，机器喵自动获取，仅供参考』</div><div class="line">阿里巴巴数据技术及产品部-校园交流﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951547&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">阿里-菜鸟<span class="number">2018</span>年网络测试开发工程师部门直招﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951510&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">（散金币）百度搜索公司SRE团队<span class="number">2019</span>年校招提前批﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951473&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">错投男儿胎，找个家教兼职都这么难（都要求女生）﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951464&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">阿里巴巴菜鸟 测试开发工程师 内推招聘﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951463&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">乐馨托管招聘作业辅导老师一名﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951461&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">[散金币]  西安葡萄城信息技术有限公司<span class="number">2019</span>校园招聘﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951451&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">西安诺瓦科技<span class="number">2019</span>届提前批校招开始啦，与独角兽一起开疆拓土~~~~~﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951338&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">平安租赁招实习生啦﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951331&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">新校区附近寻找初中家教找初中家教﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951299&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">拼多多技术校招内推﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951283&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">百度招实习生﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951276&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">【散金币】西安闻泰电子科技有限公司人力资源<span class="number">2018</span>校园招聘﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951258&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">拼多多<span class="number">2019</span>届 校招开始啦！﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951250&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">乐馨托管招作业辅导老师一名﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951246&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">【找家教】给高一的两个孩子找家教﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951235&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">「商务运营实习」「网联」「央行、阿里、腾讯、京东入股企业」「北京」﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951189&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">老校区附近想找份家教工作，初高中数学理综均可﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951184&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">招女生家教﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951181&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">招募一名会微信小程序的同学开发一个公众号，报酬丰厚﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951140&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">【金币】【招兼职老师】短期老师﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951096&amp;extra=page%3D1&amp;mobile=2</span></div><div class="line">【散金币】+家教咯，初三英语、数学、物理、化学﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//rsbbs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=951023&amp;extra=page%3D1&amp;mobile=2</span></div></pre></td></tr></table></figure></p>
<h3 id="遇到的问题-2"><a href="#遇到的问题-2" class="headerlink" title="遇到的问题"></a>遇到的问题</h3><p>之前循环时间，然后触发程序有些鸡肋。进行了新的改动。<br><figure class="highlight sqf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">while</span> <span class="literal">True</span>:</div><div class="line">    <span class="meta"># itchat.auto_login(hotReload=True)  # 可设置hotReload = True</span></div><div class="line">    jobinfo = <span class="string">""</span></div><div class="line">    time_now = <span class="built_in">time</span>.strftime(<span class="string">'%H%M'</span>,<span class="built_in">time</span>.localtime(<span class="built_in">time</span>.<span class="built_in">time</span>()))</div><div class="line">    <span class="keyword">if</span> int(time_now) == <span class="number">1000</span>:</div><div class="line">        wx(<span class="string">'西电招聘信息发布群1'</span>, xdjob(jobinfo))</div><div class="line">        <span class="built_in">time</span>.<span class="built_in">sleep</span>(<span class="number">30</span>)</div><div class="line">        wx(<span class="string">'西电招聘信息发布群1'</span>, rs())</div><div class="line">        <span class="built_in">time</span>.<span class="built_in">sleep</span>(<span class="number">30</span>)</div><div class="line">        wx(<span class="string">'西电招聘信息发布群2'</span>, xdjob(jobinfo))</div><div class="line">        <span class="built_in">time</span>.<span class="built_in">sleep</span>(<span class="number">30</span>)</div><div class="line">        wx(<span class="string">'西电招聘信息发布群2'</span>, rs())</div><div class="line">        <span class="built_in">time</span>.<span class="built_in">sleep</span>(<span class="number">30</span>)</div><div class="line">    elif int(time_now) % <span class="number">10</span> == <span class="number">0</span>:</div><div class="line">        wx(<span class="string">'TEST'</span>, time_now)</div><div class="line">        <span class="built_in">time</span>.<span class="built_in">sleep</span>(<span class="number">60</span>)</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        timer(<span class="number">60</span>)</div></pre></td></tr></table></figure></p>
<p>采用检测本地时间来进行触发。Itchat有个问题不好处理，会时长掉线，查过很多资料好像并不能很好的解决这个问题。所以，为了保证网页版微信的登录状态，每隔十分钟会给一个TEST群里发送信息。这个方法可以保证一段时间的登录状态。但是还是会一段时间后LOG OUT。现在的原因还未能知晓，此bug需要后面解决。  </p>
<h2 id="V2-1"><a href="#V2-1" class="headerlink" title="V2.1"></a>V2.1</h2><p>是什么驱动要一直去写代码，有一大部分是强迫症！！！<br>上面招聘信息的链接也太长了吧，在微信里看起来好烦。<br>所以，缩短的网址，看这里。<a href="https://x-nicolo.github.io/2018/07/04/%E4%BA%94%E8%A1%8C%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0Python%E7%BC%A9%E7%9F%AD%E7%BD%91%E5%9D%80%E5%8A%9F%E8%83%BD/">Python3五行代码实现缩短网址功能</a><br>实现的效果：<br><figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">『睿思校园招聘信息，机器喵自动获取，仅供参考』</div><div class="line">客服﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/y77mdy7q</span></div><div class="line">阿里巴巴数据技术及产品部-校园交流﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/y7vmoaqr</span></div><div class="line">阿里-菜鸟<span class="number">2018</span>年网络测试开发工程师部门直招﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/yc9xe4eu</span></div><div class="line">（散金币）百度搜索公司SRE团队<span class="number">2019</span>年校招提前批﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/y753gupt</span></div><div class="line">错投男儿胎，找个家教兼职都这么难（都要求女生）﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/y7fdybjh</span></div><div class="line">阿里巴巴菜鸟 测试开发工程师 内推招聘﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/ybwj6dq8</span></div><div class="line">乐馨托管招聘作业辅导老师一名﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/y73cuhfv</span></div><div class="line">[散金币]  西安葡萄城信息技术有限公司<span class="number">2019</span>校园招聘﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/y8w43yap</span></div><div class="line">西安诺瓦科技<span class="number">2019</span>届提前批校招开始啦，与独角兽一起开疆拓土~~~~~﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/y85atskf</span></div><div class="line">平安租赁招实习生啦﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/y77fak6z</span></div><div class="line">新校区附近寻找初中家教找初中家教﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/ya9lxcvw</span></div><div class="line">拼多多技术校招内推﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/ya2plpp7</span></div><div class="line">百度招实习生﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/y9bpe4z2</span></div><div class="line">【散金币】西安闻泰电子科技有限公司人力资源<span class="number">2018</span>校园招聘﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/ybgurcyz</span></div><div class="line">拼多多<span class="number">2019</span>届 校招开始啦！﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/y94ypr6b</span></div><div class="line">乐馨托管招作业辅导老师一名﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/yc67fjvp</span></div><div class="line">【找家教】给高一的两个孩子找家教﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/yc9lldzl</span></div><div class="line">「商务运营实习」「网联」「央行、阿里、腾讯、京东入股企业」「北京」﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/ycvh4qdc</span></div><div class="line">老校区附近想找份家教工作，初高中数学理综均可﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/y9tbfxkv</span></div><div class="line">招女生家教﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/y7u63n68</span></div><div class="line">招募一名会微信小程序的同学开发一个公众号，报酬丰厚﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/y9c6zwkz</span></div><div class="line">【金币】【招兼职老师】短期老师﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/ybo7araq</span></div></pre></td></tr></table></figure></p>
<h2 id="V2-2-7-22"><a href="#V2-2-7-22" class="headerlink" title="V2.2  7.22"></a>V2.2  7.22</h2><h3 id="遇到的问题-3"><a href="#遇到的问题-3" class="headerlink" title="遇到的问题"></a>遇到的问题</h3><p>不能保持登录的问题。<br>我是傻子，大傻子。为什么不能分清if 和 switch的功能！！！  </p>
<p>我把测试保持登录的if 放到最前面就好了啊！！  </p>
<h2 id="V3-0"><a href="#V3-0" class="headerlink" title="V3.0"></a>V3.0</h2><p>增加了西电就业信息网的信息发布。  </p>
<figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">今日西电就业信息网信息</div><div class="line">[机器喵自动获取，仅供参考]</div><div class="line">有问题请艾特群主@肖洒</div><div class="line">更多有意思的小玩意</div><div class="line"><span class="symbol">https:</span><span class="comment">//x-nicolo.github.io/</span></div><div class="line">--------------------</div><div class="line"></div><div class="line"><span class="number">2019</span>吉利全球校园招聘秋招校园大使招募﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/y9snhhlw</span></div><div class="line">北京银通智博科技有限公司﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/yb79rxgd</span></div><div class="line">作业帮教育科技（北京）有限公司﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/ybxefd9l</span></div><div class="line">西安华线石油科技有限公司﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/y9rs7rhx</span></div><div class="line">大连探索者科技有限公司﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/y7ew69lq</span></div><div class="line">网易云音乐校园招聘﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/yb4nuuyg</span></div><div class="line">深圳零壹空间电子有限公司﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/y8b464pp</span></div><div class="line">文职招考，战略支援部队某部邀你到古城西安来﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/y8wwmhkg</span></div><div class="line">北京翔仪恒昌科技有限公司﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/ybjo2mmf</span></div><div class="line">保定市冀能电力自动化设备有限公司﹝详细信息﹞:</div><div class="line"><span class="symbol">http:</span><span class="comment">//tinyurl.com/yanj2rzg</span></div></pre></td></tr></table></figure>
<p>代码：  </p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">xdjobs</span><span class="params">()</span></span><span class="symbol">:</span></div><div class="line">    job_rs = <span class="string">'🔴就业信息网最新10条信息'</span>+<span class="string">"\n"</span>+<span class="string">'[机器喵自动获取，仅供参考]'</span>+<span class="string">"\n"</span>+<span class="string">'有问题请艾特群主@肖洒'</span>+<span class="string">"\n"</span>+<span class="string">'更多有意思的小玩意'</span>+<span class="string">"\n"</span>+<span class="string">'👉https://x-nicolo.github.io/'</span>+<span class="string">"\n"</span>+<span class="string">"--------------------"</span>+<span class="string">"\n"</span></div><div class="line">    url = <span class="string">'http://job.xidian.edu.cn/html/zpxx/jobs/'</span></div><div class="line">    headers = &#123;<span class="string">'User-Agent'</span> : <span class="string">'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:29.0) Gecko/20100101 Firefox/29.0'</span>&#125;  </div><div class="line">    req = urllib.request.Request(url=url,headers=headers)</div><div class="line">    res = urllib.request.urlopen(req)</div><div class="line">    page_content = res.read()</div><div class="line">    page_content=BeautifulSoup(page_content,<span class="string">"lxml"</span>)</div><div class="line">    job_content = page_content.find(<span class="string">"div"</span>, &#123;<span class="string">"class"</span>: <span class="string">"content"</span>&#125;)</div><div class="line">    rows = job_content.findAll(<span class="string">"span"</span>)</div><div class="line">    job_info=[]</div><div class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> <span class="symbol">rows:</span></div><div class="line">        <span class="keyword">for</span> cell <span class="keyword">in</span> row.findAll(<span class="string">'a'</span>)<span class="symbol">:</span></div><div class="line">            info=cell.get_text()</div><div class="line">            P = cell.get_text().strip() + <span class="string">"﹝详细信息﹞:"</span></div><div class="line">            job_rs = job_rs + <span class="string">"\n"</span> + str(P)</div><div class="line">            tiao_links = <span class="string">"http://job.xidian.edu.cn"</span> + cell.attrs[<span class="string">'href'</span>]</div><div class="line">            job_rs = job_rs + <span class="string">"\n"</span> +str(make_tiny(tiao_links))</div><div class="line">    <span class="keyword">return</span> job_rs</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;招聘季即将到来，如何实时的得知招聘信息呢？自然是爬虫+微信了。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="https://x-nicolo.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Python" scheme="https://x-nicolo.github.io/tags/Python/"/>
    
      <category term="爬虫" scheme="https://x-nicolo.github.io/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>Python100Days</title>
    <link href="https://x-nicolo.github.io/2018/06/05/Python100Days/"/>
    <id>https://x-nicolo.github.io/2018/06/05/Python100Days/</id>
    <published>2018-06-05T09:38:26.000Z</published>
    <updated>2018-06-05T09:38:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>这可能是我目前发现最好最好的Python教程了，故整理至我的博客。<br>原项目GitHub地址<a href="https://github.com/jackfrued/Python-100-Days" target="_blank" rel="external">https://github.com/jackfrued/Python-100-Days</a><br><a id="more"></a>  </p>
<h2 id="初识Python"><a href="#初识Python" class="headerlink" title="初识Python"></a>初识Python</h2><h3 id="Python简介"><a href="#Python简介" class="headerlink" title="Python简介"></a>Python简介</h3><h4 id="Python的历史"><a href="#Python的历史" class="headerlink" title="Python的历史"></a>Python的历史</h4><ol>
<li>1989年圣诞节：Guido von Rossum开始写Python语言的编译器。</li>
<li>1991年2月：第一个Python编译器（同时也是解释器）诞生，它是用C语言实现的（后面又出现了Java和C#实现的版本Jython和IronPython，以及PyPy、Brython、Pyston等其他实现），可以调用C语言的库函数。在最早的版本中，Python已经提供了对“类”，“函数”，“异常处理”等构造块的支持，同时提供了“列表”和“字典”等核心数据类型，同时支持以模块为基础的拓展系统。</li>
<li>1994年1月：Python 1.0正式发布。</li>
<li>2000年10月16日：Python 2.0发布，增加了实现完整的垃圾回收，并且支持Unicode。与此同时，Python的整个开发过程更加透明，社区对开发进度的影响逐渐扩大，生态圈开始慢慢形成。</li>
<li>2008年12月3日：Python 3.0发布，此版不完全兼容之前的Python代码，不过很多新特性后来也被移植到旧的Python 2.6/2.7版本，因为目前还有公司在项目和运维中使用Python 2.x版本的代码。</li>
</ol>
<p>目前我们使用的Python 3.6.x的版本是在2016年的12月23日发布的，Python的版本号分为三段，形如A.B.C。其中A表示大版本号，一般当整体重写，或出现不向后兼容的改变时，增加A；B表示功能更新，出现新功能时增加B；C表示小的改动（如修复了某个Bug），只要有修改就增加C。如果对Python的历史感兴趣，可以查看一篇名为<a href="http://www.cnblogs.com/vamei/archive/2013/02/06/2892628.html" target="_blank" rel="external">《Python简史》</a>的博文。</p>
<h4 id="Python的优缺点"><a href="#Python的优缺点" class="headerlink" title="Python的优缺点"></a>Python的优缺点</h4><p>Python的优点很多，简单的可以总结为以下几点。</p>
<ol>
<li>简单和明确，做一件事只有一种方法。</li>
<li>学习曲线低，与其他很多语言比上手更容易。</li>
<li>开放源代码，拥有强大的社区和生态圈。</li>
<li>解释型语言，完美的平台可移植性。</li>
<li>支持两种主流的编程范式，可以使用面向对象和函数式编程。</li>
<li>可扩展性和可嵌入性，可以调用C/C++代码也可以在C/C++中调用。</li>
<li>代码规范程度高，可读性强，适合有代码洁癖和强迫症的人群。</li>
</ol>
<p>Python的缺点主要集中在以下几点。</p>
<ol>
<li>执行效率低下，因此计算密集型任务可以由C/C++编写。</li>
<li>代码无法加密，但是现在的公司很多都不是卖软件而是卖服务，这个问题慢慢会淡化。</li>
<li>在开发时可以选择的框架太多，有选择的地方就有错误。</li>
</ol>
<h4 id="Python的应用领域"><a href="#Python的应用领域" class="headerlink" title="Python的应用领域"></a>Python的应用领域</h4><p>目前Python在云基础设施、DevOps、网络爬虫开发、数据分析挖掘、机器学习等领域都有着广泛的应用，因此也产生了服务器开发、数据接口开发、自动化运维、科学计算和数据可视化、聊天机器人开发、图像识别和处理等一系列的职位。</p>
<h3 id="搭建编程环境"><a href="#搭建编程环境" class="headerlink" title="搭建编程环境"></a>搭建编程环境</h3><h4 id="Windows环境"><a href="#Windows环境" class="headerlink" title="Windows环境"></a>Windows环境</h4><p>可以在<a href="https://www.python.org" target="_blank" rel="external">Python的官方网站</a>下载到Python的Windows安装程序（exe文件），需要注意的是如果在Windows 7环境下安装需要先安装Service Pack 1补丁包（可以通过一些工具软件自动安装系统补丁的功能来安装），安装过程建议勾选“Add Python 3.6 to PATH”（将Python 3.6添加到PATH环境变量）并选择自定义安装，在设置“Optional Features”界面最好将“pip”、“tcl/tk”、“Python test suite”等项全部勾选上。强烈建议使用自定义的安装路径并保证路径中没有中文。安装完成会看到“Setup was successful”的提示，但是在启动Python环境时可能会因为缺失一些动态链接库文件而导致Python解释器无法运行，常见的问题主要是api-ms-win-crt*.dll缺失以及更新DirectX之后导致某些动态链接库文件缺失，前者可以参照<a href="">《api-ms-win-crt*.dll缺失原因分析和解决方法》</a>一文讲解的方法进行处理或者直接在<a href="https://www.microsoft.com/zh-cn/download/details.aspx?id=48145" target="_blank" rel="external">微软官网</a>下载Visual C++ Redistributable for Visual Studio 2015文件进行修复，后者可以下载一个DirectX修复工具进行修复。</p>
<h4 id="Linux环境"><a href="#Linux环境" class="headerlink" title="Linux环境"></a>Linux环境</h4><p>Linux环境自带了Python 2.x版本，但是如果要更新到3.x的版本，可以在<a href="https://www.python.org" target="_blank" rel="external">Python的官方网站</a>下载Python的源代码并通过源代码构建安装的方式进行安装，具体的步骤如下所示。</p>
<p>安装依赖库（因为没有这些依赖库可能在源代码构件安装时因为缺失底层依赖库而失败）。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum -y install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel</div></pre></td></tr></table></figure>
<p>下载Python源代码并解压缩到指定目录。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">wget https://www.python.org/ftp/python/3.6.1/Python-3.6.1.tar.xz</div><div class="line">xz -d Python-3.6.1.tar.xz</div><div class="line">tar -xvf Python-3.6.1.tar</div></pre></td></tr></table></figure>
<p>切换至Python源代码目录并执行下面的命令进行配置和安装。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">cd Python-3.6.1</div><div class="line">./configure --prefix=/usr/local/python3.6 --enable-optimizations</div><div class="line">make &amp;&amp; make install</div></pre></td></tr></table></figure>
<p>创建软链接，这样就可以直接通过python3直接启动Python解释器。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ln -s /usr/local/python3.6/bin/python3 /usr/bin/python3</div></pre></td></tr></table></figure>
<h4 id="MacOS环境"><a href="#MacOS环境" class="headerlink" title="MacOS环境"></a>MacOS环境</h4><p>MacOS也是自带了Python 2.x版本的，可以通过<a href="https://www.python.org" target="_blank" rel="external">Python的官方网站</a>提供的安装文件（pkg文件）安装3.x的版本。默认安装完成后，可以通过在终端执行python命令来启动2.x版本的Python解释器，可以通过执行python3命令来启动3.x版本的Python解释器，当然也可以通过重新设置软链接来修改启动Python解释器的命令。</p>
<h3 id="从终端运行Python程序"><a href="#从终端运行Python程序" class="headerlink" title="从终端运行Python程序"></a>从终端运行Python程序</h3><h4 id="确认Python的版本"><a href="#确认Python的版本" class="headerlink" title="确认Python的版本"></a>确认Python的版本</h4><p>在终端或命令行提示符中键入下面的命令。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">python --version</div></pre></td></tr></table></figure>
<p>当然也可以先输入python进入交互式环境，再执行以下的代码检查Python的版本。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> sys</div><div class="line"></div><div class="line">print(sys.version_info)</div><div class="line">print(sys.version)</div></pre></td></tr></table></figure>
<h4 id="编写Python源代码"><a href="#编写Python源代码" class="headerlink" title="编写Python源代码"></a>编写Python源代码</h4><p>可以用文本编辑工具（推荐使用Sublime、Atom、TextMate、VSCode等高级文本编辑工具）编写Python源代码并将其命名为hello.py保存起来，代码内容如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">print(<span class="string">'hello, world!'</span>)</div></pre></td></tr></table></figure>
<h4 id="运行程序"><a href="#运行程序" class="headerlink" title="运行程序"></a>运行程序</h4><p>切换到源代码所在的目录并执行下面的命令，看看屏幕上是否输出了”hello, world!”。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">python hello.py</div></pre></td></tr></table></figure>
<h3 id="代码中的注释"><a href="#代码中的注释" class="headerlink" title="代码中的注释"></a>代码中的注释</h3><p>注释是编程语言的一个重要组成部分，用于在源代码中解释代码的作用从而增强程序的可读性和可维护性，当然也可以将源代码中不需要参与运行的代码段通过注释来去掉，这一点在调试程序的时候经常用到。注释在随源代码进入预处理器或编译时会被移除，不会在目标代码中保留也不会影响程序的执行结果。</p>
<ol>
<li>单行注释 - 以#和空格开头的部分</li>
<li>多行注释 - 三个引号开头，三个引号结尾</li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">第一个Python程序 - hello, world!</span></div><div class="line"><span class="string">向伟大的Dennis M. Ritchie先生致敬</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">Version: 0.1</span></div><div class="line"><span class="string">Author: 骆昊</span></div><div class="line"><span class="string">Date: 2018-02-26</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line">print(<span class="string">'hello, world!'</span>)</div><div class="line"><span class="comment"># print("你好,世界！")</span></div><div class="line">print(<span class="string">'你好'</span>, <span class="string">'世界'</span>)</div><div class="line">print(<span class="string">'hello'</span>, <span class="string">'world'</span>, sep=<span class="string">', '</span>, end=<span class="string">'!'</span>)</div><div class="line">print(<span class="string">'goodbye, world'</span>, end=<span class="string">'!\n'</span>)</div></pre></td></tr></table></figure>
<h3 id="其他工具介绍"><a href="#其他工具介绍" class="headerlink" title="其他工具介绍"></a>其他工具介绍</h3><h4 id="IDLE-自带的集成开发工具"><a href="#IDLE-自带的集成开发工具" class="headerlink" title="IDLE - 自带的集成开发工具"></a>IDLE - 自带的集成开发工具</h4><p>IDLE是安装Python环境时自带的集成开发工具，但是由于IDLE的用户体验并不是那么好所以很少在实际开发中被采用。</p>
<h4 id="IPython-更好的交互式编程工具"><a href="#IPython-更好的交互式编程工具" class="headerlink" title="IPython - 更好的交互式编程工具"></a>IPython - 更好的交互式编程工具</h4><p>IPython是一种基于Python的交互式解释器。相较于原生的Python Shell，IPython提供了更为强大的编辑和交互功能。可以通过Python的包管理工具pip安装IPython和Jupyter，具体的操作如下所示。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install ipython jupyter</div></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">python -m pip install ipython jupyter</div></pre></td></tr></table></figure>
<p>安装成功后，可以通过下面的ipython命令启动IPython。</p>
<p>当然我们也可以通过Jupyter运行名为notebook的项目在浏览器窗口中进行交互式操作。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">jupyter notebook</div></pre></td></tr></table></figure>
<h4 id="Sublime-文本编辑神器"><a href="#Sublime-文本编辑神器" class="headerlink" title="Sublime - 文本编辑神器"></a>Sublime - 文本编辑神器</h4><ul>
<li><p>首先可以通过<a href="https://www.sublimetext.com/" target="_blank" rel="external">官方网站</a>下载安装程序安装Sublime 3或Sublime 2。</p>
</li>
<li><p>安装包管理工具。通过快捷键Ctrl+`或者在View菜单中选择Show Console打开控制台，输入下面的代码。</p>
<ul>
<li>Sublime 3</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span>  urllib.request,os;pf=<span class="string">'Package Control.sublime-package'</span>;ipp=sublime.installed_packages_path();urllib.request.install_opener(urllib.request.build_opener(urllib.request.ProxyHandler()));open(os.path.join(ipp,pf),<span class="string">'wb'</span>).write(urllib.request.urlopen(<span class="string">'http://sublime.wbond.net/'</span>+pf.replace(<span class="string">' '</span>,<span class="string">'%20'</span>)).read())</div></pre></td></tr></table></figure>
<ul>
<li>Sublime 2</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span>  urllib2,os;pf=<span class="string">'Package Control.sublime-package'</span>;ipp=sublime.installed_packages_path();os.makedirs(ipp)ifnotos.path.exists(ipp)elseNone;urllib2.install_opener(urllib2.build_opener(urllib2.ProxyHandler()));open(os.path.join(ipp,pf),<span class="string">'wb'</span>).write(urllib2.urlopen(<span class="string">'http://sublime.wbond.net/'</span>+pf.replace(<span class="string">' '</span>,<span class="string">'%20'</span>)).read());print(<span class="string">'Please restart Sublime Text to finish installation'</span>)</div></pre></td></tr></table></figure>
</li>
<li><p>安装插件。通过Preference菜单的Package Control或快捷键Ctrl+Shift+P打开命令面板，在面板中输入Install Package就可以找到安装插件的工具，然后再查找需要的插件。我们推荐大家安装以下几个插件。</p>
<ul>
<li>SublimeCodeIntel - 代码自动补全工具插件</li>
<li>Emmet - 前端开发代码模板插件</li>
<li>Git - 版本控制工具插件</li>
<li>Python PEP8 Autoformat - PEP8规范自动格式化插件</li>
<li>ConvertToUTF8 - 将本地编码转换为UTF-8</li>
</ul>
</li>
</ul>
<h4 id="PyCharm-Python开发神器"><a href="#PyCharm-Python开发神器" class="headerlink" title="PyCharm - Python开发神器"></a>PyCharm - Python开发神器</h4><p>PyCharm的安装、配置和使用我们在后面会进行介绍。</p>
<h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3><ol>
<li><p>在Python交互环境中下面的代码查看结果并将内容翻译成中文。</p>
 <figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> this</div><div class="line"></div><div class="line">Beautiful <span class="keyword">is</span> better than ugly.</div><div class="line">Explicit <span class="keyword">is</span> better than implicit.</div><div class="line">Simple <span class="keyword">is</span> better than complex.</div><div class="line">Complex <span class="keyword">is</span> better than complicated.</div><div class="line">Flat <span class="keyword">is</span> better than nested.</div><div class="line">Sparse <span class="keyword">is</span> better than dense.</div><div class="line">Readability counts.</div><div class="line">Special cases aren<span class="string">'t special enough to break the rules.</span></div><div class="line"><span class="string">Although practicality beats purity.</span></div><div class="line"><span class="string">Errors should never pass silently.</span></div><div class="line"><span class="string">Unless explicitly silenced.</span></div><div class="line"><span class="string">In the face of ambiguity, refuse the temptation to guess.</span></div><div class="line"><span class="string">There should be one-- and preferably only one --obvious way to do it.</span></div><div class="line"><span class="string">Although that way may not be obvious at first unless you'</span>re Dutch.</div><div class="line">Now <span class="keyword">is</span> better than never.</div><div class="line">Although never <span class="keyword">is</span> often better than *right* now.</div><div class="line">If the implementation <span class="keyword">is</span> hard to explain, it<span class="string">'s a bad idea.</span></div><div class="line"><span class="string">If the implementation is easy to explain, it may be a good idea.</span></div><div class="line"><span class="string">Namespaces are one honking great idea -- let'</span>s do more of those!</div></pre></td></tr></table></figure>
</li>
<li><p>学习使用turtle在屏幕上绘制图形。</p>
 <figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> turtle</div><div class="line"></div><div class="line">turtle.pensize(<span class="number">4</span>)</div><div class="line">turtle.pencolor(<span class="string">'red'</span>)</div><div class="line">turtle.forward(<span class="number">100</span>)</div><div class="line">turtle.right(<span class="number">90</span>)</div><div class="line">turtle.forward(<span class="number">100</span>)</div><div class="line">turtle.right(<span class="number">90</span>)</div><div class="line">turtle.forward(<span class="number">100</span>)</div><div class="line">turtle.right(<span class="number">90</span>)</div><div class="line">turtle.forward(<span class="number">100</span>)</div><div class="line">turtle.mainloop()</div></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="语言元素"><a href="#语言元素" class="headerlink" title="语言元素"></a>语言元素</h2><h3 id="指令和程序"><a href="#指令和程序" class="headerlink" title="指令和程序"></a>指令和程序</h3><p>计算机的硬件系统通常由五大部件构成，包括：运算器、控制器、存储器、输入设备和输出设备。其中，运算器和控制器放在一起就是我们通常所说的中央处理器，它的功能是执行各种运算和控制指令以及处理计算机软件中的数据。我们通常所说的程序实际上就是指令的集合，我们程序就是将一系列的指令按照某种方式组织到一起，然后通过这些指令去控制计算机做我们想让它做的事情。今天我们使用的计算机虽然器件做工越来越精密，处理能力越来越强大，但究其本质来说仍然属于<a href="https://zh.wikipedia.org/wiki/%E5%86%AF%C2%B7%E8%AF%BA%E4%BC%8A%E6%9B%BC%E7%BB%93%E6%9E%84" target="_blank" rel="external">“冯·诺依曼结构”</a>的计算机。“冯·诺依曼结构”有两个关键点，一是提出了将存储设备与中央处理器分开，二是提出了将数据以二进制方式编码。二进制是一种“逢二进一”的计数法，跟我们人类使用的“逢十进一”的计数法没有实质性的区别，人类因为有十根手指所以使用了十进制（因为在数数时十根手指用完之后就只能进位了，当然凡事都有例外，玛雅人可能是因为长年光着脚的原因把脚趾头也算上了，于是他们使用了二十进制的计数法，在这种计数法的指导下玛雅人的历法就与我们的不太一致，而按照玛雅人的历法，2012年是上一个所谓的“太阳纪”的最后一年，而2013年则是新的“太阳纪”的开始，后来这件事情被以讹传讹的方式误传为2012年就是玛雅人预言的世界末日这种荒诞的说法，今天我们可以大胆的猜测，玛雅文明之所以发展缓慢估计也与使用了二十进制有关），对于计算机来说，二进制在物理器件上来说是最容易实现的（高电压表示1，低电压表示0），于是在“冯·诺依曼结构”的计算机都使用了二进制。虽然我们并不需要每个程序员都能够使用二进制的思维方式来工作，但是了解二进制以及它与我们生活中的十进制之间的转换关系，以及二进制与八进制和十六进制的转换关系还是有必要的。如果你对这一点不熟悉，可以自行使用<a href="https://zh.wikipedia.org/wiki/%E4%BA%8C%E8%BF%9B%E5%88%B6" target="_blank" rel="external">维基百科</a>或者<a href="https://www.baidu.com" target="_blank" rel="external">度娘</a>科普一下。</p>
<h3 id="变量和类型"><a href="#变量和类型" class="headerlink" title="变量和类型"></a>变量和类型</h3><p>在程序设计中，变量是一种存储数据的载体。计算机中的变量是实际存在的数据或者说是存储器中存储数据的一块内存空间，变量的值可以被读取和修改，这是所有计算和控制的基础。计算机能处理的数据有很多中类型，除了数值之外还可以处理文本、图形、音频、视频等各种各样的数据，那么不同的数据就需要定义不同的存储类型。Python中的数据类型很多，而且也允许我们自定义新的数据类型（这一点在后面会讲到），我们先介绍几种常用的数据类型。</p>
<ul>
<li>整型：Python中可以处理任意大小的整数（Python 2.x中有int和long两种类型的整数，但这种区分对Python来说意义不大，因此在Python 3.x中整数只有int这一种了），而且支持二进制（如<code>0b100</code>，换算成十进制是4）、八进制（如<code>0o100</code>，换算成十进制是64）、十进制（<code>100</code>）和十六进制（<code>0x100</code>，换算成十进制是256）的表示法。</li>
<li>浮点型：浮点数也就是小数，之所以称为浮点数，是因为按照科学记数法表示时，一个浮点数的小数点位置是可变的，浮点数除了数学写法（如<code>123.456</code>）之外还支持科学计数法（如<code>1.23456e2</code>）。</li>
<li>字符串型：字符串是以单引号或双引号括起来的任意文本，比如<code>&#39;hello&#39;</code>和<code>&quot;hello&quot;</code>,字符串还有原始字符串表示法、字节字符串表示法、Unicode字符串表示法，而且可以书写成多行的形式（用三个单引号或三个双引号开头，三个单引号或三个双引号结尾）。</li>
<li>布尔型：布尔值只有<code>True</code>、<code>False</code>两种值，要么是<code>True</code>，要么是<code>False</code>，在Python中，可以直接用<code>True</code>、<code>False</code>表示布尔值（请注意大小写），也可以通过布尔运算计算出来（例如<code>3 &lt; 5</code>会产生布尔值<code>True</code>，而<code>2 == 1</code>会产生布尔值<code>False</code>）。</li>
<li>复数型：形如<code>3+5j</code>，跟数学上的复数表示一样，唯一不同的是虚部的i换成了j。</li>
</ul>
<h3 id="变量命名"><a href="#变量命名" class="headerlink" title="变量命名"></a>变量命名</h3><p>对于每个变量我们需要给它取一个名字，就如同我们每个人都有属于自己的响亮的名字一样。在Python中，变量命名需要遵循以下这些必须遵守硬性规则和强烈建议遵守的非硬性规则。</p>
<ul>
<li>硬性规则：<ul>
<li>变量名由字母（广义的Unicode字符，不包括特殊字符）、数字和下划线构成，数字不能开头。</li>
<li>大小写敏感（大写的<code>a</code>和小写的<code>A</code>是两个不同的变量）。</li>
<li>不要跟关键字（有特殊含义的单词，后面会讲到）和系统保留字（如函数、模块等的名字）冲突。</li>
</ul>
</li>
<li>PEP 8要求：<ul>
<li>用小写字母拼写，多个单词用下划线连接。</li>
<li>受保护的实例属性用单个下划线开头（后面会讲到）。</li>
<li>私有的实例属性用两个下划线开头（后面会讲到）。</li>
</ul>
</li>
</ul>
<p>当然，作为一个专业的程序员，给变量（事实上应该是所有的标识符）命名做到见名知意也是非常重要的。</p>
<h3 id="变量的使用"><a href="#变量的使用" class="headerlink" title="变量的使用"></a>变量的使用</h3><p>下面通过几个例子来说明变量的类型和变量使用。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">使用变量保存数据并进行算术运算</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">Version: 0.1</span></div><div class="line"><span class="string">Author: 骆昊</span></div><div class="line"><span class="string">Date: 2018-02-27</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line">a = <span class="number">321</span></div><div class="line">b = <span class="number">123</span></div><div class="line">print(a + b)</div><div class="line">print(a - b)</div><div class="line">print(a * b)</div><div class="line">print(a / b)</div><div class="line">print(a // b)</div><div class="line">print(a % b)</div><div class="line">print(a ** b)</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">使用input函数输入</span></div><div class="line"><span class="string">使用int()进行类型转换</span></div><div class="line"><span class="string">用占位符格式化输出的字符串</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">Version: 0.1</span></div><div class="line"><span class="string">Author: 骆昊</span></div><div class="line"><span class="string">Date: 2018-02-27</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line">a = int(input(<span class="string">'a = '</span>))</div><div class="line">b = int(input(<span class="string">'b = '</span>))</div><div class="line">print(<span class="string">'%d + %d = %d'</span> % (a, b, a + b))</div><div class="line">print(<span class="string">'%d - %d = %d'</span> % (a, b, a - b))</div><div class="line">print(<span class="string">'%d * %d = %d'</span> % (a, b, a * b))</div><div class="line">print(<span class="string">'%d / %d = %f'</span> % (a, b, a / b))</div><div class="line">print(<span class="string">'%d // %d = %d'</span> % (a, b, a // b))</div><div class="line">print(<span class="string">'%d %% %d = %d'</span> % (a, b, a % b))</div><div class="line">print(<span class="string">'%d ** %d = %d'</span> % (a, b, a ** b))</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">使用type()检查变量的类型</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">Version: 0.1</span></div><div class="line"><span class="string">Author: 骆昊</span></div><div class="line"><span class="string">Date: 2018-02-27</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line">a = <span class="number">100</span></div><div class="line">b = <span class="number">12.345</span></div><div class="line">c = <span class="number">1</span> + <span class="number">5j</span></div><div class="line">d = <span class="string">'hello, world'</span></div><div class="line">e = <span class="keyword">True</span></div><div class="line">print(type(a))</div><div class="line">print(type(b))</div><div class="line">print(type(c))</div><div class="line">print(type(d))</div><div class="line">print(type(e))</div></pre></td></tr></table></figure>
<p>在对变量类型进行转换时可以使用Python的内置函数（准确的说下面列出的并不是真正意义上的函数，而是后面我们要讲到的创建对象的构造方法）。</p>
<ul>
<li>int()：将一个数值或字符串转换成整数，可以指定进制。</li>
<li>float()：将一个字符串转换成浮点数。</li>
<li>str()：将指定的对象转换成字符串形式，可以指定编码。</li>
<li>chr()：将整数转换成该编码对应的字符串（一个字符）。</li>
<li>ord()：将字符串（一个字符）转换成对应的编码（整数）。</li>
</ul>
<h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><p>Python支持多种运算符，下表大致按照优先级从高到低的顺序列出了所有的运算符，我们会陆续使用到它们。</p>
<table>
<thead>
<tr>
<th>运算符</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>[]</code> <code>[:]</code></td>
<td>下标，切片</td>
</tr>
<tr>
<td><code>**</code></td>
<td>指数</td>
</tr>
<tr>
<td><code>~</code> <code>+</code> <code>-</code></td>
<td>按位取反, 正负号</td>
</tr>
<tr>
<td><code>*</code> <code>/</code> <code>%</code> <code>//</code></td>
<td>乘，除，模，整除</td>
</tr>
<tr>
<td><code>+</code> <code>-</code></td>
<td>加，减</td>
</tr>
<tr>
<td><code>&gt;&gt;</code> <code>&lt;&lt;</code></td>
<td>右移，左移</td>
</tr>
<tr>
<td><code>&amp;</code></td>
<td>按位与</td>
</tr>
<tr>
<td><code>^</code> `</td>
<td>`</td>
<td>按位异或，按位或</td>
</tr>
<tr>
<td><code>&lt;=</code> <code>&lt;</code> <code>&gt;</code> <code>&gt;=</code></td>
<td>小于等于，小于，大于，大于等于</td>
</tr>
<tr>
<td><code>==</code> <code>!=</code></td>
<td>等于，不等于</td>
</tr>
<tr>
<td><code>is</code>  <code>is not</code></td>
<td>身份运算符</td>
</tr>
<tr>
<td><code>in</code> <code>not in</code></td>
<td>成员运算符</td>
</tr>
<tr>
<td><code>not</code> <code>or</code> <code>and</code></td>
<td>逻辑运算符</td>
</tr>
<tr>
<td><code>=</code> <code>+=</code> <code>-=</code> <code>*=</code> <code>/=</code> <code>%=</code> <code>//=</code> <code>**=</code> <code>&amp;=</code> `</td>
<td>=<code>`^=</code> <code>&gt;&gt;=</code> <code>&lt;&lt;=</code></td>
<td>（复合）赋值运算符</td>
</tr>
</tbody>
</table>
<blockquote>
<p><strong>说明：</strong>在实际开发中，如果搞不清楚优先级可以使用括号来确保运算的执行顺序。</p>
</blockquote>
<p>下面的例子演示了运算符的使用。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">运算符的使用</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">Version: 0.1</span></div><div class="line"><span class="string">Author: 骆昊</span></div><div class="line"><span class="string">Date: 2018-02-27</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line">a = <span class="number">5</span></div><div class="line">b = <span class="number">10</span></div><div class="line">c = <span class="number">3</span></div><div class="line">d = <span class="number">4</span></div><div class="line">e = <span class="number">5</span></div><div class="line">a += b</div><div class="line">a -= c</div><div class="line">a *= d</div><div class="line">a /= e</div><div class="line">print(<span class="string">"a = "</span>, a)</div><div class="line"></div><div class="line">flag1 = <span class="number">3</span> &gt; <span class="number">2</span></div><div class="line">flag2 = <span class="number">2</span> &lt; <span class="number">1</span></div><div class="line">flag3 = flag1 <span class="keyword">and</span> flag2</div><div class="line">flag4 = flag1 <span class="keyword">or</span> flag2</div><div class="line">flag5 = <span class="keyword">not</span> flag1</div><div class="line">print(<span class="string">"flag1 = "</span>, flag1)</div><div class="line">print(<span class="string">"flag2 = "</span>, flag2)</div><div class="line">print(<span class="string">"flag3 = "</span>, flag3)</div><div class="line">print(<span class="string">"flag4 = "</span>, flag4)</div><div class="line">print(<span class="string">"flag5 = "</span>, flag5)</div><div class="line">print(flag1 <span class="keyword">is</span> <span class="keyword">True</span>)</div><div class="line">print(flag2 <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">False</span>)</div></pre></td></tr></table></figure>
<h3 id="练习-1"><a href="#练习-1" class="headerlink" title="练习"></a>练习</h3><h4 id="练习1：华氏温度转摄氏温度。"><a href="#练习1：华氏温度转摄氏温度。" class="headerlink" title="练习1：华氏温度转摄氏温度。"></a>练习1：华氏温度转摄氏温度。</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">将华氏温度转换为摄氏温度</span></div><div class="line"><span class="string">F = 1.8C + 32</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">Version: 0.1</span></div><div class="line"><span class="string">Author: 骆昊</span></div><div class="line"><span class="string">Date: 2018-02-27</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line">f = float(input(<span class="string">'请输入华氏温度: '</span>))</div><div class="line">c = (f - <span class="number">32</span>) / <span class="number">1.8</span></div><div class="line">print(<span class="string">'%.1f华氏度 = %.1f摄氏度'</span> % (f, c))</div></pre></td></tr></table></figure>
<h4 id="练习2：输入圆的半径计算计算周长和面积。"><a href="#练习2：输入圆的半径计算计算周长和面积。" class="headerlink" title="练习2：输入圆的半径计算计算周长和面积。"></a>练习2：输入圆的半径计算计算周长和面积。</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">输入半径计算圆的周长和面积</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">Version: 0.1</span></div><div class="line"><span class="string">Author: 骆昊</span></div><div class="line"><span class="string">Date: 2018-02-27</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> math</div><div class="line"></div><div class="line">radius = float(input(<span class="string">'请输入圆的半径: '</span>))</div><div class="line">perimeter = <span class="number">2</span> * math.pi * radius</div><div class="line">area = math.pi * radius * radius</div><div class="line">print(<span class="string">'周长: %.2f'</span> % perimeter)</div><div class="line">print(<span class="string">'面积: %.2f'</span> % area)</div></pre></td></tr></table></figure>
<h4 id="练习3：输入年份判断是不是闰年。"><a href="#练习3：输入年份判断是不是闰年。" class="headerlink" title="练习3：输入年份判断是不是闰年。"></a>练习3：输入年份判断是不是闰年。</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">输入年份 如果是闰年输出True 否则输出False</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">Version: 0.1</span></div><div class="line"><span class="string">Author: 骆昊</span></div><div class="line"><span class="string">Date: 2018-02-27</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line">year = int(input(<span class="string">'请输入年份: '</span>))</div><div class="line"><span class="comment"># 如果代码太长写成一行不便于阅读 可以使用\或()折行</span></div><div class="line">is_leap = (year % <span class="number">4</span> == <span class="number">0</span> <span class="keyword">and</span> year % <span class="number">100</span> != <span class="number">0</span> <span class="keyword">or</span></div><div class="line">           year % <span class="number">400</span> == <span class="number">0</span>)</div><div class="line">print(is_leap)</div></pre></td></tr></table></figure>
<h2 id="分支结构"><a href="#分支结构" class="headerlink" title="分支结构"></a>分支结构</h2><h3 id="分支结构的应用场景"><a href="#分支结构的应用场景" class="headerlink" title="分支结构的应用场景"></a>分支结构的应用场景</h3><p>迄今为止，我们写的Python代码都是一条一条语句顺序执行，这种结构的代码我们称之为顺序结构。然而仅有顺序结构并不能解决所有的问题，比如我们设计一个游戏，游戏第一关的通关条件是玩家获得1000分，那么在完成本局游戏后我们要根据玩家得到分数来决定究竟是进入第二关还是告诉玩家“Game Over”，这里就会产生两个分支，而且这两个分支只有一个会被执行，这就是程序中分支结构。类似的场景还有很多，给大家一分钟的时间，你应该可以想到至少5个以上这样的例子，赶紧试一试。</p>
<h3 id="if语句的使用"><a href="#if语句的使用" class="headerlink" title="if语句的使用"></a>if语句的使用</h3><p>在Python中，要构造分支结构可以使用<code>if</code>、<code>elif</code>和<code>else</code>关键字。所谓关键字就是有特殊含义的单词，像<code>if</code>和<code>else</code>就是专门用于构造分支结构的关键字，很显然你不能够使用它作为变量名（事实上，用作其他的标识符也是不可以）。下面的例子中演示了如何构造一个分支结构。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">用户身份验证</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">Version: 0.1</span></div><div class="line"><span class="string">Author: 骆昊</span></div><div class="line"><span class="string">Date: 2018-02-28</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line">username = input(<span class="string">'请输入用户名: '</span>)</div><div class="line">password = input(<span class="string">'请输入口令: '</span>)</div><div class="line"><span class="comment"># 如果希望输入口令时 终端中没有回显 可以使用getpass模块的getpass函数</span></div><div class="line"><span class="comment"># import getpass</span></div><div class="line"><span class="comment"># password = getpass.getpass('请输入口令: ')</span></div><div class="line"><span class="keyword">if</span> username == <span class="string">'admin'</span> <span class="keyword">and</span> password == <span class="string">'123456'</span>:</div><div class="line">    print(<span class="string">'身份验证成功!'</span>)</div><div class="line"><span class="keyword">else</span>:</div><div class="line">    print(<span class="string">'身份验证失败!'</span>)</div></pre></td></tr></table></figure>
<p>唯一需要说明的是和C/C++、Java等语言不同，Python中没有用花括号来构造代码块而是使用了缩进的方式来设置代码的层次结构，如果<code>if</code>条件成立的情况下需要执行多条语句，只要保持多条语句具有相同的缩进就可以了，换句话说连续的代码如果又保持了相同的缩进那么它们属于同一个代码块，相当于是一个执行的整体。</p>
<p>当然如果要构造出更多的分支，可以使用<code>if…elif…else…</code>结构，例如下面的分段函数求值。</p>
<p>$$f(x)=\begin{cases} 3x-5&amp;\text{(x&gt;1)}\x+2&amp;\text{(-1}\leq\text{x}\leq\text{1)}\5x+3&amp;\text {(x&lt;-1)}\end{cases}$$</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">分段函数求值</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">        3x - 5  (x &gt; 1)</span></div><div class="line"><span class="string">f(x) =  x + 2   (-1 &lt;= x &lt;= 1)</span></div><div class="line"><span class="string">        5x + 3  (x &lt; -1)</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">Version: 0.1</span></div><div class="line"><span class="string">Author: 骆昊</span></div><div class="line"><span class="string">Date: 2018-02-28</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line">x = float(input(<span class="string">'x = '</span>))</div><div class="line"><span class="keyword">if</span> x &gt; <span class="number">1</span>:</div><div class="line">    y = <span class="number">3</span> * x - <span class="number">5</span></div><div class="line"><span class="keyword">elif</span> x &gt;= <span class="number">-1</span>:</div><div class="line">    y = x + <span class="number">2</span></div><div class="line"><span class="keyword">else</span>:</div><div class="line">    y = <span class="number">5</span> * x + <span class="number">3</span></div><div class="line">print(<span class="string">'f(%.2f) = %.2f'</span> % (x, y))</div></pre></td></tr></table></figure>
<p>当然根据实际开发的需要，分支结构是可以嵌套的，例如判断是否通关以后还要根据你获得的宝物或者道具的数量对你的表现给出等级（比如点亮两颗或三颗星星），那么我们就需要在<code>if</code>的内部构造出一个新的分支结构，同理<code>elif</code>和<code>else</code>中也可以再构造新的分支，我们称之为嵌套的分支结构，也就是说上面的代码也可以写成下面的样子。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">分段函数求值</span></div><div class="line"><span class="string">        3x - 5  (x &gt; 1)</span></div><div class="line"><span class="string">f(x) =  x + 2   (-1 &lt;= x &lt;= 1)</span></div><div class="line"><span class="string">        5x + 3  (x &lt; -1)</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">Version: 0.1</span></div><div class="line"><span class="string">Author: 骆昊</span></div><div class="line"><span class="string">Date: 2018-02-28</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line">x = float(input(<span class="string">'x = '</span>))</div><div class="line"><span class="keyword">if</span> x &gt; <span class="number">1</span>:</div><div class="line">    y = <span class="number">3</span> * x - <span class="number">5</span></div><div class="line"><span class="keyword">else</span>:</div><div class="line">    <span class="keyword">if</span> x &gt;= <span class="number">-1</span>:</div><div class="line">        y = x + <span class="number">2</span></div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        y = <span class="number">5</span> * x + <span class="number">3</span></div><div class="line">print(<span class="string">'f(%.2f) = %.2f'</span> % (x, y))</div></pre></td></tr></table></figure>
<blockquote>
<p><strong>说明：</strong>大家可以自己感受一下这两种写法到底是哪一种更好。在之前我们提到的Python之禅中有这么一句话“Flat is bettern than nested.”，之所以提出这个观点是因为嵌套结构的嵌套层次多了之后会严重的影响代码的可读性，如果可以使用扁平化的结构就不要去用嵌套，因此之前的写法是更好的做法。</p>
</blockquote>
<h3 id="练习-2"><a href="#练习-2" class="headerlink" title="练习"></a>练习</h3><h4 id="练习1：英制单位与公制单位互换"><a href="#练习1：英制单位与公制单位互换" class="headerlink" title="练习1：英制单位与公制单位互换"></a>练习1：英制单位与公制单位互换</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">英制单位英寸和公制单位厘米互换</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">Version: 0.1</span></div><div class="line"><span class="string">Author: 骆昊</span></div><div class="line"><span class="string">Date: 2018-02-28</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line">value = float(input(<span class="string">'请输入长度: '</span>))</div><div class="line">unit = input(<span class="string">'请输入单位: '</span>)</div><div class="line"><span class="keyword">if</span> unit == <span class="string">'in'</span> <span class="keyword">or</span> unit == <span class="string">'英寸'</span>:</div><div class="line">    print(<span class="string">'%f英寸 = %f厘米'</span> % (value, value * <span class="number">2.54</span>))</div><div class="line"><span class="keyword">elif</span> unit == <span class="string">'cm'</span> <span class="keyword">or</span> unit == <span class="string">'厘米'</span>:</div><div class="line">    print(<span class="string">'%f厘米 = %f英寸'</span> % (value, value / <span class="number">2.54</span>))</div><div class="line"><span class="keyword">else</span>:</div><div class="line">    print(<span class="string">'请输入有效的单位'</span>)</div></pre></td></tr></table></figure>
<h4 id="练习2：掷骰子决定做什么"><a href="#练习2：掷骰子决定做什么" class="headerlink" title="练习2：掷骰子决定做什么"></a>练习2：掷骰子决定做什么</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">掷骰子决定做什么事情</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">Version: 0.1</span></div><div class="line"><span class="string">Author: 骆昊</span></div><div class="line"><span class="string">Date: 2018-02-28</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</div><div class="line"></div><div class="line">face = randint(<span class="number">1</span>, <span class="number">6</span>)</div><div class="line"><span class="keyword">if</span> face == <span class="number">1</span>:</div><div class="line">    result = <span class="string">'唱首歌'</span></div><div class="line"><span class="keyword">elif</span> face == <span class="number">2</span>:</div><div class="line">    result = <span class="string">'跳个舞'</span></div><div class="line"><span class="keyword">elif</span> face == <span class="number">3</span>:</div><div class="line">    result = <span class="string">'学狗叫'</span></div><div class="line"><span class="keyword">elif</span> face == <span class="number">4</span>:</div><div class="line">    result = <span class="string">'做俯卧撑'</span></div><div class="line"><span class="keyword">elif</span> face == <span class="number">5</span>:</div><div class="line">    result = <span class="string">'念绕口令'</span></div><div class="line"><span class="keyword">else</span>:</div><div class="line">    result = <span class="string">'讲冷笑话'</span></div><div class="line">print(result)</div></pre></td></tr></table></figure>
<blockquote>
<p><strong>说明：</strong>上面的代码中使用了random模块的randint函数生成指定范围的随机数来模拟掷骰子。</p>
</blockquote>
<h4 id="练习3：百分制成绩转等级制"><a href="#练习3：百分制成绩转等级制" class="headerlink" title="练习3：百分制成绩转等级制"></a>练习3：百分制成绩转等级制</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">百分制成绩转等级制成绩</span></div><div class="line"><span class="string">90分以上    --&gt; A</span></div><div class="line"><span class="string">80分~89分    --&gt; B</span></div><div class="line"><span class="string">70分~79分    --&gt; C</span></div><div class="line"><span class="string">60分~69分    --&gt; D</span></div><div class="line"><span class="string">60分以下    --&gt; E</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">Version: 0.1</span></div><div class="line"><span class="string">Author: 骆昊</span></div><div class="line"><span class="string">Date: 2018-02-28</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line">score = float(input(<span class="string">'请输入成绩: '</span>))</div><div class="line"><span class="keyword">if</span> score &gt;= <span class="number">90</span>:</div><div class="line">    grade = <span class="string">'A'</span></div><div class="line"><span class="keyword">elif</span> score &gt;= <span class="number">80</span>:</div><div class="line">    grade = <span class="string">'B'</span></div><div class="line"><span class="keyword">elif</span> score &gt;= <span class="number">70</span>:</div><div class="line">    grade = <span class="string">'C'</span></div><div class="line"><span class="keyword">elif</span> score &gt;= <span class="number">60</span>:</div><div class="line">    grade = <span class="string">'D'</span></div><div class="line"><span class="keyword">else</span>:</div><div class="line">    grade = <span class="string">'E'</span></div><div class="line">print(<span class="string">'对应的等级是:'</span>, grade)</div></pre></td></tr></table></figure>
<h4 id="练习4：输入三条边长如果能构成三角形就计算周长和面积"><a href="#练习4：输入三条边长如果能构成三角形就计算周长和面积" class="headerlink" title="练习4：输入三条边长如果能构成三角形就计算周长和面积"></a>练习4：输入三条边长如果能构成三角形就计算周长和面积</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">判断输入的边长能否构成三角形</span></div><div class="line"><span class="string">如果能则计算出三角形的周长和面积</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">Version: 0.1</span></div><div class="line"><span class="string">Author: 骆昊</span></div><div class="line"><span class="string">Date: 2018-02-28</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> math</div><div class="line"></div><div class="line">a = float(input(<span class="string">'a = '</span>))</div><div class="line">b = float(input(<span class="string">'b = '</span>))</div><div class="line">c = float(input(<span class="string">'c = '</span>))</div><div class="line"><span class="keyword">if</span> a + b &gt; c <span class="keyword">and</span> a + c &gt; b <span class="keyword">and</span> b + c &gt; a:</div><div class="line">    print(<span class="string">'周长: %f'</span> % (a + b + c))</div><div class="line">    p = (a + b + c) / <span class="number">2</span></div><div class="line">    area = math.sqrt(p * (p - a) * (p - b) * (p - c))</div><div class="line">    print(<span class="string">'面积: %f'</span> % (area))</div><div class="line"><span class="keyword">else</span>:</div><div class="line">    print(<span class="string">'不能构成三角形'</span>)</div></pre></td></tr></table></figure>
<blockquote>
<p><strong>说明：</strong>上面的代码中使用了<code>math</code>模块的<code>sqrt</code>函数来计算平方根。用边长计算三角形面积的公式叫做<a href="https://zh.wikipedia.org/zh-hans/海伦公式" target="_blank" rel="external">海伦公式</a>。</p>
</blockquote>
<h4 id="练习5：实现一个个人所得税计算器。"><a href="#练习5：实现一个个人所得税计算器。" class="headerlink" title="练习5：实现一个个人所得税计算器。"></a>练习5：实现一个个人所得税计算器。</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">输入月收入和五险一金计算个人所得税</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">Version: 0.1</span></div><div class="line"><span class="string">Author: 骆昊</span></div><div class="line"><span class="string">Date: 2018-02-28</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line">salary = float(input(<span class="string">'本月收入: '</span>))</div><div class="line">insurance = float(input(<span class="string">'五险一金: '</span>))</div><div class="line">diff = salary - insurance - <span class="number">3500</span></div><div class="line"><span class="keyword">if</span> diff &lt;= <span class="number">0</span>:</div><div class="line">    rate = <span class="number">0</span></div><div class="line">    deduction = <span class="number">0</span></div><div class="line"><span class="keyword">elif</span> diff &lt; <span class="number">1500</span>:</div><div class="line">    rate = <span class="number">0.03</span></div><div class="line">    deduction = <span class="number">0</span></div><div class="line"><span class="keyword">elif</span> diff &lt; <span class="number">4500</span>:</div><div class="line">    rate = <span class="number">0.1</span></div><div class="line">    deduction = <span class="number">105</span></div><div class="line"><span class="keyword">elif</span> diff &lt; <span class="number">9000</span>:</div><div class="line">    rate = <span class="number">0.2</span></div><div class="line">    deduction = <span class="number">555</span></div><div class="line"><span class="keyword">elif</span> diff &lt; <span class="number">35000</span>:</div><div class="line">    rate = <span class="number">0.25</span></div><div class="line">    deduction = <span class="number">1005</span></div><div class="line"><span class="keyword">elif</span> diff &lt; <span class="number">55000</span>:</div><div class="line">    rate = <span class="number">0.3</span></div><div class="line">    deduction = <span class="number">2755</span></div><div class="line"><span class="keyword">elif</span> diff &lt; <span class="number">80000</span>:</div><div class="line">    rate = <span class="number">0.35</span></div><div class="line">    deduction = <span class="number">5505</span></div><div class="line"><span class="keyword">else</span>:</div><div class="line">    rate = <span class="number">0.45</span></div><div class="line">    deduction = <span class="number">13505</span></div><div class="line">tax = abs(diff * rate - deduction)</div><div class="line">print(<span class="string">'个人所得税: ￥%.2f元'</span> % tax)</div><div class="line">print(<span class="string">'实际到手收入: ￥%.2f元'</span> % (diff + <span class="number">3500</span> - tax))</div></pre></td></tr></table></figure>
<blockquote>
<p><strong>说明：</strong>上面的代码中使用了Python内置的<code>abs()</code>函数取绝对值来处理<code>-0</code>的问题。</p>
</blockquote>
<h2 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h2><h3 id="循环结构的应用场景"><a href="#循环结构的应用场景" class="headerlink" title="循环结构的应用场景"></a>循环结构的应用场景</h3><p>如果在程序中我们需要重复的执行某条或某些指令，例如用程序控制机器人踢足球，如果机器人持球而且还没有进入射门范围，那么我们就要一直发出让机器人向球门方向奔跑的指令。当然你可能已经注意到了，刚才的描述中其实不仅仅有需要重复的动作，还有我们上一个章节讲到的分支结构。再举一个简单的例子，比如在我们的程序中要实现每隔1秒中在屏幕上打印一个&quot;hello, world&quot;这样的字符串并持续一个小时，我们肯定不能够将<code>print(&#39;hello, world&#39;)</code>这句代码写上3600遍，如果真的需要这样做那么我们的工作就太无聊了。因此，我们需要循环结构，使用循环结构我们就可以轻松的控制某件事或者某些事重复、重复、再重复的发生。在Python中构造循环结构有两种做法，一种是<code>for-in</code>循环，一种是<code>while</code>循环。</p>
<h3 id="for-in循环"><a href="#for-in循环" class="headerlink" title="for-in循环"></a>for-in循环</h3><p>如果明确的知道循环执行的次数或者是要对一个容器进行迭代（后面会讲到），那么我们推荐使用<code>for-in</code>循环，例如下面代码中计算$\sum_{n=1}^{100}n$。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">用for循环实现1~100求和</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">Version: 0.1</span></div><div class="line"><span class="string">Author: 骆昊</span></div><div class="line"><span class="string">Date: 2018-03-01</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line">sum = <span class="number">0</span></div><div class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">101</span>):</div><div class="line">    sum += x</div><div class="line">print(sum)</div></pre></td></tr></table></figure>
<p>需要说明的是上面代码中的<code>range</code>类型，<code>range</code>可以用来产生一个不变的数值序列，而且这个序列通常都是用在循环中的，例如：</p>
<ul>
<li><code>range(101)</code>可以产生一个0到100的整数序列。</li>
<li><code>range(1, 100)</code>可以产生一个1到99的整数序列。</li>
<li><code>range(1, 100, 2)</code>可以产生一个1到99的奇数序列，其中的2是步长，即数值序列的增量。</li>
</ul>
<p>知道了这一点，我们可以用下面的代码来实现1~100之间的偶数求和。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">用for循环实现1~100之间的偶数求和</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">Version: 0.1</span></div><div class="line"><span class="string">Author: 骆昊</span></div><div class="line"><span class="string">Date: 2018-03-01</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line">sum = <span class="number">0</span></div><div class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">2</span>, <span class="number">101</span>, <span class="number">2</span>):</div><div class="line">    sum += x</div><div class="line">print(sum)</div></pre></td></tr></table></figure>
<p>也可以通过在循环中使用分支结构的方式来实现相同的功能，代码如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">用for循环实现1~100之间的偶数求和</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">Version: 0.1</span></div><div class="line"><span class="string">Author: 骆昊</span></div><div class="line"><span class="string">Date: 2018-03-01</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line">sum = <span class="number">0</span></div><div class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">101</span>):</div><div class="line">    <span class="keyword">if</span> x % <span class="number">2</span> == <span class="number">0</span>:</div><div class="line">        sum += x</div><div class="line">print(sum)</div></pre></td></tr></table></figure>
<h3 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h3><p>如果要构造不知道具体循环次数的循环结构，我们推荐使用<code>while</code>循环，<code>while</code>循环通过一个能够产生或转换出<code>bool</code>值的表达式来控制循环，表达式的值为<code>True</code>循环继续，表达式的值为<code>False</code>循环结束。下面我们通过一个“猜数字”的小游戏（计算机出一个1~100之间的随机数，人输入自己猜的数字，计算机给出对应的提示信息，直到人猜出计算机出的数字）来看看如何使用<code>while</code>循环。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">猜数字游戏</span></div><div class="line"><span class="string">计算机出一个1~100之间的随机数由人来猜</span></div><div class="line"><span class="string">计算机根据人猜的数字分别给出提示大一点/小一点/猜对了</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">Version: 0.1</span></div><div class="line"><span class="string">Author: 骆昊</span></div><div class="line"><span class="string">Date: 2018-03-01</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> random</div><div class="line"></div><div class="line">answer = random.randint(<span class="number">1</span>, <span class="number">100</span>)</div><div class="line">counter = <span class="number">0</span></div><div class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">    counter += <span class="number">1</span></div><div class="line">    number = int(input(<span class="string">'请输入: '</span>))</div><div class="line">    <span class="keyword">if</span> number &lt; answer:</div><div class="line">        print(<span class="string">'大一点'</span>)</div><div class="line">    <span class="keyword">elif</span> number &gt; answer:</div><div class="line">        print(<span class="string">'小一点'</span>)</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        print(<span class="string">'恭喜你猜对了!'</span>)</div><div class="line">        <span class="keyword">break</span></div><div class="line">print(<span class="string">'你总共猜了%d次'</span> % counter)</div><div class="line"><span class="keyword">if</span> counter &gt; <span class="number">7</span>:</div><div class="line">    print(<span class="string">'你的智商余额明显不足'</span>)</div></pre></td></tr></table></figure>
<blockquote>
<p><strong>说明：</strong>上面的代码中使用了<code>break</code>关键字来提前终止循环，需要注意的是<code>break</code>只能终止它所在的那个循环，这一点在使用嵌套的循环结构（下面会讲到）需要引起注意。除了<code>break</code>之外，还有另一个关键字是<code>continue</code>，它可以用来放弃本次循环后续的代码直接让循环进入下一轮。</p>
</blockquote>
<p>和分支结构一样，循环结构也是可以嵌套的，也就是说在循环中还可以构造循环结构。下面的例子演示了如何通过嵌套的循环来输出一个九九乘法表。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">输出乘法口诀表(九九表)</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">Version: 0.1</span></div><div class="line"><span class="string">Author: 骆昊</span></div><div class="line"><span class="string">Date: 2018-03-01</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">10</span>):</div><div class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>, i + <span class="number">1</span>):</div><div class="line">        print(<span class="string">'%d*%d=%d'</span> % (i, j, i * j), end=<span class="string">'\t'</span>)</div><div class="line">    print()</div></pre></td></tr></table></figure>
<h3 id="练习-3"><a href="#练习-3" class="headerlink" title="练习"></a>练习</h3><h4 id="练习1：输入一个数判断是不是素数。"><a href="#练习1：输入一个数判断是不是素数。" class="headerlink" title="练习1：输入一个数判断是不是素数。"></a>练习1：输入一个数判断是不是素数。</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">输入一个正整数判断它是不是素数</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">Version: 0.1</span></div><div class="line"><span class="string">Author: 骆昊</span></div><div class="line"><span class="string">Date: 2018-03-01</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line"><span class="keyword">from</span> math <span class="keyword">import</span> sqrt</div><div class="line"></div><div class="line">num = int(input(<span class="string">'请输入一个正整数: '</span>))</div><div class="line">end = int(sqrt(num))</div><div class="line">is_prime = <span class="keyword">True</span></div><div class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">2</span>, end + <span class="number">1</span>):</div><div class="line">    <span class="keyword">if</span> num % x == <span class="number">0</span>:</div><div class="line">        is_prime = <span class="keyword">False</span></div><div class="line">        <span class="keyword">break</span></div><div class="line"><span class="keyword">if</span> is_prime <span class="keyword">and</span> num != <span class="number">1</span>:</div><div class="line">    print(<span class="string">'%d是素数'</span> % num)</div><div class="line"><span class="keyword">else</span>:</div><div class="line">    print(<span class="string">'%d不是素数'</span> % num)</div></pre></td></tr></table></figure>
<h4 id="练习2：输入两个正整数，计算最大公约数和最小公倍数。"><a href="#练习2：输入两个正整数，计算最大公约数和最小公倍数。" class="headerlink" title="练习2：输入两个正整数，计算最大公约数和最小公倍数。"></a>练习2：输入两个正整数，计算最大公约数和最小公倍数。</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">输入两个正整数计算最大公约数和最小公倍数</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">Version: 0.1</span></div><div class="line"><span class="string">Author: 骆昊</span></div><div class="line"><span class="string">Date: 2018-03-01</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line">x = int(input(<span class="string">'x = '</span>))</div><div class="line">y = int(input(<span class="string">'y = '</span>))</div><div class="line"><span class="keyword">if</span> x &gt; y:</div><div class="line">    (x, y) = (y, x)</div><div class="line"><span class="keyword">for</span> factor <span class="keyword">in</span> range(x, <span class="number">0</span>, <span class="number">-1</span>):</div><div class="line">    <span class="keyword">if</span> x % factor == <span class="number">0</span> <span class="keyword">and</span> y % factor == <span class="number">0</span>:</div><div class="line">        print(<span class="string">'%d和%d的最大公约数是%d'</span> % (x, y, factor))</div><div class="line">        print(<span class="string">'%d和%d的最小公倍数是%d'</span> % (x, y, x * y // factor))</div><div class="line">        <span class="keyword">break</span></div></pre></td></tr></table></figure>
<h4 id="练习3：打印三角形图案。"><a href="#练习3：打印三角形图案。" class="headerlink" title="练习3：打印三角形图案。"></a>练习3：打印三角形图案。</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">打印各种三角形图案</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">*</span></div><div class="line"><span class="string">**</span></div><div class="line"><span class="string">***</span></div><div class="line"><span class="string">****</span></div><div class="line"><span class="string">*****</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">    *</span></div><div class="line"><span class="string">   **</span></div><div class="line"><span class="string">  ***</span></div><div class="line"><span class="string"> ****</span></div><div class="line"><span class="string">*****</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">    *</span></div><div class="line"><span class="string">   ***</span></div><div class="line"><span class="string">  *****</span></div><div class="line"><span class="string"> *******</span></div><div class="line"><span class="string">*********</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">Version: 0.1</span></div><div class="line"><span class="string">Author: 骆昊</span></div><div class="line"><span class="string">Date: 2018-03-01</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line">row = int(input(<span class="string">'请输入行数: '</span>))</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(row):</div><div class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(i + <span class="number">1</span>):</div><div class="line">        print(<span class="string">'*'</span>, end=<span class="string">''</span>)</div><div class="line">    print()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(row):</div><div class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(row):</div><div class="line">        <span class="keyword">if</span> j &lt; row - i - <span class="number">1</span>:</div><div class="line">            print(<span class="string">' '</span>, end=<span class="string">''</span>)</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            print(<span class="string">'*'</span>, end=<span class="string">''</span>)</div><div class="line">    print()</div><div class="line"></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(row):</div><div class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(row - i - <span class="number">1</span>):</div><div class="line">        print(<span class="string">' '</span>, end=<span class="string">''</span>)</div><div class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">2</span> * i + <span class="number">1</span>):</div><div class="line">        print(<span class="string">'*'</span>, end=<span class="string">''</span>)</div><div class="line">    print()</div></pre></td></tr></table></figure>
<h2 id="函数和模块的使用"><a href="#函数和模块的使用" class="headerlink" title="函数和模块的使用"></a>函数和模块的使用</h2><p>在讲解本章节的内容之前，我们先来研究一道数学题，请说出下面的方程有多少组正整数解。</p>
<p>$$x_1 + x_2 + x_3 + x_4 = 8$$</p>
<p>事实上，上面的问题等同于将8个苹果分成四组每组至少一个苹果有多少种方案。想到这一点问题的答案就呼之欲出了。</p>
<p>$$C_M^N =\frac{M!}{N!(M-N)!}, \text{(M=7, N=3)} $$</p>
<p>可以用Python的程序来计算出这个值，代码如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">输入M和N计算C(M,N)</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line">m = int(input(<span class="string">'m = '</span>))</div><div class="line">n = int(input(<span class="string">'n = '</span>))</div><div class="line">fm = <span class="number">1</span></div><div class="line"><span class="keyword">for</span> num <span class="keyword">in</span> range(<span class="number">1</span>, m + <span class="number">1</span>):</div><div class="line">    fm *= num</div><div class="line">fn = <span class="number">1</span></div><div class="line"><span class="keyword">for</span> num <span class="keyword">in</span> range(<span class="number">1</span>, n + <span class="number">1</span>):</div><div class="line">    fn *= num</div><div class="line">fmn = <span class="number">1</span></div><div class="line"><span class="keyword">for</span> num <span class="keyword">in</span> range(<span class="number">1</span>, m - n + <span class="number">1</span>):</div><div class="line">    fmn *= num</div><div class="line">print(fm // fn // fmn)</div></pre></td></tr></table></figure>
<h3 id="函数的作用"><a href="#函数的作用" class="headerlink" title="函数的作用"></a>函数的作用</h3><p>不知道大家是否注意到，在上面的代码中，我们做了3次求阶乘，这样的代码实际上就是重复代码。编程大师Martin Fowler先生曾经说过：“代码有很多种坏味道，重复是最坏的一种！”，要写出高质量的代码首先要解决的就是重复代码的问题。对于上面的代码来说，我们可以将计算阶乘的功能封装到一个称之为“函数”的功能模块中，在需要计算阶乘的地方，我们只需要“调用”这个“函数”就可以了。</p>
<h3 id="定义函数"><a href="#定义函数" class="headerlink" title="定义函数"></a>定义函数</h3><p>在Python中可以使用<code>def</code>关键字来定义函数，和变量一样每个函数也有一个响亮的名字，而且命名规则跟变量的命名规则是一致的。在函数名后面的圆括号中可以放置传递给函数的参数，这一点和数学上的函数非常相似，程序中函数的参数就相当于是数学上说的函数的自变量，而函数执行完成后我们可以通过<code>return</code>关键字来返回一个值，这相当于数学上说的函数的因变量。</p>
<p>在了解了如何定义函数后，我们可以对上面的代码进行重构，所谓重构就是在不影响代码执行结果的前提下对代码的结构进行调整，重构之后的代码如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">factorial</span><span class="params">(num)</span>:</span></div><div class="line">    <span class="string">"""</span></div><div class="line"><span class="string">    求阶乘</span></div><div class="line"><span class="string">    </span></div><div class="line"><span class="string">    :param num: 非负整数</span></div><div class="line"><span class="string">    </span></div><div class="line"><span class="string">    :return: num的阶乘</span></div><div class="line"><span class="string">    """</span></div><div class="line">    result = <span class="number">1</span></div><div class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> range(<span class="number">1</span>, num + <span class="number">1</span>):</div><div class="line">        result *= n</div><div class="line">    <span class="keyword">return</span> result</div><div class="line"></div><div class="line"></div><div class="line">m = int(input(<span class="string">'m = '</span>))</div><div class="line">n = int(input(<span class="string">'n = '</span>))</div><div class="line"><span class="comment"># 当需要计算阶乘的时候不用再写循环求阶乘而是直接调用已经定义好的函数</span></div><div class="line">print(factorial(m) // factorial(n) // factorial(m - n))</div></pre></td></tr></table></figure>
<blockquote>
<p><strong>说明：</strong>Python的math模块中其实已经有一个factorial函数了，事实上要计算阶乘可以直接使用这个现成的函数而不用自己定义。下面例子中的某些函数其实Python中也是内置了，我们这里是为了讲解函数的定义和使用才把它们又实现了一遍，实际开发中不建议做这种低级的重复性的工作。</p>
</blockquote>
<h3 id="函数的参数"><a href="#函数的参数" class="headerlink" title="函数的参数"></a>函数的参数</h3><p>函数是绝大多数编程语言中都支持的一个代码的“构建块”，但是Python中的函数与其他语言中的函数还是有很多不太相同的地方，其中一个显著的区别就是Python对函数参数的处理。在Python中，函数的参数可以有默认值，也支持使用可变参数，所以Python并不需要像其他语言一样支持<a href="https://zh.wikipedia.org/wiki/%E5%87%BD%E6%95%B0%E9%87%8D%E8%BD%BD" target="_blank" rel="external">函数的重载</a>，因为我们在定义一个函数的时候可以让它有多种不同的使用方式，下面是两个小例子。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">roll_dice</span><span class="params">(n=<span class="number">2</span>)</span>:</span></div><div class="line">    <span class="string">"""</span></div><div class="line"><span class="string">    摇色子</span></div><div class="line"><span class="string">    </span></div><div class="line"><span class="string">    :param n: 色子的个数</span></div><div class="line"><span class="string">    </span></div><div class="line"><span class="string">    :return: n颗色子点数之和</span></div><div class="line"><span class="string">    """</span></div><div class="line">    total = <span class="number">0</span></div><div class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(n):</div><div class="line">        total += randint(<span class="number">1</span>, <span class="number">6</span>)</div><div class="line">    <span class="keyword">return</span> total</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(a=<span class="number">0</span>, b=<span class="number">0</span>, c=<span class="number">0</span>)</span>:</span></div><div class="line">    <span class="keyword">return</span> a + b + c</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 如果没有指定参数那么使用默认值摇两颗色子</span></div><div class="line">print(roll_dice())</div><div class="line"><span class="comment"># 摇三颗色子</span></div><div class="line">print(roll_dice(<span class="number">3</span>))</div><div class="line">print(add())</div><div class="line">print(add(<span class="number">1</span>))</div><div class="line">print(add(<span class="number">1</span>, <span class="number">2</span>))</div><div class="line">print(add(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>))</div><div class="line"><span class="comment"># 传递参数时可以不按照设定的顺序进行传递</span></div><div class="line">print(add(c=<span class="number">50</span>, a=<span class="number">100</span>, b=<span class="number">200</span>))</div></pre></td></tr></table></figure>
<p>我们给上面两个函数的参数都设定了默认值，这也就意味着如果在调用函数的时候如果没有传入对应参数的值时将使用该参数的默认值，所以在上面的代码中我们可以用各种不同的方式去调用<code>add</code>函数，这跟其他很多语言中函数重载的效果是一致的。</p>
<p>其实上面的<code>add</code>函数还有更好的实现方案，因为我们可能会对0个或多个参数进行加法运算，而具体有多少个参数是由调用者来决定，我们作为函数的设计者对这一点是一无所知的，因此在不确定参数个数的时候，我们可以使用可变参数，代码如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 在参数前使用*表示args是可变参数</span></div><div class="line"><span class="comment"># 也就是说调用add函数时传入的参数个数可以是0个或多个</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(*args)</span>:</span></div><div class="line">    total = <span class="number">0</span></div><div class="line">    <span class="keyword">for</span> val <span class="keyword">in</span> args:</div><div class="line">        total += val</div><div class="line">    <span class="keyword">return</span> total</div><div class="line"></div><div class="line"></div><div class="line">print(add())</div><div class="line">print(add(<span class="number">1</span>))</div><div class="line">print(add(<span class="number">1</span>, <span class="number">2</span>))</div><div class="line">print(add(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>))</div><div class="line">print(add(<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>))</div></pre></td></tr></table></figure>
<h3 id="用模块管理函数"><a href="#用模块管理函数" class="headerlink" title="用模块管理函数"></a>用模块管理函数</h3><p>对于任何一种编程语言来说，给变量、函数这样的标识符起名字都是一个让人头疼的问题，因为我们会遇到命名冲突这种尴尬的情况。最简单的场景就是在同一个.py文件中定义了两个同名函数，由于Python没有函数重载的概念，那么后面的定义会覆盖之前的定义，也就意味着两个函数同名函数实际上只有一个是存在的。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">()</span>:</span></div><div class="line">    print(<span class="string">'hello, world!'</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">()</span>:</span></div><div class="line">    print(<span class="string">'goodbye, world!'</span>)</div><div class="line"></div><div class="line"></div><div class="line">foo()   <span class="comment"># 输出goodbye, world!</span></div></pre></td></tr></table></figure>
<p>当然上面的这种情况我们很容易就能避免，但是如果项目是由多人协作进行团队开发的时候，团队中可能有多个程序员都定义了名为<code>foo</code>的函数，那么怎么解决这种命名冲突呢？答案其实很简单，Python中每个文件就代表了一个模块（module），我们在不同的模块中可以有同名的函数，在使用函数的时候我们通过<code>import</code>关键字导入指定的模块就可以区分到底要使用的是哪个模块中的<code>foo</code>函数，代码如下所示。</p>
<p>module1.py</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">()</span>:</span></div><div class="line">    print(<span class="string">'hello, world!'</span>)</div></pre></td></tr></table></figure>
<p>module2.py</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">()</span>:</span></div><div class="line">    print(<span class="string">'goodbye, world!'</span>)</div></pre></td></tr></table></figure>
<p>test.py</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> module1 <span class="keyword">import</span> foo</div><div class="line"></div><div class="line">foo()   <span class="comment"># 输出hello, world!</span></div><div class="line"></div><div class="line"><span class="keyword">from</span> module2 <span class="keyword">import</span> foo</div><div class="line"></div><div class="line">foo()   <span class="comment"># 输出goodbye, world!</span></div></pre></td></tr></table></figure>
<p>也可以按照如下所示的方式来区分到底要使用哪一个<code>foo</code>函数。</p>
<p>test.py</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> module1 <span class="keyword">as</span> m1</div><div class="line"><span class="keyword">import</span> module2 <span class="keyword">as</span> m2</div><div class="line"></div><div class="line">m1.foo()</div><div class="line">m2.foo()</div></pre></td></tr></table></figure>
<p>但是如果将代码写成了下面的样子，那么程序中调用的是最后导入的那个<code>foo</code>，因为后导入的foo覆盖了之前导入的<code>foo</code>。</p>
<p>test.py</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> module1 <span class="keyword">import</span> foo</div><div class="line"><span class="keyword">from</span> module2 <span class="keyword">import</span> foo</div><div class="line"></div><div class="line">foo()   <span class="comment"># 输出goodbye, world!</span></div></pre></td></tr></table></figure>
<p>test.py</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> module2 <span class="keyword">import</span> foo</div><div class="line"><span class="keyword">from</span> module1 <span class="keyword">import</span> foo</div><div class="line"></div><div class="line">foo()   <span class="comment"># 输出hello, world!</span></div></pre></td></tr></table></figure>
<p>需要说明的是，如果我们导入的模块除了定义函数之外还中有可以执行代码，那么Python解释器在导入这个模块时就会执行这些代码，事实上我们可能并不希望如此，因此如果我们在模块中编写了执行代码，最好是将这些执行代码放入如下所示的条件中，这样的话除非直接运行该模块，if条件下的这些代码是不会执行的，因为只有直接执行的模块的名字才是“__main__”。</p>
<p>module3.py</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">()</span>:</span></div><div class="line">    <span class="keyword">pass</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">bar</span><span class="params">()</span>:</span></div><div class="line">    <span class="keyword">pass</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># __name__是Python中一个隐含的变量它代表了模块的名字</span></div><div class="line"><span class="comment"># 只有被Python解释器直接执行的模块的名字才是__main__</span></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    print(<span class="string">'call foo()'</span>)</div><div class="line">    foo()</div><div class="line">    print(<span class="string">'call bar()'</span>)</div><div class="line">    bar()</div></pre></td></tr></table></figure>
<p>test.py</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> module3</div><div class="line"></div><div class="line"><span class="comment"># 导入module3时 不会执行模块中if条件成立时的代码 因为模块的名字是module3而不是__main__</span></div></pre></td></tr></table></figure>
<h3 id="练习-4"><a href="#练习-4" class="headerlink" title="练习"></a>练习</h3><h4 id="练习1：实现计算求最大公约数和最小公倍数的函数。"><a href="#练习1：实现计算求最大公约数和最小公倍数的函数。" class="headerlink" title="练习1：实现计算求最大公约数和最小公倍数的函数。"></a>练习1：实现计算求最大公约数和最小公倍数的函数。</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">gcd</span><span class="params">(x, y)</span>:</span></div><div class="line">    (x, y) = (y, x) <span class="keyword">if</span> x &gt; y <span class="keyword">else</span> (x, y)</div><div class="line">    <span class="keyword">for</span> factor <span class="keyword">in</span> range(x, <span class="number">0</span>, <span class="number">-1</span>):</div><div class="line">        <span class="keyword">if</span> x % factor == <span class="number">0</span> <span class="keyword">and</span> y % factor == <span class="number">0</span>:</div><div class="line">            <span class="keyword">return</span> factor</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">lcm</span><span class="params">(x, y)</span>:</span></div><div class="line">    <span class="keyword">return</span> x * y // gcd(x, y)</div></pre></td></tr></table></figure>
<h4 id="练习2：实现判断一个数是不是回文数的函数。"><a href="#练习2：实现判断一个数是不是回文数的函数。" class="headerlink" title="练习2：实现判断一个数是不是回文数的函数。"></a>练习2：实现判断一个数是不是回文数的函数。</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_palindrome</span><span class="params">(num)</span>:</span></div><div class="line">    temp = num</div><div class="line">    total = <span class="number">0</span></div><div class="line">    <span class="keyword">while</span> temp &gt; <span class="number">0</span>:</div><div class="line">        total = total * <span class="number">10</span> + temp % <span class="number">10</span></div><div class="line">        temp //= <span class="number">10</span></div><div class="line">    <span class="keyword">return</span> total == num</div></pre></td></tr></table></figure>
<h4 id="练习3：实现判断一个数是不是素数的函数。"><a href="#练习3：实现判断一个数是不是素数的函数。" class="headerlink" title="练习3：实现判断一个数是不是素数的函数。"></a>练习3：实现判断一个数是不是素数的函数。</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_prime</span><span class="params">(num)</span>:</span></div><div class="line">    <span class="keyword">for</span> factor <span class="keyword">in</span> range(<span class="number">2</span>, num):</div><div class="line">        <span class="keyword">if</span> num % factor == <span class="number">0</span>:</div><div class="line">            <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">    <span class="keyword">return</span> <span class="keyword">True</span> <span class="keyword">if</span> num != <span class="number">1</span> <span class="keyword">else</span> <span class="keyword">False</span></div></pre></td></tr></table></figure>
<h4 id="练习4：写一个程序判断输入的正整数是不是回文素数。"><a href="#练习4：写一个程序判断输入的正整数是不是回文素数。" class="headerlink" title="练习4：写一个程序判断输入的正整数是不是回文素数。"></a>练习4：写一个程序判断输入的正整数是不是回文素数。</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    num = int(input(<span class="string">'请输入正整数: '</span>))</div><div class="line">    <span class="keyword">if</span> is_palindrome(num) <span class="keyword">and</span> is_prime(num):</div><div class="line">        print(<span class="string">'%d是回文素数'</span> % num)</div></pre></td></tr></table></figure>
<p>通过上面的程序可以看出，当我们将代码中重复出现的和相对独立的功能抽取成函数后，我们可以组合使用这些函数来解决更为复杂的问题，这也是我们为什么要定义和使用函数的一个非常重要的原因。</p>
<p>最后，我们来讨论一下Python中有关变量作用域的问题。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">()</span>:</span></div><div class="line">    b = <span class="string">'hello'</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">bar</span><span class="params">()</span>:</span>  <span class="comment"># Python中可以在函数内部再定义函数</span></div><div class="line">        c = <span class="keyword">True</span></div><div class="line">        print(a)</div><div class="line">        print(b)</div><div class="line">        print(c)</div><div class="line"></div><div class="line">    bar()</div><div class="line">    <span class="comment"># print(c)  # NameError: name 'c' is not defined</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    a = <span class="number">100</span></div><div class="line">    <span class="comment"># print(b)  # NameError: name 'b' is not defined</span></div><div class="line">    foo()</div></pre></td></tr></table></figure>
<p>上面的代码能够顺利的执行并且打印出100和“hello”，但我们注意到了，在<code>bar</code>函数的内部并没有定义<code>a</code>和<code>b</code>两个变量，那么<code>a</code>和<code>b</code>是从哪里来的。我们在上面代码的<code>if</code>分支中定义了一个变量<code>a</code>，这是一个全局变量（global variable），属于全局作用域，因为它没有定义在任何一个函数中。在上面的<code>foo</code>函数中我们定义了变量<code>b</code>，这是一个定义在函数中的局部变量（local variable），属于局部作用域，在<code>foo</code>函数的外部并不能访问到它；但对于<code>foo</code>函数内部的<code>bar</code>函数来说，变量<code>b</code>属于嵌套作用域，在<code>bar</code>函数中我们是可以访问到它的。<code>bar</code>函数中的变量<code>c</code>属于局部作用域，在<code>bar</code>函数之外是无法访问的。事实上，Python查找一个变量时会按照“局部作用域”、“嵌套作用域”、“全局作用域”和“内置作用域”的顺序进行搜索，前三者我们在上面的代码中已经看到了，所谓的“内置作用域”就是Python内置的那些隐含标识符<code>min</code>、<code>len</code>等都属于内置作用域）。</p>
<p>再看看下面这段代码，我们希望通过函数调用修改全局变量<code>a</code>的值，但实际上下面的代码是做不到的。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">()</span>:</span></div><div class="line">    a = <span class="number">200</span></div><div class="line">    print(a)  <span class="comment"># 200</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    a = <span class="number">100</span></div><div class="line">    foo()</div><div class="line">    print(a)  <span class="comment"># 100</span></div></pre></td></tr></table></figure>
<p>在调用<code>foo</code>函数后，我们发现<code>a</code>的值仍然是100，这是因为当我们在函数<code>foo</code>中写<code>a = 200</code>的时候，是重新定义了一个名字为<code>a</code>的局部变量，它跟全局作用域的<code>a</code>并不是同一个变量，因为局部作用域中有了自己的变量<code>a</code>，因此<code>foo</code>函数不再搜索全局作用域中的<code>a</code>。如果我们希望在<code>foo</code>函数中修改全局作用域中的<code>a</code>，代码如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">()</span>:</span></div><div class="line">    <span class="keyword">global</span> a</div><div class="line">    a = <span class="number">200</span></div><div class="line">    print(a)  <span class="comment"># 200</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    a = <span class="number">100</span></div><div class="line">    foo()</div><div class="line">    print(a)  <span class="comment"># 200</span></div></pre></td></tr></table></figure>
<p>我们可以使用<code>global</code>关键字来指示<code>foo</code>函数中的变量<code>a</code>来自于全局作用域，如果全局作用域中没有<code>a</code>，那么下面一行的代码就会定义变量<code>a</code>并将其置于全局作用域。同理，如果我们希望函数内部的函数能够修改嵌套作用域中的变量，可以使用<code>nonlocal</code>关键字来指示变量来自于嵌套作用域，请大家自行试验。</p>
<p>在实际开发中，我们应该尽量减少对全局变量的使用，因为全局变量的作用域和影响过于广泛，可能会发生意料之外的修改和使用，除此之外全局变量比局部变量拥有更长的生命周期，可能导致对象占用的内存长时间无法被<a href="https://zh.wikipedia.org/wiki/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6_(%E8%A8%88%E7%AE%97%E6%A9%9F%E7%A7%91%E5%AD%B8" target="_blank" rel="external">垃圾回收</a>)。事实上，减少对全局变量的使用，也是降低代码之间耦合度的一个重要举措，同时也是对<a href="https://zh.wikipedia.org/zh-hans/%E5%BE%97%E5%A2%A8%E5%BF%92%E8%80%B3%E5%AE%9A%E5%BE%8B" target="_blank" rel="external">迪米特法则</a>的践行。减少全局变量的使用就意味着我们应该尽量让变量的作用域在函数的内部，但是如果我们希望将一个局部变量的生命周期延长，使其在函数调用结束后依然可以访问，这时候就需要使用<a href="https://zh.wikipedia.org/wiki/%E9%97%AD%E5%8C%85_(%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6" target="_blank" rel="external">闭包</a>)，这个我们在后续的内容中进行讲解。</p>
<blockquote>
<p><strong>说明</strong>：很多人经常会将“闭包”一词和<a href="https://zh.wikipedia.org/wiki/%E5%8C%BF%E5%90%8D%E5%87%BD%E6%95%B0" target="_blank" rel="external">“匿名函数”</a>混为一谈，但实际上它们是不同的概念，如果想提前了解这个概念，推荐看看<a href="https://zh.wikipedia.org/wiki/" target="_blank" rel="external">维基百科</a>或者<a href="https://www.zhihu.com/" target="_blank" rel="external">知乎</a>上对这个概念的讨论。</p>
</blockquote>
<p>说了那么多，其实结论很简单，从现在开始我们可以将Python代码按照下面的格式进行书写，这一点点的改进其实就是在我们理解了函数和作用域的基础上跨出的巨大的一步。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    <span class="comment"># <span class="doctag">Todo:</span> Add your code here</span></div><div class="line">    <span class="keyword">pass</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h2 id="字符串和常用数据结构"><a href="#字符串和常用数据结构" class="headerlink" title="字符串和常用数据结构"></a>字符串和常用数据结构</h2><h3 id="使用字符串"><a href="#使用字符串" class="headerlink" title="使用字符串"></a>使用字符串</h3><p>第二次世界大战促使了现代电子计算机的诞生，当初的想法很简单，就是用计算机来计算导弹的弹道，因此在计算机刚刚诞生的那个年代，计算机处理的信息主要是数值，而世界上的第一台电子计算机ENIAC每秒钟能够完成约5000次浮点运算。随着时间的推移，虽然对数值运算仍然是计算机日常工作中最为重要的事情之一，但是今天的计算机处理得更多的数据都是以文本信息的方式存在的，而Python表示文本信息的方式我们在很早以前就说过了，那就是字符串类型。所谓<strong>字符串</strong>，就是由零个或多个字符组成的有限序列，一般记为<a href="https://wikimedia.org/api/rest_v1/media/math/render/svg/e29bf631b090323edd6889f810e6cff29538b161" target="_blank" rel="external">$${\displaystyle s=a<em>{1}a</em>{2}\dots a_{n}(0\leq n \leq \infty)}$$</a>。</p>
<p>我们可以通过下面的代码来了解字符串的使用。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    str1 = <span class="string">'hello, world!'</span></div><div class="line">    <span class="comment"># 通过len函数计算字符串的长度</span></div><div class="line">    print(len(str1))  <span class="comment"># 13</span></div><div class="line">    <span class="comment"># 获得字符串首字母大写的拷贝</span></div><div class="line">    print(str1.capitalize())  <span class="comment"># Hello, world!</span></div><div class="line">    <span class="comment"># 获得字符串变大写后的拷贝</span></div><div class="line">    print(str1.upper())  <span class="comment"># HELLO, WORLD!</span></div><div class="line">    <span class="comment"># 从字符串中查找子串所在位置</span></div><div class="line">    print(str1.find(<span class="string">'or'</span>))  <span class="comment"># 8</span></div><div class="line">    print(str1.find(<span class="string">'shit'</span>))  <span class="comment"># -1</span></div><div class="line">    <span class="comment"># 与find类似但找不到子串时会引发异常</span></div><div class="line">    <span class="comment"># print(str1.index('or'))</span></div><div class="line">    <span class="comment"># print(str1.index('shit'))</span></div><div class="line">    <span class="comment"># 检查字符串是否以指定的字符串开头</span></div><div class="line">    print(str1.startswith(<span class="string">'He'</span>))  <span class="comment"># False</span></div><div class="line">    print(str1.startswith(<span class="string">'hel'</span>))  <span class="comment"># True</span></div><div class="line">    <span class="comment"># 检查字符串是否以指定的字符串结尾</span></div><div class="line">    print(str1.endswith(<span class="string">'!'</span>))  <span class="comment"># True</span></div><div class="line">    <span class="comment"># 将字符串以指定的宽度居中并在两侧填充指定的字符</span></div><div class="line">    print(str1.center(<span class="number">50</span>, <span class="string">'*'</span>))</div><div class="line">    <span class="comment"># 将字符串以指定的宽度靠右放置左侧填充指定的字符</span></div><div class="line">    print(str1.rjust(<span class="number">50</span>, <span class="string">' '</span>))</div><div class="line">    str2 = <span class="string">'abc123456'</span></div><div class="line">    <span class="comment"># 从字符串中取出指定位置的字符(下标运算)</span></div><div class="line">    print(str2[<span class="number">2</span>])  <span class="comment"># c</span></div><div class="line">    <span class="comment"># 字符串切片(从指定的开始索引到指定的结束索引)</span></div><div class="line">    print(str2[<span class="number">2</span>:<span class="number">5</span>])  <span class="comment"># c12</span></div><div class="line">    print(str2[<span class="number">2</span>:])  <span class="comment"># c123456</span></div><div class="line">    print(str2[<span class="number">2</span>::<span class="number">2</span>])  <span class="comment"># c246</span></div><div class="line">    print(str2[::<span class="number">2</span>])  <span class="comment"># ac246</span></div><div class="line">    print(str2[::<span class="number">-1</span>])  <span class="comment"># 654321cba</span></div><div class="line">    print(str2[<span class="number">-3</span>:<span class="number">-1</span>])  <span class="comment"># 45</span></div><div class="line">    <span class="comment"># 检查字符串是否由数字构成</span></div><div class="line">    print(str2.isdigit())  <span class="comment"># False</span></div><div class="line">    <span class="comment"># 检查字符串是否以字母构成</span></div><div class="line">    print(str2.isalpha())  <span class="comment"># False</span></div><div class="line">    <span class="comment"># 检查字符串是否以数字和字母构成</span></div><div class="line">    print(str2.isalnum())  <span class="comment"># True</span></div><div class="line">    str3 = <span class="string">'  jackfrued@126.com '</span></div><div class="line">    print(str3)</div><div class="line">    <span class="comment"># 获得字符串修剪左右两侧空格的拷贝</span></div><div class="line">    print(str3.strip())</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>除了字符串，Python还内置了多种类型的数据结构，如果要在程序中保存和操作数据，绝大多数时候可以利用现有的数据结构来实现，最常用的包括列表、元组、集合和字典。</p>
<h3 id="使用列表"><a href="#使用列表" class="headerlink" title="使用列表"></a>使用列表</h3><p>下面的代码演示了如何定义列表、使用下标访问列表元素以及添加和删除元素的操作。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    list1 = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">100</span>]</div><div class="line">    print(list1)</div><div class="line">    list2 = [<span class="string">'hello'</span>] * <span class="number">5</span></div><div class="line">    print(list2)</div><div class="line">    <span class="comment"># 计算列表长度(元素个数)</span></div><div class="line">    print(len(list1))</div><div class="line">    <span class="comment"># 下标(索引)运算</span></div><div class="line">    print(list1[<span class="number">0</span>])</div><div class="line">    print(list1[<span class="number">4</span>])</div><div class="line">    <span class="comment"># print(list1[5])  # IndexError: list index out of range</span></div><div class="line">    print(list1[<span class="number">-1</span>])</div><div class="line">    print(list1[<span class="number">-3</span>])</div><div class="line">    list1[<span class="number">2</span>] = <span class="number">300</span></div><div class="line">    print(list1)</div><div class="line">    <span class="comment"># 添加元素</span></div><div class="line">    list1.append(<span class="number">200</span>)</div><div class="line">    list1.insert(<span class="number">1</span>, <span class="number">400</span>)</div><div class="line">    list1 += [<span class="number">1000</span>, <span class="number">2000</span>]</div><div class="line">    print(list1)</div><div class="line">    print(len(list1))</div><div class="line">    <span class="comment"># 删除元素</span></div><div class="line">    list1.remove(<span class="number">3</span>)</div><div class="line">    <span class="keyword">if</span> <span class="number">1234</span> <span class="keyword">in</span> list1:</div><div class="line">        list1.remove(<span class="number">1234</span>)</div><div class="line">    <span class="keyword">del</span> list1[<span class="number">0</span>]</div><div class="line">    print(list1)</div><div class="line">    <span class="comment"># 清空列表元素</span></div><div class="line">    list1.clear()</div><div class="line">    print(list1)</div><div class="line">    </div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>和字符串一样，列表也可以做切片操作，通过切片操作我们可以实现对列表的复制或者将列表中的一部分取出来创建出新的列表，代码如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    fruits = [<span class="string">'grape'</span>, <span class="string">'apple'</span>, <span class="string">'strawberry'</span>, <span class="string">'waxberry'</span>]</div><div class="line">    fruits += [<span class="string">'pitaya'</span>, <span class="string">'pear'</span>, <span class="string">'mango'</span>]</div><div class="line">    <span class="comment"># 循环遍历列表元素</span></div><div class="line">    <span class="keyword">for</span> fruit <span class="keyword">in</span> fruits:</div><div class="line">        print(fruit.title(), end=<span class="string">' '</span>)</div><div class="line">    print()</div><div class="line">    <span class="comment"># 列表切片</span></div><div class="line">    fruits2 = fruits[<span class="number">1</span>:<span class="number">4</span>]</div><div class="line">    print(fruits2)</div><div class="line">    <span class="comment"># fruit3 = fruits  # 没有复制列表只创建了新的引用</span></div><div class="line">    <span class="comment"># 可以通过完整切片操作来复制列表</span></div><div class="line">    fruits3 = fruits[:]</div><div class="line">    print(fruits3)</div><div class="line">    fruits4 = fruits[<span class="number">-3</span>:<span class="number">-1</span>]</div><div class="line">    print(fruits4)</div><div class="line">    <span class="comment"># 可以通过反向切片操作来获得倒转后的列表的拷贝</span></div><div class="line">    fruits5 = fruits[::<span class="number">-1</span>]</div><div class="line">    print(fruits5)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>下面的代码实现了对列表的排序操作。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    list1 = [<span class="string">'orange'</span>, <span class="string">'apple'</span>, <span class="string">'zoo'</span>, <span class="string">'internationalization'</span>, <span class="string">'blueberry'</span>]</div><div class="line">    list2 = sorted(list1)</div><div class="line">    <span class="comment"># sorted函数返回列表排序后的拷贝不会修改传入的列表</span></div><div class="line">    <span class="comment"># 函数的设计就应该像sorted函数一样尽可能不产生副作用</span></div><div class="line">    list3 = sorted(list1, reverse=<span class="keyword">True</span>)</div><div class="line">    <span class="comment"># 通过key关键字参数指定根据字符串长度进行排序而不是默认的字母表顺序</span></div><div class="line">    list4 = sorted(list1, key=len)</div><div class="line">    print(list1)</div><div class="line">    print(list2)</div><div class="line">    print(list3)</div><div class="line">    print(list4)</div><div class="line">    <span class="comment"># 给列表对象发出排序消息直接在列表对象上进行排序</span></div><div class="line">    list1.sort(reverse=<span class="keyword">True</span>)</div><div class="line">    print(list1)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>我们还可以使用列表的生成式语法来创建列表，代码如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> sys</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    f = [x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">10</span>)]</div><div class="line">    print(f)</div><div class="line">    f = [x + y <span class="keyword">for</span> x <span class="keyword">in</span> <span class="string">'ABCDE'</span> <span class="keyword">for</span> y <span class="keyword">in</span> <span class="string">'1234567'</span>]</div><div class="line">    print(f)</div><div class="line">    <span class="comment"># 用列表的生成表达式语法创建列表容器</span></div><div class="line">    <span class="comment"># 用这种语法创建列表之后元素已经准备就绪所以需要耗费较多的内存空间</span></div><div class="line">    f = [x ** <span class="number">2</span> <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1000</span>)]</div><div class="line">    print(sys.getsizeof(f))  <span class="comment"># 查看对象占用内存的字节数</span></div><div class="line">    print(f)</div><div class="line">    <span class="comment"># 请注意下面的代码创建的不是一个列表而是一个生成器对象</span></div><div class="line">    <span class="comment"># 通过生成器可以获取到数据但它不占用额外的空间存储数据</span></div><div class="line">    <span class="comment"># 每次需要数据的时候就通过内部的运算得到数据(需要花费额外的时间)</span></div><div class="line">    f = (x ** <span class="number">2</span> <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1000</span>))</div><div class="line">    print(sys.getsizeof(f))  <span class="comment"># 相比生成式生成器不占用存储数据的空间</span></div><div class="line">    print(f)</div><div class="line">    <span class="keyword">for</span> val <span class="keyword">in</span> f:</div><div class="line">        print(val)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>除了上面提到的生成器语法，Python中还有另外一种定义生成器的方式，就是通过<code>yield</code>关键字将一个普通函数改造成生成器函数。下面的代码演示了如何实现一个生成<a href="https://zh.wikipedia.org/wiki/%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97" target="_blank" rel="external">斐波拉切数列</a>的生成器。所谓斐波拉切数列可以通过下面<a href="https://zh.wikipedia.org/wiki/%E9%80%92%E5%BD%92" target="_blank" rel="external">递归</a>的方法来进行定义：</p>
<p>$${\displaystyle F_{0}=0}$$</p>
<p>$${\displaystyle F_{1}=1}$$</p>
<p>$${\displaystyle F<em>{n}=F</em>{n-1}+F_{n-2}}({n}\geq{2})$$</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">fib</span><span class="params">(n)</span>:</span></div><div class="line">    a, b = <span class="number">0</span>, <span class="number">1</span></div><div class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(n):</div><div class="line">        a, b = b, a + b</div><div class="line">        <span class="keyword">yield</span> a</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    <span class="keyword">for</span> val <span class="keyword">in</span> fib(<span class="number">20</span>):</div><div class="line">        print(val)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h3 id="使用元组"><a href="#使用元组" class="headerlink" title="使用元组"></a>使用元组</h3><p>Python 的元组与列表类似，不同之处在于元组的元素不能修改，在前面的代码中我们已经不止一次使用过元组了。顾名思义，我们把多个元素组合到一起就形成了一个元组，所以它和列表一样可以保存多条数据。下面的代码演示了如何定义和使用元组。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    <span class="comment"># 定义元组</span></div><div class="line">    t = (<span class="string">'骆昊'</span>, <span class="number">38</span>, <span class="keyword">True</span>, <span class="string">'四川成都'</span>)</div><div class="line">    print(t)</div><div class="line">    <span class="comment"># 获取元组中的元素</span></div><div class="line">    print(t[<span class="number">0</span>])</div><div class="line">    print(t[<span class="number">3</span>])</div><div class="line">    <span class="comment"># 遍历元组中的值</span></div><div class="line">    <span class="keyword">for</span> member <span class="keyword">in</span> t:</div><div class="line">        print(member)</div><div class="line">    <span class="comment"># 重新给元组赋值</span></div><div class="line">    <span class="comment"># t[0] = '王大锤'  # TypeError</span></div><div class="line">    <span class="comment"># 变量t重新引用了新的元组原来的元组将被垃圾回收</span></div><div class="line">    t = (<span class="string">'王大锤'</span>, <span class="number">20</span>, <span class="keyword">True</span>, <span class="string">'云南昆明'</span>)</div><div class="line">    print(t)</div><div class="line">    <span class="comment"># 将元组转换成列表</span></div><div class="line">    person = list(t)</div><div class="line">    print(person)</div><div class="line">    <span class="comment"># 列表是可以修改它的元素的</span></div><div class="line">    person[<span class="number">0</span>] = <span class="string">'李小龙'</span></div><div class="line">    person[<span class="number">1</span>] = <span class="number">25</span></div><div class="line">    print(person)</div><div class="line">    <span class="comment"># 将列表转换成元组</span></div><div class="line">    fruits_list = [<span class="string">'apple'</span>, <span class="string">'banana'</span>, <span class="string">'orange'</span>]</div><div class="line">    fruits_tuple = tuple(fruits_list)</div><div class="line">    print(fruits_tuple)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>这里有一个非常值得探讨的问题，我们已经有了列表这种数据结构，为什么还需要元组这样的类型呢？</p>
<ol>
<li>元组中的元素是无法修改的，事实上我们在项目中尤其是<a href="https://zh.wikipedia.org/zh-hans/%E5%A4%9A%E7%BA%BF%E7%A8%8B" target="_blank" rel="external">多线程</a>环境（后面会讲到）中可能更喜欢使用的是那些不变对象（一方面因为对象状态不能修改，所以可以避免由此引起的不必要的程序错误，简单的说就是一个不变的对象要比可变的对象更加容易维护；另一方面因为没有任何一个线程能够修改不变对象的内部状态，一个不变对象自动就是线程安全的，这样就可以省掉处理同步化的开销。一个不变对象可以方便的被共享访问）。所以结论就是：如果不需要对元素进行添加、删除、修改的时候，可以考虑使用元组，当然如果一个方法要返回多个值，使用元组也是不错的选择。</li>
<li>元组在创建时间和占用的空间上面都优于列表。我们可以使用sys模块的getsizeof函数来检查存储同样的元素的元组和列表各自占用了多少内存空间，这个很容易做到。我们也可以在ipython中使用魔法指令%timeit来分析创建同样内容的元组和列表所花费的时间.</li>
</ol>
<p>!</p>
<h3 id="使用集合"><a href="#使用集合" class="headerlink" title="使用集合"></a>使用集合</h3><p>Python中的集合跟数学上的集合是一致的，不允许有重复元素，而且可以进行交集、并集、差集等运算。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    set1 = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">2</span>&#125;</div><div class="line">    print(set1)</div><div class="line">    print(<span class="string">'Length ='</span>, len(set1))</div><div class="line">    set2 = set(range(<span class="number">1</span>, <span class="number">10</span>))</div><div class="line">    print(set2)</div><div class="line">    set1.add(<span class="number">4</span>)</div><div class="line">    set1.add(<span class="number">5</span>)</div><div class="line">    set2.update([<span class="number">11</span>, <span class="number">12</span>])</div><div class="line">    print(set1)</div><div class="line">    print(set2)</div><div class="line">    set2.discard(<span class="number">5</span>)</div><div class="line">    <span class="comment"># remove的元素如果不存在会引发KeyError</span></div><div class="line">    <span class="keyword">if</span> <span class="number">4</span> <span class="keyword">in</span> set2:</div><div class="line">        set2.remove(<span class="number">4</span>)</div><div class="line">    print(set2)</div><div class="line">    <span class="comment"># 遍历集合容器</span></div><div class="line">    <span class="keyword">for</span> elem <span class="keyword">in</span> set2:</div><div class="line">        print(elem ** <span class="number">2</span>, end=<span class="string">' '</span>)</div><div class="line">    print()</div><div class="line">    <span class="comment"># 将元组转换成集合</span></div><div class="line">    set3 = set((<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>))</div><div class="line">    print(set3.pop())</div><div class="line">    print(set3)</div><div class="line">    <span class="comment"># 集合的交集、并集、差集、对称差运算</span></div><div class="line">    print(set1 &amp; set2)</div><div class="line">    <span class="comment"># print(set1.intersection(set2))</span></div><div class="line">    print(set1 | set2)</div><div class="line">    <span class="comment"># print(set1.union(set2))</span></div><div class="line">    print(set1 - set2)</div><div class="line">    <span class="comment"># print(set1.difference(set2))</span></div><div class="line">    print(set1 ^ set2)</div><div class="line">    <span class="comment"># print(set1.symmetric_difference(set2))</span></div><div class="line">    <span class="comment"># 判断子集和超集</span></div><div class="line">    print(set2 &lt;= set1)</div><div class="line">    <span class="comment"># print(set2.issubset(set1))</span></div><div class="line">    print(set3 &lt;= set1)</div><div class="line">    <span class="comment"># print(set3.issubset(set1))</span></div><div class="line">    print(set1 &gt;= set2)</div><div class="line">    <span class="comment"># print(set1.issuperset(set2))</span></div><div class="line">    print(set1 &gt;= set3)</div><div class="line">    <span class="comment"># print(set1.issuperset(set3))</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<blockquote>
<p><strong>说明</strong>：Python中允许通过一些特殊的方法来为某种类型或数据结构自定义运算符（后面的章节中会讲到），上面的代码中我们对集合进行运算的时候可以调用集合对象的方法，也可以直接使用对应的运算符，例如<code>&amp;</code>运算符跟intersection方法的作用就是一样的，但是使用运算符让代码更加直观。</p>
</blockquote>
<h3 id="使用字典"><a href="#使用字典" class="headerlink" title="使用字典"></a>使用字典</h3><p>字典是另一种可变容器模型，类似于我们生活中使用的字典，它可以存储任意类型对象，与列表、集合不同的是，字典的每个元素都是由一个键和一个值组成的“键值对”，键和值通过冒号分开。下面的代码演示了如何定义和使用字典。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    scores = &#123;<span class="string">'骆昊'</span>: <span class="number">95</span>, <span class="string">'白元芳'</span>: <span class="number">78</span>, <span class="string">'狄仁杰'</span>: <span class="number">82</span>&#125;</div><div class="line">    <span class="comment"># 通过键可以获取字典中对应的值</span></div><div class="line">    print(scores[<span class="string">'骆昊'</span>])</div><div class="line">    print(scores[<span class="string">'狄仁杰'</span>])</div><div class="line">    <span class="comment"># 对字典进行遍历(遍历的其实是键再通过键取对应的值)</span></div><div class="line">    <span class="keyword">for</span> elem <span class="keyword">in</span> scores:</div><div class="line">        print(<span class="string">'%s\t---&gt;\t%d'</span> % (elem, scores[elem]))</div><div class="line">    <span class="comment"># 更新字典中的元素</span></div><div class="line">    scores[<span class="string">'白元芳'</span>] = <span class="number">65</span></div><div class="line">    scores[<span class="string">'诸葛王朗'</span>] = <span class="number">71</span></div><div class="line">    scores.update(冷面=<span class="number">67</span>, 方启鹤=<span class="number">85</span>)</div><div class="line">    print(scores)</div><div class="line">    <span class="keyword">if</span> <span class="string">'武则天'</span> <span class="keyword">in</span> scores:</div><div class="line">        print(scores[<span class="string">'武则天'</span>])</div><div class="line">    print(scores.get(<span class="string">'武则天'</span>))</div><div class="line">    <span class="comment"># get方法也是通过键获取对应的值但是可以设置默认值</span></div><div class="line">    print(scores.get(<span class="string">'武则天'</span>, <span class="number">60</span>))</div><div class="line">    <span class="comment"># 删除字典中的元素</span></div><div class="line">    print(scores.popitem())</div><div class="line">    print(scores.popitem())</div><div class="line">    print(scores.pop(<span class="string">'骆昊'</span>, <span class="number">100</span>))</div><div class="line">    <span class="comment"># 清空字典</span></div><div class="line">    scores.clear()</div><div class="line">    print(scores)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h3 id="练习-5"><a href="#练习-5" class="headerlink" title="练习"></a>练习</h3><h4 id="练习1：在屏幕上显示跑马灯文字"><a href="#练习1：在屏幕上显示跑马灯文字" class="headerlink" title="练习1：在屏幕上显示跑马灯文字"></a>练习1：在屏幕上显示跑马灯文字</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> os</div><div class="line"><span class="keyword">import</span> time</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    content = <span class="string">'北京欢迎你为你开天辟地…………'</span></div><div class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">        <span class="comment"># 清理屏幕上的输出</span></div><div class="line">        os.system(<span class="string">'cls'</span>)  <span class="comment"># os.system('clear')</span></div><div class="line">        print(content)</div><div class="line">        <span class="comment"># 休眠200毫秒</span></div><div class="line">        time.sleep(<span class="number">0.2</span>)</div><div class="line">        content = content[<span class="number">1</span>:] + content[<span class="number">0</span>]</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h4 id="练习2：设计一个函数产生指定长度的验证码，验证码由大小写字母和数字构成。"><a href="#练习2：设计一个函数产生指定长度的验证码，验证码由大小写字母和数字构成。" class="headerlink" title="练习2：设计一个函数产生指定长度的验证码，验证码由大小写字母和数字构成。"></a>练习2：设计一个函数产生指定长度的验证码，验证码由大小写字母和数字构成。</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> random</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">generate_code</span><span class="params">(code_len=<span class="number">4</span>)</span>:</span></div><div class="line">    <span class="string">"""</span></div><div class="line"><span class="string">    生成指定长度的验证码</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">    :param code_len: 验证码的长度(默认4个字符)</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">    :return: 由大小写英文字母和数字构成的随机验证码</span></div><div class="line"><span class="string">    """</span></div><div class="line">    all_chars = <span class="string">'0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'</span></div><div class="line">    last_pos = len(all_chars) - <span class="number">1</span></div><div class="line">    code = <span class="string">''</span></div><div class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(code_len):</div><div class="line">        index = random.randint(<span class="number">0</span>, last_pos)</div><div class="line">        code += all_chars[index]</div><div class="line">    <span class="keyword">return</span> code</div></pre></td></tr></table></figure>
<h4 id="练习3：设计一个函数返回给定文件名的后缀名。"><a href="#练习3：设计一个函数返回给定文件名的后缀名。" class="headerlink" title="练习3：设计一个函数返回给定文件名的后缀名。"></a>练习3：设计一个函数返回给定文件名的后缀名。</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_suffix</span><span class="params">(filename, has_dot=False)</span>:</span></div><div class="line">    <span class="string">"""</span></div><div class="line"><span class="string">    获取文件名的后缀名</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">    :param filename: 文件名</span></div><div class="line"><span class="string">    :param has_dot: 返回的后缀名是否需要带点</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">    :return: 文件的后缀名</span></div><div class="line"><span class="string">    """</span></div><div class="line">    pos = filename.rfind(<span class="string">'.'</span>)</div><div class="line">    <span class="keyword">if</span> <span class="number">0</span> &lt; pos &lt; len(filename) - <span class="number">1</span>:</div><div class="line">        index = pos <span class="keyword">if</span> has_dot <span class="keyword">else</span> pos + <span class="number">1</span></div><div class="line">        <span class="keyword">return</span> filename[index:]</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        <span class="keyword">return</span> <span class="string">''</span></div></pre></td></tr></table></figure>
<h4 id="练习4：设计一个函数返回传入的列表中最大和第二大的元素的值。"><a href="#练习4：设计一个函数返回传入的列表中最大和第二大的元素的值。" class="headerlink" title="练习4：设计一个函数返回传入的列表中最大和第二大的元素的值。"></a>练习4：设计一个函数返回传入的列表中最大和第二大的元素的值。</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">max2</span><span class="params">(x)</span>:</span></div><div class="line">    m1, m2 = (x[<span class="number">0</span>], x[<span class="number">1</span>]) <span class="keyword">if</span> x[<span class="number">0</span>] &gt; x[<span class="number">1</span>] <span class="keyword">else</span> (x[<span class="number">1</span>], x[<span class="number">0</span>])</div><div class="line">    <span class="keyword">for</span> index <span class="keyword">in</span> range(<span class="number">2</span>, len(x)):</div><div class="line">        <span class="keyword">if</span> x[index] &gt; m1:</div><div class="line">            m2 = m1</div><div class="line">            m1 = x[index]</div><div class="line">        <span class="keyword">elif</span> x[index] &gt; m2:</div><div class="line">            m2 = x[index]</div><div class="line">    <span class="keyword">return</span> m1, m2</div></pre></td></tr></table></figure>
<h4 id="练习5：计算指定的年月日是这一年的第几天"><a href="#练习5：计算指定的年月日是这一年的第几天" class="headerlink" title="练习5：计算指定的年月日是这一年的第几天"></a>练习5：计算指定的年月日是这一年的第几天</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_leap_year</span><span class="params">(year)</span>:</span></div><div class="line">    <span class="string">"""</span></div><div class="line"><span class="string">    判断指定的年份是不是闰年</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">    :param year: 年份</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">    :return: 闰年返回True平年返回False</span></div><div class="line"><span class="string">    """</span></div><div class="line">    <span class="keyword">return</span> year % <span class="number">4</span> == <span class="number">0</span> <span class="keyword">and</span> year % <span class="number">100</span> != <span class="number">0</span> <span class="keyword">or</span> year % <span class="number">400</span> == <span class="number">0</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">which_day</span><span class="params">(year, month, date)</span>:</span></div><div class="line">    <span class="string">"""</span></div><div class="line"><span class="string">    计算传入的日期是这一年的第几天</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">    :param year: 年</span></div><div class="line"><span class="string">    :param month: 月</span></div><div class="line"><span class="string">    :param date: 日</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">    :return: 第几天</span></div><div class="line"><span class="string">    """</span></div><div class="line">    days_of_month = [</div><div class="line">        [<span class="number">31</span>, <span class="number">28</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>],</div><div class="line">        [<span class="number">31</span>, <span class="number">29</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>]</div><div class="line">    ][is_leap_year(year)]</div><div class="line">    total = <span class="number">0</span></div><div class="line">    <span class="keyword">for</span> index <span class="keyword">in</span> range(month - <span class="number">1</span>):</div><div class="line">        total += days_of_month[index]</div><div class="line">    <span class="keyword">return</span> total + date</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    print(which_day(<span class="number">1980</span>, <span class="number">11</span>, <span class="number">28</span>))</div><div class="line">    print(which_day(<span class="number">1981</span>, <span class="number">12</span>, <span class="number">31</span>))</div><div class="line">    print(which_day(<span class="number">2018</span>, <span class="number">1</span>, <span class="number">1</span>))</div><div class="line">    print(which_day(<span class="number">2016</span>, <span class="number">3</span>, <span class="number">1</span>))</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h4 id="练习6：打印杨辉三角。"><a href="#练习6：打印杨辉三角。" class="headerlink" title="练习6：打印杨辉三角。"></a>练习6：打印<a href="https://zh.wikipedia.org/wiki/%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92%E5%BD%A2" target="_blank" rel="external">杨辉三角</a>。</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    num = int(input(<span class="string">'Number of rows: '</span>))</div><div class="line">    yh = [[]] * num</div><div class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> range(len(yh)):</div><div class="line">        yh[row] = [<span class="keyword">None</span>] * (row + <span class="number">1</span>)</div><div class="line">        <span class="keyword">for</span> col <span class="keyword">in</span> range(len(yh[row])):</div><div class="line">            <span class="keyword">if</span> col == <span class="number">0</span> <span class="keyword">or</span> col == row:</div><div class="line">                yh[row][col] = <span class="number">1</span></div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                yh[row][col] = yh[row - <span class="number">1</span>][col] + yh[row - <span class="number">1</span>][col - <span class="number">1</span>]</div><div class="line">            print(yh[row][col], end=<span class="string">'\t'</span>)</div><div class="line">        print()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h3 id="综合案例"><a href="#综合案例" class="headerlink" title="综合案例"></a>综合案例</h3><h4 id="案例1：双色球选号"><a href="#案例1：双色球选号" class="headerlink" title="案例1：双色球选号"></a>案例1：双色球选号</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randrange, randint, sample</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">display</span><span class="params">(balls)</span>:</span></div><div class="line">    <span class="string">"""</span></div><div class="line"><span class="string">    输出列表中的双色球号码</span></div><div class="line"><span class="string">    """</span></div><div class="line">    <span class="keyword">for</span> index, ball <span class="keyword">in</span> enumerate(balls):</div><div class="line">        <span class="keyword">if</span> index == len(balls) - <span class="number">1</span>:</div><div class="line">            print(<span class="string">'|'</span>, end=<span class="string">' '</span>)</div><div class="line">        print(<span class="string">'%02d'</span> % ball, end=<span class="string">' '</span>)</div><div class="line">    print()</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">random_select</span><span class="params">()</span>:</span></div><div class="line">    <span class="string">"""</span></div><div class="line"><span class="string">    随机选择一组号码</span></div><div class="line"><span class="string">    """</span></div><div class="line">    red_balls = [x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">34</span>)]</div><div class="line">    selected_balls = []</div><div class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">6</span>):</div><div class="line">        index = randrange(len(red_balls))</div><div class="line">        selected_balls.append(red_balls[index])</div><div class="line">        <span class="keyword">del</span> red_balls[index]</div><div class="line">    <span class="comment"># 上面的for循环也可以写成下面这行代码</span></div><div class="line">    <span class="comment"># sample函数是random模块下的函数</span></div><div class="line">    <span class="comment"># selected_balls = sample(red_balls, 6)</span></div><div class="line">    selected_balls.sort()</div><div class="line">    selected_balls.append(randint(<span class="number">1</span>, <span class="number">16</span>))</div><div class="line">    <span class="keyword">return</span> selected_balls</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    n = int(input(<span class="string">'机选几注: '</span>))</div><div class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(n):</div><div class="line">        display(random_select())</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<blockquote>
<p><strong>说明</strong>：可以使用random模块的sample函数来实现从列表中选择不重复的n个元素。</p>
</blockquote>
<h4 id="综合案例2：约瑟夫环问题"><a href="#综合案例2：约瑟夫环问题" class="headerlink" title="综合案例2：约瑟夫环问题"></a>综合案例2：<a href="https://zh.wikipedia.org/wiki/%E7%BA%A6%E7%91%9F%E5%A4%AB%E6%96%AF%E9%97%AE%E9%A2%98" target="_blank" rel="external">约瑟夫环问题</a></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">《幸运的基督徒》</span></div><div class="line"><span class="string">有15个基督徒和15个非基督徒在海上遇险，为了能让一部分人活下来不得不将其中15个人扔到海里面去，有个人想了个办法就是大家围成一个圈，由某个人开始从1报数，报到9的人就扔到海里面，他后面的人接着从1开始报数，报到9的人继续扔到海里面，直到扔掉15个人。由于上帝的保佑，15个基督徒都幸免于难，问这些人最开始是怎么站的，哪些位置是基督徒哪些位置是非基督徒。</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    persons = [<span class="keyword">True</span>] * <span class="number">30</span></div><div class="line">    counter, index, number = <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span></div><div class="line">    <span class="keyword">while</span> counter &lt; <span class="number">15</span>:</div><div class="line">        <span class="keyword">if</span> persons[index]:</div><div class="line">            number += <span class="number">1</span></div><div class="line">            <span class="keyword">if</span> number == <span class="number">9</span>:</div><div class="line">                persons[index] = <span class="keyword">False</span></div><div class="line">                counter += <span class="number">1</span></div><div class="line">                number = <span class="number">0</span></div><div class="line">        index += <span class="number">1</span></div><div class="line">        index %= <span class="number">30</span></div><div class="line">    <span class="keyword">for</span> person <span class="keyword">in</span> persons:</div><div class="line">        print(<span class="string">'基'</span> <span class="keyword">if</span> person <span class="keyword">else</span> <span class="string">'非'</span>, end=<span class="string">''</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h4 id="综合案例3：井字棋游戏"><a href="#综合案例3：井字棋游戏" class="headerlink" title="综合案例3：井字棋游戏"></a>综合案例3：<a href="https://zh.wikipedia.org/wiki/%E4%BA%95%E5%AD%97%E6%A3%8B" target="_blank" rel="external">井字棋</a>游戏</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> os</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_board</span><span class="params">(board)</span>:</span></div><div class="line">    print(board[<span class="string">'TL'</span>] + <span class="string">'|'</span> + board[<span class="string">'TM'</span>] + <span class="string">'|'</span> + board[<span class="string">'TR'</span>])</div><div class="line">    print(<span class="string">'-+-+-'</span>)</div><div class="line">    print(board[<span class="string">'ML'</span>] + <span class="string">'|'</span> + board[<span class="string">'MM'</span>] + <span class="string">'|'</span> + board[<span class="string">'MR'</span>])</div><div class="line">    print(<span class="string">'-+-+-'</span>)</div><div class="line">    print(board[<span class="string">'BL'</span>] + <span class="string">'|'</span> + board[<span class="string">'BM'</span>] + <span class="string">'|'</span> + board[<span class="string">'BR'</span>])</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    init_board = &#123;</div><div class="line">        <span class="string">'TL'</span>: <span class="string">' '</span>, <span class="string">'TM'</span>: <span class="string">' '</span>, <span class="string">'TR'</span>: <span class="string">' '</span>,</div><div class="line">        <span class="string">'ML'</span>: <span class="string">' '</span>, <span class="string">'MM'</span>: <span class="string">' '</span>, <span class="string">'MR'</span>: <span class="string">' '</span>,</div><div class="line">        <span class="string">'BL'</span>: <span class="string">' '</span>, <span class="string">'BM'</span>: <span class="string">' '</span>, <span class="string">'BR'</span>: <span class="string">' '</span></div><div class="line">    &#125;</div><div class="line">    begin = <span class="keyword">True</span></div><div class="line">    <span class="keyword">while</span> begin:</div><div class="line">        curr_board = init_board.copy()</div><div class="line">        begin = <span class="keyword">False</span></div><div class="line">        turn = <span class="string">'x'</span></div><div class="line">        counter = <span class="number">0</span></div><div class="line">        os.system(<span class="string">'clear'</span>)</div><div class="line">        print_board(curr_board)</div><div class="line">        <span class="keyword">while</span> counter &lt; <span class="number">9</span>:</div><div class="line">            move = input(<span class="string">'轮到%s走棋, 请输入位置: '</span> % turn)</div><div class="line">            <span class="keyword">if</span> curr_board[move] == <span class="string">' '</span>:</div><div class="line">                counter += <span class="number">1</span></div><div class="line">                curr_board[move] = turn</div><div class="line">                <span class="keyword">if</span> turn == <span class="string">'x'</span>:</div><div class="line">                    turn = <span class="string">'o'</span></div><div class="line">                <span class="keyword">else</span>:</div><div class="line">                    turn = <span class="string">'x'</span></div><div class="line">            os.system(<span class="string">'clear'</span>)</div><div class="line">            print_board(curr_board)</div><div class="line">        choice = input(<span class="string">'再玩一局?(yes|no)'</span>)</div><div class="line">        begin = choice == <span class="string">'yes'</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<blockquote>
<p><strong>说明</strong>：最后这个案例来自<a href="https://item.jd.com/11943853.html" target="_blank" rel="external">《Python编程快速上手:让繁琐工作自动化》</a>一书（这本书对有编程基础想迅速使用Python将日常工作自动化的人来说还是不错的教材），对代码做了一点点的调整。  </p>
</blockquote>
<h2 id="面向对象编程基础"><a href="#面向对象编程基础" class="headerlink" title="面向对象编程基础"></a>面向对象编程基础</h2><p>活在当下的程序员应该都听过“面向对象编程”一词，也经常有人问能不能用一句话解释下什么是“面向对象编程”，我们先来看看比较正式的说法。</p>
<blockquote>
<p>把一组数据结构和处理它们的方法组成对象（object），把相同行为的对象归纳为类（class），通过类的封装（encapsulation）隐藏内部细节，通过继承（inheritance）实现类的特化（specialization）和泛化（generalization），通过多态（polymorphism）实现基于对象类型的动态分派。</p>
</blockquote>
<p>之前我们说过“程序是指令的集合”，我们在程序中书写的语句在执行时会变成一条或多条指令然后由CPU去执行。当然为了简化程序的设计，我们引入了函数的概念，把相对独立且经常重复使用的代码放置到函数中，在需要使用这些功能的时候只要调用函数即可；如果一个函数的功能过于复杂和臃肿，我们又可以进一步将函数继续切分为子函数来降低系统的复杂性。但是说了这么多，不知道大家是否发现，所谓编程就是程序员按照计算机的工作方式控制计算机完成各种任务。但是，计算机的工作方式与正常人类的思维模式是不同的，如果编程就必须得抛弃人类正常的思维方式去迎合计算机，编程的乐趣就少了很多，“每个人都应该学习编程”这样的豪言壮语就只能说说而已。当然，这些还不是最重要的，最重要的是当我们需要开发一个复杂的系统时，代码的复杂性会让开发和维护工作都变得举步维艰，所以在上世纪60年代末期，“<a href="https://zh.wikipedia.org/wiki/%E8%BD%AF%E4%BB%B6%E5%8D%B1%E6%9C%BA" target="_blank" rel="external">软件危机</a>”、“<a href="https://zh.wikipedia.org/wiki/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B" target="_blank" rel="external">软件工程</a>”等一系列的概念开始在行业中出现。</p>
<p>当然，程序员圈子内的人都知道，现实中并没有解决上面所说的这些问题的“<a href="https://zh.wikipedia.org/wiki/%E6%B2%A1%E6%9C%89%E9%93%B6%E5%BC%B9" target="_blank" rel="external">银弹</a>”，真正让软件开发者看到希望的是上世纪70年代诞生的<a href="https://zh.wikipedia.org/wiki/Smalltalk" target="_blank" rel="external">Smalltalk</a>编程语言中引入的面向对象的编程思想（面向对象编程的雏形可以追溯到更早期的<a href="https://zh.wikipedia.org/wiki/Simula" target="_blank" rel="external">Simula</a>语言）。按照这种编程理念，程序中的数据和操作数据的函数是一个逻辑上的整体，我们称之为“对象”，而我们解决问题的方式就是创建出需要的对象并向对象发出各种各样的消息，多个对象的协同工作最终可以让我们构造出复杂的系统来解决现实中的问题。</p>
<blockquote>
<p><strong>说明</strong>：当然面向对象也不是解决软件开发中所有问题的最后的“银弹”，所以今天的高级程序设计语言几乎都提供了对多种编程范式的支持，Python也不例外。</p>
</blockquote>
<h3 id="类和对象"><a href="#类和对象" class="headerlink" title="类和对象"></a>类和对象</h3><p>简单的说，类是对象的蓝图和模板，而对象是类的实例。这个解释虽然有点像用概念在解释概念，但是从这句话我们至少可以看出，类是抽象的概念，而对象是具体的东西。在面向对象编程的世界中，一切皆为对象，对象都有属性和行为，每个对象都是独一无二的，而且对象一定属于某个类（型）。当我们把一大堆拥有共同特征的对象的静态特征（属性）和动态特征（行为）都抽取出来后，就可以定义出一个叫做“类”的东西。</p>
<h3 id="定义类"><a href="#定义类" class="headerlink" title="定义类"></a>定义类</h3><p>在Python中可以使用<code>class</code>关键字定义类，然后在类中通过之前学习过的函数来定义方法，这样就可以将对象的动态特征描述出来，代码如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">(object)</span>:</span></div><div class="line"></div><div class="line">    <span class="comment"># __init__是一个特殊方法用于在创建对象时进行初始化操作</span></div><div class="line">    <span class="comment"># 通过这个方法我们可以为学生对象绑定name和age两个属性</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, age)</span>:</span></div><div class="line">        self.name = name</div><div class="line">        self.age = age</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">study</span><span class="params">(self, course_name)</span>:</span></div><div class="line">        print(<span class="string">'%s正在学习%s.'</span> % (self.name, course_name))</div><div class="line"></div><div class="line">    <span class="comment"># PEP 8要求标识符的名字用全小写多个单词用下划线连接</span></div><div class="line">    <span class="comment"># 但是很多程序员和公司更倾向于使用驼峰命名法(驼峰标识)</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">watch_av</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">if</span> self.age &lt; <span class="number">18</span>:</div><div class="line">            print(<span class="string">'%s只能观看《熊出没》.'</span> % self.name)</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            print(<span class="string">'%s正在观看岛国爱情动作片.'</span> % self.name)</div></pre></td></tr></table></figure>
<blockquote>
<p><strong>说明</strong>：写在类中的函数，我们通常称之为（对象的）方法，这些方法就是对象可以接收的消息。</p>
</blockquote>
<h3 id="创建和使用对象"><a href="#创建和使用对象" class="headerlink" title="创建和使用对象"></a>创建和使用对象</h3><p>当我们定义好一个类之后，可以通过下面的方式来创建对象并给对象发消息。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    <span class="comment"># 创建学生对象并指定姓名和年龄</span></div><div class="line">    stu1 = Student(<span class="string">'骆昊'</span>, <span class="number">38</span>)</div><div class="line">    <span class="comment"># 给对象发study消息</span></div><div class="line">    stu1.study(<span class="string">'Python程序设计'</span>)</div><div class="line">    <span class="comment"># 给对象发watch_av消息</span></div><div class="line">    stu1.watch_av()</div><div class="line">    stu2 = Student(<span class="string">'王大锤'</span>, <span class="number">15</span>)</div><div class="line">    stu2.study(<span class="string">'思想品德'</span>)</div><div class="line">    stu2.watch_av()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h3 id="访问可见性问题"><a href="#访问可见性问题" class="headerlink" title="访问可见性问题"></a>访问可见性问题</h3><p>对于上面的代码，有C++、Java、C#等编程经验的程序员可能会问，我们给<code>Student</code>对象绑定的<code>name</code>和<code>age</code>属性到底具有怎样的访问权限（也称为可见性）。因为在很多面向对象编程语言中，我们通常会将对象的属性设置为私有的（private）或受保护的（protected），简单的说就是不允许外界访问，而对象的方法通常都是公开的（public），因为公开的方法就是对象能够接受的消息。在Python中，属性和方法的访问权限只有两种，也就是公开的和私有的，如果希望属性是私有的，在给属性命名时可以用两个下划线作为开头，下面的代码可以验证这一点。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, foo)</span>:</span></div><div class="line">        self.__foo = foo</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__bar</span><span class="params">(self)</span>:</span></div><div class="line">        print(self.__foo)</div><div class="line">        print(<span class="string">'__bar'</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    test = Test(<span class="string">'hello'</span>)</div><div class="line">    <span class="comment"># AttributeError: 'Test' object has no attribute '__bar'</span></div><div class="line">    test.__bar()</div><div class="line">    <span class="comment"># AttributeError: 'Test' object has no attribute '__foo'</span></div><div class="line">    print(test.__foo)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>但是，Python并没有从语法上严格保证私有属性或方法的私密性，它只是给私有的属性和方法换了一个名字来“妨碍”对它们的访问，事实上如果你知道更换名字的规则仍然可以访问到它们，下面的代码就可以验证这一点。之所以这样设定，可以用这样一句名言加以解释，就是“We are all consenting adults here”。因为绝大多数程序员都认为开放比封闭要好，而且程序员要自己为自己的行为负责。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, foo)</span>:</span></div><div class="line">        self.__foo = foo</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__bar</span><span class="params">(self)</span>:</span></div><div class="line">        print(self.__foo)</div><div class="line">        print(<span class="string">'__bar'</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    test = Test(<span class="string">'hello'</span>)</div><div class="line">    test._Test__bar()</div><div class="line">    print(test._Test__foo)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>在实际开发中，我们并不建议将属性设置为私有的，因为这会导致子类无法访问（后面会讲到）。所以大多数Python程序员会遵循一种命名惯例就是让属性名以单下划线开头来表示属性是受保护的，本类之外的代码在访问这样的属性时应该要保持慎重。这种做法并不是语法上的规则，单下划线开头的属性和方法外界仍然是可以访问的，所以更多的时候它是一种暗示或隐喻，关于这一点可以看看我的<a href="http://blog.csdn.net/jackfrued/article/details/79521404" target="_blank" rel="external">《Python - 那些年我们踩过的那些坑》</a>文章中的讲解。</p>
<h3 id="面向对象的支柱"><a href="#面向对象的支柱" class="headerlink" title="面向对象的支柱"></a>面向对象的支柱</h3><p>面向对象有三大支柱：封装、继承和多态。后面两个概念在下一个章节中进行详细的说明，这里我们先说一下什么是封装。我自己对封装的理解是“隐藏一切可以隐藏的实现细节，只向外界暴露（提供）简单的编程接口”。我们在类中定义的方法其实就是把数据和对数据的操作封装起来了，在我们创建了对象之后，只需要给对象发送一个消息（调用方法）就可以执行方法中的代码，也就是说我们只需要知道方法的名字和传入的参数（方法的外部视图），而不需要知道方法内部的实现细节（方法的内部视图）。</p>
<h3 id="练习-6"><a href="#练习-6" class="headerlink" title="练习"></a>练习</h3><h4 id="练习1：定义一个类描述数字时钟"><a href="#练习1：定义一个类描述数字时钟" class="headerlink" title="练习1：定义一个类描述数字时钟"></a>练习1：定义一个类描述数字时钟</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Clock</span><span class="params">(object)</span>:</span></div><div class="line">    <span class="string">"""</span></div><div class="line"><span class="string">    数字时钟</span></div><div class="line"><span class="string">    """</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, hour=<span class="number">0</span>, minute=<span class="number">0</span>, second=<span class="number">0</span>)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line"><span class="string">        构造器</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">        :param hour: 时</span></div><div class="line"><span class="string">        :param minute: 分</span></div><div class="line"><span class="string">        :param second: 秒</span></div><div class="line"><span class="string">        """</span></div><div class="line">        self._hour = hour</div><div class="line">        self._minute = minute</div><div class="line">        self._second = second</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="string">"""走字"""</span></div><div class="line">        self._second += <span class="number">1</span></div><div class="line">        <span class="keyword">if</span> self._second == <span class="number">60</span>:</div><div class="line">            self._second = <span class="number">0</span></div><div class="line">            self._minute += <span class="number">1</span></div><div class="line">            <span class="keyword">if</span> self._minute == <span class="number">60</span>:</div><div class="line">                self._minute = <span class="number">0</span></div><div class="line">                self._hour += <span class="number">1</span></div><div class="line">                <span class="keyword">if</span> self._hour == <span class="number">24</span>:</div><div class="line">                    self._hour = <span class="number">0</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="string">"""显示时间"""</span></div><div class="line">        <span class="keyword">return</span> <span class="string">'%02d:%02d:%02d'</span> % \</div><div class="line">               (self._hour, self._minute, self._second)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    clock = Clock(<span class="number">23</span>, <span class="number">59</span>, <span class="number">58</span>)</div><div class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">        print(clock)</div><div class="line">        sleep(<span class="number">1</span>)</div><div class="line">        clock.run()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h4 id="练习2：定义一个类描述平面上的点并提供移动点和计算到另一个点距离的方法。"><a href="#练习2：定义一个类描述平面上的点并提供移动点和计算到另一个点距离的方法。" class="headerlink" title="练习2：定义一个类描述平面上的点并提供移动点和计算到另一个点距离的方法。"></a>练习2：定义一个类描述平面上的点并提供移动点和计算到另一个点距离的方法。</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> math <span class="keyword">import</span> sqrt</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Point</span><span class="params">(object)</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, x=<span class="number">0</span>, y=<span class="number">0</span>)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line"><span class="string">        构造器</span></div><div class="line"><span class="string">        </span></div><div class="line"><span class="string">        :param x: 横坐标</span></div><div class="line"><span class="string">        :param y: 纵坐标</span></div><div class="line"><span class="string">        """</span></div><div class="line">        self.x = x</div><div class="line">        self.y = y</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">move_to</span><span class="params">(self, x, y)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line"><span class="string">        移动到指定位置</span></div><div class="line"><span class="string">        </span></div><div class="line"><span class="string">        :param x: 新的横坐标</span></div><div class="line"><span class="string">        "param y: 新的纵坐标</span></div><div class="line"><span class="string">        """</span></div><div class="line">        self.x = x</div><div class="line">        self.y = y</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">move_by</span><span class="params">(self, dx, dy)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line"><span class="string">        移动指定的增量</span></div><div class="line"><span class="string">        </span></div><div class="line"><span class="string">        :param dx: 横坐标的增量</span></div><div class="line"><span class="string">        "param dy: 纵坐标的增量</span></div><div class="line"><span class="string">        """</span></div><div class="line">        self.x += dx</div><div class="line">        self.y += dy</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">distance_to</span><span class="params">(self, other)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line"><span class="string">        计算与另一个点的距离</span></div><div class="line"><span class="string">        </span></div><div class="line"><span class="string">        :param other: 另一个点</span></div><div class="line"><span class="string">        """</span></div><div class="line">        dx = self.x - other.x</div><div class="line">        dy = self.y - other.y</div><div class="line">        <span class="keyword">return</span> sqrt(dx ** <span class="number">2</span> + dy ** <span class="number">2</span>)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> <span class="string">'(%s, %s)'</span> % (str(self.x), str(self.y))</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    p1 = Point(<span class="number">3</span>, <span class="number">5</span>)</div><div class="line">    p2 = Point()</div><div class="line">    print(p1)</div><div class="line">    print(p2)</div><div class="line">    p2.move_by(<span class="number">-1</span>, <span class="number">2</span>)</div><div class="line">    print(p2)</div><div class="line">    print(p1.distance_to(p2))</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<blockquote>
<p><strong>说明</strong>：本章中的插图来自于Grady Booch等著作的<a href="https://item.jd.com/20476561918.html" target="_blank" rel="external">《面向对象分析与设计》</a>一书，该书是讲解面向对象编程的经典著作，有兴趣的读者可以购买和阅读这本书来了解更多的面向对象的相关知识。  </p>
</blockquote>
<h2 id="面向对象进阶"><a href="#面向对象进阶" class="headerlink" title="面向对象进阶"></a>面向对象进阶</h2><p>在前面的章节我们已经了解了面向对象的入门知识，知道了如何定义类，如何创建对象以及如何给对象发消息。为了能够更好的使用面向对象编程思想进行程序开发，我们还需要对Python中的面向对象编程进行更为深入的了解。</p>
<h3 id="property装饰器"><a href="#property装饰器" class="headerlink" title="@property装饰器"></a>@property装饰器</h3><p>之前我们讨论过Python中属性和方法访问权限的问题，虽然我们不建议将属性设置为私有的，但是如果直接将属性暴露给外界也是有问题的，比如我们没有办法检查赋给属性的值是否有效。我们之前的建议是将属性命名以单下划线开头，通过这种方式来暗示属性是受保护的，不建议外界直接访问，那么如果想访问属性可以通过属性的getter（访问器）和setter（修改器）方法进行对应的操作。如果要做到这点，就可以考虑使用@property包装器来包装getter和setter方法，使得对属性的访问既安全又方便，代码如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">(object)</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, age)</span>:</span></div><div class="line">        self._name = name</div><div class="line">        self._age = age</div><div class="line"></div><div class="line">    <span class="comment"># 访问器 - getter方法</span></div><div class="line"><span class="meta">    @property</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">name</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self._name</div><div class="line"></div><div class="line">    <span class="comment"># 访问器 - getter方法</span></div><div class="line"><span class="meta">    @property</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">age</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self._age</div><div class="line"></div><div class="line">    <span class="comment"># 修改器 - setter方法</span></div><div class="line"><span class="meta">    @age.setter</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">age</span><span class="params">(self, age)</span>:</span></div><div class="line">        self._age = age</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">play</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">if</span> self._age &lt;= <span class="number">16</span>:</div><div class="line">            print(<span class="string">'%s正在玩飞行棋.'</span> % self._name)</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            print(<span class="string">'%s正在玩斗地主.'</span> % self._name)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    person = Person(<span class="string">'王大锤'</span>, <span class="number">12</span>)</div><div class="line">    person.play()</div><div class="line">    person.age = <span class="number">22</span></div><div class="line">    person.play()</div><div class="line">    <span class="comment"># person.name = '白元芳'  # AttributeError: can't set attribute</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h3 id="slots-魔法"><a href="#slots-魔法" class="headerlink" title="__slots__魔法"></a>__slots__魔法</h3><p>我们讲到这里，不知道大家是否已经意识到，Python是一门<a href="https://zh.wikipedia.org/wiki/%E5%8A%A8%E6%80%81%E8%AF%AD%E8%A8%80" target="_blank" rel="external">动态语言</a>。通常，动态语言允许我们在程序运行时给对象绑定新的属性或方法，当然也可以对已经绑定的属性和方法进行解绑定。但是如果我们需要限定自定义类型的对象只能绑定某些属性，可以通过在类中定义__slots__变量来进行限定。需要注意的是__slots__的限定只对当前类的对象生效，对子类并不起任何作用。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">(object)</span>:</span></div><div class="line"></div><div class="line">    <span class="comment"># 限定Person对象只能绑定_name, _age和_gender属性</span></div><div class="line">    __slots__ = (<span class="string">'_name'</span>, <span class="string">'_age'</span>, <span class="string">'_gender'</span>)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, age)</span>:</span></div><div class="line">        self._name = name</div><div class="line">        self._age = age</div><div class="line"></div><div class="line"><span class="meta">    @property</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">name</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self._name</div><div class="line"></div><div class="line"><span class="meta">    @property</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">age</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self._age</div><div class="line"></div><div class="line"><span class="meta">    @age.setter</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">age</span><span class="params">(self, age)</span>:</span></div><div class="line">        self._age = age</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">play</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">if</span> self._age &lt;= <span class="number">16</span>:</div><div class="line">            print(<span class="string">'%s正在玩飞行棋.'</span> % self._name)</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            print(<span class="string">'%s正在玩斗地主.'</span> % self._name)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    person = Person(<span class="string">'王大锤'</span>, <span class="number">22</span>)</div><div class="line">    person.play()</div><div class="line">    person._gender = <span class="string">'男'</span></div><div class="line">    <span class="comment"># AttributeError: 'Person' object has no attribute '_is_gay'</span></div><div class="line">    <span class="comment"># person._is_gay = True</span></div></pre></td></tr></table></figure>
<h3 id="静态方法和类方法"><a href="#静态方法和类方法" class="headerlink" title="静态方法和类方法"></a>静态方法和类方法</h3><p>之前，我们在类中定义的方法都是对象方法，也就是说这些方法都是发送给对象的消息。实际上，我们写在类中的方法并不需要都是对象方法，例如我们定义一个“三角形”类，通过传入三条边长来构造三角形，并提供计算周长和面积的方法，但是传入的三条边长未必能构造出三角形对象，因此我们可以先写一个方法来验证三条边长是否可以构成三角形，这个方法很显然就不是对象方法，因为在调用这个方法时三角形对象尚未创建出来（因为都不知道三条边能不能构成三角形），所以这个方法是属于三角形类而并不属于三角形对象的。我们可以使用静态方法来解决这类问题，代码如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> math <span class="keyword">import</span> sqrt</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Triangle</span><span class="params">(object)</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, a, b, c)</span>:</span></div><div class="line">        self._a = a</div><div class="line">        self._b = b</div><div class="line">        self._c = c</div><div class="line"></div><div class="line"><span class="meta">    @staticmethod</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">is_valid</span><span class="params">(a, b, c)</span>:</span></div><div class="line">        <span class="keyword">return</span> a + b &gt; c <span class="keyword">and</span> b + c &gt; a <span class="keyword">and</span> a + c &gt; b</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">perimeter</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self._a + self._b + self._c</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">area</span><span class="params">(self)</span>:</span></div><div class="line">        half = self.perimeter() / <span class="number">2</span></div><div class="line">        <span class="keyword">return</span> sqrt(half * (half - self._a) *</div><div class="line">                    (half - self._b) * (half - self._c))</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    a, b, c = <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span></div><div class="line">    <span class="comment"># 静态方法和类方法都是通过给类发消息来调用的</span></div><div class="line">    <span class="keyword">if</span> Triangle.is_valid(a, b, c):</div><div class="line">        t = Triangle(a, b, c)</div><div class="line">        print(t.perimeter())</div><div class="line">        <span class="comment"># 也可以通过给类发消息来调用对象方法但是要传入接收消息的对象作为参数</span></div><div class="line">        <span class="comment"># print(Triangle.perimeter(t))</span></div><div class="line">        print(t.area())</div><div class="line">        <span class="comment"># print(Triangle.area(t))</span></div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        print(<span class="string">'无法构成三角形.'</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>和静态方法比较类似，Python还可以在类中定义类方法，类方法的第一个参数约定名为cls，它代表的是当前类相关的信息的对象（类本身也是一个对象，有的地方也称之为类的元数据对象），通过这个参数我们可以获取和类相关的信息并且可以创建出类的对象，代码如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time, localtime, sleep</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Clock</span><span class="params">(object)</span>:</span></div><div class="line">    <span class="string">"""数字时钟"""</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, hour=<span class="number">0</span>, minute=<span class="number">0</span>, second=<span class="number">0</span>)</span>:</span></div><div class="line">        self._hour = hour</div><div class="line">        self._minute = minute</div><div class="line">        self._second = second</div><div class="line"></div><div class="line"><span class="meta">    @classmethod</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">now</span><span class="params">(cls)</span>:</span></div><div class="line">        ctime = localtime(time())</div><div class="line">        <span class="keyword">return</span> cls(ctime.tm_hour, ctime.tm_min, ctime.tm_sec)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="string">"""走字"""</span></div><div class="line">        self._second += <span class="number">1</span></div><div class="line">        <span class="keyword">if</span> self._second == <span class="number">60</span>:</div><div class="line">            self._second = <span class="number">0</span></div><div class="line">            self._minute += <span class="number">1</span></div><div class="line">            <span class="keyword">if</span> self._minute == <span class="number">60</span>:</div><div class="line">                self._minute = <span class="number">0</span></div><div class="line">                self._hour += <span class="number">1</span></div><div class="line">                <span class="keyword">if</span> self._hour == <span class="number">24</span>:</div><div class="line">                    self._hour = <span class="number">0</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="string">"""显示时间"""</span></div><div class="line">        <span class="keyword">return</span> <span class="string">'%02d:%02d:%02d'</span> % \</div><div class="line">               (self._hour, self._minute, self._second)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    <span class="comment"># 通过类方法创建对象并获取系统时间</span></div><div class="line">    clock = Clock.now()</div><div class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">        print(clock.show())</div><div class="line">        sleep(<span class="number">1</span>)</div><div class="line">        clock.run()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h3 id="类之间的关系"><a href="#类之间的关系" class="headerlink" title="类之间的关系"></a>类之间的关系</h3><p>简单的说，类和类之间的关系有三种：is-a、has-a和use-a关系。</p>
<ul>
<li>is-a关系也叫继承或泛化，比如学生和人的关系、手机和电子产品的关系都属于继承关系。</li>
<li>has-a关系通常称之为关联，比如部门和员工的关系，汽车和引擎的关系都属于关联关系；关联关系如果是整体和部分的关联，那么我们称之为聚合关系；如果整体进一步负责了部分的生命周期（整体和部分是不可分割的，同时同在也同时消亡），那么这种就是最强的关联关系，我们称之为合成关系。</li>
<li>use-a关系通常称之为依赖，比如司机有一个驾驶的行为（方法），其中（的参数）使用到了汽车，那么司机和汽车的关系就是依赖关系。</li>
</ul>
<p>我们可以使用一种叫做<a href="https://zh.wikipedia.org/wiki/%E7%BB%9F%E4%B8%80%E5%BB%BA%E6%A8%A1%E8%AF%AD%E8%A8%80" target="_blank" rel="external">UML</a>（统一建模语言）的东西来进行面向对象建模，其中一项重要的工作就是把类和类之间的关系用标准化的图形符号描述出来。关于UML我们在这里不做详细的介绍，有兴趣的读者可以自行阅读<a href="https://e.jd.com/30392949.html" target="_blank" rel="external">《UML面向对象设计基础》</a>一书。</p>
<p>利用类之间的这些关系，我们可以在已有类的基础上来完成某些操作，也可以在已有类的基础上创建新的类，这些都是实现代码复用的重要手段。复用现有的代码不仅可以减少开发的工作量，也有利于代码的管理和维护，这是我们在日常工作中都会使用到的技术手段。</p>
<h3 id="继承和多态"><a href="#继承和多态" class="headerlink" title="继承和多态"></a>继承和多态</h3><p>刚才我们提到了，可以在已有类的基础上创建新类，这其中的一种做法就是让一个类从另一个类那里将属性和方法直接继承下来，从而减少重复代码的编写。提供继承信息的我们称之为父类，也叫超类或基类；得到继承信息的我们称之为子类，也叫派生类或衍生类。子类除了继承父类提供的属性和方法，还可以定义自己特有的属性和方法，所以子类比父类拥有的更多的能力，在实际开发中，我们经常会用子类对象去替换掉一个父类对象，这是面向对象编程中一个常见的行为，对应的原则称之为<a href="https://zh.wikipedia.org/wiki/%E9%87%8C%E6%B0%8F%E6%9B%BF%E6%8D%A2%E5%8E%9F%E5%88%99" target="_blank" rel="external">里氏替换原则</a>。下面我们先看一个继承的例子。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">(object)</span>:</span></div><div class="line">    <span class="string">"""人"""</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, age)</span>:</span></div><div class="line">        self._name = name</div><div class="line">        self._age = age</div><div class="line"></div><div class="line"><span class="meta">    @property</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">name</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self._name</div><div class="line"></div><div class="line"><span class="meta">    @property</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">age</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self._age</div><div class="line"></div><div class="line"><span class="meta">    @age.setter</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">age</span><span class="params">(self, age)</span>:</span></div><div class="line">        self._age = age</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">play</span><span class="params">(self)</span>:</span></div><div class="line">        print(<span class="string">'%s正在愉快的玩耍.'</span> % self._name)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">watch_av</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">if</span> self._age &gt;= <span class="number">18</span>:</div><div class="line">            print(<span class="string">'%s正在观看爱情动作片.'</span> % self._name)</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            print(<span class="string">'%s只能观看《熊出没》.'</span> % self._name)</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">(Person)</span>:</span></div><div class="line">    <span class="string">"""学生"""</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, age, grade)</span>:</span></div><div class="line">        super().__init__(name, age)</div><div class="line">        self._grade = grade</div><div class="line"></div><div class="line"><span class="meta">    @property</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">grade</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self._grade</div><div class="line"></div><div class="line"><span class="meta">    @grade.setter</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">grade</span><span class="params">(self, grade)</span>:</span></div><div class="line">        self._grade = grade</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">study</span><span class="params">(self, course)</span>:</span></div><div class="line">        print(<span class="string">'%s的%s正在学习%s.'</span> % (self._grade, self._name, course))</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Teacher</span><span class="params">(Person)</span>:</span></div><div class="line">    <span class="string">"""老师"""</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, age, title)</span>:</span></div><div class="line">        super().__init__(name, age)</div><div class="line">        self._title = title</div><div class="line"></div><div class="line"><span class="meta">    @property</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">title</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self._title</div><div class="line"></div><div class="line"><span class="meta">    @title.setter</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">title</span><span class="params">(self, title)</span>:</span></div><div class="line">        self._title = title</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">teach</span><span class="params">(self, course)</span>:</span></div><div class="line">        print(<span class="string">'%s%s正在讲%s.'</span> % (self._name, self._title, course))</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    stu = Student(<span class="string">'王大锤'</span>, <span class="number">15</span>, <span class="string">'初三'</span>)</div><div class="line">    stu.study(<span class="string">'数学'</span>)</div><div class="line">    stu.watch_av()</div><div class="line">    t = Teacher(<span class="string">'骆昊'</span>, <span class="number">38</span>, <span class="string">'老叫兽'</span>)</div><div class="line">    t.teach(<span class="string">'Python程序设计'</span>)</div><div class="line">    t.watch_av()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>子类在继承了父类的方法后，可以对父类已有的方法给出新的实现版本，这个动作称之为方法重写（override）。通过方法重写我们可以让父类的同一个行为在子类中拥有不同的实现版本，当我们调用这个经过子类重写的方法时，不同的子类对象会表现出不同的行为，这个就是多态（poly-morphism）。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> abc <span class="keyword">import</span> ABCMeta, abstractmethod</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Pet</span><span class="params">(object, metaclass=ABCMeta)</span>:</span></div><div class="line">    <span class="string">"""宠物"""</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, nickname)</span>:</span></div><div class="line">        self._nickname = nickname</div><div class="line"></div><div class="line"><span class="meta">    @abstractmethod</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">make_voice</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="string">"""发出声音"""</span></div><div class="line">        <span class="keyword">pass</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span><span class="params">(Pet)</span>:</span></div><div class="line">    <span class="string">"""狗"""</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">make_voice</span><span class="params">(self)</span>:</span></div><div class="line">        print(<span class="string">'%s: 汪汪汪...'</span> % self._nickname)</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span><span class="params">(Pet)</span>:</span></div><div class="line">    <span class="string">"""猫"""</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">make_voice</span><span class="params">(self)</span>:</span></div><div class="line">        print(<span class="string">'%s: 喵...喵...'</span> % self._nickname)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    pets = [Dog(<span class="string">'旺财'</span>), Cat(<span class="string">'凯蒂'</span>), Dog(<span class="string">'大黄'</span>)]</div><div class="line">    <span class="keyword">for</span> pet <span class="keyword">in</span> pets:</div><div class="line">        pet.make_voice()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>在上面的代码中，我们将<code>Pet</code>类处理成了一个抽象类，所谓抽象类就是不能够创建对象的类，这种类的存在就是专门为了让其他类去继承它。Python从语法层面并没有像Java或C#那样提供对抽象类的支持，但是我们可以通过<code>abc</code>模块的<code>ABCMeta</code>元类和<code>abstractmethod</code>包装器来达到抽象类的效果，如果一个类中存在抽象方法那么这个类就不能够实例化（创建对象）。上面的代码中，<code>Dog</code>和<code>Cat</code>两个子类分别对<code>Pet</code>类中的<code>make_voice</code>抽象方法进行了重写并给出了不同的实现版本，当我们在<code>main</code>函数中调用该方法时，这个方法就表现出了多态行为（同样的方法做了不同的事情）。</p>
<h3 id="综合案例-1"><a href="#综合案例-1" class="headerlink" title="综合案例"></a>综合案例</h3><h4 id="案例1：奥特曼打小怪兽"><a href="#案例1：奥特曼打小怪兽" class="headerlink" title="案例1：奥特曼打小怪兽"></a>案例1：奥特曼打小怪兽</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> abc <span class="keyword">import</span> ABCMeta, abstractmethod</div><div class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint, randrange</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Fighter</span><span class="params">(object, metaclass=ABCMeta)</span>:</span></div><div class="line">    <span class="string">"""战斗者"""</span></div><div class="line"></div><div class="line">    <span class="comment"># 通过__slots__魔法限定对象可以绑定的成员变量</span></div><div class="line">    __slots__ = (<span class="string">'_name'</span>, <span class="string">'_hp'</span>)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, hp)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line"><span class="string">        初始化方法</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">        :param name: 名字</span></div><div class="line"><span class="string">        :param hp: 生命值</span></div><div class="line"><span class="string">        """</span></div><div class="line">        self._name = name</div><div class="line">        self._hp = hp</div><div class="line"></div><div class="line"><span class="meta">    @property</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">name</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self._name</div><div class="line"></div><div class="line"><span class="meta">    @property</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">hp</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self._hp</div><div class="line"></div><div class="line"><span class="meta">    @hp.setter</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">hp</span><span class="params">(self, hp)</span>:</span></div><div class="line">        self._hp = hp <span class="keyword">if</span> hp &gt;= <span class="number">0</span> <span class="keyword">else</span> <span class="number">0</span></div><div class="line"></div><div class="line"><span class="meta">    @property</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">alive</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self._hp &gt; <span class="number">0</span></div><div class="line"></div><div class="line"><span class="meta">    @abstractmethod</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">attack</span><span class="params">(self, other)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line"><span class="string">        攻击</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">        :param other: 被攻击的对象</span></div><div class="line"><span class="string">        """</span></div><div class="line">        <span class="keyword">pass</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Ultraman</span><span class="params">(Fighter)</span>:</span></div><div class="line">    <span class="string">"""奥特曼"""</span></div><div class="line"></div><div class="line">    __slots__ = (<span class="string">'_name'</span>, <span class="string">'_hp'</span>, <span class="string">'_mp'</span>)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, hp, mp)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line"><span class="string">        初始化方法</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">        :param name: 名字</span></div><div class="line"><span class="string">        :param hp: 生命值</span></div><div class="line"><span class="string">        :param mp: 魔法值</span></div><div class="line"><span class="string">        """</span></div><div class="line">        super().__init__(name, hp)</div><div class="line">        self._mp = mp</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">attack</span><span class="params">(self, other)</span>:</span></div><div class="line">        other.hp -= randint(<span class="number">15</span>, <span class="number">25</span>)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">huge_attack</span><span class="params">(self, other)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line"><span class="string">        究极必杀技(打掉对方至少50点或四分之三的血)</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">        :param other: 被攻击的对象</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">        :return: 使用成功返回True否则返回False</span></div><div class="line"><span class="string">        """</span></div><div class="line">        <span class="keyword">if</span> self._mp &gt;= <span class="number">50</span>:</div><div class="line">            self._mp -= <span class="number">50</span></div><div class="line">            injury = other.hp * <span class="number">3</span> // <span class="number">4</span></div><div class="line">            injury = injury <span class="keyword">if</span> injury &gt;= <span class="number">50</span> <span class="keyword">else</span> <span class="number">50</span></div><div class="line">            other.hp -= injury</div><div class="line">            <span class="keyword">return</span> <span class="keyword">True</span></div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            self.attack(other)</div><div class="line">            <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">magic_attack</span><span class="params">(self, others)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line"><span class="string">        魔法攻击</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">        :param others: 被攻击的群体</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">        :return: 使用魔法成功返回True否则返回False</span></div><div class="line"><span class="string">        """</span></div><div class="line">        <span class="keyword">if</span> self._mp &gt;= <span class="number">20</span>:</div><div class="line">            self._mp -= <span class="number">20</span></div><div class="line">            <span class="keyword">for</span> temp <span class="keyword">in</span> others:</div><div class="line">                <span class="keyword">if</span> temp.alive:</div><div class="line">                    temp.hp -= randint(<span class="number">10</span>, <span class="number">15</span>)</div><div class="line">            <span class="keyword">return</span> <span class="keyword">True</span></div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">resume</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="string">"""恢复魔法值"""</span></div><div class="line">        incr_point = randint(<span class="number">1</span>, <span class="number">10</span>)</div><div class="line">        self._mp += incr_point</div><div class="line">        <span class="keyword">return</span> incr_point</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> <span class="string">'~~~%s奥特曼~~~\n'</span> % self._name + \</div><div class="line">            <span class="string">'生命值: %d\n'</span> % self._hp + \</div><div class="line">            <span class="string">'魔法值: %d\n'</span> % self._mp</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Monster</span><span class="params">(Fighter)</span>:</span></div><div class="line">    <span class="string">"""小怪兽"""</span></div><div class="line"></div><div class="line">    __slots__ = (<span class="string">'_name'</span>, <span class="string">'_hp'</span>)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">attack</span><span class="params">(self, other)</span>:</span></div><div class="line">        other.hp -= randint(<span class="number">10</span>, <span class="number">20</span>)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> <span class="string">'~~~%s小怪兽~~~\n'</span> % self._name + \</div><div class="line">            <span class="string">'生命值: %d\n'</span> % self._hp</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_any_alive</span><span class="params">(monsters)</span>:</span></div><div class="line">    <span class="string">"""判断有没有小怪兽是活着的"""</span></div><div class="line">    <span class="keyword">for</span> monster <span class="keyword">in</span> monsters:</div><div class="line">        <span class="keyword">if</span> monster.alive &gt; <span class="number">0</span>:</div><div class="line">            <span class="keyword">return</span> <span class="keyword">True</span></div><div class="line">    <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">select_alive_one</span><span class="params">(monsters)</span>:</span></div><div class="line">    <span class="string">"""选中一只活着的小怪兽"""</span></div><div class="line">    monsters_len = len(monsters)</div><div class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">        index = randrange(monsters_len)</div><div class="line">        monster = monsters[index]</div><div class="line">        <span class="keyword">if</span> monster.alive &gt; <span class="number">0</span>:</div><div class="line">            <span class="keyword">return</span> monster</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">display_info</span><span class="params">(ultraman, monsters)</span>:</span></div><div class="line">    <span class="string">"""显示奥特曼和小怪兽的信息"""</span></div><div class="line">    print(ultraman)</div><div class="line">    <span class="keyword">for</span> monster <span class="keyword">in</span> monsters:</div><div class="line">        print(monster, end=<span class="string">''</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    u = Ultraman(<span class="string">'骆昊'</span>, <span class="number">1000</span>, <span class="number">120</span>)</div><div class="line">    m1 = Monster(<span class="string">'舒小玲'</span>, <span class="number">250</span>)</div><div class="line">    m2 = Monster(<span class="string">'白元芳'</span>, <span class="number">500</span>)</div><div class="line">    m3 = Monster(<span class="string">'王大锤'</span>, <span class="number">750</span>)</div><div class="line">    ms = [m1, m2, m3]</div><div class="line">    fight_round = <span class="number">1</span></div><div class="line">    <span class="keyword">while</span> u.alive <span class="keyword">and</span> is_any_alive(ms):</div><div class="line">        print(<span class="string">'========第%02d回合========'</span> % fight_round)</div><div class="line">        m = select_alive_one(ms)  <span class="comment"># 选中一只小怪兽</span></div><div class="line">        skill = randint(<span class="number">1</span>, <span class="number">10</span>)   <span class="comment"># 通过随机数选择使用哪种技能</span></div><div class="line">        <span class="keyword">if</span> skill &lt;= <span class="number">6</span>:  <span class="comment"># 60%的概率使用普通攻击</span></div><div class="line">            print(<span class="string">'%s使用普通攻击打了%s.'</span> % (u.name, m.name))</div><div class="line">            u.attack(m)</div><div class="line">            print(<span class="string">'%s的魔法值恢复了%d点.'</span> % (u.name, u.resume()))</div><div class="line">        <span class="keyword">elif</span> skill &lt;= <span class="number">9</span>:  <span class="comment"># 30%的概率使用魔法攻击(可能因魔法值不足而失败)</span></div><div class="line">            <span class="keyword">if</span> u.magic_attack(ms):</div><div class="line">                print(<span class="string">'%s使用了魔法攻击.'</span> % u.name)</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                print(<span class="string">'%s使用魔法失败.'</span> % u.name)</div><div class="line">        <span class="keyword">else</span>:  <span class="comment"># 10%的概率使用究极必杀技(如果魔法值不足则使用普通攻击)</span></div><div class="line">            <span class="keyword">if</span> u.huge_attack(m):</div><div class="line">                print(<span class="string">'%s使用究极必杀技虐了%s.'</span> % (u.name, m.name))</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                print(<span class="string">'%s使用普通攻击打了%s.'</span> % (u.name, m.name))</div><div class="line">                print(<span class="string">'%s的魔法值恢复了%d点.'</span> % (u.name, u.resume()))</div><div class="line">        <span class="keyword">if</span> m.alive &gt; <span class="number">0</span>:  <span class="comment"># 如果选中的小怪兽没有死就回击奥特曼</span></div><div class="line">            print(<span class="string">'%s回击了%s.'</span> % (m.name, u.name))</div><div class="line">            m.attack(u)</div><div class="line">        display_info(u, ms)  <span class="comment"># 每个回合结束后显示奥特曼和小怪兽的信息</span></div><div class="line">        fight_round += <span class="number">1</span></div><div class="line">    print(<span class="string">'\n========战斗结束!========\n'</span>)</div><div class="line">    <span class="keyword">if</span> u.alive &gt; <span class="number">0</span>:</div><div class="line">        print(<span class="string">'%s奥特曼胜利!'</span> % u.name)</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        print(<span class="string">'小怪兽胜利!'</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h4 id="案例2：扑克游戏"><a href="#案例2：扑克游戏" class="headerlink" title="案例2：扑克游戏"></a>案例2：扑克游戏</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randrange</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Card</span><span class="params">(object)</span>:</span></div><div class="line">    <span class="string">"""一张牌"""</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, suite, face)</span>:</span></div><div class="line">        self._suite = suite</div><div class="line">        self._face = face</div><div class="line"></div><div class="line"><span class="meta">    @property</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">face</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self._face</div><div class="line"></div><div class="line"><span class="meta">    @property</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">suite</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self._suite</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></div><div class="line">        all_suites = (<span class="string">'♠'</span>, <span class="string">'♥'</span>, <span class="string">'♣'</span>, <span class="string">'♦'</span>)</div><div class="line">        <span class="keyword">if</span> self._face == <span class="number">1</span>:</div><div class="line">            face_str = <span class="string">'A'</span></div><div class="line">        <span class="keyword">elif</span> self._face == <span class="number">11</span>:</div><div class="line">            face_str = <span class="string">'J'</span></div><div class="line">        <span class="keyword">elif</span> self._face == <span class="number">12</span>:</div><div class="line">            face_str = <span class="string">'Q'</span></div><div class="line">        <span class="keyword">elif</span> self._face == <span class="number">13</span>:</div><div class="line">            face_str = <span class="string">'K'</span></div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            face_str = str(self._face)</div><div class="line">        <span class="keyword">return</span> <span class="string">'%s%s'</span> % (all_suites[self._suite], face_str)</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Poker</span><span class="params">(object)</span>:</span></div><div class="line">    <span class="string">"""一副牌"""</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></div><div class="line">        self._cards = []</div><div class="line">        self._current = <span class="number">0</span></div><div class="line">        <span class="keyword">for</span> suite <span class="keyword">in</span> range(<span class="number">4</span>):</div><div class="line">            <span class="keyword">for</span> face <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">14</span>):</div><div class="line">                card = Card(suite, face)</div><div class="line">                self._cards.append(card)</div><div class="line"></div><div class="line"><span class="meta">    @property</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">cards</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self._cards</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">shuffle</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="string">"""洗牌(随机乱序)"""</span></div><div class="line">        self._current = <span class="number">0</span></div><div class="line">        cards_len = len(self._cards)</div><div class="line">        <span class="keyword">for</span> index <span class="keyword">in</span> range(cards_len):</div><div class="line">            pos = randrange(cards_len)</div><div class="line">            self._cards[index], self._cards[pos] = \</div><div class="line">                self._cards[pos], self._cards[index]</div><div class="line"></div><div class="line"><span class="meta">    @property</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">next</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="string">"""发牌"""</span></div><div class="line">        card = self._cards[self._current]</div><div class="line">        self._current += <span class="number">1</span></div><div class="line">        <span class="keyword">return</span> card</div><div class="line"></div><div class="line"><span class="meta">    @property</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">has_next</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="string">"""还有没有牌"""</span></div><div class="line">        <span class="keyword">return</span> self._current &lt; len(self._cards)</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Player</span><span class="params">(object)</span>:</span></div><div class="line">    <span class="string">"""玩家"""</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name)</span>:</span></div><div class="line">        self._name = name</div><div class="line">        self._cards_on_hand = []</div><div class="line"></div><div class="line"><span class="meta">    @property</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">name</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self._name</div><div class="line"></div><div class="line"><span class="meta">    @property</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">cards_on_hand</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self._cards_on_hand</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, card)</span>:</span></div><div class="line">        <span class="string">"""摸牌"""</span></div><div class="line">        self._cards_on_hand.append(card)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">arrange</span><span class="params">(self, card_key)</span>:</span></div><div class="line">        <span class="string">"""玩家整理手上的牌"""</span></div><div class="line">        self._cards_on_hand.sort(key=card_key)</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 排序规则-先根据花色再根据点数排序</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_key</span><span class="params">(card)</span>:</span></div><div class="line">    <span class="keyword">return</span> (card.suite, card.face)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    p = Poker()</div><div class="line">    p.shuffle()</div><div class="line">    players = [Player(<span class="string">'东邪'</span>), Player(<span class="string">'西毒'</span>), Player(<span class="string">'南帝'</span>), Player(<span class="string">'北丐'</span>)]</div><div class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">13</span>):</div><div class="line">        <span class="keyword">for</span> player <span class="keyword">in</span> players:</div><div class="line">            player.get(p.next)</div><div class="line">    <span class="keyword">for</span> player <span class="keyword">in</span> players:</div><div class="line">        print(player.name + <span class="string">':'</span>, end=<span class="string">' '</span>)</div><div class="line">        player.arrange(get_key)</div><div class="line">        <span class="keyword">for</span> card <span class="keyword">in</span> player.cards_on_hand:</div><div class="line">            print(card, end=<span class="string">' '</span>)</div><div class="line">        print()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<blockquote>
<p><strong>说明</strong>：大家可以自己尝试在上面代码的基础上写一个简单的扑克游戏，例如21点(Black Jack)，游戏的规则可以自己在网上找一找。</p>
</blockquote>
<h4 id="案例3：工资结算系统"><a href="#案例3：工资结算系统" class="headerlink" title="案例3：工资结算系统"></a>案例3：工资结算系统</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">某公司有三种类型的员工 分别是部门经理、程序员和销售员</span></div><div class="line"><span class="string">需要设计一个工资结算系统 根据提供的员工信息来计算月薪</span></div><div class="line"><span class="string">部门经理的月薪是每月固定15000元</span></div><div class="line"><span class="string">程序员的月薪按本月工作时间计算 每小时150元</span></div><div class="line"><span class="string">销售员的月薪是1200元的底薪加上销售额5%的提成</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"><span class="keyword">from</span> abc <span class="keyword">import</span> ABCMeta, abstractmethod</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Employee</span><span class="params">(object, metaclass=ABCMeta)</span>:</span></div><div class="line">    <span class="string">"""员工"""</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line"><span class="string">        初始化方法</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">        :param name: 姓名</span></div><div class="line"><span class="string">        """</span></div><div class="line">        self._name = name</div><div class="line"></div><div class="line"><span class="meta">    @property</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">name</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self._name</div><div class="line"></div><div class="line"><span class="meta">    @abstractmethod</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_salary</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line"><span class="string">        获得月薪</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">        :return: 月薪</span></div><div class="line"><span class="string">        """</span></div><div class="line">        <span class="keyword">pass</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Manager</span><span class="params">(Employee)</span>:</span></div><div class="line">    <span class="string">"""部门经理"""</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_salary</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> <span class="number">15000.0</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Programmer</span><span class="params">(Employee)</span>:</span></div><div class="line">    <span class="string">"""程序员"""</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, working_hour=<span class="number">0</span>)</span>:</span></div><div class="line">        super().__init__(name)</div><div class="line">        self._working_hour = working_hour</div><div class="line"></div><div class="line"><span class="meta">    @property</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">working_hour</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self._working_hour</div><div class="line"></div><div class="line"><span class="meta">    @working_hour.setter</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">working_hour</span><span class="params">(self, working_hour)</span>:</span></div><div class="line">        self._working_hour = working_hour <span class="keyword">if</span> working_hour &gt; <span class="number">0</span> <span class="keyword">else</span> <span class="number">0</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_salary</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> <span class="number">150.0</span> * self._working_hour</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Salesman</span><span class="params">(Employee)</span>:</span></div><div class="line">    <span class="string">"""销售员"""</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, sales=<span class="number">0</span>)</span>:</span></div><div class="line">        super().__init__(name)</div><div class="line">        self._sales = sales</div><div class="line"></div><div class="line"><span class="meta">    @property</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sales</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self._sales</div><div class="line"></div><div class="line"><span class="meta">    @sales.setter</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sales</span><span class="params">(self, sales)</span>:</span></div><div class="line">        self._sales = sales <span class="keyword">if</span> sales &gt; <span class="number">0</span> <span class="keyword">else</span> <span class="number">0</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_salary</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> <span class="number">1200.0</span> + self._sales * <span class="number">0.05</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    emps = [</div><div class="line">        Manager(<span class="string">'刘备'</span>), Programmer(<span class="string">'诸葛亮'</span>),</div><div class="line">        Manager(<span class="string">'曹操'</span>), Salesman(<span class="string">'荀彧'</span>),</div><div class="line">        Salesman(<span class="string">'吕布'</span>), Programmer(<span class="string">'张辽'</span>),</div><div class="line">        Programmer(<span class="string">'赵云'</span>)</div><div class="line">    ]</div><div class="line">    <span class="keyword">for</span> emp <span class="keyword">in</span> emps:</div><div class="line">        <span class="keyword">if</span> isinstance(emp, Programmer):</div><div class="line">            emp.working_hour = int(input(<span class="string">'请输入%s本月工作时间: '</span> % emp.name))</div><div class="line">        <span class="keyword">elif</span> isinstance(emp, Salesman):</div><div class="line">            emp.sales = float(input(<span class="string">'请输入%s本月销售额: '</span> % emp.name))</div><div class="line">        <span class="comment"># 同样是接收get_salary这个消息但是不同的员工表现出了不同的行为(多态)</span></div><div class="line">        print(<span class="string">'%s本月工资为: ￥%s元'</span> %</div><div class="line">              (emp.name, emp.get_salary()))</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h2 id="图形用户界面和游戏开发"><a href="#图形用户界面和游戏开发" class="headerlink" title="图形用户界面和游戏开发"></a>图形用户界面和游戏开发</h2><h3 id="基于tkinter模块的GUI"><a href="#基于tkinter模块的GUI" class="headerlink" title="基于tkinter模块的GUI"></a>基于tkinter模块的GUI</h3><p>GUI是图形用户界面的缩写，图形化的用户界面对使用过计算机的人来说应该都不陌生，在此也无需进行赘述。Python默认的GUI开发模块是tkinter（在Python 3以前的版本中名为Tkinter），从这个名字就可以看出它是基于Tk的，Tk是一个工具包，最初是为Tcl设计的，后来被移植到很多其他的脚本语言中，它提供了跨平台的GUI控件。当然Tk并不是最新和最好的选择，也没有功能特别强大的GUI控件，事实上，开发GUI应用并不是Python最擅长的工作，如果真的需要使用Python开发GUI应用，wxPython、PyQt、PyGTK等模块都是不错的选择。</p>
<p>基本上使用tkinter来开发GUI应用需要以下5个步骤：</p>
<ol>
<li>导入tkinter模块中我们需要的东西。</li>
<li>创建一个顶层窗口对象并用它来承载整个GUI应用。</li>
<li>在顶层窗口对象上添加GUI组件。</li>
<li>通过代码将这些GUI组件的功能组织起来。</li>
<li>进入主事件循环(main loop)。</li>
</ol>
<p>下面的代码演示了如何使用tkinter做一个简单的GUI应用。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> tkinter</div><div class="line"><span class="keyword">import</span> tkinter.messagebox</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    flag = <span class="keyword">True</span></div><div class="line"></div><div class="line">    <span class="comment"># 修改标签上的文字</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">change_label_text</span><span class="params">()</span>:</span></div><div class="line">        <span class="keyword">nonlocal</span> flag</div><div class="line">        flag = <span class="keyword">not</span> flag</div><div class="line">        color, msg = (<span class="string">'red'</span>, <span class="string">'Hello, world!'</span>)\</div><div class="line">            <span class="keyword">if</span> flag <span class="keyword">else</span> (<span class="string">'blue'</span>, <span class="string">'Goodbye, world!'</span>)</div><div class="line">        label.config(text=msg, fg=color)</div><div class="line"></div><div class="line">    <span class="comment"># 确认退出</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">confirm_to_quit</span><span class="params">()</span>:</span></div><div class="line">        <span class="keyword">if</span> tkinter.messagebox.askokcancel(<span class="string">'温馨提示'</span>, <span class="string">'确定要退出吗?'</span>):</div><div class="line">            top.quit()</div><div class="line"></div><div class="line">    <span class="comment"># 创建顶层窗口</span></div><div class="line">    top = tkinter.Tk()</div><div class="line">    <span class="comment"># 设置窗口大小</span></div><div class="line">    top.geometry(<span class="string">'240x160'</span>)</div><div class="line">    <span class="comment"># 设置窗口标题</span></div><div class="line">    top.title(<span class="string">'小游戏'</span>)</div><div class="line">    <span class="comment"># 创建标签对象并添加到顶层窗口</span></div><div class="line">    label = tkinter.Label(top, text=<span class="string">'Hello, world!'</span>, font=<span class="string">'Arial -32'</span>, fg=<span class="string">'red'</span>)</div><div class="line">    label.pack(expand=<span class="number">1</span>)</div><div class="line">    <span class="comment"># 创建一个装按钮的容器</span></div><div class="line">    panel = tkinter.Frame(top)</div><div class="line">    <span class="comment"># 创建按钮对象 指定添加到哪个容器中 通过command参数绑定事件回调函数</span></div><div class="line">    button1 = tkinter.Button(panel, text=<span class="string">'修改'</span>, command=change_label_text)</div><div class="line">    button1.pack(side=<span class="string">'left'</span>)</div><div class="line">    button2 = tkinter.Button(panel, text=<span class="string">'退出'</span>, command=confirm_to_quit)</div><div class="line">    button2.pack(side=<span class="string">'right'</span>)</div><div class="line">    panel.pack(side=<span class="string">'bottom'</span>)</div><div class="line">    <span class="comment"># 开启主事件循环</span></div><div class="line">    tkinter.mainloop()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>需要说明的是，GUI应用通常是事件驱动式的，之所以要进入主事件循环就是要监听鼠标、键盘等各种事件的发生并执行对应的代码对事件进行处理，因为事件会持续的发生，所以需要这样的一个循环一直运行着等待下一个事件的发生。另一方面，Tk为控件的摆放提供了三种布局管理器，通过布局管理器可以对控件进行定位，这三种布局管理器分别是：Placer（开发者提供控件的大小和摆放位置）、Packer（自动将控件填充到合适的位置）和Grid（基于网格坐标来摆放控件），此处不进行赘述。</p>
<h3 id="使用Pygame进行游戏开发"><a href="#使用Pygame进行游戏开发" class="headerlink" title="使用Pygame进行游戏开发"></a>使用Pygame进行游戏开发</h3><p>Pygame是一个开源的Python模块，专门用于多媒体应用（如电子游戏）的开发，其中包含对图像、声音、视频、事件、碰撞等的支持。Pygame建立在<a href="https://zh.wikipedia.org/wiki/SDL" target="_blank" rel="external">SDL</a>的基础上，SDL是一套跨平台的多媒体开发库，用C语言实现，被广泛的应用于游戏、模拟器、播放器等的开发。而Pygame让游戏开发者不再被底层语言束缚，可以更多的关注游戏的功能和逻辑。</p>
<p>下面我们来完成一个简单的小游戏，游戏的名字叫“大球吃小球”，当然完成这个游戏并不是重点，学会使用Pygame也不是重点，最重要的我们要在这个过程中体会如何使用前面讲解的面向对象程序设计，学会用这种编程思想去解决现实中的问题。</p>
<h4 id="制作游戏窗口"><a href="#制作游戏窗口" class="headerlink" title="制作游戏窗口"></a>制作游戏窗口</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> pygame</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    <span class="comment"># 初始化导入的pygame中的模块</span></div><div class="line">    pygame.init()</div><div class="line">    <span class="comment"># 初始化用于显示的窗口并设置窗口尺寸</span></div><div class="line">    screen = pygame.display.set_mode((<span class="number">800</span>, <span class="number">600</span>))</div><div class="line">    <span class="comment"># 设置当前窗口的标题</span></div><div class="line">    pygame.display.set_caption(<span class="string">'大球吃小球'</span>)</div><div class="line">    running = <span class="keyword">True</span></div><div class="line">    <span class="comment"># 开启一个事件循环处理发生的事件</span></div><div class="line">    <span class="keyword">while</span> running:</div><div class="line">        <span class="comment"># 从消息队列中获取事件并对事件进行处理</span></div><div class="line">        <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get():</div><div class="line">            <span class="keyword">if</span> event.type == pygame.QUIT:</div><div class="line">                running = <span class="keyword">False</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h4 id="在窗口中绘图"><a href="#在窗口中绘图" class="headerlink" title="在窗口中绘图"></a>在窗口中绘图</h4><p>可以通过pygame中draw模块的函数在窗口上绘图，可以绘制的图形包括：线条、矩形、多边形、圆、椭圆、圆弧等。需要说明的是，屏幕坐标系是将屏幕左上角设置为坐标原点<code>(0, 0)</code>，向右是x轴的正向，向下是y轴的正向，在表示位置或者设置尺寸的时候，我们默认的单位都是<a href="https://zh.wikipedia.org/wiki/%E5%83%8F%E7%B4%A0" target="_blank" rel="external">像素</a>。所谓像素就是屏幕上的一个点，你可以用浏览图片的软件试着将一张图片放大若干倍，就可以看到这些点。pygame中表示颜色用的是色光<a href="https://zh.wikipedia.org/wiki/%E5%8E%9F%E8%89%B2" target="_blank" rel="external">三原色</a>表示法，即通过一个元组或列表来指定颜色的RGB值，每个值都在0~255之间，因为是每种原色都用一个8位（bit）的值来表示，三种颜色相当于一共由24位构成，这也就是常说的“24位颜色表示法”。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> pygame</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    <span class="comment"># 初始化导入的pygame中的模块</span></div><div class="line">    pygame.init()</div><div class="line">    <span class="comment"># 初始化用于显示的窗口并设置窗口尺寸</span></div><div class="line">    screen = pygame.display.set_mode((<span class="number">800</span>, <span class="number">600</span>))</div><div class="line">    <span class="comment"># 设置当前窗口的标题</span></div><div class="line">    pygame.display.set_caption(<span class="string">'大球吃小球'</span>)</div><div class="line">    <span class="comment"># 设置窗口的背景色(颜色是由红绿蓝三原色构成的元组)</span></div><div class="line">    screen.fill((<span class="number">242</span>, <span class="number">242</span>, <span class="number">242</span>))</div><div class="line">    <span class="comment"># 绘制一个圆(参数分别是: 屏幕, 颜色, 圆心位置, 半径, 0表示填充圆)</span></div><div class="line">    pygame.draw.circle(screen, (<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>,), (<span class="number">100</span>, <span class="number">100</span>), <span class="number">30</span>, <span class="number">0</span>)</div><div class="line">    <span class="comment"># 刷新当前窗口(渲染窗口将绘制的图像呈现出来)</span></div><div class="line">    pygame.display.flip()</div><div class="line">    running = <span class="keyword">True</span></div><div class="line">    <span class="comment"># 开启一个事件循环处理发生的事件</span></div><div class="line">    <span class="keyword">while</span> running:</div><div class="line">        <span class="comment"># 从消息队列中获取事件并对事件进行处理</span></div><div class="line">        <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get():</div><div class="line">            <span class="keyword">if</span> event.type == pygame.QUIT:</div><div class="line">                running = <span class="keyword">False</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h4 id="加载图像"><a href="#加载图像" class="headerlink" title="加载图像"></a>加载图像</h4><p>如果需要直接加载图像到窗口上，可以使用pygame中image模块的函数来加载图像，再通过之前获得的窗口对象的<code>blit</code>方法渲染图像，代码如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> pygame</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    <span class="comment"># 初始化导入的pygame中的模块</span></div><div class="line">    pygame.init()</div><div class="line">    <span class="comment"># 初始化用于显示的窗口并设置窗口尺寸</span></div><div class="line">    screen = pygame.display.set_mode((<span class="number">800</span>, <span class="number">600</span>))</div><div class="line">    <span class="comment"># 设置当前窗口的标题</span></div><div class="line">    pygame.display.set_caption(<span class="string">'大球吃小球'</span>)</div><div class="line">    <span class="comment"># 设置窗口的背景色(颜色是由红绿蓝三原色构成的元组)</span></div><div class="line">    screen.fill((<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>))</div><div class="line">    <span class="comment"># 通过指定的文件名加载图像</span></div><div class="line">    ball_image = pygame.image.load(<span class="string">'./res/ball.png'</span>)</div><div class="line">    <span class="comment"># 在窗口上渲染图像</span></div><div class="line">    screen.blit(ball_image, (<span class="number">50</span>, <span class="number">50</span>))</div><div class="line">    <span class="comment"># 刷新当前窗口(渲染窗口将绘制的图像呈现出来)</span></div><div class="line">    pygame.display.flip()</div><div class="line">    running = <span class="keyword">True</span></div><div class="line">    <span class="comment"># 开启一个事件循环处理发生的事件</span></div><div class="line">    <span class="keyword">while</span> running:</div><div class="line">        <span class="comment"># 从消息队列中获取事件并对事件进行处理</span></div><div class="line">        <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get():</div><div class="line">            <span class="keyword">if</span> event.type == pygame.QUIT:</div><div class="line">                running = <span class="keyword">False</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h4 id="实现动画效果"><a href="#实现动画效果" class="headerlink" title="实现动画效果"></a>实现动画效果</h4><p>说到<a href="https://zh.wikipedia.org/wiki/%E5%8A%A8%E7%94%BB" target="_blank" rel="external">动画</a>这个词大家都不会陌生，事实上要实现动画效果，本身的原理也非常简单，就是将不连续的图片连续的播放，只要每秒钟达到了一定的帧数，那么就可以做出比较流畅的动画效果。如果要让上面代码中的小球动起来，可以将小球的位置用变量来表示，并在循环中修改小球的位置再刷新整个窗口即可。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> pygame</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    <span class="comment"># 初始化导入的pygame中的模块</span></div><div class="line">    pygame.init()</div><div class="line">    <span class="comment"># 初始化用于显示的窗口并设置窗口尺寸</span></div><div class="line">    screen = pygame.display.set_mode((<span class="number">800</span>, <span class="number">600</span>))</div><div class="line">    <span class="comment"># 设置当前窗口的标题</span></div><div class="line">    pygame.display.set_caption(<span class="string">'大球吃小球'</span>)</div><div class="line">    <span class="comment"># 定义变量来表示小球在屏幕上的位置</span></div><div class="line">    x, y = <span class="number">50</span>, <span class="number">50</span></div><div class="line">    running = <span class="keyword">True</span></div><div class="line">    <span class="comment"># 开启一个事件循环处理发生的事件</span></div><div class="line">    <span class="keyword">while</span> running:</div><div class="line">        <span class="comment"># 从消息队列中获取事件并对事件进行处理</span></div><div class="line">        <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get():</div><div class="line">            <span class="keyword">if</span> event.type == pygame.QUIT:</div><div class="line">                running = <span class="keyword">False</span></div><div class="line">        screen.fill((<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>))</div><div class="line">        pygame.draw.circle(screen, (<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>,), (x, y), <span class="number">30</span>, <span class="number">0</span>)</div><div class="line">        pygame.display.flip()</div><div class="line">        <span class="comment"># 每隔50毫秒就改变小球的位置再刷新窗口</span></div><div class="line">        pygame.time.delay(<span class="number">50</span>)</div><div class="line">        x, y = x + <span class="number">5</span>, y + <span class="number">5</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h4 id="碰撞检测"><a href="#碰撞检测" class="headerlink" title="碰撞检测"></a>碰撞检测</h4><p>通常一个游戏中会有很多对象出现，而这些对象之间的“碰撞”在所难免，比如炮弹击中了飞机、箱子撞到了地面等。碰撞检测在绝大多数的游戏中都是一个必须得处理的至关重要的问题，pygame的sprite（动画精灵）模块就提供了对碰撞检测的支持，这里我们暂时不介绍sprite模块提供的功能，因为要检测两个小球有没有碰撞其实非常简单，只需要检查球心的距离有没有小于两个球的半径之和。为了制造出更多的小球，我们可以通过对鼠标事件的处理，在点击鼠标的位置创建颜色、大小和移动速度都随机的小球，当然要做到这一点，我们可以把之前学习到的面向对象的知识应用起来。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> enum <span class="keyword">import</span> Enum, unique</div><div class="line"><span class="keyword">from</span> math <span class="keyword">import</span> sqrt</div><div class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</div><div class="line"></div><div class="line"><span class="keyword">import</span> pygame</div><div class="line"></div><div class="line"></div><div class="line"><span class="meta">@unique</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Color</span><span class="params">(Enum)</span>:</span></div><div class="line">    <span class="string">"""颜色"""</span></div><div class="line"></div><div class="line">    RED = (<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>)</div><div class="line">    GREEN = (<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>)</div><div class="line">    BLUE = (<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>)</div><div class="line">    BLACK = (<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>)</div><div class="line">    WHITE = (<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>)</div><div class="line">    GRAY = (<span class="number">242</span>, <span class="number">242</span>, <span class="number">242</span>)</div><div class="line"></div><div class="line"><span class="meta">    @staticmethod</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">random_color</span><span class="params">()</span>:</span></div><div class="line">        <span class="string">"""获得随机颜色"""</span></div><div class="line">        r = randint(<span class="number">0</span>, <span class="number">255</span>)</div><div class="line">        g = randint(<span class="number">0</span>, <span class="number">255</span>)</div><div class="line">        b = randint(<span class="number">0</span>, <span class="number">255</span>)</div><div class="line">        <span class="keyword">return</span> (r, g, b)</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Ball</span><span class="params">(object)</span>:</span></div><div class="line">    <span class="string">"""球"""</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, x, y, radius, sx, sy, color=Color.RED)</span>:</span></div><div class="line">        <span class="string">"""初始化方法"""</span></div><div class="line">        self.x = x</div><div class="line">        self.y = y</div><div class="line">        self.radius = radius</div><div class="line">        self.sx = sx</div><div class="line">        self.sy = sy</div><div class="line">        self.color = color</div><div class="line">        self.alive = <span class="keyword">True</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">move</span><span class="params">(self, screen)</span>:</span></div><div class="line">        <span class="string">"""移动"""</span></div><div class="line">        self.x += self.sx</div><div class="line">        self.y += self.sy</div><div class="line">        <span class="keyword">if</span> self.x - self.radius &lt;= <span class="number">0</span> <span class="keyword">or</span> \</div><div class="line">                self.x + self.radius &gt;= screen.get_width():</div><div class="line">            self.sx = -self.sx</div><div class="line">        <span class="keyword">if</span> self.y - self.radius &lt;= <span class="number">0</span> <span class="keyword">or</span> \</div><div class="line">                self.y + self.radius &gt;= screen.get_height():</div><div class="line">            self.sy = -self.sy</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">eat</span><span class="params">(self, other)</span>:</span></div><div class="line">        <span class="string">"""吃其他球"""</span></div><div class="line">        <span class="keyword">if</span> self.alive <span class="keyword">and</span> other.alive <span class="keyword">and</span> self != other:</div><div class="line">            dx, dy = self.x - other.x, self.y - other.y</div><div class="line">            distance = sqrt(dx ** <span class="number">2</span> + dy ** <span class="number">2</span>)</div><div class="line">            <span class="keyword">if</span> distance &lt; self.radius + other.radius \</div><div class="line">                    <span class="keyword">and</span> self.radius &gt; other.radius:</div><div class="line">                other.alive = <span class="keyword">False</span></div><div class="line">               a self.radius = self.radius + int(other.radius * <span class="number">0.146</span>)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">draw</span><span class="params">(self, screen)</span>:</span></div><div class="line">        <span class="string">"""在窗口上绘制球"""</span></div><div class="line">        pygame.draw.circle(screen, self.color,</div><div class="line">                           (self.x, self.y), self.radius, <span class="number">0</span>)</div></pre></td></tr></table></figure>
<h4 id="事件处理"><a href="#事件处理" class="headerlink" title="事件处理"></a>事件处理</h4><p>可以在事件循环中对鼠标事件进行处理，通过事件对象的<code>type</code>属性可以判定事件类型，再通过<code>pos</code>属性就可以获得鼠标点击的位置。如果要处理键盘事件也是在这个地方，做法与处理鼠标事件类似。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    <span class="comment"># 定义用来装所有球的容器</span></div><div class="line">    balls = []</div><div class="line">    <span class="comment"># 初始化导入的pygame中的模块</span></div><div class="line">    pygame.init()</div><div class="line">    <span class="comment"># 初始化用于显示的窗口并设置窗口尺寸</span></div><div class="line">    screen = pygame.display.set_mode((<span class="number">800</span>, <span class="number">600</span>))</div><div class="line">    <span class="comment"># 设置当前窗口的标题</span></div><div class="line">    pygame.display.set_caption(<span class="string">'大球吃小球'</span>)</div><div class="line">    running = <span class="keyword">True</span></div><div class="line">    <span class="comment"># 开启一个事件循环处理发生的事件</span></div><div class="line">    <span class="keyword">while</span> running:</div><div class="line">        <span class="comment"># 从消息队列中获取事件并对事件进行处理</span></div><div class="line">        <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get():</div><div class="line">            <span class="keyword">if</span> event.type == pygame.QUIT:</div><div class="line">                running = <span class="keyword">False</span></div><div class="line">            <span class="comment"># 处理鼠标事件的代码</span></div><div class="line">            <span class="keyword">if</span> event.type == pygame.MOUSEBUTTONDOWN <span class="keyword">and</span> event.button == <span class="number">1</span>:</div><div class="line">                <span class="comment"># 获得点击鼠标的位置</span></div><div class="line">                x, y = event.pos</div><div class="line">                radius = randint(<span class="number">10</span>, <span class="number">100</span>)</div><div class="line">                sx, sy = randint(<span class="number">-10</span>, <span class="number">10</span>), randint(<span class="number">-10</span>, <span class="number">10</span>)</div><div class="line">                color = Color.random_color()</div><div class="line">                <span class="comment"># 在点击鼠标的位置创建一个球(大小、速度和颜色随机)</span></div><div class="line">                ball = Ball(x, y, radius, sx, sy, color)</div><div class="line">                <span class="comment"># 将球添加到列表容器中</span></div><div class="line">                balls.append(ball)</div><div class="line">        screen.fill((<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>))</div><div class="line">        <span class="comment"># 取出容器中的球 如果没被吃掉就绘制 被吃掉了就移除</span></div><div class="line">        <span class="keyword">for</span> ball <span class="keyword">in</span> balls:</div><div class="line">            <span class="keyword">if</span> ball.alive:</div><div class="line">                ball.draw(screen)</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                balls.remove(ball)</div><div class="line">        pygame.display.flip()</div><div class="line">        <span class="comment"># 每隔50毫秒就改变球的位置再刷新窗口</span></div><div class="line">        pygame.time.delay(<span class="number">50</span>)</div><div class="line">        <span class="keyword">for</span> ball <span class="keyword">in</span> balls:</div><div class="line">            ball.move(screen)</div><div class="line">            <span class="comment"># 检查球有没有吃到其他的球</span></div><div class="line">            <span class="keyword">for</span> other <span class="keyword">in</span> balls:</div><div class="line">                ball.eat(other)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>上面的两段代码合在一起，我们就完成了“大球吃小球”的游戏（如下图所示），准确的说它算不上一个游戏，但是做一个小游戏的基本知识我们已经通过这个例子告诉大家了，有了这些知识已经可以开始你的小游戏开发之旅了。其实上面的代码中还有很多值得改进的地方，比如刷新窗口以及让球移动起来的代码并不应该放在事件循环中，等学习了多线程的知识后，用一个后台线程来处理这些事可能是更好的选择。如果希望获得更好的用户体验，我们还可以在游戏中加入背景音乐以及在球与球发生碰撞时播放音效，利用pygame的mixer和music模块，我们可以很容易的做到这一点，大家可以自行了解这方面的知识。事实上，想了解更多的关于pygame的知识，最好的教程是<a href="https://www.pygame.org/news" target="_blank" rel="external">pygame的官方网站</a>，如果英语没毛病就可以赶紧去看看啦。 如果想开发<a href="https://zh.wikipedia.org/wiki/3D%E6%B8%B8%E6%88%8F" target="_blank" rel="external">3D游戏</a>，pygame就显得力不从心了，对3D游戏开发如果有兴趣的读者不妨看看<a href="https://www.panda3d.org/" target="_blank" rel="external">Panda3D</a>。</p>
<h2 id="文件和异常"><a href="#文件和异常" class="headerlink" title="文件和异常"></a>文件和异常</h2><p>在实际开发中，常常需要对程序中的数据进行<a href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96" target="_blank" rel="external">持久化</a>操作，而实现数据持久化最直接简单的方式就是将数据保存到文件中。说到“文件”这个词，可能需要先科普一下关于<a href="https://zh.wikipedia.org/wiki/%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F" target="_blank" rel="external">文件系统</a>的知识，对于这个概念，维基百科上给出了很好的诠释，这里不再浪费笔墨。</p>
<p>在Python中实现文件的读写操作其实非常简单，通过Python内置的<code>open</code>函数，我们可以指定文件名、操作模式、编码信息等来获得操作文件的对象，接下来就可以对文件进行读写操作了。这里所说的操作模式是指要打开什么样的文件（字符文件还是二进制文件）以及做什么样的操作（读、写还是追加），具体的如下表所示。</p>
<table>
<thead>
<tr>
<th>操作模式</th>
<th>具体含义</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&#39;r&#39;</code></td>
<td>读取 （默认）</td>
</tr>
<tr>
<td><code>&#39;w&#39;</code></td>
<td>写入（会先截断之前的内容）</td>
</tr>
<tr>
<td><code>&#39;x&#39;</code></td>
<td>写入，如果文件已经存在会产生异常</td>
</tr>
<tr>
<td><code>&#39;a&#39;</code></td>
<td>追加，将内容写入到已有文件的末尾</td>
</tr>
<tr>
<td><code>&#39;b&#39;</code></td>
<td>二进制模式</td>
</tr>
<tr>
<td><code>&#39;t&#39;</code></td>
<td>文本模式（默认）</td>
</tr>
<tr>
<td><code>&#39;+&#39;</code></td>
<td>更新（既可以读又可以写）</td>
</tr>
</tbody>
</table>
<h3 id="读写文本文件"><a href="#读写文本文件" class="headerlink" title="读写文本文件"></a>读写文本文件</h3><p>读取文本文件时，需要在使用<code>open</code>函数时指定好带路径的文件名（可以使用相对路径或绝对路径）并将文件模式设置为<code>&#39;r&#39;</code>（如果不指定，默认值也是<code>&#39;r&#39;</code>），然后通过<code>encoding</code>参数指定编码（如果不指定，默认值是None，那么在读取文件时使用的是操作系统默认的编码），如果不能保证保存文件时使用的编码方式与encoding参数指定的编码方式是一致的，那么就可能因无法解码字符而导致读取失败。下面的例子演示了如何读取一个纯文本文件。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    f = open(<span class="string">'致橡树.txt'</span>, <span class="string">'r'</span>, encoding=<span class="string">'utf-8'</span>)</div><div class="line">    print(f.read())</div><div class="line">    f.close()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>请注意上面的代码，如果<code>open</code>函数指定的文件并不存在或者无法打开，那么将引发异常状况导致程序崩溃。为了让代码有一定的健壮性和容错性，我们可以使用Python的异常机制对可能在运行时发生状况的代码进行适当的处理，如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    f = <span class="keyword">None</span></div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        f = open(<span class="string">'致橡树.txt'</span>, <span class="string">'r'</span>, encoding=<span class="string">'utf-8'</span>)</div><div class="line">        print(f.read())</div><div class="line">    <span class="keyword">except</span> FileNotFoundError:</div><div class="line">        print(<span class="string">'无法打开指定的文件!'</span>)</div><div class="line">    <span class="keyword">except</span> LookupError:</div><div class="line">        print(<span class="string">'指定了未知的编码!'</span>)</div><div class="line">    <span class="keyword">except</span> UnicodeDecodeError:</div><div class="line">        print(<span class="string">'读取文件时解码错误!'</span>)</div><div class="line">    <span class="keyword">finally</span>:</div><div class="line">        <span class="keyword">if</span> f:</div><div class="line">            f.close()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>在Python中，我们可以将那些在运行时可能会出现状况的代码放在<code>try</code>代码块中，在<code>try</code>代码块的后面可以跟上一个或多个<code>except</code>来捕获可能出现的异常状况。例如在上面读取文件的过程中，文件找不到会引发<code>FileNotFoundError</code>，指定了未知的编码会引发<code>LookupError</code>，而如果读取文件时无法按指定方式解码会引发<code>UnicodeDecodeError</code>，我们在<code>try</code>后面跟上了三个<code>except</code>分别处理这三种不同的异常状况。最后我们使用<code>finally</code>代码块来关闭打开的文件，释放掉程序中获取的外部资源，由于<code>finally</code>块的代码不论程序正常还是异常都会执行到（甚至是调用了<code>sys</code>模块的<code>exit</code>函数退出Python环境，<code>finally</code>块都会被执行，因为<code>exit</code>函数实质上是引发了<code>SystemExit</code>异常），因此我们通常把<code>finally</code>块称为“总是执行代码块”，它最适合用来做释放外部资源的操作。如果不愿意在<code>finally</code>代码块中关闭文件对象释放资源，也可以使用上下文语法，通过<code>with</code>关键字指定文件对象的上下文环境并在离开上下文环境时自动释放文件资源，代码如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        <span class="keyword">with</span> open(<span class="string">'致橡树.txt'</span>, <span class="string">'r'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</div><div class="line">            print(f.read())</div><div class="line">    <span class="keyword">except</span> FileNotFoundError:</div><div class="line">        print(<span class="string">'无法打开指定的文件!'</span>)</div><div class="line">    <span class="keyword">except</span> LookupError:</div><div class="line">        print(<span class="string">'指定了未知的编码!'</span>)</div><div class="line">    <span class="keyword">except</span> UnicodeDecodeError:</div><div class="line">        print(<span class="string">'读取文件时解码错误!'</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>除了使用文件对象的<code>read</code>方法读取文件之外，还可以使用<code>for-in</code>循环逐行读取或者用<code>readlines</code>方法将文件按行读取到一个列表容器中，代码如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> time</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    <span class="comment"># 一次性读取整个文件内容</span></div><div class="line">    <span class="keyword">with</span> open(<span class="string">'致橡树.txt'</span>, <span class="string">'r'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</div><div class="line">        print(f.read())</div><div class="line"></div><div class="line">    <span class="comment"># 通过for-in循环逐行读取</span></div><div class="line">    <span class="keyword">with</span> open(<span class="string">'致橡树.txt'</span>, mode=<span class="string">'r'</span>) <span class="keyword">as</span> f:</div><div class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> f:</div><div class="line">            print(line, end=<span class="string">''</span>)</div><div class="line">            time.sleep(<span class="number">0.5</span>)</div><div class="line">    print()</div><div class="line"></div><div class="line">    <span class="comment"># 读取文件按行读取到列表中</span></div><div class="line">    <span class="keyword">with</span> open(<span class="string">'致橡树.txt'</span>) <span class="keyword">as</span> f:</div><div class="line">        lines = f.readlines()</div><div class="line">    print(lines)</div><div class="line">    </div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>要将文本信息写入文件文件也非常简单，在使用<code>open</code>函数时指定好文件名并将文件模式设置为<code>&#39;w&#39;</code>即可。注意如果需要对文件内容进行追加式写入，应该将模式设置为<code>&#39;a&#39;</code>。如果要写入的文件不存在会自动创建文件而不是引发异常。下面的例子演示了如何将1~9999直接的素数分别写入三个文件中（1~99之间的素数保存在a.txt中，100~999之间的素数保存在b.txt中，1000~9999之间的素数保存在c.txt中）。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> math <span class="keyword">import</span> sqrt</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_prime</span><span class="params">(n)</span>:</span></div><div class="line">    <span class="string">"""判断素数的函数"""</span></div><div class="line">    <span class="keyword">assert</span> n &gt; <span class="number">0</span></div><div class="line">    <span class="keyword">for</span> factor <span class="keyword">in</span> range(<span class="number">2</span>, int(sqrt(n)) + <span class="number">1</span>):</div><div class="line">        <span class="keyword">if</span> n % factor == <span class="number">0</span>:</div><div class="line">            <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line">    <span class="keyword">return</span> <span class="keyword">True</span> <span class="keyword">if</span> n != <span class="number">1</span> <span class="keyword">else</span> <span class="keyword">False</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    filenames = (<span class="string">'a.txt'</span>, <span class="string">'b.txt'</span>, <span class="string">'c.txt'</span>)</div><div class="line">    fs_list = []</div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        <span class="keyword">for</span> filename <span class="keyword">in</span> filenames:</div><div class="line">            fs_list.append(open(filename, <span class="string">'w'</span>, encoding=<span class="string">'utf-8'</span>))</div><div class="line">        <span class="keyword">for</span> number <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">10000</span>):</div><div class="line">            <span class="keyword">if</span> is_prime(number):</div><div class="line">                <span class="keyword">if</span> number &lt; <span class="number">100</span>:</div><div class="line">                    fs_list[<span class="number">0</span>].write(str(number) + <span class="string">'\n'</span>)</div><div class="line">                <span class="keyword">elif</span> number &lt; <span class="number">1000</span>:</div><div class="line">                    fs_list[<span class="number">1</span>].write(str(number) + <span class="string">'\n'</span>)</div><div class="line">                <span class="keyword">else</span>:</div><div class="line">                    fs_list[<span class="number">2</span>].write(str(number) + <span class="string">'\n'</span>)</div><div class="line">    <span class="keyword">except</span> IOError <span class="keyword">as</span> ex:</div><div class="line">        print(ex)</div><div class="line">        print(<span class="string">'写文件时发生错误!'</span>)</div><div class="line">    <span class="keyword">finally</span>:</div><div class="line">        <span class="keyword">for</span> fs <span class="keyword">in</span> fs_list:</div><div class="line">            fs.close()</div><div class="line">    print(<span class="string">'操作完成!'</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h3 id="读写二进制文件"><a href="#读写二进制文件" class="headerlink" title="读写二进制文件"></a>读写二进制文件</h3><p>知道了如何读写文本文件要读写二进制文件也就很简单了，下面的代码实现了复制图片文件的功能。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        <span class="keyword">with</span> open(<span class="string">'guido.jpg'</span>, <span class="string">'rb'</span>) <span class="keyword">as</span> fs1:</div><div class="line">            data = fs1.read()</div><div class="line">            print(type(data))  <span class="comment"># &lt;class 'bytes'&gt;</span></div><div class="line">        <span class="keyword">with</span> open(<span class="string">'吉多.jpg'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> fs2:</div><div class="line">            fs2.write(data)</div><div class="line">    <span class="keyword">except</span> FileNotFoundError <span class="keyword">as</span> e:</div><div class="line">        print(<span class="string">'指定的文件无法打开.'</span>)</div><div class="line">    <span class="keyword">except</span> IOError <span class="keyword">as</span> e:</div><div class="line">        print(<span class="string">'读写文件时出现错误.'</span>)</div><div class="line">    print(<span class="string">'程序执行结束.'</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h3 id="读写JSON文件"><a href="#读写JSON文件" class="headerlink" title="读写JSON文件"></a>读写JSON文件</h3><p>通过上面的讲解，我们已经知道如何将文本数据和二进制数据保存到文件中，那么这里还有一个问题，如果希望把一个列表或者一个字典中的数据保存到文件中又该怎么做呢？答案是将数据以JSON格式进行保存。JSON是“JavaScript Object Notation”的缩写，它本来是JavaScript语言中创建对象的一种字面量语法，现在已经被广泛的应用于跨平台跨语言的数据交换，原因很简单，因为JSON也是纯文本，任何系统任何编程语言处理纯文本都是没有问题的。目前JSON基本上已经取代了XML作为异构系统间交换数据的事实标准。关于JSON的知识，更多的可以参考<a href="http://json.org" target="_blank" rel="external">JSON的官方网站</a>，从这个网站也可以了解到每种语言处理JSON数据格式可以使用的工具或三方库，下面是一个JSON的简单例子。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    'name': '骆昊',</div><div class="line">    'age': 38,</div><div class="line">    'qq': 957658,</div><div class="line">    'friends': ['王大锤', '白元芳'],</div><div class="line">    'cars': [</div><div class="line">        &#123;'brand': 'BYD', 'max_speed': 180&#125;,</div><div class="line">        &#123;'brand': 'Audi', 'max_speed': 280&#125;,</div><div class="line">        &#123;'brand': 'Benz', 'max_speed': 320&#125;</div><div class="line">    ]</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>可能大家已经注意到了，上面的JSON跟Python中的字典其实是一样一样的，事实上JSON的数据类型和Python的数据类型是很容易找到对应关系的，如下面两张表所示。</p>
<table>
<thead>
<tr>
<th>JSON</th>
<th>Python</th>
</tr>
</thead>
<tbody>
<tr>
<td>object</td>
<td>dict</td>
</tr>
<tr>
<td>array</td>
<td>list</td>
</tr>
<tr>
<td>string</td>
<td>str</td>
</tr>
<tr>
<td>number (int / real)</td>
<td>int / float</td>
</tr>
<tr>
<td>true / false</td>
<td>True / False</td>
</tr>
<tr>
<td>null</td>
<td>None</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>Python</th>
<th>JSON</th>
</tr>
</thead>
<tbody>
<tr>
<td>dict</td>
<td>object</td>
</tr>
<tr>
<td>list, tuple</td>
<td>array</td>
</tr>
<tr>
<td>str</td>
<td>string</td>
</tr>
<tr>
<td>int, float, int- &amp; float-derived Enums</td>
<td>number</td>
</tr>
<tr>
<td>True / False</td>
<td>true / false</td>
</tr>
<tr>
<td>None</td>
<td>null</td>
</tr>
</tbody>
</table>
<p>我们使用Python中的json模块就可以将字典或列表以JSON格式保存到文件中，代码如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> json</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    mydict = &#123;</div><div class="line">        <span class="string">'name'</span>: <span class="string">'骆昊'</span>,</div><div class="line">        <span class="string">'age'</span>: <span class="number">38</span>,</div><div class="line">        <span class="string">'qq'</span>: <span class="number">957658</span>,</div><div class="line">        <span class="string">'friends'</span>: [<span class="string">'王大锤'</span>, <span class="string">'白元芳'</span>],</div><div class="line">        <span class="string">'cars'</span>: [</div><div class="line">            &#123;<span class="string">'brand'</span>: <span class="string">'BYD'</span>, <span class="string">'max_speed'</span>: <span class="number">180</span>&#125;,</div><div class="line">            &#123;<span class="string">'brand'</span>: <span class="string">'Audi'</span>, <span class="string">'max_speed'</span>: <span class="number">280</span>&#125;,</div><div class="line">            &#123;<span class="string">'brand'</span>: <span class="string">'Benz'</span>, <span class="string">'max_speed'</span>: <span class="number">320</span>&#125;</div><div class="line">        ]</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        <span class="keyword">with</span> open(<span class="string">'data.json'</span>, <span class="string">'w'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> fs:</div><div class="line">            json.dump(mydict, fs)</div><div class="line">    <span class="keyword">except</span> IOError <span class="keyword">as</span> e:</div><div class="line">        print(e)</div><div class="line">    print(<span class="string">'保存数据完成!'</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>json模块主要有四个比较重要的函数，分别是：</p>
<ul>
<li>dump - 将Python对象按照JSON格式序列化到文件中</li>
<li>dumps - 将Python对象处理成JSON格式的字符串</li>
<li>load - 将文件中的JSON数据反序列化成对象</li>
<li>loads - 将字符串的内容反序列化成Python对象</li>
</ul>
<p>这里出现了两个概念，一个叫序列化，一个叫反序列化。自由的百科全书<a href="https://zh.wikipedia.org/" target="_blank" rel="external">维基百科</a>上对这两个概念是这样解释的：“序列化（serialization）在计算机科学的数据处理中，是指将数据结构或对象状态转换为可以存储或传输的形式，这样在需要的时候能够恢复到原先的状态，而且通过序列化的数据重新获取字节时，可以利用这些字节来产生原始对象的副本（拷贝）。与这个过程相反的动作，即从一系列字节中提取数据结构的操作，就是反序列化（deserialization）”。</p>
<p>目前绝大多数网络数据服务（或称之为网络API）都是基于<a href="https://zh.wikipedia.org/wiki/%E8%B6%85%E6%96%87%E6%9C%AC%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE" target="_blank" rel="external">HTTP协议</a>提供JSON格式的数据，关于HTTP协议的相关知识，可以看看阮一峰老师的<a href="http://www.ruanyifeng.com/blog/2016/08/http.html" target="_blank" rel="external">《HTTP协议入门》</a>，如果想了解国内的网络数据服务，可以看看<a href="https://www.juhe.cn/" target="_blank" rel="external">聚合数据</a>和<a href="http://www.avatardata.cn/" target="_blank" rel="external">阿凡达数据</a>等网站，国外的可以看看<a href="http://apis.io/" target="_blank" rel="external">{API}Search</a>网站。下面的例子演示了如何使用requests模块（封装得足够好的第三方网络访问模块）访问网络API获取国内新闻，如何通过json模块解析JSON数据并显示新闻标题，这个例子使用了<a href="https://www.tianapi.com/" target="_blank" rel="external">天行数据</a>提供的国内新闻数据接口，其中的APIKey需要自己到该网站申请。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> json</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    resp = requests.get(<span class="string">'http://api.tianapi.com/guonei/?key=APIKey&amp;num=10'</span>)</div><div class="line">    data_model = json.loads(resp.text)</div><div class="line">    <span class="keyword">for</span> news <span class="keyword">in</span> data_model[<span class="string">'newslist'</span>]:</div><div class="line">        print(news[<span class="string">'title'</span>])</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>在Python中要实现序列化和反序列化除了使用json模块之外，还可以使用pickle和shelve模块，但是这两个模块是使用特有的序列化协议来序列化数据，因此序列化后的数据只能被Python识别。关于这两个模块的相关知识可以自己看看网络上的资料。另外，如果要了解更多的关于Python异常机制的知识，可以看看segmentfault上面的文章<a href="https://segmentfault.com/a/1190000007736783" target="_blank" rel="external">《总结：Python中的异常处理》</a>，这篇文章不仅介绍了Python中异常机制的使用，还总结了一系列的最佳实践，很值得一读。  </p>
<h2 id="使用正则表达式"><a href="#使用正则表达式" class="headerlink" title="使用正则表达式"></a>使用正则表达式</h2><h3 id="正则表达式相关知识"><a href="#正则表达式相关知识" class="headerlink" title="正则表达式相关知识"></a>正则表达式相关知识</h3><p>在编写处理字符串的程序或网页时，经常会有查找符合某些复杂规则的字符串的需要，正则表达式就是用于描述这些规则的工具，换句话说正则表达式是一种工具，它定义了字符串的匹配模式（如何检查一个字符串是否有跟某种模式匹配的部分或者从一个字符串中将与模式匹配的部分提取出来或者替换掉）。如果你在Windows操作系统中使用过文件查找并且在指定文件名时使用过通配符（*和?），那么正则表达式也是与之类似的用来进行文本匹配的工具，只不过比起通配符正则表达式更强大，它能更精确地描述你的需求（当然你付出的代价是书写一个正则表达式比打出一个通配符要复杂得多，要知道任何给你带来好处的东西都是有代价的，就如同学习一门编程语言一样），比如你可以编写一个正则表达式，用来查找所有以0开头，后面跟着2-3个数字，然后是一个连字号“-”，最后是7或8位数字的字符串（像028-12345678或0813-7654321），这不就是国内的座机号码吗。最初计算机是为了做数学运算而诞生的，处理的信息基本上都是数值，而今天我们在日常工作中处理的信息基本上都是文本数据，我们希望计算机能够识别和处理符合某些模式的文本，正则表达式就显得非常重要了。今天几乎所有的编程语言都提供了对正则表达式操作的支持，Python通过标准库中的re模块来支持正则表达式操作。</p>
<p>我们可以考虑下面一个问题：我们从某个地方（可能是一个文本文件，也可能是网络上的一则新闻）获得了一个字符串，希望在字符串中找出手机号和座机号。当然我们可以设定手机号是11位的数字（注意并不是随机的11位数字，因为你没有见过“25012345678”这样的手机号吧）而座机号跟上一段中描述的模式相同，如果不使用正则表达式要完成这个任务就会很麻烦。</p>
<p>关于正则表达式的相关知识，大家可以阅读一篇非常有名的博客叫<a href="https://deerchao.net/tutorials/regex/regex.htm" target="_blank" rel="external">《正则表达式30分钟入门教程》</a>，读完这篇文章后你就可以看懂下面的表格，这是我们对正则表达式中的一些基本符号进行的扼要总结。</p>
<table>
<thead>
<tr>
<th>符号</th>
<th>解释</th>
<th>示例</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>.</td>
<td>匹配任意字符</td>
<td>b.t</td>
<td>可以匹配bat / but / b#t / b1t等</td>
</tr>
<tr>
<td>\w</td>
<td>匹配字母/数字/下划线</td>
<td>b\wt</td>
<td>可以匹配bat / b1t / b_t等<br>但不能匹配b#t</td>
</tr>
<tr>
<td>\s</td>
<td>匹配空白字符（包括\r、\n、\t等）</td>
<td>love\syou</td>
<td>可以匹配love you</td>
</tr>
<tr>
<td>\d</td>
<td>匹配数字</td>
<td>\d\d</td>
<td>可以匹配01 / 23 / 99等</td>
</tr>
<tr>
<td>\b</td>
<td>匹配单词的边界</td>
<td>\bThe\b</td>
<td></td>
</tr>
<tr>
<td>^</td>
<td>匹配字符串的开始</td>
<td>^The</td>
<td>可以匹配The开头的字符串</td>
</tr>
<tr>
<td>$</td>
<td>匹配字符串的结束</td>
<td>.exe$</td>
<td>可以匹配.exe结尾的字符串</td>
</tr>
<tr>
<td>\W</td>
<td>匹配非字母/数字/下划线</td>
<td>b\Wt</td>
<td>可以匹配b#t / b@t等<br>但不能匹配but / b1t / b_t等</td>
</tr>
<tr>
<td>\S</td>
<td>匹配非空白字符</td>
<td>love\Syou</td>
<td>可以匹配love#you等<br>但不能匹配love you</td>
</tr>
<tr>
<td>\D</td>
<td>匹配非数字</td>
<td>\d\D</td>
<td>可以匹配9a / 3# / 0F等</td>
</tr>
<tr>
<td>\B</td>
<td>匹配非单词边界</td>
<td>\Bio\B</td>
<td></td>
</tr>
<tr>
<td>[]</td>
<td>匹配来自字符集的任意单一字符</td>
<td>[aeiou]</td>
<td>可以匹配任一元音字母字符</td>
</tr>
<tr>
<td>[^]</td>
<td>匹配不在字符集中的任意单一字符</td>
<td>[^aeiou]</td>
<td>可以匹配任一非元音字母字符</td>
</tr>
<tr>
<td>*</td>
<td>匹配0次或多次</td>
<td>\w*</td>
<td></td>
</tr>
<tr>
<td>+</td>
<td>匹配1次或多次</td>
<td>\w+</td>
<td></td>
</tr>
<tr>
<td>?</td>
<td>匹配0次或1次</td>
<td>\w?</td>
<td></td>
</tr>
<tr>
<td>{N}</td>
<td>匹配N次</td>
<td>\w{3}</td>
<td></td>
</tr>
<tr>
<td>{M,}</td>
<td>匹配至少M次</td>
<td>\w{3,}</td>
<td></td>
</tr>
<tr>
<td>{M,N}</td>
<td>匹配至少M次至多N次</td>
<td>\w{3,6}</td>
<td></td>
</tr>
<tr>
<td>\</td>
<td></td>
<td>分支</td>
<td>foo\</td>
<td>bar</td>
<td>可以匹配foo或者bar</td>
</tr>
<tr>
<td>(?#)</td>
<td>注释</td>
<td></td>
<td></td>
</tr>
<tr>
<td>(exp)</td>
<td>匹配exp并捕获到自动命名的组中</td>
<td></td>
<td></td>
</tr>
<tr>
<td>(?&lt;name&gt;exp)</td>
<td>匹配exp并捕获到名为name的组中</td>
<td></td>
<td></td>
</tr>
<tr>
<td>(?:exp)</td>
<td>匹配exp但是不捕获匹配的文本</td>
<td></td>
<td></td>
</tr>
<tr>
<td>(?=exp)</td>
<td>匹配exp前面的位置</td>
<td>\b\w+(?=ing)</td>
<td>可以匹配I’m dancing中的danc</td>
</tr>
<tr>
<td>(?&lt;=exp)</td>
<td>匹配exp后面的位置</td>
<td>(?&lt;=\bdanc)\w+\b</td>
<td>可以匹配I love dancing and reading中的第一个ing</td>
</tr>
<tr>
<td>(?!exp)</td>
<td>匹配后面不是exp的位置</td>
<td></td>
<td></td>
</tr>
<tr>
<td>(?&lt;!exp)</td>
<td>匹配前面不是exp的位置</td>
<td></td>
<td></td>
</tr>
<tr>
<td>*?</td>
<td>重复任意次，但尽可能少重复</td>
<td>a.*b<br>a.*?b</td>
<td>将正则表达式应用于aabab，前者会匹配整个字符串aabab，后者会匹配aab和ab两个字符串</td>
</tr>
<tr>
<td>+?</td>
<td>重复1次或多次，但尽可能少重复</td>
<td></td>
<td></td>
</tr>
<tr>
<td>??</td>
<td>重复0次或1次，但尽可能少重复</td>
<td></td>
<td></td>
</tr>
<tr>
<td>{M,N}?</td>
<td>重复M到N次，但尽可能少重复</td>
<td></td>
<td></td>
</tr>
<tr>
<td>{M,}?</td>
<td>重复M次以上，但尽可能少重复</td>
<td></td>
</tr>
</tbody>
</table>
<blockquote>
<p><strong>说明：</strong>如果需要匹配的字符是正则表达式中的特殊字符，那么可以使用\进行转义处理，例如想匹配小数点可以写成\.就可以了，因为直接写.会匹配任意字符；同理，想匹配圆括号必须写成\(和\)，否则圆括号被视为正则表达式中的分组。</p>
</blockquote>
<h3 id="Python对正则表达式的支持"><a href="#Python对正则表达式的支持" class="headerlink" title="Python对正则表达式的支持"></a>Python对正则表达式的支持</h3><p>Python提供了re模块来支持正则表达式相关操作，下面是re模块中的核心函数。</p>
<table>
<thead>
<tr>
<th>函数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>compile(pattern, flags=0)</td>
<td>编译正则表达式返回正则表达式对象</td>
</tr>
<tr>
<td>match(pattern, string, flags=0)</td>
<td>用正则表达式匹配字符串 成功返回匹配对象 否则返回None</td>
</tr>
<tr>
<td>search(pattern, string, flags=0)</td>
<td>搜索字符串中第一次出现正则表达式的模式 成功返回匹配对象 否则返回None</td>
</tr>
<tr>
<td>split(pattern, string, maxsplit=0, flags=0)</td>
<td>用正则表达式指定的模式分隔符拆分字符串 返回列表</td>
</tr>
<tr>
<td>sub(pattern, repl, string, count=0, flags=0)</td>
<td>用指定的字符串替换原字符串中与正则表达式匹配的模式 可以用count指定替换的次数</td>
</tr>
<tr>
<td>fullmatch(pattern, string, flags=0)</td>
<td>match函数的完全匹配（从字符串开头到结尾）版本</td>
</tr>
<tr>
<td>findall(pattern, string, flags=0)</td>
<td>查找字符串所有与正则表达式匹配的模式 返回字符串的列表</td>
</tr>
<tr>
<td>finditer(pattern, string, flags=0)</td>
<td>查找字符串所有与正则表达式匹配的模式 返回一个迭代器</td>
</tr>
<tr>
<td>purge()</td>
<td>清除隐式编译的正则表达式的缓存</td>
</tr>
<tr>
<td>re.I / re.IGNORECASE</td>
<td>忽略大小写匹配标记</td>
</tr>
<tr>
<td>re.M / re.MULTILINE</td>
<td>多行匹配标记</td>
</tr>
</tbody>
</table>
<blockquote>
<p><strong>说明：</strong>上面提到的re模块中的这些函数，实际开发中也可以用正则表达式对象的方法替代对这些函数的使用，如果一个正则表达式需要重复的使用，那么先通过compile函数编译正则表达式并创建出正则表达式对象无疑是更为明智的选择。</p>
</blockquote>
<p>下面我们通过一系列的例子来告诉大家在Python中如何使用正则表达式。</p>
<h4 id="例子1：验证输入用户名和QQ号是否有效并给出对应的提示信息。"><a href="#例子1：验证输入用户名和QQ号是否有效并给出对应的提示信息。" class="headerlink" title="例子1：验证输入用户名和QQ号是否有效并给出对应的提示信息。"></a>例子1：验证输入用户名和QQ号是否有效并给出对应的提示信息。</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">验证输入用户名和QQ号是否有效并给出对应的提示信息</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">要求：</span></div><div class="line"><span class="string">用户名必须由字母、数字或下划线构成且长度在6~20个字符之间</span></div><div class="line"><span class="string">QQ号是5~12的数字且首位不能为0</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> re</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    username = input(<span class="string">'请输入用户名: '</span>)</div><div class="line">    qq = input(<span class="string">'请输入QQ号: '</span>)</div><div class="line">    <span class="comment"># match函数的第一个参数是正则表达式字符串或正则表达式对象</span></div><div class="line">    <span class="comment"># 第二个参数是要跟正则表达式做匹配的字符串对象</span></div><div class="line">    m1 = re.match(<span class="string">r'^[0-9a-zA-Z_]&#123;6,20&#125;$'</span>, username)</div><div class="line">    <span class="keyword">if</span> <span class="keyword">not</span> m1:</div><div class="line">        print(<span class="string">'请输入有效的用户名.'</span>)</div><div class="line">    m2 = re.match(<span class="string">r'^[1-9]\d&#123;4,11&#125;$'</span>, qq)</div><div class="line">    <span class="keyword">if</span> <span class="keyword">not</span> m2:</div><div class="line">        print(<span class="string">'请输入有效的QQ号.'</span>)</div><div class="line">    <span class="keyword">if</span> m1 <span class="keyword">and</span> m2:</div><div class="line">        print(<span class="string">'你输入的信息是有效的!'</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<blockquote>
<p><strong>提示</strong>：上面在书写正则表达式时使用了“原始字符串”的写法（在字符串前面加上了r），所谓“原始字符串”就是字符串中的每个字符都是它原始的意义，说得更直接一点就是字符串中没有所谓的转义字符啦。因为正则表达式中有很多元字符和需要进行转义的地方，如果不使用原始字符串就需要将反斜杠写作\\，例如表示数字的\d得书写成\\d，这样不仅写起来不方便，阅读的时候也会很吃力。</p>
</blockquote>
<h4 id="例子2：从一段文字中提取出国内手机号码。"><a href="#例子2：从一段文字中提取出国内手机号码。" class="headerlink" title="例子2：从一段文字中提取出国内手机号码。"></a>例子2：从一段文字中提取出国内手机号码。</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> re</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    <span class="comment"># 创建正则表达式对象 使用了前瞻和回顾来保证手机号前后不应该出现数字</span></div><div class="line">    pattern = re.compile(<span class="string">r'(?&lt;=\D)1[34578]\d&#123;9&#125;(?=\D)'</span>)</div><div class="line">    sentence = <span class="string">'''</span></div><div class="line"><span class="string">    重要的事情说8130123456789遍，我的手机号是13512346789这个靓号，</span></div><div class="line"><span class="string">    不是15600998765，也是110或119，王大锤的手机号才是15600998765。</span></div><div class="line"><span class="string">    '''</span></div><div class="line">    <span class="comment"># 查找所有匹配并保存到一个列表中</span></div><div class="line">    mylist = re.findall(pattern, sentence)</div><div class="line">    print(mylist)</div><div class="line">    print(<span class="string">'--------华丽的分隔线--------'</span>)</div><div class="line">    <span class="comment"># 通过迭代器取出匹配对象并获得匹配的内容</span></div><div class="line">    <span class="keyword">for</span> temp <span class="keyword">in</span> pattern.finditer(sentence):</div><div class="line">        print(temp.group())</div><div class="line">    print(<span class="string">'--------华丽的分隔线--------'</span>)</div><div class="line">    <span class="comment"># 通过search函数指定搜索位置找出所有匹配</span></div><div class="line">    m = pattern.search(sentence)</div><div class="line">    <span class="keyword">while</span> m:</div><div class="line">        print(m.group())</div><div class="line">        m = pattern.search(sentence, m.end())</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<blockquote>
<p><strong>说明</strong>：上面匹配国内手机号的正则表达式并不够好，因为像14开头的号码只有145或147，而上面的正则表达式并没有考虑这种情况，要匹配国内手机号，更好的正则表达式的写法是：<code>(?&lt;=\D)(1[38]\d{9}|14[57]\d{8}|15[0-35-9]\d{8}|17[678]\d{8})(?=\D)</code>，国内最近好像有19和16开头的手机号了，但是这个暂时不在我们考虑之列。</p>
</blockquote>
<h4 id="例子3：替换字符串中的不良内容"><a href="#例子3：替换字符串中的不良内容" class="headerlink" title="例子3：替换字符串中的不良内容"></a>例子3：替换字符串中的不良内容</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> re</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    sentence = <span class="string">'你丫是傻叉吗? 我操你大爷的. Fuck you.'</span></div><div class="line">    purified = re.sub(<span class="string">'[操肏艹草曹]|fuck|shit|傻[比屄逼叉缺吊屌]|煞笔'</span>,</div><div class="line">                      <span class="string">'*'</span>, sentence, flags=re.IGNORECASE)</div><div class="line">    print(purified)  <span class="comment"># 你丫是*吗? 我*你大爷的. * you.</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<blockquote>
<p><strong>说明</strong>：re模块的正则表达式相关函数中都有一个flags参数，它代表了正则表达式的匹配标记，可以通过该标记来指定匹配时是否忽略大小写、是否进行多行匹配、是否显示调试信息等。如果需要为flags参数指定多个值，可以使用<a href="http://www.runoob.com/python/python-operators.html#ysf5" target="_blank" rel="external">按位或运算符</a>进行叠加，如<code>flags=re.I | re.M</code>。</p>
</blockquote>
<h4 id="例子4：拆分长字符串"><a href="#例子4：拆分长字符串" class="headerlink" title="例子4：拆分长字符串"></a>例子4：拆分长字符串</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> re</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    poem = <span class="string">'窗前明月光，疑是地上霜。举头望明月，低头思故乡。'</span></div><div class="line">    sentence_list = re.split(<span class="string">r'[，。, .]'</span>, poem)</div><div class="line">    <span class="keyword">while</span> <span class="string">''</span> <span class="keyword">in</span> sentence_list:</div><div class="line">        sentence_list.remove(<span class="string">''</span>)</div><div class="line">    print(sentence_list)  <span class="comment"># ['窗前明月光', '疑是地上霜', '举头望明月', '低头思故乡']</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h3 id="后话"><a href="#后话" class="headerlink" title="后话"></a>后话</h3><p>如果要从事爬虫类应用的开发，那么正则表达式一定是一个非常好的助手，因为它可以帮助我们迅速的从网页代码中发现某种我们指定的模式并提取出我们需要的信息，当然对于初学者来收，要编写一个正确的适当的正则表达式可能并不是一件容易的事情（当然有些常用的正则表达式可以直接在网上找找），所以实际开发爬虫应用的时候，有很多人会选择<a href="https://www.crummy.com/software/BeautifulSoup/" target="_blank" rel="external">Beautiful Soup</a>或<a href="http://lxml.de/" target="_blank" rel="external">Lxml</a>来进行匹配和信息的提取，前者简单方便但是性能较差，后者既好用性能也好，但是安装稍嫌麻烦，这些内容我们会在后期的爬虫专题中为大家介绍。  </p>
<h2 id="进程和线程"><a href="#进程和线程" class="headerlink" title="进程和线程"></a>进程和线程</h2><p>今天我们使用的计算机早已进入多CPU或多核时代，而我们使用的操作系统都是支持“多任务”的操作系统，这使得我们可以同时运行多个程序，也可以将一个程序分解为若干个相对独立的子任务，让多个子任务并发的执行，从而缩短程序的执行时间，同时也让用户获得更好的体验。因此在当下不管是用什么编程语言进行开发，实现让程序同时执行多个任务也就是常说的“并发编程”，应该是程序员必备技能之一。为此，我们需要先讨论两个概念，一个叫进程，一个叫线程。</p>
<h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>进程就是操作系统中执行的一个程序，操作系统以进程为单位分配存储空间，每个进程都有自己的地址空间、数据栈以及其他用于跟踪进程执行的辅助数据，操作系统管理所有进程的执行，为它们合理的分配资源。进程可以通过fork或spawn的方式来创建新的进程来执行其他的任务，不过新的进程也有自己独立的内存空间，因此必须通过进程间通信机制（IPC，Inter-Process Communication）来实现数据共享，具体的方式包括管道、信号、套接字、共享内存区等。</p>
<p>一个进程还可以拥有多个并发的执行线索，简单的说就是拥有多个可以获得CPU调度的执行单元，这就是所谓的线程。由于线程在同一个进程下，它们可以共享相同的上下文，因此相对于进程而言，线程间的信息共享和通信更加容易。当然在单核CPU系统中，真正的并发是不可能的，因为在某个时刻能够获得CPU的只有唯一的一个线程，多个线程共享了CPU的执行时间。使用多线程实现并发编程为程序带来的好处是不言而喻的，最主要的体现在提升程序的性能和改善用户体验，今天我们使用的软件几乎都用到了多线程技术，这一点可以利用系统自带的进程监控工具（如macOS中的“活动监视器”、Windows中的“任务管理器”）来证实.</p>
<p>当然多线程也并不是没有坏处，站在其他进程的角度，多线程的程序对其他程序并不友好，因为它占用了更多的CPU执行时间，导致其他程序无法获得足够的CPU执行时间；另一方面，站在开发者的角度，编写和调试多线程的程序都对开发者有较高的要求，对于初学者来说更加困难。</p>
<p>Python既支持多进程又支持多线程，因此使用Python实现并发编程主要有3种方式：多进程、多线程、多进程+多线程。</p>
<h3 id="Python中的多进程"><a href="#Python中的多进程" class="headerlink" title="Python中的多进程"></a>Python中的多进程</h3><p>Unix和Linux操作系统上提供了<code>fork()</code>系统调用来创建进程，调用<code>fork()</code>函数的是父进程，创建出的是子进程，子进程是父进程的一个拷贝，但是子进程拥有自己的PID。<code>fork()</code>函数非常特殊它会返回两次，父进程中可以通过<code>fork()</code>函数的返回值得到子进程的PID，而子进程中的返回值永远都是0。Python的os模块提供了<code>fork()</code>函数。由于Windows系统没有<code>fork()</code>调用，因此要实现跨平台的多进程编程，可以使用multiprocessing模块的<code>Process</code>类来创建子进程，而且该模块还提供了更高级的封装，例如批量启动进程的进程池（<code>Pool</code>）、用于进程间通信的队列（<code>Queue</code>）和管道（<code>Pipe</code>）等。</p>
<p>下面用一个下载文件的例子来说明使用多进程和不使用多进程到底有什么差别，先看看下面的代码。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</div><div class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time, sleep</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">download_task</span><span class="params">(filename)</span>:</span></div><div class="line">    print(<span class="string">'开始下载%s...'</span> % filename)</div><div class="line">    time_to_download = randint(<span class="number">5</span>, <span class="number">10</span>)</div><div class="line">    sleep(time_to_download)</div><div class="line">    print(<span class="string">'%s下载完成! 耗费了%d秒'</span> % (filename, time_to_download))</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    start = time()</div><div class="line">    download_task(<span class="string">'Python从入门到住院.pdf'</span>)</div><div class="line">    download_task(<span class="string">'Peking Hot.avi'</span>)</div><div class="line">    end = time()</div><div class="line">    print(<span class="string">'总共耗费了%.2f秒.'</span> % (end - start))</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>下面是运行程序得到的一次运行结果。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">开始下载Python从入门到住院.pdf...</div><div class="line">Python从入门到住院.pdf下载完成! 耗费了6秒</div><div class="line">开始下载Peking Hot.avi...</div><div class="line">Peking Hot.avi下载完成! 耗费了7秒</div><div class="line">总共耗费了13.01秒.</div></pre></td></tr></table></figure>
<p>从上面的例子可以看出，如果程序中的代码只能按顺序一点点的往下执行，那么即使执行两个毫不相关的下载任务，也需要先等待一个文件下载完成后才能开始下一个下载任务，很显然这并不合理也没有效率。接下来我们使用多进程的方式将两个下载任务放到不同的进程中，代码如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Process</div><div class="line"><span class="keyword">from</span> os <span class="keyword">import</span> getpid</div><div class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</div><div class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time, sleep</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">download_task</span><span class="params">(filename)</span>:</span></div><div class="line">    print(<span class="string">'启动下载进程，进程号[%d].'</span> % getpid())</div><div class="line">    print(<span class="string">'开始下载%s...'</span> % filename)</div><div class="line">    time_to_download = randint(<span class="number">5</span>, <span class="number">10</span>)</div><div class="line">    sleep(time_to_download)</div><div class="line">    print(<span class="string">'%s下载完成! 耗费了%d秒'</span> % (filename, time_to_download))</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    start = time()</div><div class="line">    p1 = Process(target=download_task, args=(<span class="string">'Python从入门到住院.pdf'</span>, ))</div><div class="line">    p1.start()</div><div class="line">    p2 = Process(target=download_task, args=(<span class="string">'Peking Hot.avi'</span>, ))</div><div class="line">    p2.start()</div><div class="line">    p1.join()</div><div class="line">    p2.join()</div><div class="line">    end = time()</div><div class="line">    print(<span class="string">'总共耗费了%.2f秒.'</span> % (end - start))</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>在上面的代码中，我们通过<code>Process</code>类创建了进程对象，通过<code>target</code>参数我们传入一个函数来表示进程启动后要执行的代码，后面的<code>args</code>是一个元组，它代表了传递给函数的参数。<code>Process</code>对象的<code>start</code>方法用来启动进程，而<code>join</code>方法表示等待进程执行结束。运行上面的代码可以明显发现两个下载任务“同时”启动了，而且程序的执行时间将大大缩短，不再是两个任务的时间总和。下面是程序的一次执行结果。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">启动下载进程，进程号[1530].</div><div class="line">开始下载Python从入门到住院.pdf...</div><div class="line">启动下载进程，进程号[1531].</div><div class="line">开始下载Peking Hot.avi...</div><div class="line">Peking Hot.avi下载完成! 耗费了7秒</div><div class="line">Python从入门到住院.pdf下载完成! 耗费了10秒</div><div class="line">总共耗费了10.01秒.</div></pre></td></tr></table></figure>
<p>我们也可以使用subprocess模块中的类和函数来创建和启动子进程，然后通过管道来和子进程通信，这些内容我们不在此进行讲解，有兴趣的读者可以自己了解这些知识。接下来我们将重点放在如何实现两个进程间的通信。我们启动两个进程，一个输出Ping，一个输出Pong，两个进程输出的Ping和Pong加起来一共10个。听起来很简单吧，但是如果这样写可是错的哦。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Process</div><div class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</div><div class="line"></div><div class="line">counter = <span class="number">0</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sub_task</span><span class="params">(string)</span>:</span></div><div class="line">    <span class="keyword">global</span> counter</div><div class="line">    <span class="keyword">while</span> counter &lt; <span class="number">10</span>:</div><div class="line">        print(string, end=<span class="string">''</span>, flush=<span class="keyword">True</span>)</div><div class="line">        counter += <span class="number">1</span></div><div class="line">        sleep(<span class="number">0.01</span>)</div><div class="line"></div><div class="line">        </div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    Process(target=sub_task, args=(<span class="string">'Ping'</span>, )).start()</div><div class="line">    Process(target=sub_task, args=(<span class="string">'Pong'</span>, )).start()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>看起来没毛病，但是最后的结果是Ping和Pong各输出了10个，Why？当我们在程序中创建进程的时候，子进程复制了父进程及其所有的数据结构，每个子进程有自己独立的内存空间，这也就意味着两个子进程中各有一个<code>counter</code>变量，所以结果也就可想而知了。要解决这个问题比较简单的办法是使用multiprocessing模块中的<code>Queue</code>类，它是可以被多个进程共享的队列，底层是通过管道和<a href="">信号量（semaphore）</a>机制来实现的，有兴趣的读者可以自己尝试一下。</p>
<h3 id="Python中的多线程"><a href="#Python中的多线程" class="headerlink" title="Python中的多线程"></a>Python中的多线程</h3><p>在Python早期的版本中就引入了thread模块（现在名为_thread）来实现多线程编程，然而该模块过于底层，而且很多功能都没有提供，因此目前的多线程开发我们推荐使用threading模块，该模块对多线程编程提供了更好的面向对象的封装。我们把刚才下载文件的例子用多线程的方式来实现一遍。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</div><div class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</div><div class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time, sleep</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">download</span><span class="params">(filename)</span>:</span></div><div class="line">    print(<span class="string">'开始下载%s...'</span> % filename)</div><div class="line">    time_to_download = randint(<span class="number">5</span>, <span class="number">10</span>)</div><div class="line">    sleep(time_to_download)</div><div class="line">    print(<span class="string">'%s下载完成! 耗费了%d秒'</span> % (filename, time_to_download))</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    start = time()</div><div class="line">    t1 = Thread(target=download, args=(<span class="string">'Python从入门到住院.pdf'</span>,))</div><div class="line">    t1.start()</div><div class="line">    t2 = Thread(target=download, args=(<span class="string">'Peking Hot.avi'</span>,))</div><div class="line">    t2.start()</div><div class="line">    t1.join()</div><div class="line">    t2.join()</div><div class="line">    end = time()</div><div class="line">    print(<span class="string">'总共耗费了%.3f秒'</span> % (end - start))</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>我们可以直接使用threading模块的<code>Thread</code>类来创建线程，但是我们之前讲过一个非常重要的概念叫“继承”，我们可以从已有的类创建新类，因此也可以通过继承<code>Thread</code>类的方式来创建自定义的线程类，然后再创建线程对象并启动线程。代码如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</div><div class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</div><div class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time, sleep</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">DownloadTask</span><span class="params">(Thread)</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, filename)</span>:</span></div><div class="line">        super().__init__()</div><div class="line">        self._filename = filename</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></div><div class="line">        print(<span class="string">'开始下载%s...'</span> % self._filename)</div><div class="line">        time_to_download = randint(<span class="number">5</span>, <span class="number">10</span>)</div><div class="line">        sleep(time_to_download)</div><div class="line">        print(<span class="string">'%s下载完成! 耗费了%d秒'</span> % (self._filename, time_to_download))</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    start = time()</div><div class="line">    t1 = DownloadTask(<span class="string">'Python从入门到住院.pdf'</span>)</div><div class="line">    t1.start()</div><div class="line">    t2 = DownloadTask(<span class="string">'Peking Hot.avi'</span>)</div><div class="line">    t2.start()</div><div class="line">    t1.join()</div><div class="line">    t2.join()</div><div class="line">    end = time()</div><div class="line">    print(<span class="string">'总共耗费了%.2f秒.'</span> % (end - start))</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>因为多个线程可以共享进程的内存空间，因此要实现多个线程间的通信相对简单，大家能想到的最直接的办法就是设置一个全局变量，多个线程共享这个全局变量即可。但是当多个线程共享同一个变量（我们通常称之为“资源”）的时候，很有可能产生不可控的结果从而导致程序失效甚至崩溃。如果一个资源被多个线程竞争使用，那么我们通常称之为“临界资源”，对“临界资源”的访问需要加上保护，否则资源会处于“混乱”的状态。下面的例子演示了100个线程向同一个银行账户转账（转入1元钱）的场景，在这个例子中，银行账户就是一个临界资源，在没有保护的情况下我们很有可能会得到错误的结果。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</div><div class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Account</span><span class="params">(object)</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></div><div class="line">        self._balance = <span class="number">0</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">deposit</span><span class="params">(self, money)</span>:</span></div><div class="line">        <span class="comment"># 计算存款后的余额</span></div><div class="line">        new_balance = self._balance + money</div><div class="line">        <span class="comment"># 模拟受理存款业务需要0.01秒的时间</span></div><div class="line">        sleep(<span class="number">0.01</span>)</div><div class="line">        <span class="comment"># 修改账户余额</span></div><div class="line">        self._balance = new_balance</div><div class="line"></div><div class="line"><span class="meta">    @property</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">balance</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self._balance</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">AddMoneyThread</span><span class="params">(Thread)</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, account, money)</span>:</span></div><div class="line">        super().__init__()</div><div class="line">        self._account = account</div><div class="line">        self._money = money</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></div><div class="line">        self._account.deposit(self._money)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    account = Account()</div><div class="line">    threads = []</div><div class="line">    <span class="comment"># 创建100个存款的线程向同一个账户中存钱</span></div><div class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">100</span>):</div><div class="line">        t = AddMoneyThread(account, <span class="number">1</span>)</div><div class="line">        threads.append(t)</div><div class="line">        t.start()</div><div class="line">    <span class="comment"># 等所有存款的线程都执行完毕</span></div><div class="line">    <span class="keyword">for</span> t <span class="keyword">in</span> threads:</div><div class="line">        t.join()</div><div class="line">    print(<span class="string">'账户余额为: ￥%d元'</span> % account.balance)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>运行上面的程序，结果让人大跌眼镜，100个线程分别向账户中转入1元钱，结果居然远远小于100元。之所以出现这种情况是因为我们没有对银行账户这个“临界资源”加以保护，多个线程同时向账户中存钱时，会一起执行到<code>new_balance = self._balance + money</code>这行代码，多个线程得到的账户余额都是初始状态下的<code>0</code>，所以都是<code>0</code>上面做了+1的操作，因此得到了错误的结果。在这种情况下，“锁”就可以派上用场了。我们可以通过“锁”来保护“临界资源”，只有获得“锁”的线程才能访问“临界资源”，而其他没有得到“锁”的线程只能被阻塞起来，直到获得“锁”的线程释放了“锁”，其他线程才有机会获得“锁”，进而访问被保护的“临界资源”。下面的代码演示了如何使用“锁”来保护对银行账户的操作，从而获得正确的结果。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</div><div class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread, Lock</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Account</span><span class="params">(object)</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></div><div class="line">        self._balance = <span class="number">0</span></div><div class="line">        self._lock = Lock()</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">deposit</span><span class="params">(self, money)</span>:</span></div><div class="line">        <span class="comment"># 先获取锁才能执行后续的代码</span></div><div class="line">        self._lock.acquire()</div><div class="line">        <span class="keyword">try</span>:</div><div class="line">            new_balance = self._balance + money</div><div class="line">            sleep(<span class="number">0.01</span>)</div><div class="line">            self._balance = new_balance</div><div class="line">        <span class="keyword">finally</span>:</div><div class="line">            <span class="comment"># 在finally中执行释放锁的操作保证正常异常锁都能释放</span></div><div class="line">            self._lock.release()</div><div class="line"></div><div class="line"><span class="meta">    @property</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">balance</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self._balance</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">AddMoneyThread</span><span class="params">(Thread)</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, account, money)</span>:</span></div><div class="line">        super().__init__()</div><div class="line">        self._account = account</div><div class="line">        self._money = money</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></div><div class="line">        self._account.deposit(self._money)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    account = Account()</div><div class="line">    threads = []</div><div class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">100</span>):</div><div class="line">        t = AddMoneyThread(account, <span class="number">1</span>)</div><div class="line">        threads.append(t)</div><div class="line">        t.start()</div><div class="line">    <span class="keyword">for</span> t <span class="keyword">in</span> threads:</div><div class="line">        t.join()</div><div class="line">    print(<span class="string">'账户余额为: ￥%d元'</span> % account.balance)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>比较遗憾的一件事情是Python的多线程并不能发挥CPU的多核特性，这一点只要启动几个执行死循环的线程就可以得到证实了。之所以如此，是因为Python的解释器有一个“全局解释器锁”（GIL）的东西，任何线程执行前必须先获得GIL锁，然后每执行100条字节码，解释器就自动释放GIL锁，让别的线程有机会执行，这是一个历史遗留问题，但是即便如此，就如我们之前举的例子，使用多线程在提升执行效率和改善用户体验方面仍然是有积极意义的。</p>
<h3 id="多进程还是多线程"><a href="#多进程还是多线程" class="headerlink" title="多进程还是多线程"></a>多进程还是多线程</h3><p>无论是多进程还是多线程，只要数量一多，效率肯定上不去，为什么呢？我们打个比方，假设你不幸正在准备中考，每天晚上需要做语文、数学、英语、物理、化学这5科的作业，每项作业耗时1小时。如果你先花1小时做语文作业，做完了，再花1小时做数学作业，这样，依次全部做完，一共花5小时，这种方式称为单任务模型。如果你打算切换到多任务模型，可以先做1分钟语文，再切换到数学作业，做1分钟，再切换到英语，以此类推，只要切换速度足够快，这种方式就和单核CPU执行多任务是一样的了，以旁观者的角度来看，你就正在同时写5科作业。</p>
<p>但是，切换作业是有代价的，比如从语文切到数学，要先收拾桌子上的语文书本、钢笔（这叫保存现场），然后，打开数学课本、找出圆规直尺（这叫准备新环境），才能开始做数学作业。操作系统在切换进程或者线程时也是一样的，它需要先保存当前执行的现场环境（CPU寄存器状态、内存页等），然后，把新任务的执行环境准备好（恢复上次的寄存器状态，切换内存页等），才能开始执行。这个切换过程虽然很快，但是也需要耗费时间。如果有几千个任务同时进行，操作系统可能就主要忙着切换任务，根本没有多少时间去执行任务了，这种情况最常见的就是硬盘狂响，点窗口无反应，系统处于假死状态。所以，多任务一旦多到一个限度，反而会使得系统性能急剧下降，最终导致所有任务都做不好。</p>
<p>是否采用多任务的第二个考虑是任务的类型，可以把任务分为计算密集型和I/O密集型。计算密集型任务的特点是要进行大量的计算，消耗CPU资源，比如对视频进行编码解码或者格式转换等等，这种任务全靠CPU的运算能力，虽然也可以用多任务完成，但是任务越多，花在任务切换的时间就越多，CPU执行任务的效率就越低。计算密集型任务由于主要消耗CPU资源，这类任务用Python这样的脚本语言去执行效率通常很低，最能胜任这类任务的是C语言，我们之前提到了Python中有嵌入C/C++代码的机制。</p>
<p>除了计算密集型任务，其他的涉及到网络、存储介质I/O的任务都可以视为I/O密集型任务，这类任务的特点是CPU消耗很少，任务的大部分时间都在等待I/O操作完成（因为I/O的速度远远低于CPU和内存的速度）。对于I/O密集型任务，如果启动多任务，就可以减少I/O等待时间从而让CPU高效率的运转。有一大类的任务都属于I/O密集型任务，这其中包括了我们很快会涉及到的网络应用和Web应用。</p>
<blockquote>
<p><strong>说明：</strong>上面的内容和例子来自于<a href="https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000" target="_blank" rel="external">廖雪峰官方网站的《Python教程》</a>，因为对作者文中的某些观点持有不同的看法，对原文的文字描述做了适当的调整。</p>
</blockquote>
<h3 id="单线程-异步I-O"><a href="#单线程-异步I-O" class="headerlink" title="单线程+异步I/O"></a>单线程+异步I/O</h3><p>现代操作系统对I/O操作的改进中最为重要的就是支持异步I/O。如果充分利用操作系统提供的异步I/O支持，就可以用单进程单线程模型来执行多任务，这种全新的模型称为事件驱动模型。Nginx就是支持异步I/O的Web服务器，它在单核CPU上采用单进程模型就可以高效地支持多任务。在多核CPU上，可以运行多个进程（数量与CPU核心数相同），充分利用多核CPU。用Node.js开发的服务器端程序也使用了这种工作模式，这也是当下实现多任务编程的一种趋势。</p>
<p>在Python语言中，单线程+异步I/O的编程模型称为协程，有了协程的支持，就可以基于事件驱动编写高效的多任务程序。协程最大的优势就是极高的执行效率，因为子程序切换不是线程切换，而是由程序自身控制，因此，没有线程切换的开销。协程的第二个优势就是不需要多线程的锁机制，因为只有一个线程，也不存在同时写变量冲突，在协程中控制共享资源不用加锁，只需要判断状态就好了，所以执行效率比多线程高很多。如果想要充分利用CPU的多核特性，最简单的方法是多进程+协程，既充分利用多核，又充分发挥协程的高效率，可获得极高的性能。关于这方面的内容，我稍后会做一个专题来进行讲解。</p>
<h3 id="应用案例"><a href="#应用案例" class="headerlink" title="应用案例"></a>应用案例</h3><h4 id="例子1：将耗时间的任务放到线程中以获得更好的用户体验。"><a href="#例子1：将耗时间的任务放到线程中以获得更好的用户体验。" class="headerlink" title="例子1：将耗时间的任务放到线程中以获得更好的用户体验。"></a>例子1：将耗时间的任务放到线程中以获得更好的用户体验。</h4><p>如下所示的界面中，有“下载”和“关于”两个按钮，用休眠的方式模拟点击“下载”按钮会联网下载文件需要耗费10秒的时间，如果不使用“多线程”，我们会发现，当点击“下载”按钮后整个程序的其他部分都被这个耗时间的任务阻塞而无法执行了，这显然是非常糟糕的用户体验，代码如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> time</div><div class="line"><span class="keyword">import</span> tkinter</div><div class="line"><span class="keyword">import</span> tkinter.messagebox</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">download</span><span class="params">()</span>:</span></div><div class="line">    <span class="comment"># 模拟下载任务需要花费10秒钟时间</span></div><div class="line">    time.sleep(<span class="number">10</span>)</div><div class="line">    tkinter.messagebox.showinfo(<span class="string">'提示'</span>, <span class="string">'下载完成!'</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_about</span><span class="params">()</span>:</span></div><div class="line">    tkinter.messagebox.showinfo(<span class="string">'关于'</span>, <span class="string">'作者: 骆昊(v1.0)'</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    top = tkinter.Tk()</div><div class="line">    top.title(<span class="string">'单线程'</span>)</div><div class="line">    top.geometry(<span class="string">'200x150'</span>)</div><div class="line">    top.wm_attributes(<span class="string">'-topmost'</span>, <span class="keyword">True</span>)</div><div class="line"></div><div class="line">    panel = tkinter.Frame(top)</div><div class="line">    button1 = tkinter.Button(panel, text=<span class="string">'下载'</span>, command=download)</div><div class="line">    button1.pack(side=<span class="string">'left'</span>)</div><div class="line">    button2 = tkinter.Button(panel, text=<span class="string">'关于'</span>, command=show_about)</div><div class="line">    button2.pack(side=<span class="string">'right'</span>)</div><div class="line">    panel.pack(side=<span class="string">'bottom'</span>)</div><div class="line"></div><div class="line">    tkinter.mainloop()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>如果使用多线程将耗时间的任务放到一个独立的线程中执行，这样就不会因为执行耗时间的任务而阻塞了主线程，修改后的代码如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> time</div><div class="line"><span class="keyword">import</span> tkinter</div><div class="line"><span class="keyword">import</span> tkinter.messagebox</div><div class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line"></div><div class="line">    <span class="class"><span class="keyword">class</span> <span class="title">DownloadTaskHandler</span><span class="params">(Thread)</span>:</span></div><div class="line"></div><div class="line">        <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></div><div class="line">            time.sleep(<span class="number">10</span>)</div><div class="line">            tkinter.messagebox.showinfo(<span class="string">'提示'</span>, <span class="string">'下载完成!'</span>)</div><div class="line">            <span class="comment"># 启用下载按钮</span></div><div class="line">            button1.config(state=tkinter.NORMAL)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">download</span><span class="params">()</span>:</span></div><div class="line">        <span class="comment"># 禁用下载按钮</span></div><div class="line">        button1.config(state=tkinter.DISABLED)</div><div class="line">        <span class="comment"># 通过daemon参数将线程设置为守护线程(主程序退出就不再保留执行)</span></div><div class="line">        <span class="comment"># 在线程中处理耗时间的下载任务</span></div><div class="line">        DownloadTaskHandler(daemon=<span class="keyword">True</span>).start()</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_about</span><span class="params">()</span>:</span></div><div class="line">        tkinter.messagebox.showinfo(<span class="string">'关于'</span>, <span class="string">'作者: 骆昊(v1.0)'</span>)</div><div class="line"></div><div class="line">    top = tkinter.Tk()</div><div class="line">    top.title(<span class="string">'单线程'</span>)</div><div class="line">    top.geometry(<span class="string">'200x150'</span>)</div><div class="line">    top.wm_attributes(<span class="string">'-topmost'</span>, <span class="number">1</span>)</div><div class="line"></div><div class="line">    panel = tkinter.Frame(top)</div><div class="line">    button1 = tkinter.Button(panel, text=<span class="string">'下载'</span>, command=download)</div><div class="line">    button1.pack(side=<span class="string">'left'</span>)</div><div class="line">    button2 = tkinter.Button(panel, text=<span class="string">'关于'</span>, command=show_about)</div><div class="line">    button2.pack(side=<span class="string">'right'</span>)</div><div class="line">    panel.pack(side=<span class="string">'bottom'</span>)</div><div class="line"></div><div class="line">    tkinter.mainloop()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h4 id="例子2：使用多进程对复杂任务进行“分而治之”。"><a href="#例子2：使用多进程对复杂任务进行“分而治之”。" class="headerlink" title="例子2：使用多进程对复杂任务进行“分而治之”。"></a>例子2：使用多进程对复杂任务进行“分而治之”。</h4><p>我们来完成1~100000000求和的计算密集型任务，这个问题本身非常简单，有点循环的知识就能解决，代码如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    total = <span class="number">0</span></div><div class="line">    number_list = [x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">100000001</span>)]</div><div class="line">    start = time()</div><div class="line">    <span class="keyword">for</span> number <span class="keyword">in</span> number_list:</div><div class="line">        total += number</div><div class="line">    print(total)</div><div class="line">    end = time()</div><div class="line">    print(<span class="string">'Execution time: %.3fs'</span> % (end - start))</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>在上面的代码中，我故意先去创建了一个列表容器然后填入了100000000个数，这一步其实是比较耗时间的，所以为了公平起见，当我们将这个任务分解到8个进程中去执行的时候，我们暂时也不考虑列表切片操作花费的时间，只是把做运算和合并运算结果的时间统计出来，代码如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Process, Queue</div><div class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</div><div class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">task_handler</span><span class="params">(curr_list, result_queue)</span>:</span></div><div class="line">    total = <span class="number">0</span></div><div class="line">    <span class="keyword">for</span> number <span class="keyword">in</span> curr_list:</div><div class="line">        total += number</div><div class="line">    result_queue.put(total)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    processes = []</div><div class="line">    number_list = [x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">100000001</span>)]</div><div class="line">    result_queue = Queue()</div><div class="line">    index = <span class="number">0</span></div><div class="line">    <span class="comment"># 启动8个进程将数据切片后进行运算</span></div><div class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">8</span>):</div><div class="line">        p = Process(target=task_handler,</div><div class="line">                    args=(number_list[index:index + <span class="number">12500000</span>], result_queue))</div><div class="line">        index += <span class="number">12500000</span></div><div class="line">        processes.append(p)</div><div class="line">        p.start()</div><div class="line">    <span class="comment"># 开始记录所有进程执行完成花费的时间</span></div><div class="line">    start = time()</div><div class="line">    <span class="keyword">for</span> p <span class="keyword">in</span> processes:</div><div class="line">        p.join()</div><div class="line">    <span class="comment"># 合并执行结果</span></div><div class="line">    total = <span class="number">0</span></div><div class="line">    <span class="keyword">while</span> <span class="keyword">not</span> result_queue.empty():</div><div class="line">        total += result_queue.get()</div><div class="line">    print(total)</div><div class="line">    end = time()</div><div class="line">    print(<span class="string">'Execution time: '</span>, (end - start), <span class="string">'s'</span>, sep=<span class="string">''</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>比较两段代码的执行结果（在我目前使用的MacBook上，上面的代码需要大概6秒左右的时间，而下面的代码只需要不到1秒的时间，再强调一次我们只是比较了运算的时间，不考虑列表创建及切片操作花费的时间），使用多进程后由于获得了更多的CPU执行时间以及更好的利用了CPU的多核特性，明显的减少了程序的执行时间，而且计算量越大效果越明显。当然，如果愿意还可以将多个进程部署在不同的计算机上，做成分布式进程，具体的做法就是通过multiprocessing.managers模块中提供的管理器将<code>Queue</code>对象通过网络共享出来（注册到网络上让其他计算机可以访问），这部分内容也留到爬虫的专题再进行讲解。  </p>
<h2 id="网络编程入门"><a href="#网络编程入门" class="headerlink" title="网络编程入门"></a>网络编程入门</h2><h3 id="计算机网络基础"><a href="#计算机网络基础" class="headerlink" title="计算机网络基础"></a>计算机网络基础</h3><p>计算机网络是独立自主的计算机互联而成的系统的总称，组建计算机网络最主要的目的是实现多台计算机之间的通信和资源共享。今天计算机网络中的设备和计算机网络的用户已经多得不可计数，而计算机网络也可以称得上是一个“复杂巨系统”，对于这样的系统，我们不可能用一两篇文章把它讲清楚，有兴趣的读者可以自行阅读Andrew S.Tanenbaum老师的经典之作《计算机网络》或Kurose和Ross老师合著的《计算机网络:自顶向下方法》来了解计算机网络的相关知识。</p>
<h4 id="计算机网络发展史"><a href="#计算机网络发展史" class="headerlink" title="计算机网络发展史"></a>计算机网络发展史</h4><ol>
<li>1960s - 美国国防部ARPANET项目问世，奠定了分组交换网络的基础。</li>
</ol>
<ol>
<li>1980s - 国际标准化组织（ISO）发布OSI/RM，奠定了网络技术标准化的基础。</li>
</ol>
<ol>
<li>1990s - 英国人<a href="https://zh.wikipedia.org/wiki/%E6%8F%90%E5%A7%86%C2%B7%E6%9F%8F%E5%85%A7%E8%8C%B2-%E6%9D%8E" target="_blank" rel="external">蒂姆·伯纳斯-李</a>发明了图形化的浏览器，浏览器的简单易用性使得计算机网络迅速被普及。</li>
</ol>
<h4 id="TCP-IP模型"><a href="#TCP-IP模型" class="headerlink" title="TCP/IP模型"></a>TCP/IP模型</h4><p>实现网络通信的基础是网络通信协议，这些协议通常是由<a href="https://zh.wikipedia.org/wiki/%E4%BA%92%E8%81%94%E7%BD%91%E5%B7%A5%E7%A8%8B%E4%BB%BB%E5%8A%A1%E7%BB%84" target="_blank" rel="external">互联网工程任务组</a> （IETF）制定的。所谓“协议”就是通信计算机双方必须共同遵从的一组约定，例如怎样建立连接、怎样互相识别等，网络协议的三要素是：语法、语义和时序。构成我们今天使用的Internet的基础的是TCP/IP协议族，所谓协议族就是一系列的协议及其构成的通信模型，我们通常也把这套东西称为TCP/IP模型。与国际标准化组织发布的OSI/RM这个七层模型不同，TCP/IP是一个四层模型，也就是说，该模型将我们使用的网络从逻辑上分解为四个层次，自底向上依次是：网络接口层、网络层、传输层和应用层.</p>
<p>IP通常被翻译为网际协议，它服务于网络层，主要实现了寻址和路由的功能。接入网络的每一台主机都需要有自己的IP地址，IP地址就是主机在计算机网络上的身份标识。当然由于IPv4地址的匮乏，我们平常在家里、办公室以及其他可以接入网络的公共区域上网时获得的IP地址并不是全球唯一的IP地址，而是一个<a href="https://zh.wikipedia.org/zh-hans/%E5%B1%80%E5%9F%9F%E7%BD%91" target="_blank" rel="external">局域网（LAN）</a>中的内部IP地址，通过<a href="https://zh.wikipedia.org/wiki/%E7%BD%91%E7%BB%9C%E5%9C%B0%E5%9D%80%E8%BD%AC%E6%8D%A2" target="_blank" rel="external">网络地址转换（NAT）服务</a>我们也可以实现对网络的访问。计算机网络上有大量的被我们称为“<a href="https://zh.wikipedia.org/wiki/%E8%B7%AF%E7%94%B1%E5%99%A8" target="_blank" rel="external">路由器</a>”的网络中继设备，它们会存储转发我们发送到网络上的数据分组，让从源头发出的数据最终能够找到传送到目的地通路，这项功能就是所谓的路由。</p>
<p>TCP全称传输控制协议，它是基于IP提供的寻址和路由服务而建立起来的负责实现端到端可靠传输的协议，之所以将TCP称为可靠的传输协议是因为TCP向调用者承诺了三件事情：</p>
<ol>
<li>数据不传丢不传错（利用握手、校验和重传机制可以实现）。</li>
<li>流量控制（通过滑动窗口匹配数据发送者和接收者之间的传输速度）。</li>
<li>拥塞控制（通过RTT时间以及对滑动窗口的控制缓解网络拥堵）。</li>
</ol>
<h4 id="网络应用模式"><a href="#网络应用模式" class="headerlink" title="网络应用模式"></a>网络应用模式</h4><ol>
<li>C/S模式和B/S模式。这里的C指的是Client（客户端），通常是一个需要安装到某个宿主操作系统上的应用程序；而B指的是Browser（浏览器），它几乎是所有图形化操作系统都默认安装了的一个应用软件；通过C或B都可以实现对S（服务器）的访问。关于二者的比较和讨论在网络上有一大堆的文章，在此我们就不再浪费笔墨了。</li>
<li>去中心化的网络应用模式。不管是B/S还是C/S都需要服务器的存在，服务器就是整个应用模式的中心，而去中心化的网络应用通常没有固定的服务器或者固定的客户端，所有应用的使用者既可以作为资源的提供者也可以作为资源的访问者。</li>
</ol>
<h3 id="基于HTTP协议的网络资源访问"><a href="#基于HTTP协议的网络资源访问" class="headerlink" title="基于HTTP协议的网络资源访问"></a>基于HTTP协议的网络资源访问</h3><h4 id="HTTP（超文本传输协议）"><a href="#HTTP（超文本传输协议）" class="headerlink" title="HTTP（超文本传输协议）"></a>HTTP（超文本传输协议）</h4><p>HTTP是超文本传输协议（Hyper-Text Transfer Proctol）的简称，维基百科上对HTTP的解释是：超文本传输协议是一种用于分布式、协作式和超媒体信息系统的应用层协议，它是<a href="https://zh.wikipedia.org/wiki/%E5%85%A8%E7%90%83%E8%B3%87%E8%A8%8A%E7%B6%B2" target="_blank" rel="external">万维网</a>数据通信的基础，设计HTTP最初的目的是为了提供一种发布和接收<a href="https://zh.wikipedia.org/wiki/HTML" target="_blank" rel="external">HTML</a>页面的方法，通过HTTP或者<a href="https://zh.wikipedia.org/wiki/%E8%B6%85%E6%96%87%E6%9C%AC%E4%BC%A0%E8%BE%93%E5%AE%89%E5%85%A8%E5%8D%8F%E8%AE%AE" target="_blank" rel="external">HTTPS</a>（超文本传输安全协议）请求的资源由URI（<a href="https://zh.wikipedia.org/wiki/%E7%B5%B1%E4%B8%80%E8%B3%87%E6%BA%90%E6%A8%99%E8%AD%98%E7%AC%A6" target="_blank" rel="external">统一资源标识符</a>）来标识。关于HTTP的更多内容，我们推荐阅读阮一峰老师的<a href="http://www.ruanyifeng.com/blog/2016/08/http.html" target="_blank" rel="external">《HTTP 协议入门》</a>，简单的说，通过HTTP我们可以获取网络上的（基于字符的）资源，开发中经常会用到的网络API（有的地方也称之为网络数据接口）就是基于HTTP来实现数据传输的。</p>
<h4 id="JSON格式"><a href="#JSON格式" class="headerlink" title="JSON格式"></a>JSON格式</h4><p><strong>JSON</strong>（<strong>J</strong>ava<strong>S</strong>cript <strong>O</strong>bject <strong>N</strong>otation）是一种轻量级的数据交换语言，该语言以易于让人阅读的文字（纯文本）为基础，用来传输由属性值或者序列性的值组成的数据对象。尽管JSON是最初只是Javascript中一种创建对象的字面量语法，但它在当下更是一种独立于语言的数据格式，很多编程语言都支持JSON格式数据的生成和解析，Python内置的json模块也提供了这方面的功能。由于JSON是纯文本，它和<a href="https://zh.wikipedia.org/wiki/XML" target="_blank" rel="external">XML</a>一样都适用于异构系统之间的数据交换，而相较于XML，JSON显得更加的轻便和优雅。下面是表达同样信息的XML和JSON，而JSON的优势是相当直观的。</p>
<p>XML的例子：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span><span class="meta">?&gt;</span></span></div><div class="line"><span class="tag">&lt;<span class="name">message</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">from</span>&gt;</span>Alice<span class="tag">&lt;/<span class="name">from</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">to</span>&gt;</span>Bob<span class="tag">&lt;/<span class="name">to</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">content</span>&gt;</span>Will you marry me?<span class="tag">&lt;/<span class="name">content</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">message</span>&gt;</span></div></pre></td></tr></table></figure>
<p>JSON的例子：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    'from': 'Alice',</div><div class="line">    'to': 'Bob',</div><div class="line">    'content': 'Will you marry me?'</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="requests库"><a href="#requests库" class="headerlink" title="requests库"></a>requests库</h4><p>requests是一个基于HTTP协议来使用网络的第三库，其<a href="http://cn.python-requests.org/zh_CN/latest/" target="_blank" rel="external">官方网站</a>有这样的一句介绍它的话：“Requests是唯一的一个<strong>非转基因</strong>的Python HTTP库，人类可以安全享用。”简单的说，使用requests库可以非常方便的使用HTTP，避免安全缺陷、冗余代码以及“重复发明轮子”（行业黑话，通常用在软件工程领域表示重新创造一个已有的或是早已被优化過的基本方法）。前面的文章中我们已经使用过这个库，下面我们还是通过requests来实现一个访问网络数据接口并从中获取美女图片下载链接然后下载美女图片到本地的例子程序，程序中使用了<a href="https://www.tianapi.com/" target="_blank" rel="external">天行数据</a>提供的网络API。</p>
<p>我们可以先通过pip安装requests及其依赖库。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install requests</div></pre></td></tr></table></figure>
<p>如果使用PyCharm作为开发工具，可以直接在代码中书写<code>import requests</code>，然后通过代码修复功能来自动下载安装requests。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time</div><div class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</div><div class="line"></div><div class="line"><span class="keyword">import</span> requests</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 继承Thread类创建自定义的线程类</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">DownloadHanlder</span><span class="params">(Thread)</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, url)</span>:</span></div><div class="line">        super().__init__()</div><div class="line">        self.url = url</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></div><div class="line">        filename = self.url[self.url.rfind(<span class="string">'/'</span>) + <span class="number">1</span>:]</div><div class="line">        resp = requests.get(self.url)</div><div class="line">        <span class="keyword">with</span> open(<span class="string">'/Users/Hao/'</span> + filename, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</div><div class="line">            f.write(resp.content)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    <span class="comment"># 通过requests模块的get函数获取网络资源</span></div><div class="line">    <span class="comment"># 下面的代码中使用了天行数据接口提供的网络API</span></div><div class="line">    <span class="comment"># 要使用该数据接口需要在天行数据的网站上注册</span></div><div class="line">    <span class="comment"># 然后用自己的Key替换掉下面代码的中APIKey即可</span></div><div class="line">    resp = requests.get(</div><div class="line">        <span class="string">'http://api.tianapi.com/meinv/?key=APIKey&amp;num=10'</span>)</div><div class="line">    <span class="comment"># 将服务器返回的JSON格式的数据解析为字典</span></div><div class="line">    data_model = resp.json()</div><div class="line">    <span class="keyword">for</span> mm_dict <span class="keyword">in</span> data_model[<span class="string">'newslist'</span>]:</div><div class="line">        url = mm_dict[<span class="string">'picUrl'</span>]</div><div class="line">        <span class="comment"># 通过多线程的方式实现图片下载</span></div><div class="line">        DownloadHanlder(url).start()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h3 id="基于传输层协议的套接字编程"><a href="#基于传输层协议的套接字编程" class="headerlink" title="基于传输层协议的套接字编程"></a>基于传输层协议的套接字编程</h3><p>套接字这个词对很多不了解网络编程的人来说显得非常晦涩和陌生，其实说得通俗点，套接字就是一套用<a href="https://zh.wikipedia.org/wiki/C%E8%AF%AD%E8%A8%80" target="_blank" rel="external">C语言</a>写成的应用程序开发库，主要用于实现进程间通信和网络编程，在网络应用开发中被广泛使用。在Python中也可以基于套接字来使用传输层提供的传输服务，并基于此开发自己的网络应用。实际开发中使用的套接字可以分为三类：流套接字（TCP套接字）、数据报套接字和原始套接字。</p>
<h4 id="TCP套接字"><a href="#TCP套接字" class="headerlink" title="TCP套接字"></a>TCP套接字</h4><p>所谓TCP套接字就是使用TCP协议提供的传输服务来实现网络通信的编程接口。在Python中可以通过创建socket对象并指定type属性为SOCK_STREAM来使用TCP套接字。由于一台主机可能拥有多个IP地址，而且很有可能会配置多个不同的服务，所以作为服务器端的程序，需要在创建套接字对象后将其绑定到指定的IP地址和端口上。这里的端口并不是物理设备而是对IP地址的扩展，用于区分不同的服务，例如我们通常将HTTP服务跟80端口绑定，而MySQL数据库服务默认绑定在3306端口，这样当服务器收到用户请求时就可以根据端口号来确定到底用户请求的是HTTP服务器还是数据库服务器提供的服务。端口的取值范围是0~65535，而1024以下的端口我们通常称之为“著名端口”（留给像FTP、HTTP、SMTP等“著名服务”使用的端口，有的地方也称之为“周知端口”），自定义的服务通常不使用这些端口，除非自定义的是HTTP或FTP这样的著名服务。</p>
<p>下面的代码实现了一个提供时间日期的服务器。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> socket, SOCK_STREAM, AF_INET</div><div class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    <span class="comment"># 1.创建套接字对象并指定使用哪种传输服务</span></div><div class="line">    <span class="comment"># family=AF_INET - IPv4地址</span></div><div class="line">    <span class="comment"># family=AF_INET6 - IPv6地址</span></div><div class="line">    <span class="comment"># type=SOCK_STREAM - TCP套接字</span></div><div class="line">    <span class="comment"># type=SOCK_DGRAM - UDP套接字</span></div><div class="line">    <span class="comment"># type=SOCK_RAW - 原始套接字</span></div><div class="line">    server = socket(family=AF_INET, type=SOCK_STREAM)</div><div class="line">    <span class="comment"># 2.绑定IP地址和端口(端口用于区分不同的服务)</span></div><div class="line">    <span class="comment"># 同一时间在同一个端口上只能绑定一个服务否则报错</span></div><div class="line">    server.bind((<span class="string">'192.168.1.2'</span>, <span class="number">6789</span>))</div><div class="line">    <span class="comment"># 3.开启监听 - 监听客户端连接到服务器</span></div><div class="line">    <span class="comment"># 参数512可以理解为连接队列的大小</span></div><div class="line">    server.listen(<span class="number">512</span>)</div><div class="line">    print(<span class="string">'服务器启动开始监听...'</span>)</div><div class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">        <span class="comment"># 4.通过循环接收客户端的连接并作出相应的处理(提供服务)</span></div><div class="line">        <span class="comment"># accept方法是一个阻塞方法如果没有客户端连接到服务器代码不会向下执行</span></div><div class="line">        <span class="comment"># accept方法返回一个元组其中的第一个元素是客户端对象</span></div><div class="line">        <span class="comment"># 第二个元素是连接到服务器的客户端的地址(由IP和端口两部分构成)</span></div><div class="line">        client, addr = server.accept()</div><div class="line">        print(str(addr) + <span class="string">'连接到了服务器.'</span>)</div><div class="line">        <span class="comment"># 5.发送数据</span></div><div class="line">        client.send(str(datetime.now()).encode(<span class="string">'utf-8'</span>))</div><div class="line">        <span class="comment"># 6.断开连接</span></div><div class="line">        client.close()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>运行服务器程序后我们可以通过Windows系统的telnet来访问该服务器。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">telnet 192.168.1.2 6789</div></pre></td></tr></table></figure>
<p>当然我们也可以通过Python的程序来实现TCP客户端的功能，相较于实现服务器程序，实现客户端程序就简单多了，代码如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> socket</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    <span class="comment"># 1.创建套接字对象默认使用IPv4和TCP协议</span></div><div class="line">    client = socket()</div><div class="line">    <span class="comment"># 2.连接到服务器(需要指定IP地址和端口)</span></div><div class="line">    client.connect((<span class="string">'192.168.1.2'</span>, <span class="number">6789</span>))</div><div class="line">    <span class="comment"># 3.从服务器接收数据</span></div><div class="line">    print(client.recv(<span class="number">1024</span>).decode(<span class="string">'utf-8'</span>))</div><div class="line">    client.close()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>需要注意的是，上面的服务器并没有使用多线程或者异步I/O的处理方式，这也就意味着当服务器与一个客户端处于通信状态时，其他的客户端只能排队等待。很显然，这样的服务器并不能满足我们的需求，我们需要的服务器是能够同时接纳和处理多个用户请求的。下面我们来设计一个使用多线程技术处理多个用户请求的服务器，该服务器会向连接到服务器的客户端发送一张图片。</p>
<p>服务器端代码：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> socket, SOCK_STREAM, AF_INET</div><div class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64encode</div><div class="line"><span class="keyword">from</span> json <span class="keyword">import</span> dumps</div><div class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    </div><div class="line">    <span class="comment"># 自定义线程类</span></div><div class="line">    <span class="class"><span class="keyword">class</span> <span class="title">FileTransferHandler</span><span class="params">(Thread)</span>:</span></div><div class="line"></div><div class="line">        <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, cclient)</span>:</span></div><div class="line">            super().__init__()</div><div class="line">            self.cclient = cclient</div><div class="line"></div><div class="line">        <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></div><div class="line">            my_dict = &#123;&#125;</div><div class="line">            my_dict[<span class="string">'filename'</span>] = <span class="string">'guido.jpg'</span></div><div class="line">            <span class="comment"># JSON是纯文本不能携带二进制数据</span></div><div class="line">            <span class="comment"># 所以图片的二进制数据要处理成base64编码</span></div><div class="line">            my_dict[<span class="string">'filedata'</span>] = data</div><div class="line">            <span class="comment"># 通过dumps函数将字典处理成JSON字符串</span></div><div class="line">            json_str = dumps(my_dict)</div><div class="line">            <span class="comment"># 发送JSON字符串</span></div><div class="line">            self.cclient.send(json_str.encode(<span class="string">'utf-8'</span>))</div><div class="line">            self.cclient.close()</div><div class="line"></div><div class="line">    <span class="comment"># 1.创建套接字对象并指定使用哪种传输服务</span></div><div class="line">    server = socket()</div><div class="line">    <span class="comment"># 2.绑定IP地址和端口(区分不同的服务)</span></div><div class="line">    server.bind((<span class="string">'192.168.1.2'</span>, <span class="number">5566</span>))</div><div class="line">    <span class="comment"># 3.开启监听 - 监听客户端连接到服务器</span></div><div class="line">    server.listen(<span class="number">512</span>)</div><div class="line">    print(<span class="string">'服务器启动开始监听...'</span>)</div><div class="line">    <span class="keyword">with</span> open(<span class="string">'guido.jpg'</span>, <span class="string">'rb'</span>) <span class="keyword">as</span> f:</div><div class="line">        <span class="comment"># 将二进制数据处理成base64再解码成字符串</span></div><div class="line">        data = b64encode(f.read()).decode(<span class="string">'utf-8'</span>)</div><div class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">        client, addr = server.accept()</div><div class="line">        <span class="comment"># 启动一个线程来处理客户端的请求</span></div><div class="line">        FileTransferHandler(client).start()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>客户端代码：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> socket</div><div class="line"><span class="keyword">from</span> json <span class="keyword">import</span> loads</div><div class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64decode</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    client = socket()</div><div class="line">    client.connect((<span class="string">'192.168.1.2'</span>, <span class="number">5566</span>))</div><div class="line">    <span class="comment"># 定义一个保存二进制数据的对象</span></div><div class="line">    in_data = bytes()</div><div class="line">    <span class="comment"># 由于不知道服务器发送的数据有多大每次接收1024字节</span></div><div class="line">    data = client.recv(<span class="number">1024</span>)</div><div class="line">    <span class="keyword">while</span> data:</div><div class="line">        <span class="comment"># 将收到的数据拼接起来</span></div><div class="line">        in_data += data</div><div class="line">        data = client.recv(<span class="number">1024</span>)</div><div class="line">    <span class="comment"># 将收到的二进制数据解码成JSON字符串并转换成字典</span></div><div class="line">    <span class="comment"># loads函数的作用就是将JSON字符串转成字典对象</span></div><div class="line">    my_dict = loads(in_data.decode(<span class="string">'utf-8'</span>))</div><div class="line">    filename = my_dict[<span class="string">'filename'</span>]</div><div class="line">    filedata = my_dict[<span class="string">'filedata'</span>].encode(<span class="string">'utf-8'</span>)</div><div class="line">    <span class="keyword">with</span> open(<span class="string">'/Users/Hao/'</span> + filename, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</div><div class="line">        <span class="comment"># 将base64格式的数据解码成二进制数据并写入文件</span></div><div class="line">        f.write(b64decode(filedata))</div><div class="line">    print(<span class="string">'图片已保存.'</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>在这个案例中，我们使用了JSON作为数据传输的格式（通过JSON格式对传输的数据进行了序列化和反序列化的操作），但是JSON并不能携带二进制数据，因此对图片的二进制数据进行了Base64编码的处理。Base64是一种用64个字符表示所有二进制数据的编码方式，通过将二进制数据每6位一组的方式重新组织，刚好可以使用0~9的数字、大小写字母以及“+”和“/”总共64个字符表示从<code>000000</code>到<code>111111</code>的64种状态。<a href="https://zh.wikipedia.org/wiki/Base64" target="_blank" rel="external">维基百科</a>上有关于Base64编码的详细讲解，不熟悉Base64的读者可以自行阅读。</p>
<blockquote>
<p><strong>说明</strong>：上面的代码主要为了讲解网络编程的相关内容因此并没有对异常状况进行处理，请读者自行添加异常处理代码来增强程序的健壮性。</p>
</blockquote>
<h4 id="UDP套接字"><a href="#UDP套接字" class="headerlink" title="UDP套接字"></a>UDP套接字</h4><p>传输层除了有可靠的传输协议TCP之外，还有一种非常轻便的传输协议叫做用户数据报协议，简称UDP。TCP和UDP都是提供端到端传输服务的协议，二者的差别就如同打电话和发短信的区别，后者不对传输的可靠性和可达性做出任何承诺从而避免了TCP中握手和重传的开销，所以在强调性能和而不是数据完整性的场景中（例如传输网络音视频数据），UDP可能是更好的选择。可能大家会注意到一个现象，就是在观看网络视频时，有时会出现卡顿，有时会出现花屏，这无非就是部分数据传丢或传错造成的。在Python中也可以使用UDP套接字来创建网络应用，对此我们不进行赘述，有兴趣的读者可以自行研究。</p>
<h2 id="网络应用开发"><a href="#网络应用开发" class="headerlink" title="网络应用开发"></a>网络应用开发</h2><h3 id="发送电子邮件"><a href="#发送电子邮件" class="headerlink" title="发送电子邮件"></a>发送电子邮件</h3><p>在即时通信软件如此发达的今天，电子邮件仍然是互联网上使用最为广泛的应用之一，公司向应聘者发出录用通知、网站向用户发送一个激活账号的链接、银行向客户推广它们的理财产品等几乎都是通过电子邮件来完成的，而这些任务应该都是由程序自动完成的。</p>
<p>就像我们可以用HTTP（超文本传输协议）来访问一个网站一样，发送邮件要使用SMTP（简单邮件传输协议），SMTP也是一个建立在TCP（传输控制协议）提供的可靠数据传输服务的基础上的应用级协议，它规定了邮件的发送者如何跟发送邮件的服务器进行通信的细节，而Python中的smtplib模块将这些操作简化成了几个简单的函数。</p>
<p>下面的代码演示了如何在Python发送邮件。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> smtplib <span class="keyword">import</span> SMTP</div><div class="line"><span class="keyword">from</span> email.header <span class="keyword">import</span> Header</div><div class="line"><span class="keyword">from</span> email.mime.text <span class="keyword">import</span> MIMEText</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    <span class="comment"># 请自行修改下面的邮件发送者和接收者</span></div><div class="line">    sender = <span class="string">'abcdefg@126.com'</span></div><div class="line">    receivers = [<span class="string">'uvwxyz@qq.com'</span>, <span class="string">'uvwxyz@126.com'</span>]</div><div class="line">    message = MIMEText(<span class="string">'用Python发送邮件的示例代码.'</span>, <span class="string">'plain'</span>, <span class="string">'utf-8'</span>)</div><div class="line">    message[<span class="string">'From'</span>] = Header(<span class="string">'王大锤'</span>, <span class="string">'utf-8'</span>)</div><div class="line">    message[<span class="string">'To'</span>] = Header(<span class="string">'骆昊'</span>, <span class="string">'utf-8'</span>)</div><div class="line">    message[<span class="string">'Subject'</span>] = Header(<span class="string">'示例代码实验邮件'</span>, <span class="string">'utf-8'</span>)</div><div class="line">    smtper = SMTP(<span class="string">'smtp.126.com'</span>)</div><div class="line">    <span class="comment"># 请自行修改下面的登录口令</span></div><div class="line">    smtper.login(sender, <span class="string">'secretpass'</span>)</div><div class="line">    smtper.sendmail(sender, receivers, message.as_string())</div><div class="line">    print(<span class="string">'邮件发送完成!'</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>如果要发送带有附件的邮件，那么可以按照下面的方式进行操作。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> smtplib <span class="keyword">import</span> SMTP</div><div class="line"><span class="keyword">from</span> email.header <span class="keyword">import</span> Header</div><div class="line"><span class="keyword">from</span> email.mime.text <span class="keyword">import</span> MIMEText</div><div class="line"><span class="keyword">from</span> email.mime.image <span class="keyword">import</span> MIMEImage</div><div class="line"><span class="keyword">from</span> email.mime.multipart <span class="keyword">import</span> MIMEMultipart</div><div class="line"></div><div class="line"><span class="keyword">import</span> urllib</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    <span class="comment"># 创建一个带附件的邮件消息对象</span></div><div class="line">    message = MIMEMultipart()</div><div class="line">    </div><div class="line">    <span class="comment"># 创建文本内容</span></div><div class="line">    text_content = MIMEText(<span class="string">'附件中有本月数据请查收'</span>, <span class="string">'plain'</span>, <span class="string">'utf-8'</span>)</div><div class="line">    message[<span class="string">'Subject'</span>] = Header(<span class="string">'本月数据'</span>, <span class="string">'utf-8'</span>)</div><div class="line">    <span class="comment"># 将文本内容添加到邮件消息对象中</span></div><div class="line">    message.attach(text_content)</div><div class="line"></div><div class="line">    <span class="comment"># 读取文件并将文件作为附件添加到邮件消息对象中</span></div><div class="line">    <span class="keyword">with</span> open(<span class="string">'/Users/Hao/Desktop/hello.txt'</span>, <span class="string">'rb'</span>) <span class="keyword">as</span> f:</div><div class="line">        txt = MIMEText(f.read(), <span class="string">'base64'</span>, <span class="string">'utf-8'</span>)</div><div class="line">        txt[<span class="string">'Content-Type'</span>] = <span class="string">'text/plain'</span></div><div class="line">        txt[<span class="string">'Content-Disposition'</span>] = <span class="string">'attachment; filename=hello.txt'</span></div><div class="line">        message.attach(txt)</div><div class="line">    <span class="comment"># 读取文件并将文件作为附件添加到邮件消息对象中</span></div><div class="line">    <span class="keyword">with</span> open(<span class="string">'/Users/Hao/Desktop/汇总数据.xlsx'</span>, <span class="string">'rb'</span>) <span class="keyword">as</span> f:</div><div class="line">        xls = MIMEText(f.read(), <span class="string">'base64'</span>, <span class="string">'utf-8'</span>)</div><div class="line">        xls[<span class="string">'Content-Type'</span>] = <span class="string">'application/vnd.ms-excel'</span></div><div class="line">        xls[<span class="string">'Content-Disposition'</span>] = <span class="string">'attachment; filename=month-data.xlsx'</span></div><div class="line">        message.attach(xls)</div><div class="line">    </div><div class="line">    <span class="comment"># 创建SMTP对象</span></div><div class="line">    smtper = SMTP(<span class="string">'smtp.126.com'</span>)</div><div class="line">    <span class="comment"># 开启安全连接</span></div><div class="line">    <span class="comment"># smtper.starttls()</span></div><div class="line">    sender = <span class="string">'abcdefg@126.com'</span></div><div class="line">    receivers = [<span class="string">'uvwxyz@qq.com'</span>]</div><div class="line">    <span class="comment"># 登录到SMTP服务器</span></div><div class="line">    <span class="comment"># 请注意此处不是使用密码而是邮件客户端授权码进行登录</span></div><div class="line">    <span class="comment"># 对此有疑问的读者可以联系自己使用的邮件服务器客服</span></div><div class="line">    smtper.login(sender, <span class="string">'secretpass'</span>)</div><div class="line">    <span class="comment"># 发送邮件</span></div><div class="line">    smtper.sendmail(sender, receivers, message.as_string())</div><div class="line">    <span class="comment"># 与邮件服务器断开连接</span></div><div class="line">    smtper.quit()</div><div class="line">    print(<span class="string">'发送完成!'</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h3 id="发送短信"><a href="#发送短信" class="headerlink" title="发送短信"></a>发送短信</h3><p>发送短信也是项目中常见的功能，网站的注册码、验证码、营销信息基本上都是通过短信来发送给用户的。在下面的代码中我们使用了<a href="http://www.ihuyi.com/" target="_blank" rel="external">互亿无线</a>短信平台（该平台为注册用户提供了50条免费短信以及常用开发语言发送短信的demo，可以登录该网站并在用户自服务页面中对短信进行配置）提供的API接口实现了发送短信的服务，当然国内的短信平台很多，读者可以根据自己的需要进行选择（通常会考虑费用预算、短信达到率、使用的难易程度等指标），如果需要在商业项目中使用短信服务建议购买短信平台提供的套餐服务。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> urllib.parse</div><div class="line"><span class="keyword">import</span> http.client</div><div class="line"><span class="keyword">import</span> json</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    host  = <span class="string">"106.ihuyi.com"</span></div><div class="line">    sms_send_uri = <span class="string">"/webservice/sms.php?method=Submit"</span></div><div class="line">    <span class="comment"># 下面的参数需要填入自己注册的账号和对应的密码</span></div><div class="line">    params = urllib.parse.urlencode(&#123;<span class="string">'account'</span>: <span class="string">'你自己的账号'</span>, <span class="string">'password'</span> : <span class="string">'你自己的密码'</span>, <span class="string">'content'</span>: <span class="string">'您的验证码是：147258。请不要把验证码泄露给其他人。'</span>, <span class="string">'mobile'</span>: <span class="string">'接收者的手机号'</span>, <span class="string">'format'</span>:<span class="string">'json'</span> &#125;)</div><div class="line">    print(params)</div><div class="line">    headers = &#123;<span class="string">'Content-type'</span>: <span class="string">'application/x-www-form-urlencoded'</span>, <span class="string">'Accept'</span>: <span class="string">'text/plain'</span>&#125;</div><div class="line">    conn = http.client.HTTPConnection(host, port=<span class="number">80</span>, timeout=<span class="number">30</span>)</div><div class="line">    conn.request(<span class="string">'POST'</span>, sms_send_uri, params, headers)</div><div class="line">    response = conn.getresponse()</div><div class="line">    response_str = response.read()</div><div class="line">    jsonstr = response_str.decode(<span class="string">'utf-8'</span>)</div><div class="line">    print(json.loads(jsonstr))</div><div class="line">    conn.close()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h2 id="Web前端概述"><a href="#Web前端概述" class="headerlink" title="Web前端概述"></a>Web前端概述</h2><h3 id="HTML简史"><a href="#HTML简史" class="headerlink" title="HTML简史"></a>HTML简史</h3><ol>
<li>1991年10月：一个非正式CERN（<a href="https://zh.wikipedia.org/wiki/%E6%AD%90%E6%B4%B2%E6%A0%B8%E5%AD%90%E7%A0%94%E7%A9%B6%E7%B5%84%E7%B9%94" target="_blank" rel="external">欧洲核子研究中心</a>）文件首次公开18个HTML标签，这个文件的作者是物理学家<a href="https://zh.wikipedia.org/wiki/%E8%92%82%E5%A7%86%C2%B7%E4%BC%AF%E7%BA%B3%E6%96%AF-%E6%9D%8E" target="_blank" rel="external">蒂姆·伯纳斯-李</a>，因此他是<a href="https://zh.wikipedia.org/wiki/%E4%B8%87%E7%BB%B4%E7%BD%91" target="_blank" rel="external">万维网</a>的发明者，也是<a href="https://zh.wikipedia.org/wiki/%E4%B8%87%E7%BB%B4%E7%BD%91%E8%81%94%E7%9B%9F" target="_blank" rel="external">万维网联盟</a>的主席。</li>
<li>1995年11月：HTML 2.0标准发布（RFC 1866）。</li>
<li>1997年1月：HTML 3.2作为<a href="https://zh.wikipedia.org/wiki/W3C" target="_blank" rel="external">W3C</a>推荐标准发布。</li>
<li>1997年12月：HTML 4.0作为W3C推荐标准发布。</li>
<li>1999年12月：HTML4.01作为W3C推荐标准发布。</li>
<li>2008年1月：HTML5由W3C作为工作草案发布。</li>
<li>2011年5月：W3C将HTML5推进至“最终征求”（Last Call）阶段。</li>
<li>2012年12月：W3C指定HTML5作为“候选推荐”阶段。</li>
<li>2014年10月：HTML5作为稳定W3C推荐标准发布，这意味着HTML5的标准化已经完成。</li>
</ol>
<h4 id="HTML5新特性"><a href="#HTML5新特性" class="headerlink" title="HTML5新特性"></a>HTML5新特性</h4><ol>
<li>引入原生多媒体支持（audio和video标签）</li>
<li>引入可编程内容（canvas标签）</li>
<li>引入语义Web（article、aside、details、figure、footer、header、nav、section、summary等标签）</li>
<li>引入新的表单控件（日历、邮箱、搜索等）</li>
<li>引入对离线存储更好的支持</li>
<li>引入对定位、拖放、WebSocket、后台任务等的支持</li>
</ol>
<h3 id="使用标签承载内容"><a href="#使用标签承载内容" class="headerlink" title="使用标签承载内容"></a>使用标签承载内容</h3><h4 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h4><ul>
<li>head<ul>
<li>title</li>
<li>meta</li>
</ul>
</li>
<li>body</li>
</ul>
<h4 id="文本"><a href="#文本" class="headerlink" title="文本"></a>文本</h4><ul>
<li>标题和段落</li>
<li>粗体和斜体</li>
<li>上标和下标</li>
<li>空白（白色空间折叠）</li>
<li>折行和水平标尺</li>
<li>语义化标记<ul>
<li>加粗和强调</li>
<li>引用</li>
<li>缩写词和首字母缩写词</li>
<li>引文</li>
<li>所有者联系信息</li>
<li>内容的修改</li>
</ul>
</li>
</ul>
<h4 id="列表（list）"><a href="#列表（list）" class="headerlink" title="列表（list）"></a>列表（list）</h4><ul>
<li>有序列表（ordered list）</li>
<li>无序列表（unordered list）</li>
<li>定义列表（definition list）</li>
</ul>
<h4 id="链接（anchor）"><a href="#链接（anchor）" class="headerlink" title="链接（anchor）"></a>链接（anchor）</h4><ul>
<li>页面链接</li>
<li>锚链接</li>
<li>功能链接</li>
</ul>
<h4 id="图像（image）"><a href="#图像（image）" class="headerlink" title="图像（image）"></a>图像（image）</h4><ul>
<li>图像存储位置</li>
<li>图像及其宽高</li>
<li>选择正确的图像格式<ul>
<li>JPEG</li>
<li>GIF</li>
<li>PNG</li>
</ul>
</li>
<li>矢量图</li>
<li>figure标签</li>
</ul>
<h4 id="表格（table）"><a href="#表格（table）" class="headerlink" title="表格（table）"></a>表格（table）</h4><ul>
<li>基本的表格结构</li>
<li>表格的标题</li>
<li>跨行和跨列</li>
<li>长表格</li>
</ul>
<h4 id="表单（form）"><a href="#表单（form）" class="headerlink" title="表单（form）"></a>表单（form）</h4><ul>
<li>如何收集信息</li>
<li>表单控件（input）<ul>
<li>文本框 / 密码框 / 文本域</li>
<li>单选按钮 / 复选按钮 / 下拉列表</li>
<li>提交按钮 / 图像按钮 / 文件上传</li>
</ul>
</li>
<li>组合表单元素<ul>
<li>fieldset / legend</li>
</ul>
</li>
<li>HTML5的表单控件<ul>
<li>日期</li>
<li>电子邮件 / URL</li>
<li>搜索</li>
</ul>
</li>
</ul>
<h4 id="音视频（audio-video）"><a href="#音视频（audio-video）" class="headerlink" title="音视频（audio / video）"></a>音视频（audio / video）</h4><ul>
<li>视频格式和播放器</li>
<li>视频托管服务</li>
<li>添加视频的准备工作</li>
<li>video标签和属性</li>
<li>audio标签和属性</li>
</ul>
<h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><ul>
<li>文档类型</li>
<li>注释</li>
<li>属性<ul>
<li>id</li>
<li>class</li>
</ul>
</li>
<li>块级元素 / 行级元素</li>
<li>内联框架（internal frame）</li>
<li>页面信息（meta）</li>
<li>转义字符（实体替换符）</li>
</ul>
<h3 id="使用CSS渲染页面"><a href="#使用CSS渲染页面" class="headerlink" title="使用CSS渲染页面"></a>使用CSS渲染页面</h3><h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><ul>
<li>CSS的作用</li>
<li>CSS的工作原理</li>
<li>规则、属性和值</li>
</ul>
<h4 id="颜色（color）"><a href="#颜色（color）" class="headerlink" title="颜色（color）"></a>颜色（color）</h4><ul>
<li>如何指定颜色</li>
<li>颜色术语和颜色对比</li>
<li>背景色</li>
</ul>
<h4 id="文本（text-font）"><a href="#文本（text-font）" class="headerlink" title="文本（text / font）"></a>文本（text / font）</h4><ul>
<li>文本的大小和字型(font-size / font-family)</li>
<li>斜体、粗体、大写和下划线(font-weight / font-style / text-decoration)</li>
<li>行间距(line-height)、字母间距(letter-spacing)和单词间距(word-spacing)</li>
<li>对齐(text-align)方式和缩进(text-ident)</li>
<li>链接样式（:link / :visited / :active / :hover）</li>
<li>CSS3新属性<ul>
<li>投影</li>
<li>首字母和首行文本(p:first-letter / p:first-line)</li>
<li>响应用户</li>
</ul>
</li>
</ul>
<h4 id="盒子（box-model）"><a href="#盒子（box-model）" class="headerlink" title="盒子（box model）"></a>盒子（box model）</h4><ul>
<li>盒子大小的控制（width / height）</li>
<li>盒子的边框、外边距和内边距（border /  margin / padding）</li>
<li>盒子的显示和隐藏（display / visibility）</li>
<li>CSS3新属性<ul>
<li>边框图像（border-image）</li>
<li>投影（border-shadow）</li>
<li>圆角（border-radius）</li>
</ul>
</li>
</ul>
<h4 id="列表、表格和表单"><a href="#列表、表格和表单" class="headerlink" title="列表、表格和表单"></a>列表、表格和表单</h4><ul>
<li>列表的项目符号（list-style）</li>
<li>表格的边框和背景（border-collapse）</li>
<li>表单控件的外观</li>
<li>表单控件的对齐</li>
<li>浏览器的开发者工具</li>
</ul>
<h4 id="图像"><a href="#图像" class="headerlink" title="图像"></a>图像</h4><ul>
<li>控制图像的大小（display: inline-block）</li>
<li>对齐图像</li>
<li>背景图像（background / background-image / background-repeat / background-position）</li>
</ul>
<h4 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h4><ul>
<li>控制元素的位置（position / z-index）<ul>
<li>普通流</li>
<li>相对定位</li>
<li>绝对定位</li>
<li>固定定位</li>
<li>浮动元素（float / clear）</li>
</ul>
</li>
<li>网站布局<ul>
<li>HTML5布局</li>
</ul>
</li>
<li>适配屏幕尺寸<ul>
<li>固定宽度布局</li>
<li>流体布局</li>
<li>布局网格</li>
</ul>
</li>
</ul>
<h3 id="使用JavaScript控制行为"><a href="#使用JavaScript控制行为" class="headerlink" title="使用JavaScript控制行为"></a>使用JavaScript控制行为</h3><h4 id="JavaScript基本语法"><a href="#JavaScript基本语法" class="headerlink" title="JavaScript基本语法"></a>JavaScript基本语法</h4><ul>
<li>语句和注释</li>
<li>变量和数据类型<ul>
<li>声明和赋值</li>
<li>简单数据类型和复杂数据类型</li>
<li>变量的命名规则</li>
</ul>
</li>
<li>表达式和运算符<ul>
<li>赋值运算符</li>
<li>算术运算符</li>
<li>比较运算符</li>
<li>逻辑运算符</li>
</ul>
</li>
<li>分支结构<ul>
<li>if…else…</li>
<li>switch…case…default…</li>
</ul>
</li>
<li>循环结构<ul>
<li>for循环</li>
<li>while循环</li>
<li>do…while循环</li>
</ul>
</li>
<li>数组<ul>
<li>创建数组</li>
<li>操作数组中的元素</li>
</ul>
</li>
<li>函数<ul>
<li>声明函数</li>
<li>调用函数</li>
<li>参数和返回值</li>
<li>匿名函数</li>
<li>立即调用函数</li>
</ul>
</li>
</ul>
<h4 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h4><ul>
<li>对象的概念</li>
<li>创建对象的字面量语法</li>
<li>访问成员运算符</li>
<li>创建对象的构造函数语法<ul>
<li>this关键字</li>
</ul>
</li>
<li>添加和删除属性<ul>
<li>delete关键字</li>
</ul>
</li>
<li>全局对象<ul>
<li>Number / String / Boolean</li>
<li>Date / Math / RegEx / Array</li>
</ul>
</li>
</ul>
<h4 id="BOM"><a href="#BOM" class="headerlink" title="BOM"></a>BOM</h4><ul>
<li>window对象的属性和方法</li>
<li>history对象<ul>
<li>forward() / back() / go()</li>
</ul>
</li>
<li>location对象</li>
<li>navigator对象</li>
<li>screen对象</li>
</ul>
<h4 id="DOM"><a href="#DOM" class="headerlink" title="DOM"></a>DOM</h4><ul>
<li>DOM树</li>
<li>访问元素<ul>
<li>getElementById() / querySelector()</li>
<li>getElementsByClassName() / getElementsByTagName() / querySelectorAll()</li>
<li>parentNode / previousSibling / nextSibling / firstChild / lastChild<ul>
<li>操作元素</li>
<li>nodeValue</li>
<li>innerHTML / textContent / createElement() / createTextNode() / appendChild() / removeChild()</li>
<li>className / id / hasAttribute() / getAttribute() / setAttribute() / removeAttribute()</li>
<li>事件处理</li>
<li>事件类型</li>
</ul>
</li>
<li>UI事件：load / unload / error / resize / scroll</li>
<li>键盘事件：keydown / keyup / keypress</li>
<li>鼠标事件：click / dbclick / mousedown / mouseup / mousemove / mouseover / mouseout</li>
<li>焦点事件：focus / blur</li>
<li>表单事件：input / change / submit / reset / cut / copy / paste / select<ul>
<li>事件绑定</li>
</ul>
</li>
<li>HTML事件处理程序（不推荐使用，因为要做到标签与代码分离）</li>
<li>传统的DOM事件处理程序（只能附加一个回调函数）</li>
<li>事件监听器（旧的浏览器中不被支持）<ul>
<li>事件流：事件捕获 / 事件冒泡</li>
<li>事件对象（低版本IE中的window.event）</li>
</ul>
</li>
<li>target（低版本IE中的srcElement）</li>
<li>type</li>
<li>cancelable</li>
<li>preventDefault()</li>
<li>stopPropagation()（低版本IE中的cancelBubble）<ul>
<li>鼠标事件 - 事件发生的位置</li>
</ul>
</li>
<li>屏幕位置：screenX和screenY</li>
<li>页面位置：pageX和pageY</li>
<li>客户端位置：clientX和clientY<ul>
<li>键盘事件 - 哪个键被按下了</li>
</ul>
</li>
<li>keyCode属性</li>
<li>String.fromCharCode(event.keyCode)<ul>
<li>HTML5事件</li>
</ul>
</li>
<li>DOMContentLoaded</li>
<li>hashchange</li>
<li>beforeunload</li>
</ul>
</li>
</ul>
<h4 id="JavaScript-API"><a href="#JavaScript-API" class="headerlink" title="JavaScript API"></a>JavaScript API</h4><ul>
<li>HTML5中的API：geolocation / localStorage / sessionStorage / history</li>
</ul>
<h3 id="使用jQuery"><a href="#使用jQuery" class="headerlink" title="使用jQuery"></a>使用jQuery</h3><h4 id="jQuery概述"><a href="#jQuery概述" class="headerlink" title="jQuery概述"></a>jQuery概述</h4><ol>
<li>Write Less Do More（用更少的代码来完成更多的工作）</li>
<li>使用CSS选择器来查找元素（更简单更方便）</li>
<li>使用jQuery方法来操作元素（解决浏览器兼容性问题、应用于所有元素并施加多个方法）</li>
</ol>
<h4 id="引入jQuery"><a href="#引入jQuery" class="headerlink" title="引入jQuery"></a>引入jQuery</h4><ul>
<li>下载jQuery的开发版和压缩版</li>
<li>从CDN加载jQuery</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/jquery/3.3.1/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript">    <span class="built_in">window</span>.jQuery || </span></div><div class="line"><span class="handlebars"><span class="xml">        document.write('<span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/jquery-3.3.1.min.js"</span>&gt;</span><span class="undefined"></span></span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>')</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="查找元素"><a href="#查找元素" class="headerlink" title="查找元素"></a>查找元素</h4><ul>
<li>选择器<ul>
<li>* / element / #id / .class / selector1, selector2</li>
<li>ancestor descendant / parent&gt;child / previous+next / previous~siblings </li>
</ul>
</li>
<li>筛选器<ul>
<li>基本筛选器：:not(selector) / :first / :last / :even / :odd / :eq(index) / :gt(index) / :lt(index) / :animated / :focus</li>
<li>内容筛选器：:contains(‘…’) / :empty / :parent / :has(selector)</li>
<li>可见性筛选器：:hidden / :visible</li>
<li>子节点筛选器：:nth-child(expr) / :first-child / :last-child / :only-child</li>
<li>属性筛选器：[attribute] / [attribute=’value’] / [attribute!=’value’] / [attribute^=’value’] / [attribute$=’value’] / [attribute|=’value’] / [attribute~=’value’]</li>
</ul>
</li>
<li>表单：:input / :text / :password / :radio / :checkbox / :submit / :image / :reset / :button / :file / :selected / :enabled / :disabled / :checked</li>
</ul>
<h4 id="执行操作"><a href="#执行操作" class="headerlink" title="执行操作"></a>执行操作</h4><ul>
<li>内容操作<ul>
<li>获取/修改内容：html() / text() / replaceWith() / remove()</li>
<li>获取/设置元素：before() / after() / prepend() / append() / remove() / clone() / unwrap() / detach() / empty() / add()</li>
<li>获取/修改属性：attr() / removeAttr() / addClass() / removeClass() / css()</li>
<li>获取/设置表单值：val()</li>
</ul>
</li>
<li>查找操作<ul>
<li>查找方法：find() /  parent() / children() / siblings() / next() / nextAll() / prev() / prevAll()</li>
<li>筛选器：filter() / not() / has() / is() / contains()</li>
<li>索引编号：eq()</li>
</ul>
</li>
<li>尺寸和位置<ul>
<li>尺寸相关：height() / width() / innerHeight() / innerWidth() / outerWidth() / outerHeight()</li>
<li>位置相关：offset() / position() / scrollLeft() / scrollTop()</li>
</ul>
</li>
<li>特效和动画<ul>
<li>基本动画：show() / hide() / toggle()</li>
<li>消失出现：fadeIn() / fadeOut() / fadeTo() / fadeToggle()</li>
<li>滑动效果：slideDown() / slideUp() / slideToggle()</li>
<li>自定义：delay() / stop() / animate()</li>
</ul>
</li>
<li>事件<ul>
<li>文档加载：ready() / load()</li>
<li>用户交互：on() / off()</li>
</ul>
</li>
</ul>
<h4 id="链式操作"><a href="#链式操作" class="headerlink" title="链式操作"></a>链式操作</h4><h4 id="检测页面是否可用"><a href="#检测页面是否可用" class="headerlink" title="检测页面是否可用"></a>检测页面是否可用</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript">    $(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></div><div class="line"><span class="undefined">        </span></div><div class="line"><span class="undefined">    &#125;);</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript">    $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></div><div class="line"><span class="undefined">        </span></div><div class="line"><span class="undefined">    &#125;);</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="jQuery插件"><a href="#jQuery插件" class="headerlink" title="jQuery插件"></a>jQuery插件</h4><ul>
<li>jQuery Validation</li>
<li>jQuery Treeview</li>
<li>jQuery Autocomplete</li>
<li>jQuery UI</li>
</ul>
<h4 id="避免和其他库的冲突"><a href="#避免和其他库的冲突" class="headerlink" title="避免和其他库的冲突"></a>避免和其他库的冲突</h4><p>先引入其他库再引入jQuery的情况。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"other.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"jquery.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">    jQuery.noConflict();</span></div><div class="line"><span class="actionscript">    jQuery(<span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></div><div class="line"><span class="actionscript">        jQuery(<span class="string">'div'</span>).hide();</span></div><div class="line"><span class="undefined">    &#125;);</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<p>先引入jQuery再引入其他库的情况。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"jquery.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"other.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="actionscript">    jQuery(<span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></div><div class="line"><span class="actionscript">        jQuery(<span class="string">'div'</span>).hide();</span></div><div class="line"><span class="undefined">    &#125;);</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="使用Ajax"><a href="#使用Ajax" class="headerlink" title="使用Ajax"></a>使用Ajax</h4><ul>
<li>原生的Ajax</li>
<li>基于jQuery的Ajax<ul>
<li>加载内容</li>
<li>提交表单</li>
</ul>
</li>
</ul>
<h3 id="使用Bootstrap"><a href="#使用Bootstrap" class="headerlink" title="使用Bootstrap"></a>使用Bootstrap</h3><h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><ol>
<li>支持主流的浏览器和移动设备</li>
<li>容易上手</li>
<li>响应式设计</li>
</ol>
<h4 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h4><ol>
<li>网格系统</li>
<li>封装的CSS</li>
<li>现成的组件</li>
<li>JavaScript插件</li>
</ol>
<h2 id="玩转Linux操作系统"><a href="#玩转Linux操作系统" class="headerlink" title="玩转Linux操作系统"></a>玩转Linux操作系统</h2><h3 id="操作系统发展史"><a href="#操作系统发展史" class="headerlink" title="操作系统发展史"></a>操作系统发展史</h3><h3 id="Linux概述"><a href="#Linux概述" class="headerlink" title="Linux概述"></a>Linux概述</h3><p>Linux是一个通用操作系统。一个操作系统要负责任务调度、内存分配、处理外围设备I/O等操作。操作系统通常由内核和系统程序（设备驱动、底层库、shell、服务程序等）两部分组成。</p>
<p>Linux内核是芬兰人Linus Torvalds开发的，于1991年9月发布。而Linux操作系统作为Internet时代的产物，它是由全世界许多开发者共同合作开发的，是一个自由的操作系统（注意是自由不是免费）。</p>
<h3 id="Linux系统优点"><a href="#Linux系统优点" class="headerlink" title="Linux系统优点"></a>Linux系统优点</h3><ol>
<li>通用操作系统，不跟特定的硬件绑定。</li>
<li>用C语言编写，有可移植性，有内核编程接口。</li>
<li>支持多用户和多任务，支持安全的分层文件系统。</li>
<li>大量的实用程序，完善的网络功能以及强大的支持文档。</li>
<li>可靠的安全性和良好的稳定性，对开发者更友好。</li>
</ol>
<h3 id="基础命令"><a href="#基础命令" class="headerlink" title="基础命令"></a>基础命令</h3><p>Linux系统的命令通常都是如下所示的格式：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">命令名称 [命名参数] [命令对象]</div></pre></td></tr></table></figure>
<ol>
<li><p>获取登录信息 - <strong>w</strong> / <strong>who</strong> / <strong>last</strong>。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">[root@izwz97tbgo9lkabnat2lo8z ~]# w</div><div class="line"> 23:31:16 up 12:16,  2 users,  load average: 0.00, 0.01, 0.05</div><div class="line">USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT</div><div class="line">root     pts/0    182.139.66.250   23:03    4.00s  0.02s  0.00s w</div><div class="line">jackfrue pts/1    182.139.66.250   23:26    3:56   0.00s  0.00s -bash</div><div class="line">[root@izwz97tbgo9lkabnat2lo8z ~]# who</div><div class="line">root     pts/0        2018-04-12 23:03 (182.139.66.250)</div><div class="line">jackfrued pts/1        2018-04-12 23:26 (182.139.66.250)</div><div class="line">[root@izwz97tbgo9lkabnat2lo8z ~]# who am i</div><div class="line">root     pts/0        2018-04-12 23:03 (182.139.66.250)</div></pre></td></tr></table></figure>
</li>
<li><p>查看自己使用的Shell - <strong>ps</strong>。</p>
<p>Shell也被称为“壳”，它是用户与内核交流的翻译官，简单的说就是人与计算机交互的接口。目前很多Linux系统默认的Shell都是bash（<u>B</u>ourne <u>A</u>gain <u>SH</u>ell），因为它可以使用Tab键进行命令补全、可以保存历史命令、可以方便的配置环境变量以及执行批处理操作等。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@izwz97tbgo9lkabnat2lo8z ~]# ps</div><div class="line">  PID TTY          TIME CMD</div><div class="line"> 3531 pts/0    00:00:00 bash</div><div class="line"> 3553 pts/0    00:00:00 ps</div></pre></td></tr></table></figure>
</li>
<li><p>查看命令的说明 - <strong>whatis</strong>。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@izwz97tbgo9lkabnat2lo8z ~]# whatis ps</div><div class="line">ps (1)        - report a snapshot of the current processes.</div><div class="line">[root@izwz97tbgo9lkabnat2lo8z ~]# whatis python</div><div class="line">python (1)    - an interpreted, interactive, object-oriented programming language</div></pre></td></tr></table></figure>
</li>
<li><p>查看命令的位置 - <strong>which</strong> / <strong>whereis</strong>。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[root@izwz97tbgo9lkabnat2lo8z ~]# whereis ps</div><div class="line">ps: /usr/bin/ps /usr/share/man/man1/ps.1.gz</div><div class="line">[root@izwz97tbgo9lkabnat2lo8z ~]# whereis python</div><div class="line">python: /usr/bin/python /usr/bin/python2.7 /usr/lib/python2.7 /usr/lib64/python2.7 /etc/python /usr/include/python2.7 /usr/share/man/man1/python.1.gz</div><div class="line">[root@izwz97tbgo9lkabnat2lo8z ~]# which ps</div><div class="line">/usr/bin/ps</div><div class="line">[root@izwz97tbgo9lkabnat2lo8z ~]# which python</div><div class="line">/usr/bin/python</div></pre></td></tr></table></figure>
</li>
<li><p>查看帮助文档 - <strong>man</strong> / <strong>info</strong> / <strong>apropos</strong>。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">[root@izwz97tbgo9lkabnat2lo8z ~]# ps --help</div><div class="line">Usage:</div><div class="line"> ps [options]</div><div class="line"> Try 'ps --help &lt;simple|list|output|threads|misc|all&gt;'</div><div class="line">  or 'ps --help &lt;s|l|o|t|m|a&gt;'</div><div class="line"> for additional help text.</div><div class="line">For more details see ps(1).</div><div class="line">[root@izwz97tbgo9lkabnat2lo8z ~]# man ps</div><div class="line">PS(1)                                User Commands                                PS(1)</div><div class="line">NAME</div><div class="line">       ps - report a snapshot of the current processes.</div><div class="line">SYNOPSIS</div><div class="line">       ps [options]</div><div class="line">DESCRIPTION</div><div class="line">...</div><div class="line">[root@izwz97tbgo9lkabnat2lo8z ~]# info ps</div><div class="line">...</div></pre></td></tr></table></figure>
</li>
<li><p>切换用户 - <strong>su</strong>。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@izwz97tbgo9lkabnat2lo8z ~]# su hellokitty</div><div class="line">[hellokitty@izwz97tbgo9lkabnat2lo8z root]$</div></pre></td></tr></table></figure>
</li>
<li><p>以管理员身份执行命令 - <strong>sudo</strong>。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[jackfrued@izwz97tbgo9lkabnat2lo8z ~]$ ls /root</div><div class="line">ls: cannot open directory /root: Permission denied</div><div class="line">[jackfrued@izwz97tbgo9lkabnat2lo8z ~]$ sudo ls /root</div><div class="line">[sudo] password for jackfrued:</div><div class="line">calendar.py  code  error.txt  hehe  hello.c  index.html  myconf  result.txt</div></pre></td></tr></table></figure>
<blockquote>
<p><strong>说明</strong>：如果希望用户能够以管理员身份执行命令，用户必须在sudoers（/etc/sudoers）名单中。</p>
</blockquote>
</li>
<li><p>登入登出相关 - <strong>logout</strong> / <strong>exit</strong> / <strong>adduser</strong> / <strong>userdel</strong> / <strong>passwd</strong> / <strong>ssh</strong>。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">[root@izwz97tbgo9lkabnat2lo8z ~]# adduser jackfrued</div><div class="line">[root@izwz97tbgo9lkabnat2lo8z ~]# passwd jackfrued</div><div class="line">Changing password for user jackfrued.</div><div class="line">New password:</div><div class="line">Retype new password:</div><div class="line">passwd: all authentication tokens updated successfully.</div><div class="line">[root@izwz97tbgo9lkabnat2lo8z ~]# ssh hellokitty@1.2.3.4</div><div class="line">hellokitty@1.2.3.4's password:</div><div class="line">Last login: Thu Apr 12 23:05:32 2018 from 10.12.14.16</div><div class="line">[hellokitty@izwz97tbgo9lkabnat2lo8z ~]$ logout</div><div class="line">Connection to 1.2.3.4 closed.</div><div class="line">[root@izwz97tbgo9lkabnat2lo8z ~]#</div></pre></td></tr></table></figure>
</li>
<li><p>查看系统和主机名 - <strong>uname</strong> / <strong>hostname</strong>。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[root@izwz97tbgo9lkabnat2lo8z ~]# uname</div><div class="line">Linux</div><div class="line">[root@izwz97tbgo9lkabnat2lo8z ~]# hostname</div><div class="line">izwz97tbgo9lkabnat2lo8z</div><div class="line">[root@iZwz97tbgo9lkabnat2lo8Z ~]# cat /etc/centos-release</div><div class="line">CentOS Linux release 7.4.1708 (Core)</div></pre></td></tr></table></figure>
</li>
<li><p>重启和关机 - <strong>reboot</strong> / <strong>init 6</strong> / <strong>shutdown</strong> / <strong>init 0</strong>。</p>
</li>
<li><p>查看历史命令 - <strong>history</strong>。</p>
</li>
</ol>
<h3 id="实用程序"><a href="#实用程序" class="headerlink" title="实用程序"></a>实用程序</h3><h4 id="文件和文件夹操作"><a href="#文件和文件夹操作" class="headerlink" title="文件和文件夹操作"></a>文件和文件夹操作</h4><ol>
<li><p>创建/删除目录 - <strong>mkdir</strong> / <strong>rmdir</strong>。</p>
</li>
<li><p>创建/删除文件 - <strong>touch</strong> / <strong>rm</strong>。</p>
<ul>
<li>touch命令用于创建空白文件或修改文件时间。在Linux系统中一个文件有三种时间：<ul>
<li>更改内容的时间（mtime）</li>
<li>更改权限的时间（ctime）</li>
<li>最后访问时间（atime）</li>
</ul>
</li>
</ul>
</li>
<li><p>切换和查看当前工作目录 - <strong>cd</strong> / <strong>pwd</strong>。</p>
</li>
<li><p>查看目录内容 - <strong>ls</strong>。</p>
</li>
<li><p>查看文件内容 - <strong>cat</strong> / <strong>head</strong> / <strong>tail</strong> / <strong>more</strong> / <strong>less</strong>。</p>
</li>
<li><p>拷贝/移动文件 - <strong>cp</strong> / <strong>mv</strong>。</p>
</li>
<li><p>查看文件及内容 - <strong>find</strong> / <strong>grep</strong>。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[root@izwz97tbgo9lkabnat2lo8z ~]# find -name *.html</div><div class="line">./index.html</div><div class="line">./code/index.html</div><div class="line">[root@izwz97tbgo9lkabnat2lo8z ~]# grep "&lt;script&gt;" . -R -n</div><div class="line">./index.html:15:                &lt;script&gt;</div><div class="line">./code/index.html:2884: &lt;script&gt;</div><div class="line">./code/foo.html:2:&lt;!--STATUS OK--&gt;&lt;html&gt; &lt;head&gt;&lt;meta ...</div></pre></td></tr></table></figure>
</li>
<li><p>符号链接 - <strong>ln</strong>。</p>
</li>
<li><p>压缩和归档 - <strong>gzip</strong> / <strong>gunzip</strong> / <strong>xz</strong> / <strong>tar</strong>。</p>
</li>
<li><p>其他工具 - <strong>sort</strong> / <strong>uniq</strong> / <strong>diff</strong> / <strong>file</strong> / <strong>wc</strong>。</p>
</li>
</ol>
<h4 id="管道和重定向"><a href="#管道和重定向" class="headerlink" title="管道和重定向"></a>管道和重定向</h4><ol>
<li>管道的使用 - <strong>|</strong>。</li>
<li>输出重定向和错误重定向 - <strong>></strong> / <strong>2></strong>。</li>
<li>输入重定向 - <strong>\&lt;</strong>。</li>
</ol>
<h4 id="别名"><a href="#别名" class="headerlink" title="别名"></a>别名</h4><ol>
<li><strong>alias</strong></li>
<li><strong>unalias</strong></li>
</ol>
<h4 id="其他程序"><a href="#其他程序" class="headerlink" title="其他程序"></a>其他程序</h4><ol>
<li>时间和日期 - <strong>date</strong> / <strong>cal</strong>。</li>
<li>录制操作脚本 - <strong>script</strong>。</li>
<li>给用户发送消息 - <strong>mesg</strong> / <strong>write</strong> / <strong>wall</strong> / <strong>mail</strong>。</li>
</ol>
<h3 id="文件系统"><a href="#文件系统" class="headerlink" title="文件系统"></a>文件系统</h3><h4 id="文件和路径"><a href="#文件和路径" class="headerlink" title="文件和路径"></a>文件和路径</h4><ol>
<li>命名规则</li>
<li>扩展名</li>
<li>隐藏文件</li>
<li>工作目录和主目录</li>
<li>绝对路径和相对路径</li>
</ol>
<h4 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h4><ol>
<li>/bin - 基本命令的二进制文件</li>
<li>/boot - 引导加载程序的静态文件</li>
<li>/dev - 设备文件</li>
<li>/etc - 配置文件</li>
<li>/home - 用户主目录的父目录</li>
<li>/lib - 共享库文件</li>
<li>/lib64 - 共享64位库文件</li>
<li>/lost+found - 存放未链接文件</li>
<li>/media - 自动识别设备的挂载目录</li>
<li>/mnt - 临时挂载文件系统的挂载点</li>
<li>/opt - 可选插件软件包安装位置</li>
<li>/proc -  内核和进程信息</li>
<li>/root - root账户主目录</li>
<li>/run - 存放系统运行时需要的东西</li>
<li>/sbin - 超级用户的二进制文件</li>
<li>/sys - 设备的伪文件系统</li>
<li>/tmp - 临时文件夹</li>
<li>/usr - 用户应用目录</li>
<li>/var - 变量数据目录</li>
</ol>
<h4 id="访问权限"><a href="#访问权限" class="headerlink" title="访问权限"></a>访问权限</h4><ol>
<li><strong>chmod</strong>。</li>
<li><strong>chown</strong>。</li>
</ol>
<h4 id="磁盘管理"><a href="#磁盘管理" class="headerlink" title="磁盘管理"></a>磁盘管理</h4><ol>
<li>列出文件系统的磁盘使用状况 - <strong>df</strong>。</li>
<li>磁盘分区表操作 - <strong>fdisk</strong>。</li>
<li>格式化文件系统 - <strong>mkfs</strong>。</li>
<li>文件系统检查 - <strong>fsck</strong>。</li>
<li>挂载/卸载 - <strong>mount</strong> / <strong>umount</strong>。</li>
</ol>
<h3 id="编辑器vim"><a href="#编辑器vim" class="headerlink" title="编辑器vim"></a>编辑器vim</h3><ol>
<li><p>启动和退出</p>
</li>
<li><p>命令模式和编辑模式</p>
</li>
<li><p>光标操作</p>
</li>
<li><p>文本操作</p>
</li>
<li><p>查找和替换</p>
<p>/正则表达式</p>
<p>:1,$s/正则表达式/替换后的内容/gice</p>
<p>g - global</p>
<p>i - ignore case</p>
<p>c - confirm</p>
<p>e - error</p>
</li>
<li><p>参数设定</p>
<p>.vimrc</p>
<p>set ts=4</p>
<p>set nu</p>
</li>
<li><p>高级技巧</p>
<ul>
<li>映射快捷键<ul>
<li>inoremap key:…</li>
</ul>
</li>
<li>录制宏<ul>
<li>在命令模式下输入qa开始录制宏（qa/qb/qc/qd）</li>
<li>执行你的操作，这些操作都会被录制下来</li>
<li>如果要录制的操作完成了，按q结束录制</li>
<li>@a播放宏（1000@a - 将宏播放1000次）</li>
</ul>
</li>
</ul>
</li>
</ol>
<h3 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h3><ol>
<li>HOME</li>
<li>SHELL</li>
<li>HISTSIZE</li>
<li>RANDOM</li>
<li>PATH</li>
</ol>
<h3 id="软件安装和配置"><a href="#软件安装和配置" class="headerlink" title="软件安装和配置"></a>软件安装和配置</h3><h4 id="yum"><a href="#yum" class="headerlink" title="yum"></a>yum</h4><ul>
<li>yum update</li>
<li>yum install / yum remove</li>
<li>yum list / yum search</li>
<li>yum makecache</li>
</ul>
<h4 id="rpm"><a href="#rpm" class="headerlink" title="rpm"></a>rpm</h4><ul>
<li>rpm -ivh --force --nodeps</li>
<li>rpm -e </li>
<li>rpm -qa | grep</li>
</ul>
<h4 id="源代码构建安装"><a href="#源代码构建安装" class="headerlink" title="源代码构建安装"></a>源代码构建安装</h4><ul>
<li>…</li>
<li>make &amp;&amp; make install</li>
</ul>
<h4 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h4><ol>
<li>安装MySQL。</li>
<li>安装Redis。</li>
<li>安装NginX。</li>
</ol>
<h3 id="配置服务"><a href="#配置服务" class="headerlink" title="配置服务"></a>配置服务</h3><ol>
<li>systemctl start / stop / restart / status</li>
<li>systemctl enable / disable</li>
<li>计划任务 - <strong>crontab</strong>。</li>
<li>开机自启。</li>
</ol>
<h3 id="网络访问和管理"><a href="#网络访问和管理" class="headerlink" title="网络访问和管理"></a>网络访问和管理</h3><ol>
<li>通过网络获取资源 - <strong>wget</strong>。<ul>
<li>-b 后台下载模式</li>
<li>-O 下载到指定的目录</li>
<li>-r 递归下载</li>
</ul>
</li>
<li>显示/操作网络配置（旧） - <strong>ipconfig</strong>。</li>
<li>显示/操作网络配置（新） - <strong>ip</strong>。</li>
<li>网络可达性检查 - <strong>ping</strong>。</li>
<li>查看网络服务和端口 - <strong>netstat</strong>。</li>
<li>安全文件拷贝 - <strong>scp</strong>。</li>
<li>安全文件传输 - <strong>sftp</strong>。</li>
</ol>
<h3 id="Shell和Shell编程"><a href="#Shell和Shell编程" class="headerlink" title="Shell和Shell编程"></a>Shell和Shell编程</h3><ol>
<li>通配符。</li>
<li>后台运行。</li>
</ol>
<h3 id="其他内容"><a href="#其他内容" class="headerlink" title="其他内容"></a>其他内容</h3><ol>
<li>awk</li>
<li>sed</li>
<li>xargs  </li>
</ol>
<h2 id="关系型数据入门"><a href="#关系型数据入门" class="headerlink" title="关系型数据入门"></a>关系型数据入门</h2><h3 id="关系型数据概述"><a href="#关系型数据概述" class="headerlink" title="关系型数据概述"></a>关系型数据概述</h3><ol>
<li>数据持久化。</li>
<li>数据库发展史。</li>
<li>关系型数据库特点。</li>
<li>E-R图。</li>
<li>关系型数据库产品。</li>
</ol>
<h3 id="MySQL简介"><a href="#MySQL简介" class="headerlink" title="MySQL简介"></a>MySQL简介</h3><ol>
<li>安装和配置。</li>
<li>常用命令。</li>
</ol>
<h3 id="SQL详解"><a href="#SQL详解" class="headerlink" title="SQL详解"></a>SQL详解</h3><ol>
<li>DDL</li>
<li>DML</li>
<li>DQL</li>
</ol>
<h3 id="Python数据库编程"><a href="#Python数据库编程" class="headerlink" title="Python数据库编程"></a>Python数据库编程</h3><ol>
<li>MySQLdb</li>
<li>PyMySQL</li>
</ol>
<h3 id="ORM概述"><a href="#ORM概述" class="headerlink" title="ORM概述"></a>ORM概述</h3><h2 id="网络爬虫和相关工具"><a href="#网络爬虫和相关工具" class="headerlink" title="网络爬虫和相关工具"></a>网络爬虫和相关工具</h2><h3 id="网络爬虫"><a href="#网络爬虫" class="headerlink" title="网络爬虫"></a>网络爬虫</h3><p>网络爬虫（web crawler），以前经常称之为网络蜘蛛（spider），是按照一定的规则自动浏览万维网并获取信息的机器人程序（或脚本），曾经被广泛的应用于互联网搜索引擎。使用过互联网和浏览器的人都知道，网页中除了供用户阅读的文字信息之外，还包含一些超链接。网络爬虫系统正是通过网页中的超链接信息不断获得网络上的其它页面。正因如此，网络数据采集的过程就像一个爬虫或者蜘蛛在网络上漫游，所以才被形象的称为网络爬虫或者网络蜘蛛。</p>
<h4 id="爬虫的应用领域"><a href="#爬虫的应用领域" class="headerlink" title="爬虫的应用领域"></a>爬虫的应用领域</h4><p>在理想的状态下，所有ICP（Internet Content Provider）都应该为自己的网站提供API接口来共享它们允许其他程序获取的数据，在这种情况下爬虫就不是必需品，国内比较有名的电商平台（如淘宝、京东等）、社交平台（如腾讯微博等）等网站都提供了自己的Open API，但是这类Open API通常会对可以抓取的数据以及抓取数据的频率进行限制。对于大多数的公司而言，及时的获取行业相关数据是企业生存的重要环节之一，然而大部分企业在行业数据方面的匮乏是其与生俱来的短板，合理的利用爬虫来获取数据并从中提取出有价值的信息是至关重要的。当然爬虫还有很多重要的应用领域，以下列举了其中的一部分：</p>
<ol>
<li>搜索引擎</li>
<li>新闻聚合</li>
<li>社交应用</li>
<li>舆情监控</li>
<li>行业数据</li>
</ol>
<h3 id="合法性和背景调研"><a href="#合法性和背景调研" class="headerlink" title="合法性和背景调研"></a>合法性和背景调研</h3><h4 id="爬虫合法性探讨"><a href="#爬虫合法性探讨" class="headerlink" title="爬虫合法性探讨"></a>爬虫合法性探讨</h4><ol>
<li>网络爬虫领域目前还属于拓荒阶段，虽然互联网世界已经通过自己的游戏规则建立起一定的道德规范(Robots协议，全称是“网络爬虫排除标准”)，但法律部分还在建立和完善中，也就是说，现在这个领域暂时还是灰色地带。</li>
<li>“法不禁止即为许可”，如果爬虫就像浏览器一样获取的是前端显示的数据（网页上的公开信息）而不是网站后台的私密敏感信息，就不太担心法律法规的约束，因为目前大数据产业链的发展速度远远超过了法律的完善程度。</li>
<li>在爬取网站的时候，需要限制自己的爬虫遵守Robots协议，同时控制网络爬虫程序的抓取数据的速度；在使用数据的时候，必须要尊重网站的知识产权（从Web 2.0时代开始，虽然Web上的数据很多都是由用户提供的，但是网站平台是投入了运营成本的，当用户在注册和发布内容时，平台通常就已经获得了对数据的所有权、使用权和分发权）。如果违反了这些规定，在打官司的时候败诉几率相当高。</li>
</ol>
<h4 id="Robots-txt文件"><a href="#Robots-txt文件" class="headerlink" title="Robots.txt文件"></a>Robots.txt文件</h4><p>大多数网站都会定义robots.txt文件，下面以淘宝的<a href="http://www.taobao.com/robots.txt" target="_blank" rel="external">robots.txt</a>文件为例，看看该网站对爬虫有哪些限制。</p>
<figure class="highlight http"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">User-agent</span>:  Baiduspider</div><div class="line"><span class="attribute">Allow</span>:  /article</div><div class="line"><span class="attribute">Allow</span>:  /oshtml</div><div class="line"><span class="attribute">Disallow</span>:  /product/</div><div class="line"><span class="attribute">Disallow</span>:  /</div><div class="line"></div><div class="line"><span class="attribute">User-Agent</span>:  Googlebot</div><div class="line"><span class="attribute">Allow</span>:  /article</div><div class="line"><span class="attribute">Allow</span>:  /oshtml</div><div class="line"><span class="attribute">Allow</span>:  /product</div><div class="line"><span class="attribute">Allow</span>:  /spu</div><div class="line"><span class="attribute">Allow</span>:  /dianpu</div><div class="line"><span class="attribute">Allow</span>:  /oversea</div><div class="line"><span class="attribute">Allow</span>:  /list</div><div class="line"><span class="attribute">Disallow</span>:  /</div><div class="line"></div><div class="line"><span class="attribute">User-agent</span>:  Bingbot</div><div class="line"><span class="attribute">Allow</span>:  /article</div><div class="line"><span class="attribute">Allow</span>:  /oshtml</div><div class="line"><span class="attribute">Allow</span>:  /product</div><div class="line"><span class="attribute">Allow</span>:  /spu</div><div class="line"><span class="attribute">Allow</span>:  /dianpu</div><div class="line"><span class="attribute">Allow</span>:  /oversea</div><div class="line"><span class="attribute">Allow</span>:  /list</div><div class="line"><span class="attribute">Disallow</span>:  /</div><div class="line"></div><div class="line"><span class="attribute">User-Agent</span>:  360Spider</div><div class="line"><span class="attribute">Allow</span>:  /article</div><div class="line"><span class="attribute">Allow</span>:  /oshtml</div><div class="line"><span class="attribute">Disallow</span>:  /</div><div class="line"></div><div class="line"><span class="attribute">User-Agent</span>:  Yisouspider</div><div class="line"><span class="attribute">Allow</span>:  /article</div><div class="line"><span class="attribute">Allow</span>:  /oshtml</div><div class="line"><span class="attribute">Disallow</span>:  /</div><div class="line"></div><div class="line"><span class="attribute">User-Agent</span>:  Sogouspider</div><div class="line"><span class="attribute">Allow</span>:  /article</div><div class="line"><span class="attribute">Allow</span>:  /oshtml</div><div class="line"><span class="attribute">Allow</span>:  /product</div><div class="line"><span class="attribute">Disallow</span>:  /</div><div class="line"></div><div class="line"><span class="attribute">User-Agent</span>:  Yahoo!  Slurp</div><div class="line"><span class="attribute">Allow</span>:  /product</div><div class="line"><span class="attribute">Allow</span>:  /spu</div><div class="line"><span class="attribute">Allow</span>:  /dianpu</div><div class="line"><span class="attribute">Allow</span>:  /oversea</div><div class="line"><span class="attribute">Allow</span>:  /list</div><div class="line"><span class="attribute">Disallow</span>:  /</div><div class="line"></div><div class="line"><span class="attribute">User-Agent</span>:  *</div><div class="line"><span class="attribute">Disallow</span>:  /</div></pre></td></tr></table></figure>
<p>注意上面robots.txt第一段的最后一行，通过设置“Disallow: /”禁止百度爬虫访问除了“Allow”规定页面外的其他所有页面。因此当你在百度搜索“淘宝”的时候，搜索结果下方会出现：“由于该网站的robots.txt文件存在限制指令（限制搜索引擎抓取），系统无法提供该页面的内容描述”。百度作为一个搜索引擎，至少在表面上遵守了淘宝网的robots.txt协议，所以用户不能从百度上搜索到淘宝内部的产品信息。</p>
<h3 id="相关工具介绍"><a href="#相关工具介绍" class="headerlink" title="相关工具介绍"></a>相关工具介绍</h3><h4 id="HTTP协议"><a href="#HTTP协议" class="headerlink" title="HTTP协议"></a>HTTP协议</h4><p>在开始讲解爬虫之前，我们稍微对HTTP（超文本传输协议）做一些回顾，因为我们在网页上看到的内容通常是浏览器执行HTML语言得到的结果，而HTTP就是传输HTML数据的协议。HTTP是构建于TCP（传输控制协议）之上应用级协议，它利用了TCP提供的可靠的传输服务实现了Web应用中的数据交换。按照维基百科上的介绍，设计HTTP最初的目的是为了提供一种发布和接收<a href="https://zh.wikipedia.org/wiki/HTML" target="_blank" rel="external">HTML</a>页面的方法，也就是说这个协议是浏览器和Web服务器之间传输的数据的载体。关于这个协议的详细信息以及目前的发展状况，大家可以阅读阮一峰老师的<a href="http://www.ruanyifeng.com/blog/2016/08/http.html" target="_blank" rel="external">《HTTP 协议入门》</a>、<a href="http://www.ruanyifeng.com/blog/2012/05/internet_protocol_suite_part_i.html" target="_blank" rel="external">《互联网协议入门》</a>系列以及<a href="http://www.ruanyifeng.com/blog/2014/09/illustration-ssl.html" target="_blank" rel="external">《图解HTTPS协议》</a>进行了解，下图是我在2009年9月10日凌晨4点在四川省网络通信技术重点实验室用开源协议分析工具Ethereal（抓包工具WireShark的前身）截取的访问百度首页时的HTTP请求和响应的报文（协议数据），由于Ethereal截取的是经过网络适配器的数据，因此可以清晰的看到从物理链路层到应用层的协议数据。</p>
<p>HTTP请求（请求行+请求头+空行+[消息体]）：</p>
<p>HTTP响应（响应行+响应头+空行+消息体）：</p>
<blockquote>
<p>说明：但愿这两张如同泛黄的照片般的截图帮助你大概的了解到HTTP是一个怎样的协议。 </p>
</blockquote>
<h4 id="相关工具"><a href="#相关工具" class="headerlink" title="相关工具"></a>相关工具</h4><ol>
<li>Chrome Developer Tools</li>
</ol>
<ol>
<li>POSTMAN</li>
</ol>
<ol>
<li><p>HTTPie</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> http --header http://www.scu.edu.cn</span></div><div class="line">HTTP/1.1 200 OK</div><div class="line">Accept-Ranges: bytes</div><div class="line">Cache-Control: private, max-age=600</div><div class="line">Connection: Keep-Alive</div><div class="line">Content-Encoding: gzip</div><div class="line">Content-Language: zh-CN</div><div class="line">Content-Length: 14403</div><div class="line">Content-Type: text/html</div><div class="line">Date: Sun, 27 May 2018 15:38:25 GMT</div><div class="line">ETag: "e6ec-56d3032d70a32-gzip"</div><div class="line">Expires: Sun, 27 May 2018 15:48:25 GMT</div><div class="line">Keep-Alive: timeout=5, max=100</div><div class="line">Last-Modified: Sun, 27 May 2018 13:44:22 GMT</div><div class="line">Server: VWebServer</div><div class="line">Vary: User-Agent,Accept-Encoding</div><div class="line">X-Frame-Options: SAMEORIGIN</div></pre></td></tr></table></figure>
</li>
<li><p>BuiltWith：识别网站使用的技术</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt;</div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> builtwith</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>builtwith.parse(<span class="string">'http://www.bootcss.com/'</span>)</div><div class="line">&#123;<span class="string">'web-servers'</span>: [<span class="string">'Nginx'</span>], <span class="string">'font-scripts'</span>: [<span class="string">'Font Awesome'</span>], <span class="string">'javascript-frameworks'</span>: [<span class="string">'Lo-dash'</span>, <span class="string">'Underscore.js'</span>, <span class="string">'Vue.js'</span>, <span class="string">'Zepto'</span>, <span class="string">'jQuery'</span>], <span class="string">'web-frameworks'</span>: [<span class="string">'Twitter Bootstrap'</span>]&#125;</div><div class="line">&gt;&gt;&gt;</div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> ssl</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>ssl._create_default_https_context = ssl._create_unverified_context</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>builtwith.parse(<span class="string">'https://www.jianshu.com/'</span>)</div><div class="line">&#123;<span class="string">'web-servers'</span>: [<span class="string">'Tengine'</span>], <span class="string">'web-frameworks'</span>: [<span class="string">'Twitter Bootstrap'</span>, <span class="string">'Ruby on Rails'</span>], <span class="string">'programming-languages'</span>: [<span class="string">'Ruby'</span>]&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>python-whois：查询网站的所有者</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt;</div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> whois</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>whois.whois(<span class="string">'baidu.com'</span>)</div><div class="line">&#123;<span class="string">'domain_name'</span>: [<span class="string">'BAIDU.COM'</span>, <span class="string">'baidu.com'</span>], <span class="string">'registrar'</span>: <span class="string">'MarkMonitor, Inc.'</span>, <span class="string">'whois_server'</span>: <span class="string">'whois.markmonitor.com'</span>, <span class="string">'referral_url'</span>: <span class="keyword">None</span>, <span class="string">'updated_date'</span>: [datetime.datetime(<span class="number">2017</span>, <span class="number">7</span>, <span class="number">28</span>, <span class="number">2</span>, <span class="number">36</span>, <span class="number">28</span>), datetime.datetime(<span class="number">2017</span>, <span class="number">7</span>, <span class="number">27</span>, <span class="number">19</span>, <span class="number">36</span>, <span class="number">28</span>)], <span class="string">'creation_date'</span>: [datetime.datetime(<span class="number">1999</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">5</span>, <span class="number">17</span>), datetime.datetime(<span class="number">1999</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">17</span>)], <span class="string">'expiration_date'</span>: [datetime.datetime(<span class="number">2026</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">5</span>, <span class="number">17</span>), datetime.datetime(<span class="number">2026</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">0</span>, <span class="number">0</span>)], <span class="string">'name_servers'</span>: [<span class="string">'DNS.BAIDU.COM'</span>, <span class="string">'NS2.BAIDU.COM'</span>, <span class="string">'NS3.BAIDU.COM'</span>, <span class="string">'NS4.BAIDU.COM'</span>, <span class="string">'NS7.BAIDU.COM'</span>, <span class="string">'dns.baidu.com'</span>, <span class="string">'ns4.baidu.com'</span>, <span class="string">'ns3.baidu.com'</span>, <span class="string">'ns7.baidu.com'</span>, <span class="string">'ns2.baidu.com'</span>], <span class="string">'status'</span>: [<span class="string">'clientDeleteProhibited https://icann.org/epp#clientDeleteProhibited'</span>, <span class="string">'clientTransferProhibited https://icann.org/epp#clientTransferProhibited'</span>, <span class="string">'clientUpdateProhibited https://icann.org/epp#clientUpdateProhibited'</span>, <span class="string">'serverDeleteProhibited https://icann.org/epp#serverDeleteProhibited'</span>, <span class="string">'serverTransferProhibited https://icann.org/epp#serverTransferProhibited'</span>, <span class="string">'serverUpdateProhibited https://icann.org/epp#serverUpdateProhibited'</span>, <span class="string">'clientUpdateProhibited (https://www.icann.org/epp#clientUpdateProhibited)'</span>, <span class="string">'clientTransferProhibited (https://www.icann.org/epp#clientTransferProhibited)'</span>, <span class="string">'clientDeleteProhibited (https://www.icann.org/epp#clientDeleteProhibited)'</span>, <span class="string">'serverUpdateProhibited (https://www.icann.org/epp#serverUpdateProhibited)'</span>, <span class="string">'serverTransferProhibited (https://www.icann.org/epp#serverTransferProhibited)'</span>, <span class="string">'serverDeleteProhibited (https://www.icann.org/epp#serverDeleteProhibited)'</span>], <span class="string">'emails'</span>: [<span class="string">'abusecomplaints@markmonitor.com'</span>, <span class="string">'whoisrelay@markmonitor.com'</span>], <span class="string">'dnssec'</span>: <span class="string">'unsigned'</span>, <span class="string">'name'</span>: <span class="keyword">None</span>, <span class="string">'org'</span>: <span class="string">'Beijing Baidu Netcom Science Technology Co., Ltd.'</span>, <span class="string">'address'</span>: <span class="keyword">None</span>, <span class="string">'city'</span>: <span class="keyword">None</span>, <span class="string">'state'</span>: <span class="string">'Beijing'</span>, <span class="string">'zipcode'</span>: <span class="keyword">None</span>, <span class="string">'country'</span>: <span class="string">'CN'</span>&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>robotparser：解析robots.txt的工具</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> urllib <span class="keyword">import</span> robotparser</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>parser = robotparser.RobotFileParser()</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>parser.set_url(<span class="string">'https://www.taobao.com/robots.txt'</span>)</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>parser.read()</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>parser.can_fetch(<span class="string">'Hellokitty'</span>, <span class="string">'http://www.taobao.com/article'</span>)</div><div class="line"><span class="keyword">False</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>parser.can_fetch(<span class="string">'Baiduspider'</span>, <span class="string">'http://www.taobao.com/article'</span>)</div><div class="line"><span class="keyword">True</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>parser.can_fetch(<span class="string">'Baiduspider'</span>, <span class="string">'http://www.taobao.com/product'</span>)</div><div class="line"><span class="keyword">False</span></div></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="一个简单的爬虫"><a href="#一个简单的爬虫" class="headerlink" title="一个简单的爬虫"></a>一个简单的爬虫</h3><p>一个基本的爬虫通常分为数据采集（网页下载）、数据处理（网页解析）和数据存储（将有用的信息持久化）三个部分的内容，当然更为高级的爬虫在数据采集和处理时会使用并发编程或分布式技术，其中可能还包括调度器和后台管理程序（监控爬虫的工作状态以及检查数据抓取的结果）。</p>
<ol>
<li>设定抓取目标（种子页面）并获取网页。</li>
<li>当服务器无法访问时，设置重试次数。</li>
<li>在需要的时候设置用户代理（否则无法访问页面）。</li>
<li>对获取的页面进行必要的解码操作。</li>
<li>通过正则表达式获取页面中的链接。</li>
<li>对链接进行进一步的处理（获取页面并重复上面的动作）。</li>
<li>将有用的信息进行持久化（以备后续的处理）。</li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> urllib.error <span class="keyword">import</span> URLError</div><div class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlopen</div><div class="line"></div><div class="line"><span class="keyword">import</span> re</div><div class="line"><span class="keyword">import</span> pymysql</div><div class="line"><span class="keyword">import</span> ssl</div><div class="line"></div><div class="line"><span class="keyword">from</span> pymysql <span class="keyword">import</span> Error</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 通过指定的字符集对页面进行解码(不是每个网站都将字符集设置为utf-8)</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">decode_page</span><span class="params">(page_bytes, charsets=<span class="params">(<span class="string">'utf-8'</span>,)</span>)</span>:</span></div><div class="line">    page_html = <span class="keyword">None</span></div><div class="line">    <span class="keyword">for</span> charset <span class="keyword">in</span> charsets:</div><div class="line">        <span class="keyword">try</span>:</div><div class="line">            page_html = page_bytes.decode(charset)</div><div class="line">            <span class="keyword">break</span></div><div class="line">        <span class="keyword">except</span> UnicodeDecodeError:</div><div class="line">            <span class="keyword">pass</span></div><div class="line">            <span class="comment"># logging.error('Decode:', error)</span></div><div class="line">    <span class="keyword">return</span> page_html</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 获取页面的HTML代码(通过递归实现指定次数的重试操作)</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_page_html</span><span class="params">(seed_url, *, retry_times=<span class="number">3</span>, charsets=<span class="params">(<span class="string">'utf-8'</span>,)</span>)</span>:</span></div><div class="line">    page_html = <span class="keyword">None</span></div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        page_html = decode_page(urlopen(seed_url).read(), charsets)</div><div class="line">    <span class="keyword">except</span> URLError:</div><div class="line">        <span class="comment"># logging.error('URL:', error)</span></div><div class="line">        <span class="keyword">if</span> retry_times &gt; <span class="number">0</span>:</div><div class="line">            <span class="keyword">return</span> get_page_html(seed_url, retry_times=retry_times - <span class="number">1</span>,</div><div class="line">                                 charsets=charsets)</div><div class="line">    <span class="keyword">return</span> page_html</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 从页面中提取需要的部分(通常是链接也可以通过正则表达式进行指定)</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_matched_parts</span><span class="params">(page_html, pattern_str, pattern_ignore_case=re.I)</span>:</span></div><div class="line">    pattern_regex = re.compile(pattern_str, pattern_ignore_case)</div><div class="line">    <span class="keyword">return</span> pattern_regex.findall(page_html) <span class="keyword">if</span> page_html <span class="keyword">else</span> []</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 开始执行爬虫程序并对指定的数据进行持久化操作</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">start_crawl</span><span class="params">(seed_url, match_pattern, *, max_depth=<span class="number">-1</span>)</span>:</span></div><div class="line">    conn = pymysql.connect(host=<span class="string">'localhost'</span>, port=<span class="number">3306</span>,</div><div class="line">                           database=<span class="string">'crawler'</span>, user=<span class="string">'root'</span>,</div><div class="line">                           password=<span class="string">'123456'</span>, charset=<span class="string">'utf8'</span>)</div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        <span class="keyword">with</span> conn.cursor() <span class="keyword">as</span> cursor:</div><div class="line">            url_list = [seed_url]</div><div class="line">            <span class="comment"># 通过下面的字典避免重复抓取并控制抓取深度</span></div><div class="line">            visited_url_list = &#123;seed_url: <span class="number">0</span>&#125;</div><div class="line">            <span class="keyword">while</span> url_list:</div><div class="line">                current_url = url_list.pop(<span class="number">0</span>)</div><div class="line">                depth = visited_url_list[current_url]</div><div class="line">                <span class="keyword">if</span> depth != max_depth:</div><div class="line">                    page_html = get_page_html(current_url, charsets=(<span class="string">'utf-8'</span>, <span class="string">'gbk'</span>, <span class="string">'gb2312'</span>))</div><div class="line">                    links_list = get_matched_parts(page_html, match_pattern)</div><div class="line">                    param_list = []</div><div class="line">                    <span class="keyword">for</span> link <span class="keyword">in</span> links_list:</div><div class="line">                        <span class="keyword">if</span> link <span class="keyword">not</span> <span class="keyword">in</span> visited_url_list:</div><div class="line">                            visited_url_list[link] = depth + <span class="number">1</span></div><div class="line">                            page_html = get_page_html(link, charsets=(<span class="string">'utf-8'</span>, <span class="string">'gbk'</span>, <span class="string">'gb2312'</span>))</div><div class="line">                            headings = get_matched_parts(page_html, <span class="string">r'&lt;h1&gt;(.*)&lt;span'</span>)</div><div class="line">                            <span class="keyword">if</span> headings:</div><div class="line">                                param_list.append((headings[<span class="number">0</span>], link))</div><div class="line">                    cursor.executemany(<span class="string">'insert into tb_result values (default, %s, %s)'</span>,</div><div class="line">                                       param_list)</div><div class="line">                    conn.commit()</div><div class="line">    <span class="keyword">except</span> Error:</div><div class="line">        <span class="keyword">pass</span></div><div class="line">        <span class="comment"># logging.error('SQL:', error)</span></div><div class="line">    <span class="keyword">finally</span>:</div><div class="line">        conn.close()</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    ssl._create_default_https_context = ssl._create_unverified_context</div><div class="line">    start_crawl(<span class="string">'http://sports.sohu.com/nba_a.shtml'</span>,</div><div class="line">                <span class="string">r'&lt;a[^&gt;]+test=a\s[^&gt;]*href=["\'](.*?)["\']'</span>,</div><div class="line">                max_depth=<span class="number">2</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>注意事项：</p>
<ol>
<li><p>处理相对链接。有的时候我们从页面中获取的链接不是一个完整的绝对链接而是一个相对链接，这种情况下需要将其与URL前缀进行拼接（urllib.parse中的urljoin函数可以完成此项操作）。</p>
</li>
<li><p>设置代理服务。有些网站会限制访问的区域（例如美国的Netflix屏蔽了很多国家的访问），有些爬虫需要隐藏自己的身份，在这种情况下可以设置代理服务器（urllib.request中的ProxyHandler就是用来进行此项操作）。</p>
</li>
<li><p>限制下载速度。如果我们的爬虫获取网页的速度过快，可能就会面临被封禁或者产生“损害动产”的风险（这个可能会导致吃官司且败诉哦），可以在两次下载之间添加延时从而对爬虫进行限速。</p>
</li>
<li><p>避免爬虫陷阱。有些网站会动态生成页面内容，这会导致产生无限多的页面（例如在线万年历等）。可以通过记录到达当前页面经过了多少个链接（链接深度）来解决该问题，当达到事先设定的最大深度时爬虫就不再像队列中添加该网页中的链接了。</p>
</li>
<li><p>SSL相关问题。在使用<code>urlopen</code>打开一个HTTPS链接时会验证一次SSL证书，如果不做出处理会产生错误提示“SSL: CERTIFICATE_VERIFY_FAILED”，可以通过以下两种方式加以解决：</p>
<ul>
<li><p>使用未经验证的上下文</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> ssl</div><div class="line"></div><div class="line">request = urllib.request.Request(url=<span class="string">'...'</span>, headers=&#123;...&#125;) </div><div class="line">context = ssl._create_unverified_context()</div><div class="line">web_page = urllib.request.urlopen(request, context=context)</div></pre></td></tr></table></figure>
</li>
<li><p>设置全局的取消证书验证</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> ssl</div><div class="line"></div><div class="line">ssl._create_default_https_context = ssl._create_unverified_context</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ol>
<h2 id="数据采集和解析"><a href="#数据采集和解析" class="headerlink" title="数据采集和解析"></a>数据采集和解析</h2><p>通过上一个章节，我们已经了解到了开发一个爬虫需要做的工作以及一些常见的问题，至此我们可以对爬虫开发需要做的工作以及相关的技术做一个简单的汇总，可能有些库我们之前并没有使用过，不过别担心，这些内容我们都会讲到的。</p>
<ol>
<li>下载数据 - urllib / requests / aiohttp。</li>
<li>解析数据 - re / lxml / beautifulsoup4（bs4）/ pyquery。</li>
<li>缓存和持久化 - pymysql / redis / sqlalchemy / peewee / pymongo。</li>
<li>生成摘要 - hashlib。</li>
<li>序列化和压缩 - pickle / json / zlib。</li>
<li>调度器 - 进程 / 线程 / 协程。</li>
</ol>
<h3 id="HTML页面分析"><a href="#HTML页面分析" class="headerlink" title="HTML页面分析"></a>HTML页面分析</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, world!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个神奇的网站！<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">hr</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>这是一个例子程序<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>静夜思<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"foo"</span>&gt;</span>床前明月光<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"bar"</span>&gt;</span>疑似地上霜<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"foo"</span>&gt;</span>举头望明月<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.baidu.com"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>低头思故乡<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"foo"</span> <span class="attr">href</span>=<span class="string">"http://www.qq.com"</span>&gt;</span>腾讯网<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./img/pretty-girl.png"</span> <span class="attr">alt</span>=<span class="string">"美女"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./img/hellokitty.png"</span> <span class="attr">alt</span>=<span class="string">"凯蒂猫"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"/static/img/pretty-girl.png"</span> <span class="attr">alt</span>=<span class="string">"美女"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">table</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>上场时间<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>得分<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>篮板<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>助攻<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p>如果你对上面的代码并不感到陌生，那么你一定知道HTML页面通常由三部分构成，分别是：用来承载内容的Tag（标签）、负责渲染页面的CSS（层叠样式表）以及控制交互式行为的JavaScript。通常，我们可以在浏览器的右键菜单中通过“查看网页源代码”的方式获取网页的代码并了解页面的结构；当然，我们也可以通过浏览器提供的开发人员工具来了解网页更多的信息。</p>
<h4 id="使用requests获取页面"><a href="#使用requests获取页面" class="headerlink" title="使用requests获取页面"></a>使用requests获取页面</h4><ol>
<li>GET请求和POST请求。</li>
<li>URL参数和请求头。</li>
<li>复杂的POST请求（文件上传）。</li>
<li>操作Cookie。</li>
<li>设置代理服务器。</li>
<li>超时设置。</li>
</ol>
<blockquote>
<p>说明：关于requests的详细用法可以参考它的<a href="http://docs.python-requests.org/zh_CN/latest/user/quickstart.html" target="_blank" rel="external">官方文档</a>。</p>
</blockquote>
<h3 id="四种采集方式"><a href="#四种采集方式" class="headerlink" title="四种采集方式"></a>四种采集方式</h3><h4 id="四种采集方式的比较"><a href="#四种采集方式的比较" class="headerlink" title="四种采集方式的比较"></a>四种采集方式的比较</h4><table>
<thead>
<tr>
<th>抓取方法</th>
<th>速度</th>
<th>使用难度</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>正则表达式</td>
<td>快</td>
<td>困难</td>
<td>常用正则表达式<br>在线正则表达式测试</td>
</tr>
<tr>
<td>lxml</td>
<td>快</td>
<td>一般</td>
<td>需要安装C语言依赖库<br>唯一支持XML的解析器</td>
</tr>
<tr>
<td>Beautiful</td>
<td>快/慢（取决于解析器）</td>
<td>简单</td>
<td></td>
</tr>
<tr>
<td>PyQuery</td>
<td>较快</td>
<td>简单</td>
<td>Python版的jQuery</td>
</tr>
</tbody>
</table>
<blockquote>
<p>说明：Beautiful的解析器包括：Python标准库（html.parser）、lxml的HTML解析器、lxml的XML解析器和html5lib。</p>
</blockquote>
<h4 id="BeautifulSoup的使用"><a href="#BeautifulSoup的使用" class="headerlink" title="BeautifulSoup的使用"></a>BeautifulSoup的使用</h4><ol>
<li>遍历文档树<ul>
<li>获取标签</li>
<li>获取标签属性</li>
<li>获取标签内容</li>
<li>获取子（孙）节点</li>
<li>获取父节点/祖先节点</li>
<li>获取兄弟节点</li>
</ul>
</li>
<li>搜索树节点<ul>
<li>find / find_all：字符串、正则表达式、列表、True、函数或Lambda。</li>
<li>select_one / select：CSS选择器</li>
</ul>
</li>
</ol>
<blockquote>
<p>说明：更多内容可以参考BeautifulSoup的<a href="">官方文档</a>。</p>
</blockquote>
<h3 id="实例-获取知乎发现上的问题链接"><a href="#实例-获取知乎发现上的问题链接" class="headerlink" title="实例 - 获取知乎发现上的问题链接"></a>实例 - 获取知乎发现上的问题链接</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urljoin</div><div class="line"></div><div class="line"><span class="keyword">import</span> re</div><div class="line"><span class="keyword">import</span> requests</div><div class="line"></div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    headers = &#123;<span class="string">'user-agent'</span>: <span class="string">'Baiduspider'</span>&#125;</div><div class="line">    proxies = &#123;</div><div class="line">        <span class="string">'http'</span>: <span class="string">'http://122.114.31.177:808'</span></div><div class="line">    &#125;</div><div class="line">    base_url = <span class="string">'https://www.zhihu.com/'</span></div><div class="line">    seed_url = urljoin(base_url, <span class="string">'explore'</span>)</div><div class="line">    resp = requests.get(seed_url,</div><div class="line">                        headers=headers,</div><div class="line">                        proxies=proxies)</div><div class="line">    soup = BeautifulSoup(resp.text, <span class="string">'lxml'</span>)</div><div class="line">    href_regex = re.compile(<span class="string">r'^/question'</span>)</div><div class="line">    link_set = set()</div><div class="line">    <span class="keyword">for</span> a_tag <span class="keyword">in</span> soup.find_all(<span class="string">'a'</span>, &#123;<span class="string">'href'</span>: href_regex&#125;):</div><div class="line">        <span class="keyword">if</span> <span class="string">'href'</span> <span class="keyword">in</span> a_tag.attrs:</div><div class="line">            href = a_tag.attrs[<span class="string">'href'</span>]</div><div class="line">            full_url = urljoin(base_url, href)</div><div class="line">            link_set.add(full_url)</div><div class="line">    print(<span class="string">'Total %d question pages found.'</span> % len(link_set))</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h2 id="存储数据"><a href="#存储数据" class="headerlink" title="存储数据"></a>存储数据</h2><h3 id="数据缓存"><a href="#数据缓存" class="headerlink" title="数据缓存"></a>数据缓存</h3><p>通过前面章节的内容，我们已经知道了如何从指定的页面中抓取数据，以及如何保存抓取的结果，但是我们没有考虑过这么一种情况，就是我们可能需要从已经抓取过的页面中提取出更多的数据，重新去下载这些页面对于规模不大的网站倒是问题也不大，但是如果能够把这些页面缓存起来，对应用的性能会有明显的改善。</p>
<h3 id="使用NoSQL"><a href="#使用NoSQL" class="headerlink" title="使用NoSQL"></a>使用NoSQL</h3><h4 id="Redis简介"><a href="#Redis简介" class="headerlink" title="Redis简介"></a>Redis简介</h4><p>Redis是REmote DIctionary Server的缩写，它是一个用ANSI C编写的高性能的key-value存储系统，与其他的key-value存储系统相比，Redis有以下一些特点（也是优点）：</p>
<ul>
<li>Redis的读写性能极高，并且有丰富的特性（发布/订阅、事务、通知等）。</li>
<li>Redis支持数据的持久化（RDB和AOF两种方式），可以将内存中的数据保存在磁盘中，重启的时候可以再次加载进行使用。</li>
<li>Redis不仅仅支持简单的key-value类型的数据，同时还提供hash、list、set，zset、hyperloglog、geo等数据类型。</li>
<li>Redis支持主从复制（实现读写分析）以及哨兵模式（监控master是否宕机并调整配置）。</li>
</ul>
<h4 id="Redis的安装和配置"><a href="#Redis的安装和配置" class="headerlink" title="Redis的安装和配置"></a>Redis的安装和配置</h4><p>可以使用Linux系统的包管理工具（如yum）来安装Redis，也可以通过在Redis的<a href="https://redis.io/" target="_blank" rel="external">官方网站</a>下载Redis的<a href="http://download.redis.io/releases/redis-3.2.11.tar.gz" target="_blank" rel="external">源代码</a>解压缩解归档之后进行构件安装。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">#</span><span class="bash"> wget http://download.redis.io/releases/redis-3.2.11.tar.gz</span></div><div class="line"><span class="meta">#</span><span class="bash"> gunzip redis-3.2.11.tar.gz</span></div><div class="line"><span class="meta">#</span><span class="bash"> tar -xvf redis-3.2.11.tar</span></div><div class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">cd</span> redis-3.2.11</span></div><div class="line"><span class="meta">#</span><span class="bash"> make &amp;&amp; make install</span></div></pre></td></tr></table></figure>
<p>接下来我们将redis-3.2.11目录下的redis.conf配置文件复制到用户主目录下并修改配置文件（如果你对配置文件不是很有把握就不要直接修改而是先复制一份再修改这个副本）。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">cd</span> ..</span></div><div class="line"><span class="meta">#</span><span class="bash"> cp redis-3.2.11/redis.conf redis.conf</span></div><div class="line"><span class="meta">#</span><span class="bash"> vim redis.conf</span></div></pre></td></tr></table></figure>
<p>配置将Redis服务绑定到指定的IP地址和端口。</p>
<p>配置底层有多少个数据库。</p>
<p>配置Redis的持久化机制 - RDB。</p>
<p>配置Redis的持久化机制 - AOF。</p>
<p>配置访问Redis服务器的验证口令。</p>
<p>配置Redis的主从复制，通过主从复制可以实现读写分离。</p>
<p>配置慢查询日志。</p>
<p>这样我们就完成了Redis的基本配置，如果对上面的东西感到困惑，可以先系统的了解一下Redis，<a href="https://item.jd.com/12121730.html" target="_blank" rel="external">《Redis开发与运维》</a>是一本不错的入门读物，而<a href="https://item.jd.com/11791607.html" target="_blank" rel="external">《Redis实战》</a>是不错的进阶读物。</p>
<h4 id="Redis的服务器和客户端"><a href="#Redis的服务器和客户端" class="headerlink" title="Redis的服务器和客户端"></a>Redis的服务器和客户端</h4><p>接下来启动Redis服务器，可以将服务器放在后台去运行。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">#</span><span class="bash"> redis-server redis.conf &amp;</span></div><div class="line"></div><div class="line">           _.-``__ ''-._</div><div class="line">      _.-``    `.  `_.  ''-._           Redis 3.2.11 (00000000/0) 64 bit</div><div class="line">  .-`` .-```.  ```\/    _.,_ ''-._</div><div class="line"> (    '      ,       .-`  | `,    )     Running in standalone mode</div><div class="line"> |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6379</div><div class="line"> |    `-._   `._    /     _.-'    |     PID: 12345</div><div class="line">  `-._    `-._  `-./  _.-'    _.-'</div><div class="line"> |`-._`-._    `-.__.-'    _.-'_.-'|</div><div class="line"> |    `-._`-._        _.-'_.-'    |           http://redis.io</div><div class="line">  `-._    `-._`-.__.-'_.-'    _.-'</div><div class="line"> |`-._`-._    `-.__.-'    _.-'_.-'|</div><div class="line"> |    `-._`-._        _.-'_.-'    |</div><div class="line">  `-._    `-._`-.__.-'_.-'    _.-'</div><div class="line">      `-._    `-.__.-'    _.-'</div><div class="line">          `-._        _.-'</div><div class="line">              `-.__.-'</div></pre></td></tr></table></figure>
<p>接下来，我们尝试用Redis客户端去连接服务器。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">#</span><span class="bash"> redis-cli -h 172.18.61.250 -p 6379</span></div><div class="line">172.18.61.250:6379&gt; auth 1qaz2wsx</div><div class="line">OK</div><div class="line">172.18.61.250:6379&gt; ping</div><div class="line">PONG</div><div class="line">172.18.61.250:6379&gt;</div></pre></td></tr></table></figure>
<p>Redis有着非常丰富的数据类型，也有很多的命令来操作这些数据，具体的内容可以查看<a href="http://redisdoc.com/" target="_blank" rel="external">Redis命令参考</a>，在这个网站上，除了Redis的命令参考，还有Redis的详细文档，其中包括了通知、事务、主从复制、持久化、哨兵、集群等内容。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">172.18.61.250:6379&gt; set username admin</div><div class="line">OK</div><div class="line">172.18.61.250:6379&gt; get username</div><div class="line">"admin"</div><div class="line">172.18.61.250:6379&gt; hset student1 name hao</div><div class="line">(integer) 0</div><div class="line">172.18.61.250:6379&gt; hset student1 age 38</div><div class="line">(integer) 1</div><div class="line">172.18.61.250:6379&gt; hset student1 gender male</div><div class="line">(integer) 1</div><div class="line">172.18.61.250:6379&gt; hgetall student1</div><div class="line">1) "name"</div><div class="line">2) "hao"</div><div class="line">3) "age"</div><div class="line">4) "38"</div><div class="line">5) "gender"</div><div class="line">6) "male"</div><div class="line">172.18.61.250:6379&gt; lpush num 1 2 3 4 5</div><div class="line">(integer) 5</div><div class="line">172.18.61.250:6379&gt; lrange num 0 -1</div><div class="line">1) "5"</div><div class="line">2) "4"</div><div class="line">3) "3"</div><div class="line">4) "2"</div><div class="line">5) "1"</div><div class="line">172.18.61.250:6379&gt; sadd fruits apple banana orange apple grape grape</div><div class="line">(integer) 4</div><div class="line">172.18.61.250:6379&gt; scard fruits</div><div class="line">(integer) 4</div><div class="line">172.18.61.250:6379&gt; smembers fruits</div><div class="line">1) "grape"</div><div class="line">2) "orange"</div><div class="line">3) "banana"</div><div class="line">4) "apple"</div><div class="line">172.18.61.250:6379&gt; zadd scores 90 zhao 78 qian 66 sun 95 lee</div><div class="line">(integer) 4</div><div class="line">172.18.61.250:6379&gt; zrange scores 0 -1</div><div class="line">1) "sun"</div><div class="line">2) "qian"</div><div class="line">3) "zhao"</div><div class="line">4) "lee"</div><div class="line">172.18.61.250:6379&gt; zrevrange scores 0 -1</div><div class="line">1) "lee"</div><div class="line">2) "zhao"</div><div class="line">3) "qian"</div><div class="line">4) "sun"</div></pre></td></tr></table></figure>
<h4 id="在Python程序中使用Redis"><a href="#在Python程序中使用Redis" class="headerlink" title="在Python程序中使用Redis"></a>在Python程序中使用Redis</h4><p>可以使用pip安装redis模块。redis模块的核心是名为Redis的类，该类的对象代表一个Redis客户端，通过该客户端可以向Redis服务器发送命令并获取执行的结果。上面我们在Redis客户端中使用的命令基本上就是Redis对象可以接收的消息，所以如果了解了Redis的命令就可以在Python中玩转Redis。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">$</span><span class="bash"> pip3 install redis</span></div><div class="line"><span class="meta">$</span><span class="bash"> python3</span></div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> redis</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>client = redis.Redis(host=<span class="string">'1.2.3.4'</span>, port=<span class="number">6379</span>, password=<span class="string">'1qaz2wsx'</span>)</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>client.set(<span class="string">'username'</span>, <span class="string">'admin'</span>)</div><div class="line"><span class="keyword">True</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>client.hset(<span class="string">'student'</span>, <span class="string">'name'</span>, <span class="string">'hao'</span>)</div><div class="line"><span class="number">1</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>client.hset(<span class="string">'student'</span>, <span class="string">'age'</span>, <span class="number">38</span>)</div><div class="line"><span class="number">1</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>client.keys(<span class="string">'*'</span>)</div><div class="line">[<span class="string">b'username'</span>, <span class="string">b'student'</span>]</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>client.get(<span class="string">'username'</span>)</div><div class="line"><span class="string">b'admin'</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>client.hgetall(<span class="string">'student'</span>)</div><div class="line">&#123;<span class="string">b'name'</span>: <span class="string">b'hao'</span>, <span class="string">b'age'</span>: <span class="string">b'38'</span>&#125;</div></pre></td></tr></table></figure>
<h4 id="MongoDB简介"><a href="#MongoDB简介" class="headerlink" title="MongoDB简介"></a>MongoDB简介</h4><p>MongoDB是2009年问世的一个面向文档的数据库管理系统，由C++语言编写，旨在为Web应用提供可扩展的高性能数据存储解决方案。虽然在划分类别的时候后，MongoDB被认为是NoSQL的产品，但是它更像一个介于关系数据库和非关系数据库之间的产品，在非关系数据库中它功能最丰富，最像关系数据库。</p>
<p>MongoDB将数据存储为一个文档，一个文档由一系列的“键值对”组成，其文档类似于JSON对象，但是MongoDB对JSON进行了二进制处理（能够更快的定位key和value），因此其文档的存储格式称为BSON。关于JSON和BSON的差别大家可以看看MongoDB官方网站的文章<a href="https://www.mongodb.com/json-and-bson" target="_blank" rel="external">《JSON and BSON》</a>。</p>
<p>目前，MongoDB已经提供了对Windows、MacOS、Linux、Solaris等多个平台的支持，而且也提供了多种开发语言的驱动程序，Python当然是其中之一。</p>
<h4 id="MongoDB的安装和配置"><a href="#MongoDB的安装和配置" class="headerlink" title="MongoDB的安装和配置"></a>MongoDB的安装和配置</h4><p>可以从MongoDB的<a href="https://www.mongodb.com/download-center#community" target="_blank" rel="external">官方下载链接</a>下载MongoDB，官方为Windows系统提供了一个Installer程序，而Linux和MacOS则提供了压缩文件。下面简单说一下Linux系统如何安装和配置MongoDB。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">#</span><span class="bash"> wget https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-amazon-3.6.5.tgz</span></div><div class="line"><span class="meta">#</span><span class="bash"> gunzip mongodb-linux-x86_64-amazon-3.6.5.tgz</span></div><div class="line"><span class="meta">#</span><span class="bash"> mkdir mongodb-3.6.5</span></div><div class="line"><span class="meta">#</span><span class="bash"> tar -xvf mongodb-linux-x86_64-amazon-3.6.5.tar --strip-components 1 -C mongodb-3.6.5/</span></div><div class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:~/mongodb-3.6.5/bin</span></div><div class="line"><span class="meta">#</span><span class="bash"> mkdir -p /data/db</span></div><div class="line"><span class="meta">#</span><span class="bash"> mongod --bind_ip 172.18.61.250</span></div><div class="line">2018-06-03T18:03:28.232+0800 I CONTROL  [initandlisten] MongoDB starting : pid=1163 port=27017 dbpath=/data/db 64-bit host=iZwz97tbgo9lkabnat2lo8Z</div><div class="line">2018-06-03T18:03:28.232+0800 I CONTROL  [initandlisten] db version v3.6.5</div><div class="line">2018-06-03T18:03:28.232+0800 I CONTROL  [initandlisten] git version: a20ecd3e3a174162052ff99913bc2ca9a839d618</div><div class="line">2018-06-03T18:03:28.232+0800 I CONTROL  [initandlisten] OpenSSL version: OpenSSL 1.0.0-fips29 Mar 2010</div><div class="line">...</div><div class="line">2018-06-03T18:03:28.945+0800 I NETWORK  [initandlisten] waiting for connections on port 27017</div></pre></td></tr></table></figure>
<blockquote>
<p>说明：上面的操作中，export命令是设置PATH环境变量，这样可以在任意路径下执行mongod来启动MongoDB服务器。MongoDB默认保存数据的路径是/data/db目录，为此要提前创建该目录。此外，在使用mongod启动MongoDB服务器时，—bind_ip参数用来将服务绑定到指定的IP地址，也可以用—port参数来指定端口，默认端口为27017。</p>
</blockquote>
<h4 id="MongoDB基本概念"><a href="#MongoDB基本概念" class="headerlink" title="MongoDB基本概念"></a>MongoDB基本概念</h4><p>我们通过与关系型数据库进行对照的方式来说明MongoDB中的一些概念。</p>
<table>
<thead>
<tr>
<th>SQL</th>
<th>MongoDB</th>
<th>解释（SQL/MongoDB）</th>
</tr>
</thead>
<tbody>
<tr>
<td>database</td>
<td>database</td>
<td>数据库/数据库</td>
</tr>
<tr>
<td>table</td>
<td>collection</td>
<td>二维表/集合</td>
</tr>
<tr>
<td>row</td>
<td>document</td>
<td>记录（行）/文档</td>
</tr>
<tr>
<td>column</td>
<td>field</td>
<td>字段（列）/域</td>
</tr>
<tr>
<td>index</td>
<td>index</td>
<td>索引/索引</td>
</tr>
<tr>
<td>table joins</td>
<td>—</td>
<td>表连接/嵌套文档</td>
</tr>
<tr>
<td>primary key</td>
<td>primary key</td>
<td>主键/主键（<code>_id</code>字段）</td>
</tr>
</tbody>
</table>
<h4 id="通过Shell操作MongoDB"><a href="#通过Shell操作MongoDB" class="headerlink" title="通过Shell操作MongoDB"></a>通过Shell操作MongoDB</h4><p>启动服务器后可以使用交互式环境跟服务器通信，如下所示。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> mongo --host 172.18.61.250</span></div><div class="line">MongoDB shell version v3.6.5</div><div class="line">connecting to: mongodb://172.18.61.250:27017/</div><div class="line">...</div><div class="line"><span class="meta">&gt;</span><span class="bash"></span></div></pre></td></tr></table></figure>
<ol>
<li><p>查看、创建和删除数据库。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">&gt; <span class="comment">// 显示所有数据库</span></div><div class="line">&gt; show dbs</div><div class="line">admin   <span class="number">0.000</span>GB</div><div class="line">config  <span class="number">0.000</span>GB</div><div class="line">local   <span class="number">0.000</span>GB</div><div class="line">&gt; <span class="comment">// 创建并切换到school数据库</span></div><div class="line">&gt; use school</div><div class="line">switched to db school</div><div class="line">&gt; <span class="comment">// 删除当前数据库</span></div><div class="line">&gt; db.dropDatabase()</div><div class="line">&#123; <span class="string">"ok"</span> : <span class="number">1</span> &#125;</div><div class="line">&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>创建、删除和查看集合。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">&gt; <span class="comment">// 创建并切换到school数据库</span></div><div class="line">&gt; use school</div><div class="line">switched to db school</div><div class="line">&gt; <span class="comment">// 创建colleges集合</span></div><div class="line">&gt; db.createCollection(<span class="string">'colleges'</span>)</div><div class="line">&#123; <span class="string">"ok"</span> : <span class="number">1</span> &#125;</div><div class="line">&gt; <span class="comment">// 创建students集合</span></div><div class="line">&gt; db.createCollection(<span class="string">'students'</span>)</div><div class="line">&#123; <span class="string">"ok"</span> : <span class="number">1</span> &#125;</div><div class="line">&gt; <span class="comment">// 查看所有集合</span></div><div class="line">&gt; show collections</div><div class="line">colleges</div><div class="line">students</div><div class="line">&gt; <span class="comment">// 删除colleges集合</span></div><div class="line">&gt; db.colleges.drop()</div><div class="line"><span class="literal">true</span></div><div class="line">&gt;</div></pre></td></tr></table></figure>
<blockquote>
<p>说明：在MongoDB中插入文档时如果集合不存在会自动创建集合，所以也可以按照下面的方式通过创建文档来创建集合。</p>
</blockquote>
</li>
<li><p>文档的CRUD操作。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">&gt; <span class="comment">// 向students集合插入文档</span></div><div class="line">&gt; db.students.insert(&#123;<span class="attr">stuid</span>: <span class="number">1001</span>, <span class="attr">name</span>: <span class="string">'骆昊'</span>, <span class="attr">age</span>: <span class="number">38</span>&#125;)</div><div class="line">WriteResult(&#123; <span class="string">"nInserted"</span> : <span class="number">1</span> &#125;)</div><div class="line">&gt; <span class="comment">// 向students集合插入文档</span></div><div class="line">&gt; db.students.save(&#123;<span class="attr">stuid</span>: <span class="number">1002</span>, <span class="attr">name</span>: <span class="string">'王大锤'</span>, <span class="attr">tel</span>: <span class="string">'13012345678'</span>, <span class="attr">gender</span>: <span class="string">'男'</span>&#125;)</div><div class="line">WriteResult(&#123; <span class="string">"nInserted"</span> : <span class="number">1</span> &#125;)</div><div class="line">&gt; <span class="comment">// 查看所有文档</span></div><div class="line">&gt; db.students.find()</div><div class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"5b13c72e006ad854460ee70b"</span>), <span class="string">"stuid"</span> : <span class="number">1001</span>, <span class="string">"name"</span> : <span class="string">"骆昊"</span>, <span class="string">"age"</span> : <span class="number">38</span> &#125;</div><div class="line">&#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"5b13c790006ad854460ee70c"</span>), <span class="string">"stuid"</span> : <span class="number">1002</span>, <span class="string">"name"</span> : <span class="string">"王大锤"</span>, <span class="string">"tel"</span> : <span class="string">"13012345678"</span>, <span class="string">"gender"</span> : <span class="string">"男"</span> &#125;</div><div class="line">&gt; <span class="comment">// 更新stuid为1001的文档</span></div><div class="line">&gt; db.students.update(&#123;<span class="attr">stuid</span>: <span class="number">1001</span>&#125;, &#123;<span class="string">'$set'</span>: &#123;<span class="attr">tel</span>: <span class="string">'13566778899'</span>, <span class="attr">gender</span>: <span class="string">'男'</span>&#125;&#125;)</div><div class="line">WriteResult(&#123; <span class="string">"nMatched"</span> : <span class="number">1</span>, <span class="string">"nUpserted"</span> : <span class="number">0</span>, <span class="string">"nModified"</span> : <span class="number">1</span> &#125;)</div><div class="line">&gt; <span class="comment">// 插入或更新stuid为1003的文档</span></div><div class="line">&gt; db.students.update(&#123;<span class="attr">stuid</span>: <span class="number">1003</span>&#125;, &#123;<span class="string">'$set'</span>: &#123;<span class="attr">name</span>: <span class="string">'白元芳'</span>, <span class="attr">tel</span>: <span class="string">'13022223333'</span>, <span class="attr">gender</span>: <span class="string">'男'</span>&#125;&#125;,  upsert=<span class="literal">true</span>)</div><div class="line">WriteResult(&#123;</div><div class="line">        <span class="string">"nMatched"</span> : <span class="number">0</span>,</div><div class="line">        <span class="string">"nUpserted"</span> : <span class="number">1</span>,</div><div class="line">        <span class="string">"nModified"</span> : <span class="number">0</span>,</div><div class="line">        <span class="string">"_id"</span> : ObjectId(<span class="string">"5b13c92dd185894d7283efab"</span>)</div><div class="line">&#125;)</div><div class="line">&gt; <span class="comment">// 查询所有文档</span></div><div class="line">&gt; db.students.find().pretty()</div><div class="line">&#123;</div><div class="line">        <span class="string">"_id"</span> : ObjectId(<span class="string">"5b13c72e006ad854460ee70b"</span>),</div><div class="line">        <span class="string">"stuid"</span> : <span class="number">1001</span>,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"骆昊"</span>,</div><div class="line">        <span class="string">"age"</span> : <span class="number">38</span>,</div><div class="line">        <span class="string">"gender"</span> : <span class="string">"男"</span>,</div><div class="line">        <span class="string">"tel"</span> : <span class="string">"13566778899"</span></div><div class="line">&#125;</div><div class="line">&#123;</div><div class="line">        <span class="string">"_id"</span> : ObjectId(<span class="string">"5b13c790006ad854460ee70c"</span>),</div><div class="line">        <span class="string">"stuid"</span> : <span class="number">1002</span>,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"王大锤"</span>,</div><div class="line">        <span class="string">"tel"</span> : <span class="string">"13012345678"</span>,</div><div class="line">        <span class="string">"gender"</span> : <span class="string">"男"</span></div><div class="line">&#125;</div><div class="line">&#123;</div><div class="line">        <span class="string">"_id"</span> : ObjectId(<span class="string">"5b13c92dd185894d7283efab"</span>),</div><div class="line">        <span class="string">"stuid"</span> : <span class="number">1003</span>,</div><div class="line">        <span class="string">"gender"</span> : <span class="string">"男"</span>,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"白元芳"</span>,</div><div class="line">        <span class="string">"tel"</span> : <span class="string">"13022223333"</span></div><div class="line">&#125;</div><div class="line">&gt; <span class="comment">// 查询stuid大于1001的文档</span></div><div class="line">&gt; db.students.find(&#123;<span class="attr">stuid</span>: &#123;<span class="string">'$gt'</span>: <span class="number">1001</span>&#125;&#125;).pretty()</div><div class="line">&#123;</div><div class="line">        <span class="string">"_id"</span> : ObjectId(<span class="string">"5b13c790006ad854460ee70c"</span>),</div><div class="line">        <span class="string">"stuid"</span> : <span class="number">1002</span>,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"王大锤"</span>,</div><div class="line">        <span class="string">"tel"</span> : <span class="string">"13012345678"</span>,</div><div class="line">        <span class="string">"gender"</span> : <span class="string">"男"</span></div><div class="line">&#125;</div><div class="line">&#123;</div><div class="line">        <span class="string">"_id"</span> : ObjectId(<span class="string">"5b13c92dd185894d7283efab"</span>),</div><div class="line">        <span class="string">"stuid"</span> : <span class="number">1003</span>,</div><div class="line">        <span class="string">"gender"</span> : <span class="string">"男"</span>,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"白元芳"</span>,</div><div class="line">        <span class="string">"tel"</span> : <span class="string">"13022223333"</span></div><div class="line">&#125;</div><div class="line">&gt; <span class="comment">// 查询stuid大于1001的文档只显示name和tel字段</span></div><div class="line">&gt; db.students.find(&#123;<span class="attr">stuid</span>: &#123;<span class="string">'$gt'</span>: <span class="number">1001</span>&#125;&#125;, &#123;<span class="attr">_id</span>: <span class="number">0</span>, <span class="attr">name</span>: <span class="number">1</span>, <span class="attr">tel</span>: <span class="number">1</span>&#125;).pretty()</div><div class="line">&#123; <span class="string">"name"</span> : <span class="string">"王大锤"</span>, <span class="string">"tel"</span> : <span class="string">"13012345678"</span> &#125;</div><div class="line">&#123; <span class="string">"name"</span> : <span class="string">"白元芳"</span>, <span class="string">"tel"</span> : <span class="string">"13022223333"</span> &#125;</div><div class="line">&gt; <span class="comment">// 查询name为“骆昊”或者tel为“13022223333”的文档</span></div><div class="line">&gt; db.students.find(&#123;<span class="string">'$or'</span>: [&#123;<span class="attr">name</span>: <span class="string">'骆昊'</span>&#125;, &#123;<span class="attr">tel</span>: <span class="string">'13022223333'</span>&#125;]&#125;, &#123;<span class="attr">_id</span>: <span class="number">0</span>, <span class="attr">name</span>: <span class="number">1</span>, <span class="attr">tel</span>: <span class="number">1</span>&#125;).pretty()</div><div class="line">&#123; <span class="string">"name"</span> : <span class="string">"骆昊"</span>, <span class="string">"tel"</span> : <span class="string">"13566778899"</span> &#125;</div><div class="line">&#123; <span class="string">"name"</span> : <span class="string">"白元芳"</span>, <span class="string">"tel"</span> : <span class="string">"13022223333"</span> &#125;</div><div class="line">&gt; <span class="comment">// 查询学生文档跳过第1条文档只查1条文档</span></div><div class="line">&gt; db.students.find().skip(<span class="number">1</span>).limit(<span class="number">1</span>).pretty()</div><div class="line">&#123;</div><div class="line">        <span class="string">"_id"</span> : ObjectId(<span class="string">"5b13c790006ad854460ee70c"</span>),</div><div class="line">        <span class="string">"stuid"</span> : <span class="number">1002</span>,</div><div class="line">        <span class="string">"name"</span> : <span class="string">"王大锤"</span>,</div><div class="line">        <span class="string">"tel"</span> : <span class="string">"13012345678"</span>,</div><div class="line">        <span class="string">"gender"</span> : <span class="string">"男"</span></div><div class="line">&#125;</div><div class="line">&gt; <span class="comment">// 对查询结果进行排序(1表示升序，-1表示降序)</span></div><div class="line">&gt; db.students.find(&#123;&#125;, &#123;<span class="attr">_id</span>: <span class="number">0</span>, <span class="attr">stuid</span>: <span class="number">1</span>, <span class="attr">name</span>: <span class="number">1</span>&#125;).sort(&#123;<span class="attr">stuid</span>: <span class="number">-1</span>&#125;)</div><div class="line">&#123; <span class="string">"stuid"</span> : <span class="number">1003</span>, <span class="string">"name"</span> : <span class="string">"白元芳"</span> &#125;</div><div class="line">&#123; <span class="string">"stuid"</span> : <span class="number">1002</span>, <span class="string">"name"</span> : <span class="string">"王大锤"</span> &#125;</div><div class="line">&#123; <span class="string">"stuid"</span> : <span class="number">1001</span>, <span class="string">"name"</span> : <span class="string">"骆昊"</span> &#125;</div><div class="line">&gt; <span class="comment">// 在指定的一个或多个字段上创建索引</span></div><div class="line">&gt; db.students.ensureIndex(&#123;<span class="attr">name</span>: <span class="number">1</span>&#125;)</div><div class="line">&#123;</div><div class="line">        <span class="string">"createdCollectionAutomatically"</span> : <span class="literal">false</span>,</div><div class="line">        <span class="string">"numIndexesBefore"</span> : <span class="number">1</span>,</div><div class="line">        <span class="string">"numIndexesAfter"</span> : <span class="number">2</span>,</div><div class="line">        <span class="string">"ok"</span> : <span class="number">1</span></div><div class="line">&#125;</div><div class="line">&gt;</div></pre></td></tr></table></figure>
</li>
</ol>
<p>使用MongoDB可以非常方便的配置数据复制，通过冗余数据来实现数据的高可用以及灾难恢复，也可以通过数据分片来应对数据量迅速增长的需求。关于MongoDB更多的操作可以查阅<a href="https://mongodb-documentation.readthedocs.io/en/latest/" target="_blank" rel="external">官方文档</a> ，同时推荐大家阅读Kristina Chodorow写的<a href="http://www.ituring.com.cn/book/1172" target="_blank" rel="external">《MongoDB权威指南》</a>。</p>
<p>####在Python程序中操作MongoDB</p>
<p>可以通过pip安装pymongo来实现对MongoDB的操作。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">$</span><span class="bash"> pip3 install pymongo</span></div><div class="line"><span class="meta">$</span><span class="bash"> python3</span></div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> pymongo <span class="keyword">import</span> MongoClient</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>client = MongoClient(<span class="string">'mongodb://120.77.222.217:27017'</span>) </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>db = client.school</div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> student <span class="keyword">in</span> db.students.find():</div><div class="line"><span class="meta">... </span>    print(<span class="string">'学号:'</span>, student[<span class="string">'stuid'</span>])</div><div class="line"><span class="meta">... </span>    print(<span class="string">'姓名:'</span>, student[<span class="string">'name'</span>])</div><div class="line"><span class="meta">... </span>    print(<span class="string">'电话:'</span>, student[<span class="string">'tel'</span>])</div><div class="line"><span class="meta">... </span></div><div class="line">学号: <span class="number">1001.0</span></div><div class="line">姓名: 骆昊</div><div class="line">电话: <span class="number">13566778899</span></div><div class="line">学号: <span class="number">1002.0</span></div><div class="line">姓名: 王大锤</div><div class="line">电话: <span class="number">13012345678</span></div><div class="line">学号: <span class="number">1003.0</span></div><div class="line">姓名: 白元芳</div><div class="line">电话: <span class="number">13022223333</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>db.students.find().count()</div><div class="line"><span class="number">3</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>db.students.remove()</div><div class="line">&#123;<span class="string">'n'</span>: <span class="number">3</span>, <span class="string">'ok'</span>: <span class="number">1.0</span>&#125;</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>db.students.find().count()</div><div class="line"><span class="number">0</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>coll = db.students</div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> pymongo <span class="keyword">import</span> ASCENDING</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>coll.create_index([(<span class="string">'name'</span>, ASCENDING)], unique=<span class="keyword">True</span>)</div><div class="line"><span class="string">'name_1'</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>coll.insert_one(&#123;<span class="string">'stuid'</span>: int(<span class="number">1001</span>), <span class="string">'name'</span>: <span class="string">'骆昊'</span>, <span class="string">'gender'</span>: <span class="keyword">True</span>&#125;)</div><div class="line">&lt;pymongo.results.InsertOneResult object at <span class="number">0x1050cc6c8</span>&gt;</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>coll.insert_many([&#123;<span class="string">'stuid'</span>: int(<span class="number">1002</span>), <span class="string">'name'</span>: <span class="string">'王大锤'</span>, <span class="string">'gender'</span>: <span class="keyword">False</span>&#125;, &#123;<span class="string">'stuid'</span>: int(<span class="number">1003</span>), <span class="string">'name'</span>: <span class="string">'白元芳'</span>, <span class="string">'gender'</span>: <span class="keyword">True</span>&#125;])</div><div class="line">&lt;pymongo.results.InsertManyResult object at <span class="number">0x1050cc8c8</span>&gt;</div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> student <span class="keyword">in</span> coll.find(&#123;<span class="string">'gender'</span>: <span class="keyword">True</span>&#125;):</div><div class="line"><span class="meta">... </span>    print(<span class="string">'学号:'</span>, student[<span class="string">'stuid'</span>])</div><div class="line"><span class="meta">... </span>    print(<span class="string">'姓名:'</span>, student[<span class="string">'name'</span>])</div><div class="line"><span class="meta">... </span>    print(<span class="string">'性别:'</span>, <span class="string">'男'</span> <span class="keyword">if</span> student[<span class="string">'gender'</span>] <span class="keyword">else</span> <span class="string">'女'</span>)</div><div class="line"><span class="meta">... </span></div><div class="line">学号: <span class="number">1001</span></div><div class="line">姓名: 骆昊</div><div class="line">性别: 男</div><div class="line">学号: <span class="number">1003</span></div><div class="line">姓名: 白元芳</div><div class="line">性别: 男</div><div class="line">&gt;&gt;&gt;</div></pre></td></tr></table></figure>
<p>关于PyMongo更多的知识可以通过它的<a href="https://api.mongodb.com/python/current/tutorial.html" target="_blank" rel="external">官方文档</a>进行了解。</p>
<h3 id="实例-缓存知乎发现上的链接和页面代码"><a href="#实例-缓存知乎发现上的链接和页面代码" class="headerlink" title="实例 - 缓存知乎发现上的链接和页面代码"></a>实例 - 缓存知乎发现上的链接和页面代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> sha1</div><div class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urljoin</div><div class="line"></div><div class="line"><span class="keyword">import</span> pickle</div><div class="line"><span class="keyword">import</span> re</div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> zlib</div><div class="line"></div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"><span class="keyword">from</span> redis <span class="keyword">import</span> Redis</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    <span class="comment"># 指定种子页面</span></div><div class="line">    base_url = <span class="string">'https://www.zhihu.com/'</span></div><div class="line">    seed_url = urljoin(base_url, <span class="string">'explore'</span>)</div><div class="line">    <span class="comment"># 创建Redis客户端</span></div><div class="line">    client = Redis(host=<span class="string">'1.2.3.4'</span>, port=<span class="number">6379</span>, password=<span class="string">'1qaz2wsx'</span>)</div><div class="line">    <span class="comment"># 设置用户代理(否则访问会被拒绝)</span></div><div class="line">    headers = &#123;<span class="string">'user-agent'</span>: <span class="string">'Baiduspider'</span>&#125;</div><div class="line">    <span class="comment"># 通过requests模块发送GET请求并指定用户代理</span></div><div class="line">    resp = requests.get(seed_url, headers=headers)</div><div class="line">    <span class="comment"># 创建BeautifulSoup对象并指定使用lxml作为解析器</span></div><div class="line">    soup = BeautifulSoup(resp.text, <span class="string">'lxml'</span>)</div><div class="line">    href_regex = re.compile(<span class="string">r'^/question'</span>)</div><div class="line">    <span class="comment"># 将URL处理成SHA1摘要(长度固定更简短)</span></div><div class="line">    hasher_proto = sha1()</div><div class="line">    <span class="comment"># 查找所有href属性以/question打头的a标签</span></div><div class="line">    <span class="keyword">for</span> a_tag <span class="keyword">in</span> soup.find_all(<span class="string">'a'</span>, &#123;<span class="string">'href'</span>: href_regex&#125;):</div><div class="line">        <span class="comment"># 获取a标签的href属性值并组装完整的URL</span></div><div class="line">        href = a_tag.attrs[<span class="string">'href'</span>]</div><div class="line">        full_url = urljoin(base_url, href)</div><div class="line">        <span class="comment"># 传入URL生成SHA1摘要</span></div><div class="line">        hasher = hasher_proto.copy()</div><div class="line">        hasher.update(full_url.encode(<span class="string">'utf-8'</span>))</div><div class="line">        field_key = hasher.hexdigest()</div><div class="line">        <span class="comment"># 如果Redis的键'zhihu'对应的hash数据类型中没有URL的摘要就访问页面并缓存</span></div><div class="line">        <span class="keyword">if</span> <span class="keyword">not</span> client.hexists(<span class="string">'zhihu'</span>, field_key):</div><div class="line">            html_page = requests.get(full_url, headers=headers).text</div><div class="line">            <span class="comment"># 对页面进行序列化和压缩操作</span></div><div class="line">            zipped_page = zlib.compress(pickle.dumps(html_page))</div><div class="line">            <span class="comment"># 使用hash数据类型保存URL摘要及其对应的页面代码</span></div><div class="line">            client.hset(<span class="string">'zhihu'</span>, field_key, zipped_page)</div><div class="line">    <span class="comment"># 显示总共缓存了多少个页面</span></div><div class="line">    print(<span class="string">'Total %d question pages found.'</span> % client.hlen(<span class="string">'zhihu'</span>))</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h2 id="并发下载"><a href="#并发下载" class="headerlink" title="并发下载"></a>并发下载</h2><h3 id="多线程和多进程回顾"><a href="#多线程和多进程回顾" class="headerlink" title="多线程和多进程回顾"></a>多线程和多进程回顾</h3><p>在前面的<a href="../Day01-15/Day13/进程和线程.md">《进程和线程》</a>一文中，我们已经对在Python中使用多进程和多线程实现并发编程进行了简明的讲解，在此我们补充几个知识点。</p>
<h4 id="threading-local类"><a href="#threading-local类" class="headerlink" title="threading.local类"></a>threading.local类</h4><p>使用线程时最不愿意遇到的情况就是多个线程竞争资源，在这种情况下为了保证资源状态的正确性，我们可能需要对资源进行加锁保护的处理，这一方面会导致程序失去并发性，另外如果多个线程竞争多个资源时，还有可能因为加锁方式的不当导致<a href="https://zh.wikipedia.org/wiki/%E6%AD%BB%E9%94%81" target="_blank" rel="external">死锁</a>。要解决多个线程竞争资源的问题，其中一个方案就是让每个线程都持有资源的副本（拷贝），这样每个线程可以操作自己所持有的资源，从而规避对资源的竞争。</p>
<p>要实现将资源和持有资源的线程进行绑定的操作，最简单的做法就是使用threading模块的local类，在网络爬虫开发中，就可以使用local类为每个线程绑定一个MySQL数据库连接或Redis客户端对象，这样通过线程可以直接获得这些资源，既解决了资源竞争的问题，又避免了在函数和方法调用时传递这些资源。具体的请参考本章多线程爬取“手机搜狐网”（Redis版）的实例代码。</p>
<h4 id="concurrent-futures模块"><a href="#concurrent-futures模块" class="headerlink" title="concurrent.futures模块"></a>concurrent.futures模块</h4><p>Python3.2带来了<code>concurrent.futures</code> 模块，这个模块包含了线程池和进程池、管理并行编程任务、处理非确定性的执行流程、进程/线程同步等功能。关于这部分的内容推荐大家阅读<a href="http://python-parallel-programmning-cookbook.readthedocs.io/zh_CN/latest/index.html" target="_blank" rel="external">《Python并行编程》</a>。</p>
<h4 id="分布式进程"><a href="#分布式进程" class="headerlink" title="分布式进程"></a>分布式进程</h4><p>使用多进程的时候，可以将进程部署在多个主机节点上，Python的<code>multiprocessing</code>模块不但支持多进程，其中<code>managers</code>子模块还支持把多进程部署到多个节点上。当然，要部署分布式进程，首先需要一个服务进程作为调度者，进程之间通过网络进行通信来实现对进程的控制和调度，由于<code>managers</code>模块已经对这些做出了很好的封装，因此在无需了解网络通信细节的前提下，就可以编写分布式多进程应用。具体的请参照本章分布式多进程爬取“手机搜狐网”的实例代码。</p>
<h3 id="协程和异步I-O"><a href="#协程和异步I-O" class="headerlink" title="协程和异步I/O"></a>协程和异步I/O</h3><h4 id="协程的概念"><a href="#协程的概念" class="headerlink" title="协程的概念"></a>协程的概念</h4><p>协程（coroutine）通常又称之为微线程或纤程，它是相互协作的一组子程序（函数）。所谓相互协作指的是在执行函数A时，可以随时中断去执行函数B，然后又中断继续执行函数A。注意，这一过程并不是函数调用（因为没有调用语句），整个过程看似像多线程，然而协程只有一个线程执行。协程通过<code>yield</code>关键字和 <code>send()</code>操作来转移执行权，协程之间不是调用者与被调用者的关系。</p>
<p>协程的优势在于以下两点：</p>
<ol>
<li>执行效率极高，因为子程序（函数）切换不是线程切换，由程序自身控制，没有切换线程的开销。</li>
<li>不需要多线程的锁机制，因为只有一个线程，也不存在竞争资源的问题，当然也就不需要对资源加锁保护，因此执行效率高很多。</li>
</ol>
<blockquote>
<p>说明：协程适合处理的是I/O密集型任务，处理CPU密集型任务并不是它的长处，如果要提升CPU的利用率可以考虑“多进程+协程”的模式。</p>
</blockquote>
<h4 id="历史回顾"><a href="#历史回顾" class="headerlink" title="历史回顾"></a>历史回顾</h4><ol>
<li>Python 2.2：第一次提出了生成器（最初称之为迭代器）的概念（PEP 255）。</li>
<li>Python 2.5：引入了将对象发送回暂停了的生成器这一特性即生成器的<code>send()</code>方法（PEP 342）。</li>
<li>Python 3.3：添加了<code>yield from</code>特性，允许从迭代器中返回任何值（注意生成器本身也是迭代器），这样我们就可以串联生成器并且重构出更好的生成器。</li>
<li>Python 3.4：引入<code>asyncio.coroutine</code>装饰器用来标记作为协程的函数，协程函数和<code>asyncio</code>及其事件循环一起使用，来实现异步I/O操作。</li>
<li>Python 3.5：引入了<code>async</code>和<code>await</code>，可以使用<code>async def</code>来定义一个协程函数，这个函数中不能包含任何形式的<code>yield</code>语句，但是可以使用<code>return</code>或<code>await</code>从协程中返回值。</li>
</ol>
<h4 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h4><ol>
<li><p>生成器 - 数据的生产者。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 倒计数生成器</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">countdown</span><span class="params">(n)</span>:</span></div><div class="line">    <span class="keyword">while</span> n &gt; <span class="number">0</span>:</div><div class="line">        <span class="keyword">yield</span> n</div><div class="line">        n -= <span class="number">1</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    <span class="keyword">for</span> num <span class="keyword">in</span> countdown(<span class="number">5</span>):</div><div class="line">        print(<span class="string">f'Countdown: <span class="subst">&#123;num&#125;</span>'</span>)</div><div class="line">        sleep(<span class="number">1</span>)</div><div class="line">    print(<span class="string">'Countdown Over!'</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>生成器还可以叠加来组成生成器管道，代码如下所示。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment"># Fibonacci数生成器</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">fib</span><span class="params">()</span>:</span></div><div class="line">    a, b = <span class="number">0</span>, <span class="number">1</span></div><div class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">        a, b = b, a + b</div><div class="line">        <span class="keyword">yield</span> a</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 偶数生成器</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">even</span><span class="params">(gen)</span>:</span></div><div class="line">    <span class="keyword">for</span> val <span class="keyword">in</span> gen:</div><div class="line">        <span class="keyword">if</span> val % <span class="number">2</span> == <span class="number">0</span>:</div><div class="line">            <span class="keyword">yield</span> val</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    gen = even(fib())</div><div class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">10</span>):</div><div class="line">        print(next(gen))</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
</li>
<li><p>协程 - 数据的消费者。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 生成器 - 数据生产者</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">countdown_gen</span><span class="params">(n, consumer)</span>:</span></div><div class="line">    consumer.send(<span class="keyword">None</span>)</div><div class="line">    <span class="keyword">while</span> n &gt; <span class="number">0</span>:</div><div class="line">        consumer.send(n)</div><div class="line">        n -= <span class="number">1</span></div><div class="line">    consumer.send(<span class="keyword">None</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 协程 - 数据消费者</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">countdown_con</span><span class="params">()</span>:</span></div><div class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">        n = <span class="keyword">yield</span></div><div class="line">        <span class="keyword">if</span> n:</div><div class="line">            print(<span class="string">f'Countdown <span class="subst">&#123;n&#125;</span>'</span>)</div><div class="line">            sleep(<span class="number">1</span>)</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            print(<span class="string">'Countdown Over!'</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    countdown_gen(<span class="number">5</span>, countdown_con())</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<blockquote>
<p>说明：上面代码中countdown_gen函数中的第1行consumer.send(None)是为了激活生成器，通俗的说就是让生成器执行到有yield关键字的地方挂起，当然也可以通过next(consumer)来达到同样的效果。如果不愿意每次都用这样的代码来“预激”生成器，可以写一个包装器来完成该操作，代码如下所示。</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> wraps</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">coroutine</span><span class="params">(fn)</span>:</span></div><div class="line"></div><div class="line"><span class="meta">    @wraps(fn)</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(*args, **kwargs)</span>:</span></div><div class="line">        gen = fn(*args, **kwargs)</div><div class="line">        next(gen)</div><div class="line">        <span class="keyword">return</span> gen</div><div class="line"></div><div class="line">    <span class="keyword">return</span> wrapper</div></pre></td></tr></table></figure>
<p>这样就可以使用<code>@coroutine</code>装饰器对协程进行预激操作，不需要再写重复代码来激活协程。</p>
</li>
<li><p>异步I/O - 非阻塞式I/O操作。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">import</span> asyncio</div><div class="line"></div><div class="line"></div><div class="line"><span class="meta">@asyncio.coroutine</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">countdown</span><span class="params">(name, n)</span>:</span></div><div class="line">    <span class="keyword">while</span> n &gt; <span class="number">0</span>:</div><div class="line">        print(<span class="string">f'Countdown[<span class="subst">&#123;name&#125;</span>]: <span class="subst">&#123;n&#125;</span>'</span>)</div><div class="line">        <span class="keyword">yield</span> <span class="keyword">from</span> asyncio.sleep(<span class="number">1</span>)</div><div class="line">        n -= <span class="number">1</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    loop = asyncio.get_event_loop()</div><div class="line">    tasks = [</div><div class="line">        countdown(<span class="string">"A"</span>, <span class="number">10</span>), countdown(<span class="string">"B"</span>, <span class="number">5</span>),</div><div class="line">    ]</div><div class="line">    loop.run_until_complete(asyncio.wait(tasks))</div><div class="line">    loop.close()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
</li>
<li><p><code>async</code>和<code>await</code>。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">import</span> asyncio</div><div class="line"><span class="keyword">import</span> aiohttp</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">download</span><span class="params">(url)</span>:</span></div><div class="line">    print(<span class="string">'Fetch:'</span>, url)</div><div class="line">    <span class="keyword">async</span> <span class="keyword">with</span> aiohttp.ClientSession() <span class="keyword">as</span> session:</div><div class="line">        <span class="keyword">async</span> <span class="keyword">with</span> session.get(url) <span class="keyword">as</span> resp:</div><div class="line">            print(url, <span class="string">'---&gt;'</span>, resp.status)</div><div class="line">            print(url, <span class="string">'---&gt;'</span>, resp.cookies)</div><div class="line">            print(<span class="string">'\n\n'</span>, <span class="keyword">await</span> resp.text())</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    loop = asyncio.get_event_loop()</div><div class="line">    urls = [</div><div class="line">        <span class="string">'https://www.baidu.com'</span>,</div><div class="line">        <span class="string">'http://www.sohu.com/'</span>,</div><div class="line">        <span class="string">'http://www.sina.com.cn/'</span>,</div><div class="line">        <span class="string">'https://www.taobao.com/'</span>,</div><div class="line">        <span class="string">'https://www.jd.com/'</span></div><div class="line">    ]</div><div class="line">    tasks = [download(url) <span class="keyword">for</span> url <span class="keyword">in</span> urls]</div><div class="line">    loop.run_until_complete(asyncio.wait(tasks))</div><div class="line">    loop.close()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>上面的代码使用了<a href="https://github.com/aio-libs/aiohttp" target="_blank" rel="external">AIOHTTP</a>这个非常著名的第三方库，它实现了HTTP客户端和HTTP服务器的功能，对异步操作提供了非常好的支持，有兴趣可以阅读它的<a href="https://aiohttp.readthedocs.io/en/stable/" target="_blank" rel="external">官方文档</a>。</p>
</li>
</ol>
<h3 id="实例-多线程爬取“手机搜狐网”所有页面。"><a href="#实例-多线程爬取“手机搜狐网”所有页面。" class="headerlink" title="实例 - 多线程爬取“手机搜狐网”所有页面。"></a>实例 - 多线程爬取“手机搜狐网”所有页面。</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">import</span> pickle</div><div class="line"><span class="keyword">import</span> zlib</div><div class="line"><span class="keyword">from</span> enum <span class="keyword">import</span> Enum, unique</div><div class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> sha1</div><div class="line"><span class="keyword">from</span> random <span class="keyword">import</span> random</div><div class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread, current_thread, local</div><div class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</div><div class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlparse</div><div class="line"></div><div class="line"><span class="keyword">import</span> pymongo</div><div class="line"><span class="keyword">import</span> redis</div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"><span class="keyword">from</span> bson <span class="keyword">import</span> Binary</div><div class="line"></div><div class="line"></div><div class="line"><span class="meta">@unique</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">SpiderStatus</span><span class="params">(Enum)</span>:</span></div><div class="line">    IDLE = <span class="number">0</span></div><div class="line">    WORKING = <span class="number">1</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">decode_page</span><span class="params">(page_bytes, charsets=<span class="params">(<span class="string">'utf-8'</span>,)</span>)</span>:</span></div><div class="line">    page_html = <span class="keyword">None</span></div><div class="line">    <span class="keyword">for</span> charset <span class="keyword">in</span> charsets:</div><div class="line">        <span class="keyword">try</span>:</div><div class="line">            page_html = page_bytes.decode(charset)</div><div class="line">            <span class="keyword">break</span></div><div class="line">        <span class="keyword">except</span> UnicodeDecodeError:</div><div class="line">            <span class="keyword">pass</span></div><div class="line">    <span class="keyword">return</span> page_html</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Retry</span><span class="params">(object)</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, *, retry_times=<span class="number">3</span>,</span></span></div><div class="line"><span class="function"><span class="params">                 wait_secs=<span class="number">5</span>, errors=<span class="params">(Exception, )</span>)</span>:</span></div><div class="line">        self.retry_times = retry_times</div><div class="line">        self.wait_secs = wait_secs</div><div class="line">        self.errors = errors</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__call__</span><span class="params">(self, fn)</span>:</span></div><div class="line"></div><div class="line">        <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(*args, **kwargs)</span>:</span></div><div class="line">            <span class="keyword">for</span> _ <span class="keyword">in</span> range(self.retry_times):</div><div class="line">                <span class="keyword">try</span>:</div><div class="line">                    <span class="keyword">return</span> fn(*args, **kwargs)</div><div class="line">                <span class="keyword">except</span> self.errors <span class="keyword">as</span> e:</div><div class="line">                    print(e)</div><div class="line">                    sleep((random() + <span class="number">1</span>) * self.wait_secs)</div><div class="line">            <span class="keyword">return</span> <span class="keyword">None</span></div><div class="line"></div><div class="line">        <span class="keyword">return</span> wrapper</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Spider</span><span class="params">(object)</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></div><div class="line">        self.status = SpiderStatus.IDLE</div><div class="line"></div><div class="line"><span class="meta">    @Retry()</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fetch</span><span class="params">(self, current_url, *, charsets=<span class="params">(<span class="string">'utf-8'</span>, )</span>,</span></span></div><div class="line"><span class="function"><span class="params">              user_agent=None, proxies=None)</span>:</span></div><div class="line">        thread_name = current_thread().name</div><div class="line">        print(<span class="string">f'[<span class="subst">&#123;thread_name&#125;</span>]: <span class="subst">&#123;current_url&#125;</span>'</span>)</div><div class="line">        headers = &#123;<span class="string">'user-agent'</span>: user_agent&#125; <span class="keyword">if</span> user_agent <span class="keyword">else</span> &#123;&#125;</div><div class="line">        resp = requests.get(current_url,</div><div class="line">                            headers=headers, proxies=proxies)</div><div class="line">        <span class="keyword">return</span> decode_page(resp.content, charsets) \</div><div class="line">            <span class="keyword">if</span> resp.status_code == <span class="number">200</span> <span class="keyword">else</span> <span class="keyword">None</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, html_page, *, domain=<span class="string">'m.sohu.com'</span>)</span>:</span></div><div class="line">        soup = BeautifulSoup(html_page, <span class="string">'lxml'</span>)</div><div class="line">        <span class="keyword">for</span> a_tag <span class="keyword">in</span> soup.body.select(<span class="string">'a[href]'</span>):</div><div class="line">            parser = urlparse(a_tag.attrs[<span class="string">'href'</span>])</div><div class="line">            scheme = parser.scheme <span class="keyword">or</span> <span class="string">'http'</span></div><div class="line">            netloc = parser.netloc <span class="keyword">or</span> domain</div><div class="line">            <span class="keyword">if</span> scheme != <span class="string">'javascript'</span> <span class="keyword">and</span> netloc == domain:</div><div class="line">                path = parser.path</div><div class="line">                query = <span class="string">'?'</span> + parser.query <span class="keyword">if</span> parser.query <span class="keyword">else</span> <span class="string">''</span></div><div class="line">                full_url = <span class="string">f'<span class="subst">&#123;scheme&#125;</span>://<span class="subst">&#123;netloc&#125;</span><span class="subst">&#123;path&#125;</span><span class="subst">&#123;query&#125;</span>'</span></div><div class="line">                redis_client = thread_local.redis_client</div><div class="line">                <span class="keyword">if</span> <span class="keyword">not</span> redis_client.sismember(<span class="string">'visited_urls'</span>, full_url):</div><div class="line">                    redis_client.rpush(<span class="string">'m_sohu_task'</span>, full_url)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">extract</span><span class="params">(self, html_page)</span>:</span></div><div class="line">        <span class="keyword">pass</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">store</span><span class="params">(self, data_dict)</span>:</span></div><div class="line">        <span class="comment"># redis_client = thread_local.redis_client</span></div><div class="line">        <span class="comment"># mongo_db = thread_local.mongo_db</span></div><div class="line">        <span class="keyword">pass</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">SpiderThread</span><span class="params">(Thread)</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, spider)</span>:</span></div><div class="line">        super().__init__(name=name, daemon=<span class="keyword">True</span>)</div><div class="line">        self.spider = spider</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></div><div class="line">        redis_client = redis.Redis(host=<span class="string">'1.2.3.4'</span>, port=<span class="number">6379</span>, password=<span class="string">'1qaz2wsx'</span>)</div><div class="line">        mongo_client = pymongo.MongoClient(host=<span class="string">'1.2.3.4'</span>, port=<span class="number">27017</span>)</div><div class="line">        thread_local.redis_client = redis_client</div><div class="line">        thread_local.mongo_db = mongo_client.msohu </div><div class="line">        <span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">            current_url = redis_client.lpop(<span class="string">'m_sohu_task'</span>)</div><div class="line">            <span class="keyword">while</span> <span class="keyword">not</span> current_url:</div><div class="line">                current_url = redis_client.lpop(<span class="string">'m_sohu_task'</span>)</div><div class="line">            self.spider.status = SpiderStatus.WORKING</div><div class="line">            current_url = current_url.decode(<span class="string">'utf-8'</span>)</div><div class="line">            <span class="keyword">if</span> <span class="keyword">not</span> redis_client.sismember(<span class="string">'visited_urls'</span>, current_url):</div><div class="line">                redis_client.sadd(<span class="string">'visited_urls'</span>, current_url)</div><div class="line">                html_page = self.spider.fetch(current_url)</div><div class="line">                <span class="keyword">if</span> html_page <span class="keyword">not</span> <span class="keyword">in</span> [<span class="keyword">None</span>, <span class="string">''</span>]:</div><div class="line">                    hasher = hasher_proto.copy()</div><div class="line">                    hasher.update(current_url.encode(<span class="string">'utf-8'</span>))</div><div class="line">                    doc_id = hasher.hexdigest()</div><div class="line">                    sohu_data_coll = mongo_client.msohu.webpages</div><div class="line">                    <span class="keyword">if</span> <span class="keyword">not</span> sohu_data_coll.find_one(&#123;<span class="string">'_id'</span>: doc_id&#125;):</div><div class="line">                        sohu_data_coll.insert_one(&#123;</div><div class="line">                            <span class="string">'_id'</span>: doc_id,</div><div class="line">                            <span class="string">'url'</span>: current_url,</div><div class="line">                            <span class="string">'page'</span>: Binary(zlib.compress(pickle.dumps(html_page)))</div><div class="line">                        &#125;)</div><div class="line">                    self.spider.parse(html_page)</div><div class="line">            self.spider.status = SpiderStatus.IDLE</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_any_alive</span><span class="params">(spider_threads)</span>:</span></div><div class="line">    <span class="keyword">return</span> any([spider_thread.spider.status == SpiderStatus.WORKING</div><div class="line">                <span class="keyword">for</span> spider_thread <span class="keyword">in</span> spider_threads])</div><div class="line"></div><div class="line"></div><div class="line">thread_local = local()</div><div class="line">hasher_proto = sha1()</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    redis_client = redis.Redis(host=<span class="string">'1.2.3.4'</span>, port=<span class="number">6379</span>, password=<span class="string">'1qaz2wsx'</span>)</div><div class="line">    <span class="keyword">if</span> <span class="keyword">not</span> redis_client.exists(<span class="string">'m_sohu_task'</span>):</div><div class="line">        redis_client.rpush(<span class="string">'m_sohu_task'</span>, <span class="string">'http://m.sohu.com/'</span>)</div><div class="line"></div><div class="line">    spider_threads = [SpiderThread(<span class="string">'thread-%d'</span> % i, Spider())</div><div class="line">                      <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>)]</div><div class="line">    <span class="keyword">for</span> spider_thread <span class="keyword">in</span> spider_threads:</div><div class="line">        spider_thread.start()</div><div class="line"></div><div class="line">    <span class="keyword">while</span> redis_client.exists(<span class="string">'m_sohu_task'</span>) <span class="keyword">or</span> is_any_alive(spider_threads):</div><div class="line">        <span class="keyword">pass</span></div><div class="line"></div><div class="line">    print(<span class="string">'Over!'</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<h2 id="表单交互和验证码处理"><a href="#表单交互和验证码处理" class="headerlink" title="表单交互和验证码处理"></a>表单交互和验证码处理</h2><h3 id="提交表单"><a href="#提交表单" class="headerlink" title="提交表单"></a>提交表单</h3><h4 id="手动提交"><a href="#手动提交" class="headerlink" title="手动提交"></a>手动提交</h4><h4 id="自动提交"><a href="#自动提交" class="headerlink" title="自动提交"></a>自动提交</h4><h3 id="验证码处理"><a href="#验证码处理" class="headerlink" title="验证码处理"></a>验证码处理</h3><h4 id="加载验证码"><a href="#加载验证码" class="headerlink" title="加载验证码"></a>加载验证码</h4><h4 id="光学字符识别"><a href="#光学字符识别" class="headerlink" title="光学字符识别"></a>光学字符识别</h4><p>光学字符识别（OCR）是从图像中抽取文本的工具，可以应用于公安、电信、物流、金融等诸多行业，例如识别车牌，身份证扫描识别、名片信息提取等。在爬虫开发中，如果遭遇了有文字验证码的表单，就可以利用OCR来进行验证码处理。Tesseract-OCR引擎最初是由惠普公司开发的光学字符识别系统，目前发布在Github上，由Google赞助开发。</p>
<h4 id="改善OCR"><a href="#改善OCR" class="headerlink" title="改善OCR"></a>改善OCR</h4><h4 id="处理更复杂的验证码"><a href="#处理更复杂的验证码" class="headerlink" title="处理更复杂的验证码"></a>处理更复杂的验证码</h4><h4 id="验证码处理服务"><a href="#验证码处理服务" class="headerlink" title="验证码处理服务"></a>验证码处理服务</h4><h2 id="Scrapy爬虫框架入门"><a href="#Scrapy爬虫框架入门" class="headerlink" title="Scrapy爬虫框架入门"></a>Scrapy爬虫框架入门</h2><h3 id="Scrapy概述"><a href="#Scrapy概述" class="headerlink" title="Scrapy概述"></a>Scrapy概述</h3><p>Scrapy是Python开发的一个非常流行的网络爬虫框架，可以用来抓取Web站点并从页面中提取结构化的数据，被广泛的用于数据挖掘、数据监测和自动化测试等领域。</p>
<h4 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h4><ol>
<li>Scrapy引擎（Engine）：Scrapy引擎是用来控制整个系统的数据处理流程。</li>
<li>调度器（Scheduler）：调度器从Scrapy引擎接受请求并排序列入队列，并在Scrapy引擎发出请求后返还给它们。</li>
<li>下载器（Downloader）：下载器的主要职责是抓取网页并将网页内容返还给蜘蛛（Spiders）。</li>
<li>蜘蛛（Spiders）：蜘蛛是有Scrapy用户自定义的用来解析网页并抓取特定URL返回的内容的类，每个蜘蛛都能处理一个域名或一组域名，简单的说就是用来定义特定网站的抓取和解析规则。</li>
<li>条目管道（Item Pipeline）：条目管道的主要责任是负责处理有蜘蛛从网页中抽取的数据条目，它的主要任务是清理、验证和存储数据。当页面被蜘蛛解析后，将被发送到条目管道，并经过几个特定的次序处理数据。每个条目管道组件都是一个Python类，它们获取了数据条目并执行对数据条目进行处理的方法，同时还需要确定是否需要在条目管道中继续执行下一步或是直接丢弃掉不处理。条目管道通常执行的任务有：清理HTML数据、验证解析到的数据（检查条目是否包含必要的字段）、检查是不是重复数据（如果重复就丢弃）、将解析到的数据存储到数据库（关系型数据库或NoSQL数据库）中。</li>
<li>中间件（Middlewares）：中间件是介于Scrapy引擎和其他组件之间的一个钩子框架，主要是为了提供自定义的代码来拓展Scrapy的功能，包括下载器中间件和蜘蛛中间件。</li>
</ol>
<h4 id="数据处理流程"><a href="#数据处理流程" class="headerlink" title="数据处理流程"></a>数据处理流程</h4><p>Scrapy的整个数据处理流程由Scrapy引擎进行控制，通常的运转流程包括以下的步骤：</p>
<ol>
<li><p>引擎询问蜘蛛需要处理哪个网站，并让蜘蛛将第一个需要处理的URL交给它。</p>
</li>
<li><p>引擎让调度器将需要处理的URL放在队列中。</p>
</li>
<li><p>引擎从调度那获取接下来进行爬取的页面。</p>
</li>
<li><p>调度将下一个爬取的URL返回给引擎，引擎将它通过下载中间件发送到下载器。</p>
</li>
<li><p>当网页被下载器下载完成以后，响应内容通过下载中间件被发送到引擎；如果下载失败了，引擎会通知调度器记录这个URL，待会再重新下载。</p>
</li>
<li><p>引擎收到下载器的响应并将它通过蜘蛛中间件发送到蜘蛛进行处理。</p>
</li>
<li><p>蜘蛛处理响应并返回爬取到的数据条目，此外还要将需要跟进的新的URL发送给引擎。</p>
</li>
<li><p>引擎将抓取到的数据条目送入条目管道，把新的URL发送给调度器放入队列中。</p>
</li>
</ol>
<p>上述操作中的2-8步会一直重复直到调度器中没有需要请求的URL，爬虫停止工作。</p>
<h3 id="安装和使用Scrapy"><a href="#安装和使用Scrapy" class="headerlink" title="安装和使用Scrapy"></a>安装和使用Scrapy</h3><p>可以先创建虚拟环境并在虚拟环境下使用pip安装scrapy。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">$</span><span class="bash"></span></div></pre></td></tr></table></figure>
<p>项目的目录结构如下图所示。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">(venv) $ tree</div><div class="line">.</div><div class="line">|____ scrapy.cfg</div><div class="line">|____ douban</div><div class="line">| |____ spiders</div><div class="line">| | |____ __init__.py</div><div class="line">| | |____ __pycache__</div><div class="line">| |____ __init__.py</div><div class="line">| |____ __pycache__</div><div class="line">| |____ middlewares.py</div><div class="line">| |____ settings.py</div><div class="line">| |____ items.py</div><div class="line">| |____ pipelines.py</div></pre></td></tr></table></figure>
<blockquote>
<p>说明：Windows系统的命令行提示符下有tree命令，但是Linux和MacOS的终端是没有tree命令的，可以用下面给出的命令来定义tree命令，其实是对find命令进行了定制并别名为tree。 </p>
<p><code>alias tree=&quot;find . -print | sed -e &#39;s;[^/]*/;|____;g;s;____|; |;g&#39;&quot;</code></p>
<p>Linux系统也可以通过yum或其他的包管理工具来安装tree。</p>
<p><code>yum install tree</code></p>
</blockquote>
<p>根据刚才描述的数据处理流程，基本上需要我们做的有以下几件事情：</p>
<ol>
<li><p>在items.py文件中定义字段，这些字段用来保存数据，方便后续的操作。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"></div><div class="line"><span class="comment"># Define here the models for your scraped items</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># See documentation in:</span></div><div class="line"><span class="comment"># https://doc.scrapy.org/en/latest/topics/items.html</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> scrapy</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">DoubanItem</span><span class="params">(scrapy.Item)</span>:</span></div><div class="line"></div><div class="line">    name = scrapy.Field()</div><div class="line">    year = scrapy.Field()</div><div class="line">    score = scrapy.Field()</div><div class="line">    director = scrapy.Field()</div><div class="line">    classification = scrapy.Field()</div><div class="line">    actor = scrapy.Field()</div></pre></td></tr></table></figure>
</li>
<li><p>在spiders文件夹中编写自己的爬虫。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">(venv) $ scrapy genspider movie movie.douban.com --template=crawl</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"><span class="keyword">import</span> scrapy</div><div class="line"><span class="keyword">from</span> scrapy.selector <span class="keyword">import</span> Selector</div><div class="line"><span class="keyword">from</span> scrapy.linkextractors <span class="keyword">import</span> LinkExtractor</div><div class="line"><span class="keyword">from</span> scrapy.spiders <span class="keyword">import</span> CrawlSpider, Rule</div><div class="line"></div><div class="line"><span class="keyword">from</span> douban.items <span class="keyword">import</span> DoubanItem</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">MovieSpider</span><span class="params">(CrawlSpider)</span>:</span></div><div class="line">    name = <span class="string">'movie'</span></div><div class="line">    allowed_domains = [<span class="string">'movie.douban.com'</span>]</div><div class="line">    start_urls = [<span class="string">'https://movie.douban.com/top250'</span>]</div><div class="line">    rules = (</div><div class="line">        Rule(LinkExtractor(allow=(<span class="string">r'https://movie.douban.com/top250\?start=\d+.*'</span>))),</div><div class="line">        Rule(LinkExtractor(allow=(<span class="string">r'https://movie.douban.com/subject/\d+'</span>)), callback=<span class="string">'parse_item'</span>),</div><div class="line">    )</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse_item</span><span class="params">(self, response)</span>:</span></div><div class="line">        sel = Selector(response)</div><div class="line">        item = DoubanItem()</div><div class="line">        item[<span class="string">'name'</span>]=sel.xpath(<span class="string">'//*[@id="content"]/h1/span[1]/text()'</span>).extract()</div><div class="line">        item[<span class="string">'year'</span>]=sel.xpath(<span class="string">'//*[@id="content"]/h1/span[2]/text()'</span>).re(<span class="string">r'\((\d+)\)'</span>)</div><div class="line">        item[<span class="string">'score'</span>]=sel.xpath(<span class="string">'//*[@id="interest_sectl"]/div/p[1]/strong/text()'</span>).extract()</div><div class="line">        item[<span class="string">'director'</span>]=sel.xpath(<span class="string">'//*[@id="info"]/span[1]/a/text()'</span>).extract()</div><div class="line">        item[<span class="string">'classification'</span>]= sel.xpath(<span class="string">'//span[@property="v:genre"]/text()'</span>).extract()</div><div class="line">        item[<span class="string">'actor'</span>]= sel.xpath(<span class="string">'//*[@id="info"]/span[3]/a[1]/text()'</span>).extract()</div><div class="line">        <span class="keyword">return</span> item</div></pre></td></tr></table></figure>
</li>
<li><p>在pipelines.py中完成对数据进行持久化的操作。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"></div><div class="line"><span class="comment"># Define your item pipelines here</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># Don't forget to add your pipeline to the ITEM_PIPELINES setting</span></div><div class="line"><span class="comment"># See: https://doc.scrapy.org/en/latest/topics/item-pipeline.html</span></div><div class="line"><span class="keyword">import</span> pymongo</div><div class="line"></div><div class="line"><span class="keyword">from</span> scrapy.exceptions <span class="keyword">import</span> DropItem</div><div class="line"><span class="keyword">from</span> scrapy.conf <span class="keyword">import</span> settings</div><div class="line"><span class="keyword">from</span> scrapy <span class="keyword">import</span> log</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">DoubanPipeline</span><span class="params">(object)</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></div><div class="line">        connection = pymongo.MongoClient(settings[<span class="string">'MONGODB_SERVER'</span>], settings[<span class="string">'MONGODB_PORT'</span>])</div><div class="line">        db = connection[settings[<span class="string">'MONGODB_DB'</span>]]</div><div class="line">        self.collection = db[settings[<span class="string">'MONGODB_COLLECTION'</span>]]</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_item</span><span class="params">(self, item, spider)</span>:</span></div><div class="line">        <span class="comment">#Remove invalid data</span></div><div class="line">        valid = <span class="keyword">True</span></div><div class="line">        <span class="keyword">for</span> data <span class="keyword">in</span> item:</div><div class="line">          <span class="keyword">if</span> <span class="keyword">not</span> data:</div><div class="line">            valid = <span class="keyword">False</span></div><div class="line">            <span class="keyword">raise</span> DropItem(<span class="string">"Missing %s of blogpost from %s"</span> %(data, item[<span class="string">'url'</span>]))</div><div class="line">        <span class="keyword">if</span> valid:</div><div class="line">        <span class="comment">#Insert data into database</span></div><div class="line">            new_moive=[&#123;</div><div class="line">                <span class="string">"name"</span>:item[<span class="string">'name'</span>][<span class="number">0</span>],</div><div class="line">                <span class="string">"year"</span>:item[<span class="string">'year'</span>][<span class="number">0</span>],</div><div class="line">                <span class="string">"score"</span>:item[<span class="string">'score'</span>],</div><div class="line">                <span class="string">"director"</span>:item[<span class="string">'director'</span>],</div><div class="line">                <span class="string">"classification"</span>:item[<span class="string">'classification'</span>],</div><div class="line">                <span class="string">"actor"</span>:item[<span class="string">'actor'</span>]</div><div class="line">            &#125;]</div><div class="line">            self.collection.insert(new_moive)</div><div class="line">            log.msg(<span class="string">"Item wrote to MongoDB database %s/%s"</span> %</div><div class="line">            (settings[<span class="string">'MONGODB_DB'</span>], settings[<span class="string">'MONGODB_COLLECTION'</span>]),</div><div class="line">            level=log.DEBUG, spider=spider) </div><div class="line">        <span class="keyword">return</span> item</div></pre></td></tr></table></figure>
</li>
<li><p>修改settings.py文件对项目进行配置。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"></div><div class="line"><span class="comment"># Scrapy settings for douban project</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># For simplicity, this file contains only settings considered important or</span></div><div class="line"><span class="comment"># commonly used. You can find more settings consulting the documentation:</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment">#     https://doc.scrapy.org/en/latest/topics/settings.html</span></div><div class="line"><span class="comment">#     https://doc.scrapy.org/en/latest/topics/downloader-middleware.html</span></div><div class="line"><span class="comment">#     https://doc.scrapy.org/en/latest/topics/spider-middleware.html</span></div><div class="line"></div><div class="line">BOT_NAME = <span class="string">'douban'</span></div><div class="line"></div><div class="line">SPIDER_MODULES = [<span class="string">'douban.spiders'</span>]</div><div class="line">NEWSPIDER_MODULE = <span class="string">'douban.spiders'</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># Crawl responsibly by identifying yourself (and your website) on the user-agent</span></div><div class="line">USER_AGENT = <span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_3) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.54 Safari/536.5'</span></div><div class="line"></div><div class="line"><span class="comment"># Obey robots.txt rules</span></div><div class="line">ROBOTSTXT_OBEY = <span class="keyword">True</span></div><div class="line"></div><div class="line"><span class="comment"># Configure maximum concurrent requests performed by Scrapy (default: 16)</span></div><div class="line"><span class="comment"># CONCURRENT_REQUESTS = 32</span></div><div class="line"></div><div class="line"><span class="comment"># Configure a delay for requests for the same website (default: 0)</span></div><div class="line"><span class="comment"># See https://doc.scrapy.org/en/latest/topics/settings.html#download-delay</span></div><div class="line"><span class="comment"># See also autothrottle settings and docs</span></div><div class="line">DOWNLOAD_DELAY = <span class="number">3</span></div><div class="line">RANDOMIZE_DOWNLOAD_DELAY = <span class="keyword">True</span></div><div class="line"><span class="comment"># The download delay setting will honor only one of:</span></div><div class="line"><span class="comment"># CONCURRENT_REQUESTS_PER_DOMAIN = 16</span></div><div class="line"><span class="comment"># CONCURRENT_REQUESTS_PER_IP = 16</span></div><div class="line"></div><div class="line"><span class="comment"># Disable cookies (enabled by default)</span></div><div class="line">COOKIES_ENABLED = <span class="keyword">True</span></div><div class="line"></div><div class="line">MONGODB_SERVER = <span class="string">'120.77.222.217'</span></div><div class="line">MONGODB_PORT = <span class="number">27017</span></div><div class="line">MONGODB_DB = <span class="string">'douban'</span></div><div class="line">MONGODB_COLLECTION = <span class="string">'movie'</span></div><div class="line"></div><div class="line"><span class="comment"># Disable Telnet Console (enabled by default)</span></div><div class="line"><span class="comment"># TELNETCONSOLE_ENABLED = False</span></div><div class="line"></div><div class="line"><span class="comment"># Override the default request headers:</span></div><div class="line"><span class="comment"># DEFAULT_REQUEST_HEADERS = &#123;</span></div><div class="line"><span class="comment">#   'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',</span></div><div class="line"><span class="comment">#   'Accept-Language': 'en',</span></div><div class="line"><span class="comment"># &#125;</span></div><div class="line"></div><div class="line"><span class="comment"># Enable or disable spider middlewares</span></div><div class="line"><span class="comment"># See https://doc.scrapy.org/en/latest/topics/spider-middleware.html</span></div><div class="line"><span class="comment"># SPIDER_MIDDLEWARES = &#123;</span></div><div class="line"><span class="comment">#    'douban.middlewares.DoubanSpiderMiddleware': 543,</span></div><div class="line"><span class="comment"># &#125;</span></div><div class="line"></div><div class="line"><span class="comment"># Enable or disable downloader middlewares</span></div><div class="line"><span class="comment"># See https://doc.scrapy.org/en/latest/topics/downloader-middleware.html</span></div><div class="line"><span class="comment"># DOWNLOADER_MIDDLEWARES = &#123;</span></div><div class="line"><span class="comment">#    'douban.middlewares.DoubanDownloaderMiddleware': 543,</span></div><div class="line"><span class="comment"># &#125;</span></div><div class="line"></div><div class="line"><span class="comment"># Enable or disable extensions</span></div><div class="line"><span class="comment"># See https://doc.scrapy.org/en/latest/topics/extensions.html</span></div><div class="line"><span class="comment"># EXTENSIONS = &#123;</span></div><div class="line"><span class="comment">#    'scrapy.extensions.telnet.TelnetConsole': None,</span></div><div class="line"><span class="comment"># &#125;</span></div><div class="line"></div><div class="line"><span class="comment"># Configure item pipelines</span></div><div class="line"><span class="comment"># See https://doc.scrapy.org/en/latest/topics/item-pipeline.html</span></div><div class="line">ITEM_PIPELINES = &#123;</div><div class="line">    <span class="string">'douban.pipelines.DoubanPipeline'</span>: <span class="number">400</span>,</div><div class="line">&#125;</div><div class="line"></div><div class="line">LOG_LEVEL = <span class="string">'DEBUG'</span></div><div class="line"></div><div class="line"><span class="comment"># Enable and configure the AutoThrottle extension (disabled by default)</span></div><div class="line"><span class="comment"># See https://doc.scrapy.org/en/latest/topics/autothrottle.html</span></div><div class="line"><span class="comment">#AUTOTHROTTLE_ENABLED = True</span></div><div class="line"><span class="comment"># The initial download delay</span></div><div class="line"><span class="comment">#AUTOTHROTTLE_START_DELAY = 5</span></div><div class="line"><span class="comment"># The maximum download delay to be set in case of high latencies</span></div><div class="line"><span class="comment">#AUTOTHROTTLE_MAX_DELAY = 60</span></div><div class="line"><span class="comment"># The average number of requests Scrapy should be sending in parallel to</span></div><div class="line"><span class="comment"># each remote server</span></div><div class="line"><span class="comment">#AUTOTHROTTLE_TARGET_CONCURRENCY = 1.0</span></div><div class="line"><span class="comment"># Enable showing throttling stats for every response received:</span></div><div class="line"><span class="comment">#AUTOTHROTTLE_DEBUG = False</span></div><div class="line"></div><div class="line"><span class="comment"># Enable and configure HTTP caching (disabled by default)</span></div><div class="line"><span class="comment"># See https://doc.scrapy.org/en/latest/topics/downloader-middleware.html#httpcache-middleware-settings</span></div><div class="line">HTTPCACHE_ENABLED = <span class="keyword">True</span></div><div class="line">HTTPCACHE_EXPIRATION_SECS = <span class="number">0</span></div><div class="line">HTTPCACHE_DIR = <span class="string">'httpcache'</span></div><div class="line">HTTPCACHE_IGNORE_HTTP_CODES = []</div><div class="line">HTTPCACHE_STORAGE = <span class="string">'scrapy.extensions.httpcache.FilesystemCacheStorage'</span></div></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="补充说明"><a href="#补充说明" class="headerlink" title="补充说明"></a>补充说明</h3><h4 id="XPath语法"><a href="#XPath语法" class="headerlink" title="XPath语法"></a>XPath语法</h4><ol>
<li><p>XPath路径表达式：XPath使用路径表达式来选取XML文档中的节点或者节点集。</p>
</li>
<li><p>XPath节点：元素、属性、文本、命名空间、处理指令、注释、根节点。</p>
</li>
<li><p>XPath语法。（注：下面的例子来自于<a href="http://www.runoob.com/" target="_blank" rel="external">菜鸟教程</a>网站的<a href="http://www.runoob.com/xpath/xpath-syntax.html" target="_blank" rel="external">XPath教程</a>。)</p>
<p>XML文件。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span><span class="meta">?&gt;</span></span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">bookstore</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">book</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">title</span> <span class="attr">lang</span>=<span class="string">"eng"</span>&gt;</span>Harry Potter<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">price</span>&gt;</span>29.99<span class="tag">&lt;/<span class="name">price</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">book</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">book</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">title</span> <span class="attr">lang</span>=<span class="string">"eng"</span>&gt;</span>Learning XML<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">price</span>&gt;</span>39.95<span class="tag">&lt;/<span class="name">price</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">book</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">bookstore</span>&gt;</span></div></pre></td></tr></table></figure>
<p>XPath语法。</p>
<p>| 路径表达式      | 结果                                                         |<br>| ————— | ———————————————————— |<br>| bookstore       | 选取 bookstore 元素的所有子节点。                            |<br>| /bookstore      | 选取根元素 bookstore。注释：假如路径起始于正斜杠( / )，则此路径始终代表到某元素的绝对路径！ |<br>| bookstore/book  | 选取属于 bookstore 的子元素的所有 book 元素。                |<br>| //book          | 选取所有 book 子元素，而不管它们在文档中的位置。             |<br>| bookstore//book | 选择属于 bookstore 元素的后代的所有 book 元素，而不管它们位于 bookstore 之下的什么位置。 |<br>| //@lang         | 选取名为 lang 的所有属性。                                   |</p>
<p>XPath谓词。</p>
<p>| 路径表达式                         | 结果                                                         |<br>| ———————————- | ———————————————————— |<br>| /bookstore/book[1]                 | 选取属于 bookstore 子元素的第一个 book 元素。                |<br>| /bookstore/book[last()]            | 选取属于 bookstore 子元素的最后一个 book 元素。              |<br>| /bookstore/book[last()-1]          | 选取属于 bookstore 子元素的倒数第二个 book 元素。            |<br>| /bookstore/book[position()<3] |="" 选取最前面的两个属于="" bookstore="" 元素的子元素的="" book="" 元素。="" title[@lang]="" 选取所有拥有名为="" lang="" 的属性的="" title="" title[@lang="eng" ]="" 选取所有="" 元素，且这些元素拥有值为="" eng="" 的="" 属性。="" book[price="">35.00]       | 选取 bookstore 元素的所有 book 元素，且其中的 price 元素的值须大于 35.00。 |<br>| /bookstore/book[price&gt;35.00]/title | 选取 bookstore 元素中的 book 元素的所有 title 元素，且其中的 price 元素的值须大于 35.00。 |</3]></p>
<p>通配符用法。</p>
<p>| 路径表达式   | 结果                              |<br>| ———— | ——————————— |<br>| /bookstore/<em> | 选取 bookstore 元素的所有子元素。 |<br>| //</em>          | 选取文档中的所有元素。            |<br>| //title[@*]  | 选取所有带有属性的 title 元素。   |</p>
<p>选取多个路径。</p>
<p>| 路径表达式                       | 结果                                                         |<br>| ——————————– | ———————————————————— |<br>| //book/title | //book/price     | 选取 book 元素的所有 title 和 price 元素。                   |<br>| //title | //price               | 选取文档中的所有 title 和 price 元素。                       |<br>| /bookstore/book/title | //price | 选取属于 bookstore 元素的 book 元素的所有 title 元素，以及文档中所有的 price 元素。 |</p>
</li>
</ol>
<h4 id="在Chrome浏览器中查看元素XPath语法"><a href="#在Chrome浏览器中查看元素XPath语法" class="headerlink" title="在Chrome浏览器中查看元素XPath语法"></a>在Chrome浏览器中查看元素XPath语法</h4><h2 id="那些年我们踩过的那些坑"><a href="#那些年我们踩过的那些坑" class="headerlink" title="那些年我们踩过的那些坑"></a>那些年我们踩过的那些坑</h2><h3 id="坑01-整数比较的坑"><a href="#坑01-整数比较的坑" class="headerlink" title="坑01 - 整数比较的坑"></a>坑01 - 整数比较的坑</h3><p>在 Python 中一切都是对象，整数也是对象，在比较两个整数时有两个运算符<code>==</code>和<code>is</code>，它们的区别是：</p>
<ul>
<li><code>is</code>比较的是两个整数对象的id值是否相等，也就是比较两个引用是否代表了内存中同一个地址。</li>
<li><code>==</code>比较的是两个整数对象的内容是否相等，使用<code>==</code>时其实是调用了对象的<code>__eq__()</code>方法。</li>
</ul>
<p>知道了<code>is</code>和<code>==</code>的区别之后，我们可以来看看下面的代码，了解Python中整数比较有哪些坑：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    x = y = <span class="number">-1</span></div><div class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">        x += <span class="number">1</span></div><div class="line">        y += <span class="number">1</span></div><div class="line">        <span class="keyword">if</span> x <span class="keyword">is</span> y:</div><div class="line">            print(<span class="string">'%d is %d'</span> % (x, y))</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            print(<span class="string">'Attention! %d is not %d'</span> % (x, y))</div><div class="line">            <span class="keyword">break</span></div><div class="line">            </div><div class="line">    x = y = <span class="number">0</span></div><div class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">        x -= <span class="number">1</span></div><div class="line">        y -= <span class="number">1</span></div><div class="line">        <span class="keyword">if</span> x <span class="keyword">is</span> y:</div><div class="line">            print(<span class="string">'%d is %d'</span> % (x, y))</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            print(<span class="string">'Attention! %d is not %d'</span> % (x, y))</div><div class="line">            <span class="keyword">break</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>上面代码的部分运行结果如下图所示，出现这个结果的原因是Python出于对性能的考虑所做的一项优化。对于整数对象，Python把一些频繁使用的整数对象缓存起来，保存到一个叫<code>small_ints</code>的链表中，在Python的整个生命周期内，任何需要引用这些整数对象的地方，都不再重新创建新的对象，而是直接引用缓存中的对象。Python把频繁使用的整数对象的值定在[-5, 256]这个区间，如果需要这个范围的整数，就直接从<code>small_ints</code>中获取引用而不是临时创建新的对象。因为大于256或小于-5的整数不在该范围之内，所以就算两个整数的值是一样，但它们是不同的对象。</p>
<p>当然仅仅如此这个坑就不值一提了，我们再看看下面的代码。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> dis</div><div class="line">a = <span class="number">257</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    b = <span class="number">257</span>  <span class="comment"># 第6行</span></div><div class="line">    c = <span class="number">257</span>  <span class="comment"># 第7行</span></div><div class="line">    print(b <span class="keyword">is</span> c)  <span class="comment"># True</span></div><div class="line">    print(a <span class="keyword">is</span> b)  <span class="comment"># False</span></div><div class="line">    print(a <span class="keyword">is</span> c)  <span class="comment"># False</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>程序的执行结果已经用注释写在代码上了。够坑吧！看上去<code>a</code>、<code>b</code>和<code>c</code>的值都是一样的，但是<code>is</code>运算的结果却不一样。为什么会出现这样的结果，首先我们来说说Python程序中的代码块。所谓代码块是程序的一个最小的基本执行单位，一个模块文件、一个函数体、一个类、交互式命令中的单行代码都叫做一个代码块。上面的代码由两个代码块构成，<code>a = 257</code>是一个代码块，<code>main</code>函数是另外一个代码块。Python内部为了进一步提高性能，凡是在一个代码块中创建的整数对象，如果值不在<code>small_ints</code>缓存范围之内，但在同一个代码块中已经存在一个值与其相同的整数对象了，那么就直接引用该对象，否则创建一个新的对象出来，这条规则对不在<code>small_ints</code>范围的负数并不适用，对负数值浮点数也不适用，但对非负浮点数和字符串都是适用的，这一点读者可以自行证明。所以 <code>b is c</code>返回了<code>True</code>，而<code>a</code>和<code>b</code>不在同一个代码块中，虽然值都是257，但却是两个不同的对象，<code>is</code>运算的结果自然是<code>False</code>了。<br>为了验证刚刚的结论，我们可以借用<code>dis</code>模块（听名字就知道是进行反汇编的模块）从字节码的角度来看看这段代码。如果不理解什么是字节码，可以先看看<a href="(http://www.cnblogs.com/restran/p/4903056.html">《谈谈 Python 程序的运行原理》</a>)这篇文章。可以先用<code>import dis</code>导入<code>dis</code>模块并按照如下所示的方式修改代码。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</div><div class="line">    main()</div><div class="line">    dis.dis(main)</div></pre></td></tr></table></figure>
<p>代码的执行结果如下图所示。可以看出代码第6行和第7行，也就是<code>main</code>函数中的257是从同一个位置加载的，因此是同一个对象；而代码第9行的<code>a</code>明显是从不同的地方加载的，因此引用的是不同的对象。</p>
<p>如果还想对这个问题进行进一步深挖，推荐大家阅读<a href="https://foofish.net/python_int_implement.html" target="_blank" rel="external">《Python整数对象实现原理》</a>这篇文章。</p>
<h3 id="坑02-嵌套列表的坑"><a href="#坑02-嵌套列表的坑" class="headerlink" title="坑02 - 嵌套列表的坑"></a>坑02 - 嵌套列表的坑</h3><p>Python中有一种内置的数据类型叫列表，它是一种容器，可以用来承载其他的对象（准确的说是其他对象的引用），列表中的对象可以称为列表的元素，很明显我们可以把列表作为列表中的元素，这就是所谓的嵌套列表。嵌套列表可以模拟出现实中的表格、矩阵、2D游戏的地图（如植物大战僵尸的花园）、棋盘（如国际象棋、黑白棋）等。但是在使用嵌套的列表时要小心，否则很可能遭遇非常尴尬的情况，下面是一个小例子。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    names = [<span class="string">'关羽'</span>, <span class="string">'张飞'</span>, <span class="string">'赵云'</span>, <span class="string">'马超'</span>, <span class="string">'黄忠'</span>]</div><div class="line">    subjs = [<span class="string">'语文'</span>, <span class="string">'数学'</span>, <span class="string">'英语'</span>]</div><div class="line">    scores = [[<span class="number">0</span>] * <span class="number">3</span>] * <span class="number">5</span></div><div class="line">    <span class="keyword">for</span> row, name <span class="keyword">in</span> enumerate(names):</div><div class="line">        print(<span class="string">'请输入%s的成绩'</span> % name)</div><div class="line">        <span class="keyword">for</span> col, subj <span class="keyword">in</span> enumerate(subjs):</div><div class="line">            scores[row][col] = float(input(subj + <span class="string">': '</span>))</div><div class="line">    print(scores)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>我们希望录入5个学生3门课程的成绩，于是定义了一个有5个元素的列表，而列表中的每个元素又是一个由3个元素构成的列表，这样一个列表的列表刚好跟一个表格是一致的，相当于有5行3列，接下来我们通过嵌套的for-in循环输入每个学生3门课程的成绩。程序执行完成后我们发现，每个学生3门课程的成绩是一模一样的，而且就是最后录入的那个学生的成绩。</p>
<p>要想把这个坑填平，我们首先要区分对象和对象的引用这两个概念，而要区分这两个概念，还得先说说内存中的栈和堆。我们经常会听人说起“堆栈”这个词，但实际上“堆”和“栈”是两个不同的概念。众所周知，一个程序运行时需要占用一些内存空间来存储数据和代码，那么这些内存从逻辑上又可以做进一步的划分。对底层语言（如C语言）有所了解的程序大都知道，程序中可以使用的内存从逻辑上可以为五个部分，按照地址从高到低依次是：栈（stack）、堆（heap）、数据段（data segment）、只读数据段（static area）和代码段（code segment）。其中，栈用来存储局部、临时变量，以及函数调用时保存现场和恢复现场需要用到的数据，这部分内存在代码块开始执行时自动分配，代码块执行结束时自动释放，通常由编译器自动管理；堆的大小不固定，可以动态的分配和回收，因此如果程序中有大量的数据需要处理，这些数据通常都放在堆上，如果堆空间没有正确的被释放会引发内存泄露的问题，而像Python、Java等编程语言都使用了垃圾回收机制来实现自动化的内存管理（自动回收不再使用的堆空间）。所以下面的代码中，变量<code>a</code>并不是真正的对象，它是对象的引用，相当于记录了对象在堆空间的地址，通过这个地址我们可以访问到对应的对象；同理，变量<code>b</code>是列表容器的引用，它引用了堆空间上的列表容器，而列表容器中并没有保存真正的对象，它保存的也仅仅是对象的引用。</p>
 <figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">a = object()</div><div class="line">b = [<span class="string">'apple'</span>, <span class="string">'pitaya'</span>, <span class="string">'grape'</span>]</div></pre></td></tr></table></figure>
<p>知道了这一点，我们可以回过头看看刚才的程序，我们对列表进行<code>[[0] * 3] * 5</code>操作时，仅仅是将<code>[0, 0, 0]</code>这个列表的地址进行了复制，并没有创建新的列表对象，所以容器中虽然有5个元素，但是这5个元素引用了同一个列表对象，这一点可以通过<code>id</code>函数检查<code>scores[0]</code>和<code>scores[1]</code>的地址得到证实。所以正确的代码应该按照如下的方式进行修改。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    names = [<span class="string">'关羽'</span>, <span class="string">'张飞'</span>, <span class="string">'赵云'</span>, <span class="string">'马超'</span>, <span class="string">'黄忠'</span>]</div><div class="line">    subjs = [<span class="string">'语文'</span>, <span class="string">'数学'</span>, <span class="string">'英语'</span>]</div><div class="line">    scores = [[]] * <span class="number">5</span></div><div class="line">    <span class="keyword">for</span> row, name <span class="keyword">in</span> enumerate(names):</div><div class="line">        print(<span class="string">'请输入%s的成绩'</span> % name)</div><div class="line">        scores[row] = [<span class="number">0</span>] * <span class="number">3</span></div><div class="line">        <span class="keyword">for</span> col, subj <span class="keyword">in</span> enumerate(subjs):</div><div class="line">            scores[row][col] = float(input(subj + <span class="string">': '</span>))</div><div class="line">    print(scores)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    names = [<span class="string">'关羽'</span>, <span class="string">'张飞'</span>, <span class="string">'赵云'</span>, <span class="string">'马超'</span>, <span class="string">'黄忠'</span>]</div><div class="line">    subjs = [<span class="string">'语文'</span>, <span class="string">'数学'</span>, <span class="string">'英语'</span>]</div><div class="line">    scores = [[<span class="number">0</span>] * <span class="number">3</span> <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">5</span>)]</div><div class="line">    <span class="keyword">for</span> row, name <span class="keyword">in</span> enumerate(names):</div><div class="line">        print(<span class="string">'请输入%s的成绩'</span> % name)</div><div class="line">        scores[row] = [<span class="number">0</span>] * <span class="number">3</span></div><div class="line">        <span class="keyword">for</span> col, subj <span class="keyword">in</span> enumerate(subjs):</div><div class="line">            scores[row][col] = float(input(subj + <span class="string">': '</span>))</div><div class="line">    print(scores)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>如果对内存的使用不是很理解，可以看看<a href="http://www.pythontutor.com/" target="_blank" rel="external">PythonTutor网站</a>上提供的代码可视化执行功能，通过可视化执行，我们可以看到内存是如何分配的，从而避免在使用嵌套列表或者复制对象时可能遇到的坑。</p>
<h3 id="坑03-访问修饰符的坑"><a href="#坑03-访问修饰符的坑" class="headerlink" title="坑03 - 访问修饰符的坑"></a>坑03 - 访问修饰符的坑</h3><p>用Python做过面向对象编程的人都知道，Python的类提供了两种访问控制权限，一种是公开，一种是私有（在属性或方法前加上双下划线）。而用惯了Java或C#这类编程语言的人都知道，类中的属性（数据抽象）通常都是私有的，其目的是为了将数据保护起来；而类中的方法（行为抽象）通常都是公开的，因为方法是对象向外界提供的服务。但是Python并没有从语法层面确保私有成员的私密性，因为它只是对类中所谓的私有成员进行了命名的变换，如果知道命名的规则照样可以直接访问私有成员，请看下面的代码。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">(object)</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, age)</span>:</span></div><div class="line">        self.__name = name</div><div class="line">        self.__age = age</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self.__name + <span class="string">': '</span> + str(self.__age)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    stu = Student(<span class="string">'骆昊'</span>, <span class="number">38</span>)</div><div class="line">    <span class="comment"># 'Student' object has no attribute '__name'</span></div><div class="line">    <span class="comment"># print(stu.__name)</span></div><div class="line">    <span class="comment"># 用下面的方式照样可以访问类中的私有成员</span></div><div class="line">    print(stu._Student__name)</div><div class="line">    print(stu._Student__age)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>Python为什么要做出这样的设定呢？用一句广为流传的格言来解释这个问题：“We are all consenting adults here”（我们都是成年人）。这句话表达了很多Python程序员的一个共同观点，那就是开放比封闭要好，我们应该自己对自己的行为负责而不是从语言层面来限制对数据或方法的访问。</p>
<p>所以在Python中我们实在没有必要将类中的属性或方法用双下划线开头的命名处理成私有的成员，因为这并没有任何实际的意义。如果想对属性或方法进行保护，我们建议用单下划线开头的受保护成员，虽然它也不能真正保护这些属性或方法，但是它相当于给调用者一个暗示，让调用者知道这是不应该直接访问的属性或方法，而且这样做并不影响子类去继承这些东西。</p>
<p>需要提醒大家注意的是，Python类中的那些魔法方法，如__str__、__repr__等，这些方法并不是私有成员哦，虽然它们以双下划线开头，但是他们也是以双下划线结尾的，这种命名并不是私有成员的命名，这一点对初学者来说真的很坑。</p>
<h2 id="玩转PyCharm-上"><a href="#玩转PyCharm-上" class="headerlink" title="玩转PyCharm(上)"></a>玩转PyCharm(上)</h2><p>PyCharm是由JetBrains公司开发的提供给Python专业的开发者的一个集成开发环境，它最大的优点是能够大大提升Python开发者的工作效率，为开发者集成了很多用起来非常顺手的功能，包括代码调试、高亮语法、代码跳转、智能提示、自动补全、单元测试、版本控制等等。此外，PyCharm还提供了对一些高级功能的支持，包括支持基于Django框架的Web开发、。</p>
<h3 id="PyCharm的安装"><a href="#PyCharm的安装" class="headerlink" title="PyCharm的安装"></a>PyCharm的安装</h3><p>可以在<a href="">JetBrains公司的官方网站</a>找到PyCharm的<a href="https://www.jetbrains.com/pycharm/download/" target="_blank" rel="external">下载链接</a>，有两个可供下载的版本一个是社区版一个是专业版，社区版在<a href="https://zh.wikipedia.org/wiki/Apache%E8%AE%B8%E5%8F%AF%E8%AF%81" target="_blank" rel="external">Apache许可证</a>下发布，专业版在专用许可证下发布（需要购买授权下载后可试用30天），其拥有许多额外功能。安装PyCharm需要有JRE（Java运行时环境）的支持，如果没有可以在安装过程中选择在线下载安装。</p>
<blockquote>
<p>说明：如果你是一名学生，希望购买PyCharm来使用，可以看看<a href="https://sales.jetbrains.com/hc/zh-cn/articles/207154369" target="_blank" rel="external">教育优惠官方申请指南</a>。</p>
</blockquote>
<h3 id="首次使用的设置"><a href="#首次使用的设置" class="headerlink" title="首次使用的设置"></a>首次使用的设置</h3><p>第一次使用PyCharm时，会有一个导入设置的向导，如果之前没有使用PyCharm或者没有保存过设置的就直接选择“Do not import settings”进入下一步即可。</p>
<p>专业版的PyCharm是需要激活的，<strong>强烈建议为优秀的软件支付费用</strong>，如果不用做商业用途，我们可以暂时选择试用30天或者使用社区版的PyCharm。</p>
<p> 接下来是选择UI主题，这个可以根据个人喜好进行选择。</p>
<p> 再接下来是创建可以在终端（命令行）中使用PyCharm项目的启动脚本，当然也可以直接跳过这一步。</p>
<p>然后可以选择需要安装哪些插件，我们可以暂时什么都不安装等需要的时候再来决定。</p>
<h3 id="用PyCharm创建项目"><a href="#用PyCharm创建项目" class="headerlink" title="用PyCharm创建项目"></a>用PyCharm创建项目</h3><p>点击上图中的“Start using PyCharm”按钮就可以开始使用PyCharm啦，首先来到的是一个欢迎页，在欢迎页上我们可以选择“创建新项目”、“打开已有项目”和“从版本控制系统中检出项目”。</p>
<p>如果选择了“Create New Project”来创建新项目就会打一个创建项目的向导页。</p>
<p>在如上图所示的界面中，我们可以选择创建项目的模板，包括了纯Python项目、基于各种不同框架的Web项目、Web前端项目、跨平台项目等各种不同的项目模板。如果选择Python的项目，那么有一个非常重要的设定是选择“New environment…”（创建新的虚拟环境）还是使用“Existing Interpreter”（已经存在的解释器）。前者肯定是更好的选择，因为新的虚拟环境不会对系统环境变量中配置的Python环境造成影响，简单举个例子就是你在虚拟环境下安装或者更新了任何三方库，它并不会对系统原有的Python解释器造成任何的影响，但代价是需要额外的存储空间来建立这个虚拟环境。</p>
<p>项目创建完成后就可以开始新建各种文件来书写Python代码了。</p>
<p>在工作窗口的右键菜单中可以找到“Run …”和“Debug …”菜单项，通过这两个菜单项我们就可以运行和调试我们的代码啦。建议关注一下菜单栏中的“Code”、“Refactor”和“Tools”菜单，这里面为编写Python代码提供了很多有用的帮助，我们在后面也会陆续为大家介绍这些功能。  </p>
<h2 id="要不要使用复杂表达式"><a href="#要不要使用复杂表达式" class="headerlink" title="要不要使用复杂表达式"></a>要不要使用复杂表达式</h2><p>Perl语言的原作者Larry Wall曾经说过，伟大的程序员都有三个优点：懒惰、暴躁和自负。乍一看这三个词语没有一个是褒义词，但在程序员的世界里，这三个词有不同的意义。首先，懒惰会促使程序员去写一些省事儿的程序来辅助自己或别人更好的完成工作，这样我们就无需做那些重复和繁琐的劳动；同理能够用3行代码解决的事情，我们也绝不会写出10行代码来。其次，暴躁会让程序员主动的去完成一些你还没有提出的工作，去优化自己的代码让它更有效率，能够3秒钟完成的任务，我们绝不能容忍1分钟的等待。最后，自负会促使程序员写出可靠无误的代码，我们写代码不是为了接受批评和指责，而是为了让其他人来膜拜。</p>
<p>那么接下来就有一个很有意思的问题值得探讨一下，我们需要一个程序从输入的三个数中找出最大的那个数。这个程序对任何会编程的人来说都是小菜一碟，甚至不会编程的人经过10分钟的学习也能搞定。下面是用来解决这个问题的Python代码。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">a = int(input(<span class="string">'a = '</span>))</div><div class="line">b = int(input(<span class="string">'b = '</span>))</div><div class="line">c = int(input(<span class="string">'c = '</span>))</div><div class="line"><span class="keyword">if</span> a &gt; b:</div><div class="line">    the_max = a</div><div class="line"><span class="keyword">else</span>:</div><div class="line">    the_max = b</div><div class="line"><span class="keyword">if</span> c &gt; the_max:</div><div class="line">    the_max = c</div><div class="line">print(<span class="string">'The max is:'</span>, the_max)</div></pre></td></tr></table></figure>
<p>但是我们刚才说了，程序员都是懒惰的，很多程序员都会使用三元条件运算符来改写上面的代码。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">a = int(input(<span class="string">'a = '</span>))</div><div class="line">b = int(input(<span class="string">'b = '</span>))</div><div class="line">c = int(input(<span class="string">'c = '</span>))</div><div class="line">the_max = a <span class="keyword">if</span> a &gt; b <span class="keyword">else</span> b</div><div class="line">the_max = c <span class="keyword">if</span> c &gt; the_max <span class="keyword">else</span> the_max</div><div class="line">print(<span class="string">'The max is:'</span>, the_max)</div></pre></td></tr></table></figure>
<p>需要说明的是，Python在2.5版本以前是没有上面代码第4行和第5行中使用的三元条件运算符的，究其原因是Guido van Rossum（Python之父）认为三元条件运算符并不能帮助 Python变得更加简洁，于是那些习惯了在C/C++或Java中使用三元条件运算符（在这些语言中，三元条件运算符也称为“Elvis运算符”，因为<code>?:</code>放在一起很像著名摇滚歌手猫王Elvis的大背头）的程序员试着用<code>and</code>和<code>or</code>运算符的短路特性来模拟出三元操作符，于是在那个年代，上面的代码是这样写的。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">a = int(input(<span class="string">'a = '</span>))</div><div class="line">b = int(input(<span class="string">'b = '</span>))</div><div class="line">c = int(input(<span class="string">'c = '</span>))</div><div class="line">the_max = a &gt; b <span class="keyword">and</span> a <span class="keyword">or</span> b</div><div class="line">the_max = c &gt; the_max <span class="keyword">and</span> c <span class="keyword">or</span> the_max</div><div class="line">print(<span class="string">'The max is:'</span>, the_max)</div></pre></td></tr></table></figure>
<p>但是这种做法在某些场景下是不能成立的，且看下面的代码。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">a = <span class="number">0</span></div><div class="line">b = <span class="number">-100</span></div><div class="line"><span class="comment"># 下面的代码本来预期输出a的值，结果却得到了b的值</span></div><div class="line"><span class="comment"># 因为a的值0在进行逻辑运算时会被视为False来处理</span></div><div class="line">print(<span class="keyword">True</span> <span class="keyword">and</span> a <span class="keyword">or</span> b)</div><div class="line"><span class="comment"># print(a if True else b)</span></div></pre></td></tr></table></figure>
<p>所以在Python 2.5以后引入了三元条件运算符来避免上面的风险（上面代码被注释掉的最后一句话）。那么，问题又来了，上面的代码还可以写得更简短吗？答案是肯定的。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">a = int(input(<span class="string">'a = '</span>))</div><div class="line">b = int(input(<span class="string">'b = '</span>))</div><div class="line">c = int(input(<span class="string">'c = '</span>))</div><div class="line">print(<span class="string">'The max is:'</span>, (a <span class="keyword">if</span> a &gt; b <span class="keyword">else</span> b) <span class="keyword">if</span> (a <span class="keyword">if</span> a &gt; b <span class="keyword">else</span> b) &gt; c <span class="keyword">else</span> c)</div></pre></td></tr></table></figure>
<p>但是，这样做真的好吗？如此复杂的表达式是不是让代码变得晦涩了很多呢？我们发现，在实际开发中很多开发者都喜欢过度的使用某种语言的特性或语法糖，于是简单的多行代码变成了复杂的单行表达式，这样做真的好吗？这个问题我也不止一次的问过自己，现在我能给出的答案是下面的代码，使用辅助函数。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">the_max</span><span class="params">(x, y)</span>:</span></div><div class="line">    <span class="keyword">return</span> x <span class="keyword">if</span> x &gt; y <span class="keyword">else</span> y</div><div class="line"></div><div class="line"></div><div class="line">a = int(input(<span class="string">'a = '</span>))</div><div class="line">b = int(input(<span class="string">'b = '</span>))</div><div class="line">c = int(input(<span class="string">'c = '</span>))</div><div class="line">print(<span class="string">'The max is:'</span>, the_max(the_max(a, b), c))</div></pre></td></tr></table></figure>
<p>上面的代码中，我定义了一个辅助函数<code>the_max</code>用来找出参数传入的两个值中较大的那一个，于是下面的输出语句可以通过两次调用<code>the_max</code>函数来找出三个数中的最大值，现在代码的可读性是不是好了很多。用辅助函数来替代复杂的表达式真的是一个不错的选择，关键是比较大小的逻辑转移到这个辅助函数后不仅可以反复调用它，而且还可以进行级联操作。</p>
<p>当然，很多语言中比较大小的函数根本没有必要自己来实现（通常都是内置函数），Python也是如此。Python内置的max函数利用了Python对可变参数的支持，允许一次性传入多个值或者一个迭代器并找出那个最大值，所以上面讨论的问题在Python中也就是一句话的事，但是从复杂表达式到使用辅助函数简化复杂表达式这个思想是非常值得玩味的，所以分享出来跟大家做一个交流。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">a = int(input(<span class="string">'a = '</span>))</div><div class="line">b = int(input(<span class="string">'b = '</span>))</div><div class="line">c = int(input(<span class="string">'c = '</span>))</div><div class="line">print(<span class="string">'The max is:'</span>, max(a, b, c))</div></pre></td></tr></table></figure>
<h2 id="PEP-8风格指南"><a href="#PEP-8风格指南" class="headerlink" title="PEP 8风格指南"></a>PEP 8风格指南</h2><p>PEP是Python Enhancement Proposal的缩写，通常翻译为“Python增强提案”。每个PEP都是一份为Python社区提供的指导Python往更好的方向发展的技术文档，其中的第8号增提案即PEP 8是针对Python语言编订的代码风格指南。尽管我们可以在保证语法没有问题的前提下随意书写Python代码，但是在实际开发中，采用一致的风格书写出可读性强的代码是每个专业的程序员应该做到的事情，也是每个公司的编程规范中会提出的要求，这些在多人协作开发一个项目（团队开发）的时候显得尤为重要。我们可以从Python官方网站的<a href="https://www.python.org/dev/peps/pep-0008/" target="_blank" rel="external">PEP 8链接</a>中找到该文档，下面我们对该文档的关键部分做一个简单的总结。</p>
<h3 id="空格的使用"><a href="#空格的使用" class="headerlink" title="空格的使用"></a>空格的使用</h3><ol>
<li><strong>使用空格来表示缩进而不要用制表符（Tab）</strong>。这一点对习惯了其他编程语言的人来说简直觉得不可理喻，因为绝大多数的程序员都会用Tab来表示缩进，但是要知道Python并没有像C/C++或Java那样的用花括号来构造一个代码块的语法，在Python中分支和循环结构都使用缩进来表示哪些代码属于同一个级别，鉴于此Python代码对缩进以及缩进宽度的依赖比其他很多语言都强得多。在不同的编辑器中，Tab的宽度可能是2、4或8个字符，甚至是其他更离谱的值，用Tab来表示缩进对Python代码来说可能是一场灾难。</li>
<li><strong>和语法相关的每一层缩进都用4个空格来表示。</strong></li>
<li><strong>每行的字符数不要超过79个字符，如果表达式因太长而占据了多行，除了首行之外的其余各行都应该在正常的缩进宽度上再加上4个空格。</strong></li>
<li><strong>函数和类的定义，代码前后都要用两个空行进行分隔。</strong></li>
<li><strong>在同一个类中，各个方法之间应该用一个空行进行分隔。</strong></li>
<li><strong>二元运算符的左右两侧应该保留一个空格，而且只要一个空格就好。</strong></li>
</ol>
<h3 id="标识符命名"><a href="#标识符命名" class="headerlink" title="标识符命名"></a>标识符命名</h3><p>PEP 8倡导用不同的命名风格来命名Python中不同的标识符，以便在阅读代码时能够通过标识符的名称来确定该标识符在Python中扮演了怎样的角色（在这一点上，Python自己的内置模块以及某些第三方模块都做得并不是很好）。</p>
<ol>
<li><strong>变量、函数和属性应该使用小写字母来拼写，如果有多个单词就使用下划线进行连接。</strong></li>
<li><strong>类中受保护的实例属性，应该以一个下划线开头。</strong></li>
<li><strong>类中私有的实例属性，应该以两个下划线开头。</strong></li>
<li><strong>类和异常的命名，应该每个单词首字母大写。</strong></li>
<li><strong>模块级别的常量，应该采用全大写字母，如果有多个单词就用下划线进行连接。</strong></li>
<li><strong>类的实例方法，应该把第一个参数命名为<code>self</code>以表示对象自身。</strong></li>
<li><strong>类的类方法，应该把第一个参数命名为<code>cls</code>以表示该类自身。</strong></li>
</ol>
<h3 id="表达式和语句"><a href="#表达式和语句" class="headerlink" title="表达式和语句"></a>表达式和语句</h3><p>在Python之禅（可以使用<code>import this</code>查看）中有这么一句名言：“There should be one– and preferably only one –obvious way to do it.”，翻译成中文是“做一件事应该有而且最好只有一种确切的做法”，这句话传达的思想在PEP 8中也是无处不在的。</p>
<ol>
<li><strong>采用内联形式的否定词，而不要把否定词放在整个表达式的前面。</strong>例如<code>if a is not b</code>就比<code>if not a is b</code>更容易让人理解。</li>
<li><strong>不要用检查长度的方式来判断字符串、列表等是否为<code>None</code>或者没有元素，应该用<code>if not x</code>这样的写法来检查它。</strong></li>
<li><strong>就算<code>if</code>分支、<code>for</code>循环、<code>except</code>异常捕获等中只有一行代码，也不要将代码和<code>if</code>、<code>for</code>、<code>except</code>等写在一起，分开写才会让代码更清晰。</strong></li>
<li><strong><code>import</code>语句总是放在文件开头的地方</strong>。</li>
<li><strong>引入模块的时候，<code>from math import sqrt</code>比<code>import math</code>更好。</strong></li>
<li><strong>如果有多个<code>import</code>语句，应该将其分为三部分，从上到下分别是Python标准模块、第三方模块和自定义模块，每个部分内部应该按照模块名称的字母表顺序来排列。</strong></li>
</ol>
<h2 id="Python惯例"><a href="#Python惯例" class="headerlink" title="Python惯例"></a>Python惯例</h2><p>“惯例”这个词指的是“习惯的做法，常规的办法，一贯的做法”，与这个词对应的英文单词叫“idiom”。由于Python跟其他很多编程语言在语法和使用上还是有比较显著的差别，因此作为一个Python开发者如果不能掌握这些惯例，就无法写出“Pythonic”的代码。下面我们总结了一些在Python开发中的惯用的代码。</p>
<ol>
<li><p>让代码既可以被导入又可以被执行。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div></pre></td></tr></table></figure>
</li>
<li><p>用下面的方式判断逻辑“真”或“假”。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> x:</div><div class="line"><span class="keyword">if</span> <span class="keyword">not</span> x:</div></pre></td></tr></table></figure>
<p><strong>好</strong>的代码：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">name = <span class="string">'jackfrued'</span></div><div class="line">fruits = [<span class="string">'apple'</span>, <span class="string">'orange'</span>, <span class="string">'grape'</span>]</div><div class="line">owners = &#123;<span class="string">'1001'</span>: <span class="string">'骆昊'</span>, <span class="string">'1002'</span>: <span class="string">'王大锤'</span>&#125;</div><div class="line"><span class="keyword">if</span> name <span class="keyword">and</span> fruits <span class="keyword">and</span> owners:</div><div class="line">    print(<span class="string">'I love fruits!'</span>)</div></pre></td></tr></table></figure>
<p><strong>不好</strong>的代码：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">name = <span class="string">'jackfrued'</span></div><div class="line">fruits = [<span class="string">'apple'</span>, <span class="string">'orange'</span>, <span class="string">'grape'</span>]</div><div class="line">owners = &#123;<span class="string">'1001'</span>: <span class="string">'骆昊'</span>, <span class="string">'1002'</span>: <span class="string">'王大锤'</span>&#125;</div><div class="line"><span class="keyword">if</span> name != <span class="string">''</span> <span class="keyword">and</span> len(fruits) &gt; <span class="number">0</span> <span class="keyword">and</span> owners != &#123;&#125;:</div><div class="line">    print(<span class="string">'I love fruits!'</span>)</div></pre></td></tr></table></figure>
</li>
<li><p>善于使用in运算符。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> x <span class="keyword">in</span> items: <span class="comment"># 包含</span></div><div class="line"><span class="keyword">for</span> x <span class="keyword">in</span> items: <span class="comment"># 迭代</span></div></pre></td></tr></table></figure>
<p><strong>好</strong>的代码：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">name = <span class="string">'Hao LUO'</span></div><div class="line"><span class="keyword">if</span> <span class="string">'L'</span> <span class="keyword">in</span> name:</div><div class="line">    print(<span class="string">'The name has an L in it.'</span>)</div></pre></td></tr></table></figure>
<p><strong>不好</strong>的代码：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">name = <span class="string">'Hao LUO'</span></div><div class="line"><span class="keyword">if</span> name.find(<span class="string">'L'</span>) != <span class="number">-1</span>:</div><div class="line">    print(<span class="string">'This name has an L in it!'</span>)</div></pre></td></tr></table></figure>
</li>
<li><p>不使用临时变量交换两个值。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">a, b = b, a</div></pre></td></tr></table></figure>
</li>
<li><p>用序列构建字符串。</p>
<p><strong>好</strong>的代码：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">chars = [<span class="string">'j'</span>, <span class="string">'a'</span>, <span class="string">'c'</span>, <span class="string">'k'</span>, <span class="string">'f'</span>, <span class="string">'r'</span>, <span class="string">'u'</span>, <span class="string">'e'</span>, <span class="string">'d'</span>]</div><div class="line">name = <span class="string">''</span>.join(chars)</div><div class="line">print(name)  <span class="comment"># jackfrued</span></div></pre></td></tr></table></figure>
<p><strong>不好</strong>的代码：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">chars = [<span class="string">'j'</span>, <span class="string">'a'</span>, <span class="string">'c'</span>, <span class="string">'k'</span>, <span class="string">'f'</span>, <span class="string">'r'</span>, <span class="string">'u'</span>, <span class="string">'e'</span>, <span class="string">'d'</span>]</div><div class="line">name = <span class="string">''</span></div><div class="line"><span class="keyword">for</span> char <span class="keyword">in</span> chars:</div><div class="line">    name += char</div><div class="line">print(name)  <span class="comment"># jackfrued</span></div></pre></td></tr></table></figure>
</li>
<li><p>EAFP优于LBYL。</p>
<p>EAFP - <strong>E</strong>asier to <strong>A</strong>sk <strong>F</strong>orgiveness than <strong>P</strong>ermission.</p>
<p>LBYL - <strong>L</strong>ook <strong>B</strong>efore <strong>Y</strong>ou <strong>L</strong>eap.</p>
<p><strong>好</strong>的代码：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">d = &#123;<span class="string">'x'</span>: <span class="string">'5'</span>&#125;</div><div class="line"><span class="keyword">try</span>:</div><div class="line">    value = int(d[<span class="string">'x'</span>])</div><div class="line">    print(value)</div><div class="line"><span class="keyword">except</span> (KeyError, TypeError, ValueError):</div><div class="line">    value = <span class="keyword">None</span></div></pre></td></tr></table></figure>
<p><strong>不好</strong>的代码：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">d = &#123;<span class="string">'x'</span>: <span class="string">'5'</span>&#125;</div><div class="line"><span class="keyword">if</span> <span class="string">'x'</span> <span class="keyword">in</span> d <span class="keyword">and</span> isinstance(d[<span class="string">'x'</span>], str) \</div><div class="line">     <span class="keyword">and</span> d[<span class="string">'x'</span>].isdigit():</div><div class="line">    value = int(d[<span class="string">'x'</span>])</div><div class="line">    print(value)</div><div class="line"><span class="keyword">else</span>:</div><div class="line">    value = <span class="keyword">None</span></div></pre></td></tr></table></figure>
</li>
<li><p>使用enumerate进行迭代。</p>
<p><strong>好</strong>的代码：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">fruits = [<span class="string">'orange'</span>, <span class="string">'grape'</span>, <span class="string">'pitaya'</span>, <span class="string">'blueberry'</span>]</div><div class="line"><span class="keyword">for</span> index, fruit <span class="keyword">in</span> enumerate(fruits):</div><div class="line"> print(index, <span class="string">':'</span>, fruit)</div></pre></td></tr></table></figure>
<p><strong>不好</strong>的代码：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">fruits = [<span class="string">'orange'</span>, <span class="string">'grape'</span>, <span class="string">'pitaya'</span>, <span class="string">'blueberry'</span>]</div><div class="line">index = <span class="number">0</span></div><div class="line"><span class="keyword">for</span> fruit <span class="keyword">in</span> fruits:</div><div class="line">    print(index, <span class="string">':'</span>, fruit)</div><div class="line">    index += <span class="number">1</span></div></pre></td></tr></table></figure>
</li>
<li><p>用生成式生成列表。</p>
<p><strong>好</strong>的代码：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">data = [<span class="number">7</span>, <span class="number">20</span>, <span class="number">3</span>, <span class="number">15</span>, <span class="number">11</span>]</div><div class="line">result = [num * <span class="number">3</span> <span class="keyword">for</span> num <span class="keyword">in</span> data <span class="keyword">if</span> num &gt; <span class="number">10</span>]</div><div class="line">print(result)  <span class="comment"># [60, 45, 33]</span></div></pre></td></tr></table></figure>
<p><strong>不好</strong>的代码：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">data = [<span class="number">7</span>, <span class="number">20</span>, <span class="number">3</span>, <span class="number">15</span>, <span class="number">11</span>]</div><div class="line">result = []</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> data:</div><div class="line">    <span class="keyword">if</span> i &gt; <span class="number">10</span>:</div><div class="line">        result.append(i * <span class="number">3</span>)</div><div class="line">print(result)  <span class="comment"># [60, 45, 33]</span></div></pre></td></tr></table></figure>
</li>
<li><p>用zip组合键和值来创建字典。</p>
<p><strong>好</strong>的代码：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">keys = [<span class="string">'1001'</span>, <span class="string">'1002'</span>, <span class="string">'1003'</span>]</div><div class="line">values = [<span class="string">'骆昊'</span>, <span class="string">'王大锤'</span>, <span class="string">'白元芳'</span>]</div><div class="line">d = dict(zip(keys, values))</div><div class="line">print(d)</div></pre></td></tr></table></figure>
<p><strong>不好</strong>的代码：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">keys = [<span class="string">'1001'</span>, <span class="string">'1002'</span>, <span class="string">'1003'</span>]</div><div class="line">values = [<span class="string">'骆昊'</span>, <span class="string">'王大锤'</span>, <span class="string">'白元芳'</span>]</div><div class="line">d = &#123;&#125;</div><div class="line"><span class="keyword">for</span> i, key <span class="keyword">in</span> enumerate(keys):</div><div class="line">    d[key] = values[i]</div><div class="line">print(d)</div></pre></td></tr></table></figure>
</li>
</ol>
<blockquote>
<p><strong>说明</strong>：这篇文章的内容来自于网络，有兴趣的读者可以阅读<a href="http://safehammad.com/downloads/python-idioms-2014-01-16.pdf" target="_blank" rel="external">原文</a>。</p>
</blockquote>
<h2 id="Python参考书籍"><a href="#Python参考书籍" class="headerlink" title="Python参考书籍"></a>Python参考书籍</h2><h3 id="入门读物"><a href="#入门读物" class="headerlink" title="入门读物"></a>入门读物</h3><ol>
<li>《Python基础教程》（<em>Beginning Python From Novice to Professional</em>）</li>
<li>《Python学习手册》（<em>Learning Python</em>）</li>
<li>《Python编程》（<em>Programming Python</em>）</li>
<li>《Python Cookbook》</li>
<li>《Python程序设计》（<em>Python Programming: An Introduction to Computer Science</em>）</li>
<li>《Modern Python Cookbook》</li>
</ol>
<h3 id="进阶读物"><a href="#进阶读物" class="headerlink" title="进阶读物"></a>进阶读物</h3><ol>
<li>《Python核心编程》（<em>Core Python Applications Programming</em>）</li>
<li>《流畅的Python》（<em>Fluent Python</em>）</li>
<li>《Effective Python：编写高质量Python代码的59个有效方法》（<em>Effective Python 59 Specific Ways to Write Better Python</em>）</li>
<li>《Python设计模式》（<em>Learning Python Design Patterns</em>）</li>
<li>《Python高级编程》（<em>Expert Python Programming</em>）</li>
<li>《Python性能分析与优化》（<em>Mastering Python High Performance</em>）</li>
</ol>
<h3 id="Web框架"><a href="#Web框架" class="headerlink" title="Web框架"></a>Web框架</h3><ol>
<li>《Django基础教程》（<em>Tango with Django</em>）</li>
<li>《轻量级Django》（<em>Lightweight Django</em>）</li>
<li>《Python Web开发：测试驱动方法》（<em>Test-Driven Development with Python</em>）</li>
<li>《Web Development with Django Cookbook》</li>
<li>《Test-Driven Development with Django》</li>
<li>《Django Project Blueprints 》</li>
<li>《Flask Web开发：基于Python的Web应用开发实战》（<em>Flask Web Development: Developing Web Applications with Python</em>）</li>
<li>《深入理解Flask》（<em>Mastering Flask</em>）</li>
</ol>
<h3 id="爬虫开发"><a href="#爬虫开发" class="headerlink" title="爬虫开发"></a>爬虫开发</h3><ol>
<li>《用Python写网络爬虫》（<em>Web Scraping with Python</em>）</li>
<li>《精通Python爬虫框架Scrapy》（<em>Learning Scrapy</em>）</li>
<li>《Python网络数据采集》（<em>Web Scraping with Python</em>）</li>
<li>《Python爬虫开发与项目实战》</li>
<li>《Python 3网络爬虫开发实战》</li>
</ol>
<h3 id="数据分析"><a href="#数据分析" class="headerlink" title="数据分析"></a>数据分析</h3><ol>
<li>《利用Python进行数据分析》（<em>Python for Data Analysis</em>）</li>
<li>《Python数据科学手册》（<em>Python Data Science Handbook</em>）</li>
<li>《Python金融大数据分析》（<em>Python for Finance</em>）</li>
<li>《Python数据可视化编程实战》（<em>Python Data Visualization Cookbook</em>）</li>
<li>《Python数据处理》（<em>Data Wrangling with Python</em>）</li>
</ol>
<h3 id="机器学习"><a href="#机器学习" class="headerlink" title="机器学习"></a>机器学习</h3><ol>
<li>《Python机器学习基础教程》（<em>Introduction to Machine Learning with Python</em>）</li>
<li>《Python机器学习实践指南》（<em>Python Machine Learning Blueprints</em>）</li>
<li>《Python Machine Learning Case Studies》</li>
<li>《Python机器学习实践：测试驱动的开发方法》（<em>Thoughtful Machine Learning with Python A Test Driven Approach</em>）</li>
<li>《Python机器学习经典实例》（<em>Python Machine Learning Cookbook</em>）</li>
<li>《TensorFlow：实战Google深度学习框架》</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这可能是我目前发现最好最好的Python教程了，故整理至我的博客。&lt;br&gt;原项目GitHub地址&lt;a href=&quot;https://github.com/jackfrued/Python-100-Days&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/jackfrued/Python-100-Days&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="https://x-nicolo.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Python" scheme="https://x-nicolo.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>刷题问题集合</title>
    <link href="https://x-nicolo.github.io/2018/03/30/%E5%88%B7%E9%A2%98%E9%97%AE%E9%A2%98%E9%9B%86%E5%90%88/"/>
    <id>https://x-nicolo.github.io/2018/03/30/刷题问题集合/</id>
    <published>2018-03-30T11:55:49.000Z</published>
    <updated>2018-03-30T11:55:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>学的比较杂，忘得比较快。好记性不如烂键盘。  </p>
<a id="more"></a>
<h2 id="机试题"><a href="#机试题" class="headerlink" title="机试题"></a>机试题</h2><h3 id="字符串最后一个单词的长度"><a href="#字符串最后一个单词的长度" class="headerlink" title="字符串最后一个单词的长度"></a>字符串最后一个单词的长度</h3><p>Question；<br><figure class="highlight makefile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">题目描述</div><div class="line">计算字符串最后一个单词的长度，单词以空格隔开。 </div><div class="line"><span class="section">输入描述:</span></div><div class="line">一行字符串，非空，长度小于5000。</div><div class="line"></div><div class="line"><span class="section">输出描述:</span></div><div class="line">整数N，最后一个单词的长度。</div><div class="line"></div><div class="line">示例1</div><div class="line">输入</div><div class="line">hello world</div><div class="line">输出</div><div class="line">5</div></pre></td></tr></table></figure></p>
<p>Solution:<br><figure class="highlight hsp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">str</span> = <span class="keyword">input</span>().strip().split()</div><div class="line"><span class="keyword">print</span>(len(<span class="keyword">str</span>[<span class="number">-1</span>]))</div></pre></td></tr></table></figure></p>
<h4 id="strip"><a href="#strip" class="headerlink" title="strip()"></a>strip()</h4><p>usage:  strip()方法用于移除字符串头尾指定的字符（默认为空格)  </p>
<figure class="highlight axapta"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">str</span> = <span class="string">"0000000     Runoob  0000000"</span>; </div><div class="line">print <span class="keyword">str</span>.strip( <span class="string">'0'</span> );  <span class="meta"># 去除首尾字符 0</span></div><div class="line"><span class="comment">//输出</span></div><div class="line">     Runoob  </div><div class="line"></div><div class="line">str2 = <span class="string">"   Runoob      "</span>;   <span class="meta"># 去除首尾空格</span></div><div class="line">print str2.strip();</div><div class="line"><span class="comment">//输出  </span></div><div class="line">Runoob</div></pre></td></tr></table></figure>
<h4 id="split"><a href="#split" class="headerlink" title="split()"></a>split()</h4><p>split()通过指定分隔符对字符串进行切片，如果参数num有指定值，则仅分隔 num 个子字符串.<br>usage； str.split(str=””, num=string.count(str))<br>str – 分隔符，默认为所有的空字符，包括空格、换行(\n)、制表符(\t)等。<br>num – 分割次数。<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">str</span> = <span class="string">"Line1-abcdef \nLine2-abc \nLine4-abcd"</span>;</div><div class="line"><span class="built_in">print</span> <span class="built_in">str</span>.<span class="built_in">split</span>( );</div><div class="line"><span class="built_in">print</span> <span class="built_in">str</span>.<span class="built_in">split</span>(<span class="string">' '</span>, <span class="number">1</span> );</div><div class="line"></div><div class="line"><span class="comment">//输出  </span></div><div class="line"></div><div class="line">[<span class="string">'Line1-abcdef'</span>, <span class="string">'Line2-abc'</span>, <span class="string">'Line4-abcd'</span>]</div><div class="line">[<span class="string">'Line1-abcdef'</span>, <span class="string">'\nLine2-abc \nLine4-abcd'</span>]</div></pre></td></tr></table></figure></p>
<h4 id="len"><a href="#len" class="headerlink" title="len()"></a>len()</h4><p>len() 方法返回对象（字符、列表、元组等）长度或项目个数。<br>uasge:  len(s)<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;</span>&gt;str = <span class="string">"runoob"</span></div><div class="line"><span class="meta">&gt;&gt;</span>&gt; len(str)             <span class="comment"># 字符串长度</span></div><div class="line"><span class="number">6</span></div></pre></td></tr></table></figure></p>
<h3 id="计算字符串个数"><a href="#计算字符串个数" class="headerlink" title="计算字符串个数"></a>计算字符串个数</h3><p>Question：<br><figure class="highlight makefile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">题目描述</div><div class="line">写出一个程序，接受一个有字母和数字以及空格组成的字符串，和一个字符，然后输出输入字符串中含有该字符的个数。不区分大小写。</div><div class="line"></div><div class="line"><span class="section">输入描述:</span></div><div class="line">输入一个有字母和数字以及空格组成的字符串，和一个字符。</div><div class="line"></div><div class="line"><span class="section">输出描述:</span></div><div class="line">输出输入字符串中含有该字符的个数。</div><div class="line"></div><div class="line">示例1</div><div class="line">输入</div><div class="line">ABCDEF A</div><div class="line">输出</div><div class="line">1</div></pre></td></tr></table></figure></p>
<p>Solution:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"> #-*-coding:utf-<span class="number">8</span>-*-</div><div class="line"></div><div class="line">str =<span class="string">"nhrwlbcc8m7c5hih9mhalw98k0322wf2jjm47kk3ntm9snfrflzzundn7d608usy049asxalzjk7izj6amcqhr8uubc04g52mcjboj2fmge2l6iarizfu4yve5o4i3srf5zgqbg82ckcotdeqp760mc9gzei5dzk5gj9x9yj05o3hle0ii64krkkp5i7blh7nbu3gu5vgi2scyn4yqx3z4vcjbyzhnqkh887izotjkg2l0mit0k14vyn39 t"</span></div><div class="line">N = str[-<span class="number">1</span>]</div><div class="line">str = str[:-<span class="number">1</span>].strip()</div><div class="line">counter=<span class="number">0</span></div><div class="line"></div><div class="line"><span class="keyword">for</span> <span class="selector-tag">i</span> <span class="keyword">in</span> str:</div><div class="line">    <span class="keyword">if</span> N == <span class="selector-tag">i</span>:</div><div class="line">        counter = counter+<span class="number">1</span></div><div class="line"><span class="function"><span class="title">print</span><span class="params">(counter)</span></span></div></pre></td></tr></table></figure></p>
<p>最优的Solution:<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">a</span>=input().lower()</div><div class="line"><span class="attribute">b</span>=input().lower()</div><div class="line"><span class="builtin-name">print</span>(a.count(b))</div></pre></td></tr></table></figure></p>
<h4 id="lower"><a href="#lower" class="headerlink" title="lower()"></a>lower()</h4><p>lower() 方法转换字符串中所有大写字符为小写。<br>增加本题的鲁棒性。  </p>
<h4 id="count"><a href="#count" class="headerlink" title="count()"></a>count()</h4><p>count() 方法用于统计字符串里某个字符出现的次数。可选参数为在字符串搜索的开始与结束位置。<br>usage:str.count(sub, start= 0,end=len(string))<br><figure class="highlight axapta"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">str</span>=<span class="string">"www.runoob.com"</span></div><div class="line">sub=<span class="string">'o'</span></div><div class="line">print (<span class="string">"str.count('o') : "</span>, <span class="keyword">str</span>.<span class="keyword">count</span>(sub))</div><div class="line"></div><div class="line">sub=<span class="string">'run'</span></div><div class="line">print (<span class="string">"str.count('run', 0, 10) : "</span>, <span class="keyword">str</span>.<span class="keyword">count</span>(sub,<span class="number">0</span>,<span class="number">10</span>))</div><div class="line"></div><div class="line"><span class="comment">//输出  </span></div><div class="line"><span class="keyword">str</span>.<span class="keyword">count</span>(<span class="string">'o'</span>) :  <span class="number">3</span></div><div class="line"><span class="keyword">str</span>.<span class="keyword">count</span>(<span class="string">'run'</span>, <span class="number">0</span>, <span class="number">10</span>) :  <span class="number">1</span></div></pre></td></tr></table></figure></p>
<p>sub – 搜索的子字符串<br>start – 字符串开始搜索的位置。默认为第一个字符,第一个字符索引值为0。<br>end – 字符串中结束搜索的位置。字符中第一个字符的索引为0。默认为字符串的最后一个位置。  </p>
<h3 id="明明的随机数"><a href="#明明的随机数" class="headerlink" title="明明的随机数"></a>明明的随机数</h3><figure class="highlight excel"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line">题目描述</div><div class="line">明明想在学校中请一些同学一起做一项问卷调查，为了实验的客观性，他先用计算机生成了<span class="built_in">N</span>个<span class="number">1</span>到<span class="number">1000</span>之间的随机整数（<span class="built_in">N</span>≤<span class="number">1000</span>），对于其中重复的数字，只保留一个，把其余相同的数去掉，不同的数对应着不同的学生的学号。然后再把这些数从小到大排序，按照排好的顺序去找同学做调查。请你协助明明完成“去重”与“排序”的工作。</div><div class="line">Input Param </div><div class="line"></div><div class="line">     <span class="built_in">n</span>               输入随机数的个数     </div><div class="line"></div><div class="line"> inputArray      <span class="built_in">n</span>个随机整数组成的数组 </div><div class="line"></div><div class="line">Return <span class="built_in">Value</span></div><div class="line"></div><div class="line">     OutputArray    输出处理后的随机整数</div><div class="line"></div><div class="line">注：测试用例保证输入参数的正确性，答题者无需验证。测试用例不止一组。</div><div class="line"></div><div class="line">输入描述<span class="symbol">:</span></div><div class="line">输入多行，先输入随机整数的个数，再输入相应个数的整数</div><div class="line"></div><div class="line">输出描述<span class="symbol">:</span></div><div class="line">返回多行，处理后的结果</div><div class="line"></div><div class="line">示例<span class="number">1</span></div><div class="line">输入</div><div class="line"><span class="number">11</span></div><div class="line"><span class="number">10</span></div><div class="line"><span class="number">20</span></div><div class="line"><span class="number">40</span></div><div class="line"><span class="number">32</span></div><div class="line"><span class="number">67</span></div><div class="line"><span class="number">40</span></div><div class="line"><span class="number">20</span></div><div class="line"><span class="number">89</span></div><div class="line"><span class="number">300</span></div><div class="line"><span class="number">400</span></div><div class="line"><span class="number">15</span></div><div class="line">输出</div><div class="line"><span class="number">10</span></div><div class="line"><span class="number">15</span></div><div class="line"><span class="number">20</span></div><div class="line"><span class="number">32</span></div><div class="line"><span class="number">40</span></div><div class="line"><span class="number">67</span></div><div class="line"><span class="number">89</span></div><div class="line"><span class="number">300</span></div><div class="line"><span class="number">400</span></div></pre></td></tr></table></figure>
<p>Solution:<br><figure class="highlight maxima"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">import <span class="built_in">random</span></div><div class="line">n = <span class="built_in">range</span>(<span class="number">65</span>)</div><div class="line">inputArray = []</div><div class="line">outputArray = []</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> n:</div><div class="line">    inputArray.<span class="built_in">append</span>(<span class="built_in">random</span>.randint(<span class="number">1</span>,<span class="number">1000</span>))</div><div class="line"><span class="keyword">for</span> j <span class="keyword">in</span> inputArray:</div><div class="line">    <span class="keyword">if</span> j <span class="keyword">not</span> <span class="keyword">in</span> outputArray:</div><div class="line">        outputArray.<span class="built_in">append</span>(j)</div><div class="line"><span class="built_in">print</span>(sorted(outputArray))</div></pre></td></tr></table></figure></p>
<p>牛逼解法：<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">while</span> True:</div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        <span class="keyword">a</span>,<span class="keyword">res</span>=<span class="keyword">int</span>(<span class="built_in">input</span>()),<span class="keyword">set</span>()</div><div class="line">        <span class="keyword">for</span> i in <span class="built_in">range</span>(<span class="keyword">a</span>):<span class="keyword">res</span>.<span class="built_in">add</span>(<span class="keyword">int</span>(<span class="built_in">input</span>()))</div><div class="line">        <span class="keyword">for</span> i in sorted(<span class="keyword">res</span>):<span class="keyword">print</span>(i)</div><div class="line">    excep<span class="variable">t:</span></div><div class="line">        <span class="keyword">break</span></div></pre></td></tr></table></figure></p>
<h4 id="randint"><a href="#randint" class="headerlink" title="randint()"></a>randint()</h4><p>使用了 random 模块的 randint() 函数来生成随机数<br><figure class="highlight arduino"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">使用方法为:<span class="built_in">random</span>.randint(<span class="number">1</span>,<span class="number">1000</span>)</div></pre></td></tr></table></figure></p>
<p>if的另外一种使用方法：<br><figure class="highlight dos"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">非的关系：</div><div class="line"><span class="keyword">if</span> j <span class="keyword">not</span> <span class="keyword">in</span> outputArray:</div><div class="line">        outputArray.<span class="built_in">append</span>(j)</div></pre></td></tr></table></figure></p>
<h4 id="sort-amp-sorted"><a href="#sort-amp-sorted" class="headerlink" title="sort() &amp; sorted()"></a>sort() &amp; sorted()</h4><p>sort 与 sorted 区别：<br>sort是应用在list上的方法，sorted可以对所有可迭代的对象进行排序操作。<br>list的sort方法返回的是对已经存在的列表进行操作，而内建函数sorted方法返回的是一个新的list，而不是在原来的基础上进行的操作。  </p>
<h4 id="多个变量赋值"><a href="#多个变量赋值" class="headerlink" title="多个变量赋值"></a>多个变量赋值</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">a</span>,<span class="keyword">res</span>=<span class="keyword">int</span>(<span class="built_in">input</span>()),<span class="keyword">set</span>()</div></pre></td></tr></table></figure>
<p>Python允许你同时为多个变量赋值。例如：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">a</span> = <span class="selector-tag">b</span> = c = <span class="number">1</span></div></pre></td></tr></table></figure></p>
<p>以上实例，创建一个整型对象，值为1，三个变量被分配到相同的内存空间上。也可以为多个对象指定多个变量。例如：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">a</span>, <span class="selector-tag">b</span>, c = <span class="number">1</span>, <span class="number">2</span>, <span class="string">"john"</span></div></pre></td></tr></table></figure></p>
<p>以上实例，两个整型对象1和2的分配给变量 a 和 b，字符串对象 “john” 分配给变量 c。</p>
<h4 id="set"><a href="#set" class="headerlink" title="set()"></a>set()</h4><p>set() 函数创建一个无序不重复元素集，可进行关系测试，删除重复数据，还可以计算交集、差集、并集等<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt;x = <span class="built_in">set</span>(<span class="string">'runoob'</span>)</div><div class="line">&gt;&gt;&gt; y = <span class="built_in">set</span>(<span class="string">'google'</span>)</div><div class="line">&gt;&gt;&gt; x, y</div><div class="line">(<span class="built_in">set</span>([<span class="string">'b'</span>, <span class="string">'r'</span>, <span class="string">'u'</span>, <span class="string">'o'</span>, <span class="string">'n'</span>]), <span class="built_in">set</span>([<span class="string">'e'</span>, <span class="string">'o'</span>, <span class="string">'g'</span>, <span class="string">'l'</span>]))   <span class="comment"># 重复的被删除</span></div><div class="line">&gt;&gt;&gt; x &amp; y         <span class="comment"># 交集</span></div><div class="line"><span class="built_in">set</span>([<span class="string">'o'</span>])</div><div class="line">&gt;&gt;&gt; x | y         <span class="comment"># 并集</span></div><div class="line"><span class="built_in">set</span>([<span class="string">'b'</span>, <span class="string">'e'</span>, <span class="string">'g'</span>, <span class="string">'l'</span>, <span class="string">'o'</span>, <span class="string">'n'</span>, <span class="string">'r'</span>, <span class="string">'u'</span>])</div><div class="line">&gt;&gt;&gt; x - y         <span class="comment"># 差集</span></div><div class="line"><span class="built_in">set</span>([<span class="string">'r'</span>, <span class="string">'b'</span>, <span class="string">'u'</span>, <span class="string">'n'</span>])</div></pre></td></tr></table></figure></p>
<h4 id="Python-装饰器"><a href="#Python-装饰器" class="headerlink" title="Python 装饰器"></a>Python 装饰器</h4><p>from某乎：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">内裤可以用来遮羞，但是到了冬天它没法为我们防风御寒，聪明的人们发明了长裤。长裤就类似于装饰器，在不影响内裤作用的前提下，给我们身子提供了保暖的功效。</div></pre></td></tr></table></figure></p>
<p>装饰器本质上是一个Python函数，可以让其他函数在不需要做任何代码变动的前提下增加额外功能，装饰器的返回值也是一个函数对象，需求的场景：插入日志、性能测试、事务处理、缓存、权限校验。  </p>
<p>例子：  </p>
<p>比如写了很多个简单的函数，你想知道在运行的时候哪些函数在执行，只是想要很简单的在执行完毕之前给它打印一句“start”，应该是这样：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">func_name</span><span class="params">(arg)</span>:</span></div><div class="line">    <span class="keyword">print</span> <span class="string">'Start func_name'</span></div><div class="line">    sentences</div></pre></td></tr></table></figure></p>
<p>这样做是没有错，但是有想过没，难道想给每一个函数后面都加上那么一句吗？等运行完再一个个的删掉print不觉得麻烦吗？一个不麻烦，十个，一百个呢。<br>装饰器可以这么来：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">log</span><span class="params">(func)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(*arg,**kw)</span>:</span></div><div class="line">        <span class="keyword">print</span> <span class="string">'Start %s'</span> % func</div><div class="line">        <span class="keyword">return</span> func(*arg,**kw)</div><div class="line">    <span class="keyword">return</span> wrapper</div><div class="line"></div><div class="line"><span class="meta">@log</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">func_a</span><span class="params">(arg)</span>:</span></div><div class="line">    <span class="keyword">pass</span></div><div class="line"></div><div class="line"><span class="meta">@log</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun_b</span><span class="params">(arg)</span>:</span></div><div class="line">    <span class="keyword">pass</span></div><div class="line"></div><div class="line"><span class="meta">@log</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun_c</span><span class="params">(arg)</span>:</span></div><div class="line">    <span class="keyword">pass</span></div></pre></td></tr></table></figure></p>
<p>其中，log函数就是装饰器，把装饰器写好后给需要装饰的函数前面加上@log就可以，装饰器节省了代码量，并且在函数不需要装饰的时候直接把@log去掉就可以，只需要用编辑器全局查找然后删除即可。  </p>
<h3 id="字符串分隔"><a href="#字符串分隔" class="headerlink" title="字符串分隔"></a>字符串分隔</h3><p>Q:<br><figure class="highlight dns"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">题目描述</div><div class="line">•连续输入字符串，请按长度为<span class="number">8</span>拆分每个字符串后输出到新的字符串数组； </div><div class="line">•长度不是<span class="number">8</span>整数倍的字符串请在后面补数字<span class="number">0</span>，空字符串不处理。 </div><div class="line">输入描述:</div><div class="line">连续输入字符串(输入<span class="number">2</span>次,每个字符串长度小于<span class="number">100</span>)</div><div class="line"></div><div class="line">输出描述:</div><div class="line">输出到长度为<span class="number">8</span>的新字符串数组</div><div class="line"></div><div class="line">示例<span class="number">1</span></div><div class="line">输入</div><div class="line">abc</div><div class="line"><span class="number">123456789</span></div><div class="line">输出</div><div class="line">abc00000</div><div class="line"><span class="number">12345678</span></div><div class="line"><span class="number">90000000</span></div></pre></td></tr></table></figure></p>
<p>S:<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">def pirnt8(<span class="built_in">line</span>):</div><div class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(<span class="built_in">line</span>) &lt; = <span class="number">8</span>:</div><div class="line">        <span class="keyword">print</span>(<span class="built_in">line</span>+<span class="string">"0"</span>*(<span class="number">8</span>-<span class="built_in">len</span>(<span class="built_in">line</span>)))</div><div class="line"></div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        <span class="keyword">while</span> <span class="built_in">len</span>(<span class="built_in">line</span>) &gt; <span class="number">8</span>:</div><div class="line">            <span class="keyword">print</span>(<span class="built_in">line</span>[:<span class="number">8</span>])</div><div class="line">            <span class="built_in">line</span> = <span class="built_in">line</span>[<span class="number">8</span>:]</div><div class="line">        <span class="keyword">print</span>(<span class="built_in">line</span> + <span class="string">"0"</span>*(<span class="number">8</span>-<span class="built_in">len</span>(<span class="built_in">line</span>)))</div><div class="line"><span class="keyword">a</span> = <span class="built_in">input</span>()</div><div class="line"><span class="keyword">b</span> = <span class="built_in">input</span>()</div><div class="line"></div><div class="line">pirnt8(<span class="keyword">a</span>)</div><div class="line">pirnt8(<span class="keyword">b</span>)</div></pre></td></tr></table></figure></p>
<h4 id="input和raw-input的区别"><a href="#input和raw-input的区别" class="headerlink" title="input和raw_input的区别"></a>input和raw_input的区别</h4><p>字符的时候可以用raw_input()，当然不怕麻烦也可以用input()手动加’’<br>int类型的时候最好用input()</p>
<h3 id="进制转换"><a href="#进制转换" class="headerlink" title="进制转换"></a>进制转换</h3><p>Q:<br><figure class="highlight makefile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">题目描述</div><div class="line">写出一个程序，接受一个十六进制的数值字符串，输出该数值的十进制字符串。（多组同时输入 ）</div><div class="line"></div><div class="line"><span class="section">输入描述:</span></div><div class="line">输入一个十六进制的数值字符串。</div><div class="line"></div><div class="line"><span class="section">输出描述:</span></div><div class="line">输出该数值的十进制字符串。</div><div class="line"></div><div class="line">示例1</div><div class="line">输入</div><div class="line">0xA</div><div class="line">输出</div><div class="line">10</div></pre></td></tr></table></figure></p>
<p>S:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        print(int(input(),<span class="number">16</span>))</div><div class="line">    <span class="keyword">except</span>:</div><div class="line">        <span class="keyword">break</span></div><div class="line"></div><div class="line">注意:注意处理异常，会使用<span class="keyword">try</span>:<span class="keyword">except</span>；</div><div class="line">处理多组输入：<span class="keyword">while</span> <span class="keyword">True</span></div></pre></td></tr></table></figure></p>
<h4 id="Python进制函数"><a href="#Python进制函数" class="headerlink" title="Python进制函数"></a>Python进制函数</h4><p>在python中没有char型，只有字符串类型，这样我们可能将char型转换为整型时极不方便，但是python已经提供了这些转换的内置函数。<br>python 中除了整型，其他进制的只能用字符串来表示：  </p>
<h5 id="任意进制–-gt-十进制-int"><a href="#任意进制–-gt-十进制-int" class="headerlink" title="任意进制–&gt;十进制;int()"></a>任意进制–&gt;十进制;int()</h5><p>可以将二进制，八进制，十六进制转换成十进制整型：<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;</span>&gt; int(<span class="string">'1111'</span>, <span class="number">2</span>)</div><div class="line"><span class="number">15</span></div><div class="line"><span class="meta">&gt;&gt;</span>&gt; int(<span class="string">'f'</span>, <span class="number">16</span>)</div><div class="line"><span class="number">15</span></div><div class="line"><span class="meta">&gt;&gt;</span>&gt; int(<span class="string">'17'</span>, <span class="number">8</span>)</div><div class="line"><span class="number">15</span></div></pre></td></tr></table></figure></p>
<h5 id="整型–-gt-字符；chr"><a href="#整型–-gt-字符；chr" class="headerlink" title="整型–&gt;字符；chr()"></a>整型–&gt;字符；chr()</h5><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="title">chr</span><span class="params">(<span class="number">90</span>)</span></span></div><div class="line"></div><div class="line">输出:<span class="string">'Z'</span></div></pre></td></tr></table></figure>
<h5 id="字符–-gt-整型-ord"><a href="#字符–-gt-整型-ord" class="headerlink" title="字符–&gt;整型:ord()"></a>字符–&gt;整型:ord()</h5><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="title">ord</span><span class="params">(<span class="string">'Z'</span>)</span></span></div><div class="line"></div><div class="line">输出：<span class="number">90</span></div></pre></td></tr></table></figure>
<h5 id="十进制–-gt-十六进制-hex"><a href="#十进制–-gt-十六进制-hex" class="headerlink" title="十进制–&gt;十六进制:hex()"></a>十进制–&gt;十六进制:hex()</h5><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="title">hex</span><span class="params">(<span class="number">255</span>)</span></span></div><div class="line"></div><div class="line">输出：<span class="string">'0xff'</span></div></pre></td></tr></table></figure>
<h5 id="十进制–-gt-二进制：bin"><a href="#十进制–-gt-二进制：bin" class="headerlink" title="十进制–&gt;二进制：bin()"></a>十进制–&gt;二进制：bin()</h5><figure class="highlight maxima"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">bin(<span class="number">255</span>)</div><div class="line"></div><div class="line">输出：'<span class="number">0b11111111</span>'</div></pre></td></tr></table></figure>
<h3 id="质数因子"><a href="#质数因子" class="headerlink" title="质数因子"></a>质数因子</h3><p>Q:<br><figure class="highlight arduino"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">题目描述</div><div class="line">功能:输入一个正整数，按照从小到大的顺序输出它的所有质数的因子（如<span class="number">180</span>的质数因子为<span class="number">2</span> <span class="number">2</span> <span class="number">3</span> <span class="number">3</span> <span class="number">5</span> ）</div><div class="line"></div><div class="line">最后一个数后面也要有空格</div><div class="line"></div><div class="line">详细描述：</div><div class="line"></div><div class="line"></div><div class="line">函数接口说明：</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">String</span> <span class="built_in">getResult</span>(<span class="keyword">long</span> ulDataInput)</div><div class="line"></div><div class="line">输入参数：</div><div class="line"></div><div class="line"><span class="keyword">long</span> ulDataInput：输入的正整数</div><div class="line"></div><div class="line">返回值：</div><div class="line"></div><div class="line"><span class="keyword">String</span></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">输入描述:</div><div class="line">输入一个<span class="keyword">long</span>型整数</div><div class="line"></div><div class="line">输出描述:</div><div class="line">按照从小到大的顺序输出它的所有质数的因子，以空格隔开。最后一个数后面也要有空格。</div><div class="line"></div><div class="line">示例<span class="number">1</span></div><div class="line">输入</div><div class="line"><span class="number">180</span></div><div class="line">输出</div><div class="line"><span class="number">2</span> <span class="number">2</span> <span class="number">3</span> <span class="number">3</span> <span class="number">5</span></div></pre></td></tr></table></figure></p>
<p>Solution：<br>这个问题的意思，其实就是让你把输入的整数因式分解，只不过因子必须都是质数<br>例如：180 = 2 <em> 2 </em> 3 <em> 3 </em> 5；90 = 2 <em> 3 </em> 3 * 5；<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">a</span>, <span class="keyword">res</span> = <span class="keyword">int</span>(<span class="built_in">input</span>()), []</div><div class="line"><span class="keyword">for</span> i in <span class="built_in">range</span>(<span class="number">2</span>, <span class="keyword">a</span> // <span class="number">2</span> + <span class="number">1</span>):</div><div class="line">    <span class="keyword">while</span> <span class="keyword">a</span> % i == <span class="number">0</span>:</div><div class="line">        <span class="keyword">a</span> = <span class="keyword">a</span> / i</div><div class="line">        <span class="keyword">res</span>.<span class="keyword">append</span>(i)</div><div class="line"><span class="keyword">print</span>(<span class="string">" "</span>.<span class="keyword">join</span>(<span class="keyword">map</span>(str, <span class="keyword">res</span>)) + <span class="string">" "</span> <span class="keyword">if</span> <span class="keyword">res</span> <span class="keyword">else</span> str(<span class="keyword">a</span>) + <span class="string">" "</span>)</div></pre></td></tr></table></figure></p>
<h4 id="range"><a href="#range" class="headerlink" title="range()"></a>range()</h4><p>函数语法：range(start, stop[, step])  </p>
<p>参数说明：<br>start: 计数从 start 开始。默认是从 0 开始。例如range（5）等价于range（0， 5）;<br>stop: 计数到 stop 结束，但不包括 stop。例如：range（0， 5） 是[0, 1, 2, 3, 4]没有5<br>step：步长，默认为1。例如：range（0， 5） 等价于 range(0, 5, 1)  </p>
<h4 id="xrange"><a href="#xrange" class="headerlink" title="xrange()"></a>xrange()</h4><p>函数说明：用法与range完全相同，所不同的是生成的不是一个数组，而是一个生成器。<br>要生成很大的数字序列的时候，用xrange会比range性能优很多。<br>range会直接生成一个list对象，而xrange则不会直接生成一个list，而是每次调用返回其中的一个值。<br>所以xrange做循环的性能比range好，尤其是返回很大的时候，尽量用xrange吧，除非你是要返回一个列表。</p>
<h3 id="取近似值"><a href="#取近似值" class="headerlink" title="取近似值"></a>取近似值</h3><p>Q:<br><figure class="highlight makefile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">题目描述</div><div class="line">写出一个程序，接受一个正浮点数值，输出该数值的近似整数值。如果小数点后数值大于等于5,向上取整；小于5，则向下取整。</div><div class="line"></div><div class="line"><span class="section">输入描述:</span></div><div class="line">输入一个正浮点数值</div><div class="line"></div><div class="line"><span class="section">输出描述:</span></div><div class="line">输出该数值的近似整数值</div><div class="line"></div><div class="line">示例1</div><div class="line">输入</div><div class="line">5.5</div><div class="line">输出</div><div class="line">6</div></pre></td></tr></table></figure></p>
<p>S:<br><figure class="highlight arduino"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">a = <span class="keyword">float</span>(input())</div><div class="line"><span class="built_in">if</span> (a - <span class="keyword">int</span>(a))&gt;=<span class="number">0.5</span>:</div><div class="line">    <span class="built_in">print</span>(<span class="keyword">int</span>(a)+<span class="number">1</span>)</div><div class="line"><span class="built_in">else</span>:</div><div class="line">    <span class="built_in">print</span>(<span class="keyword">int</span>(a))</div></pre></td></tr></table></figure></p>
<h4 id="float-input"><a href="#float-input" class="headerlink" title="float(input())"></a>float(input())</h4><p>输入一个浮点型</p>
<h4 id="int（）"><a href="#int（）" class="headerlink" title="int（）"></a>int（）</h4><p>int（）默认向下取整</p>
<h4 id="向上取整函数math-ceil"><a href="#向上取整函数math-ceil" class="headerlink" title="向上取整函数math.ceil()"></a>向上取整函数math.ceil()</h4><figure class="highlight lua"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">import <span class="built_in">math</span></div><div class="line"><span class="built_in">math</span>.<span class="built_in">ceil</span>(<span class="number">3.2</span>)</div><div class="line"></div><div class="line">输出：<span class="number">3</span></div></pre></td></tr></table></figure>
<h4 id="向下取整函数math-floor"><a href="#向下取整函数math-floor" class="headerlink" title="向下取整函数math.floor()"></a>向下取整函数math.floor()</h4><figure class="highlight lua"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">import <span class="built_in">math</span></div><div class="line"><span class="built_in">math</span>.<span class="built_in">floor</span>( x )</div></pre></td></tr></table></figure>
<h4 id="四舍五入函数round"><a href="#四舍五入函数round" class="headerlink" title="四舍五入函数round()"></a>四舍五入函数round()</h4><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">a</span>=<span class="number">3.25</span>;b=<span class="number">3.75</span></div><div class="line"><span class="built_in">round</span>(<span class="keyword">a</span>);<span class="built_in">round</span>(b)</div><div class="line"></div><div class="line">输出：</div><div class="line"><span class="number">3.0</span></div><div class="line"><span class="number">4.0</span></div></pre></td></tr></table></figure>
<h3 id="合并表记录"><a href="#合并表记录" class="headerlink" title="合并表记录"></a>合并表记录</h3><p>Q:<br><figure class="highlight excel"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">题目描述</div><div class="line">数据表记录包含表索引和数值，请对表索引相同的记录进行合并，即将相同索引的数值进行求和运算，输出按照key值升序进行输出。</div><div class="line"></div><div class="line">输入描述<span class="symbol">:</span></div><div class="line">先输入键值对的个数</div><div class="line">然后输入成对的<span class="built_in">index</span>和<span class="built_in">value</span>值，以空格隔开</div><div class="line"></div><div class="line">输出描述<span class="symbol">:</span></div><div class="line">输出合并后的键值对（多行）</div><div class="line"></div><div class="line">示例<span class="number">1</span></div><div class="line">输入</div><div class="line"><span class="number">4</span></div><div class="line"><span class="number">0</span> <span class="number">1</span></div><div class="line"><span class="number">0</span> <span class="number">2</span></div><div class="line"><span class="number">1</span> <span class="number">2</span></div><div class="line"><span class="number">3</span> <span class="number">4</span></div><div class="line">输出</div><div class="line"><span class="number">0</span> <span class="number">3</span></div><div class="line"><span class="number">1</span> <span class="number">2</span></div><div class="line"><span class="number">3</span> <span class="number">4</span></div></pre></td></tr></table></figure></p>
<p>Solution:<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">from collections <span class="keyword">import</span> defaultdict</div><div class="line"><span class="keyword">while</span> True:</div><div class="line">    <span class="keyword">try</span>:</div><div class="line"> </div><div class="line">        a,dd=<span class="built_in">int</span>(input()),defaultdict(<span class="built_in">int</span>)</div><div class="line">        <span class="keyword">for</span> i in range(a):</div><div class="line">            <span class="built_in">key</span>,val=<span class="built_in">map</span>(<span class="built_in">int</span>,input().<span class="built_in">split</span>())</div><div class="line">            dd[<span class="built_in">key</span>]+=val</div><div class="line">        <span class="keyword">for</span> i in sorted(dd.keys()):</div><div class="line">            <span class="built_in">print</span>(<span class="built_in">str</span>(i)+<span class="string">" "</span>+<span class="built_in">str</span>(dd[i]))</div><div class="line"> </div><div class="line">    except:</div><div class="line">        <span class="keyword">break</span></div></pre></td></tr></table></figure></p>
<h3 id="提取不重复数"><a href="#提取不重复数" class="headerlink" title="提取不重复数"></a>提取不重复数</h3><p>Q:<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">输入一个<span class="keyword">int</span>型整数，按照从右向左的阅读顺序，返回一个不含重复数字的新的整数。</div><div class="line"></div><div class="line">输入描述:</div><div class="line">输入一个<span class="keyword">int</span>型整数</div><div class="line"></div><div class="line">输出描述:</div><div class="line">按照从右向左的阅读顺序，返回一个不含重复数字的新的整数</div><div class="line"></div><div class="line">示例<span class="number">1</span></div><div class="line">输入</div><div class="line"><span class="number">9876673</span></div><div class="line">输出</div><div class="line"><span class="number">37689</span></div></pre></td></tr></table></figure></p>
<p>Solution:  </p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">import math</div><div class="line"><span class="selector-tag">a</span> = list(input())[::-<span class="number">1</span>]</div><div class="line">c = list(set(a))</div><div class="line">c.sort(key=<span class="selector-tag">a</span>.index)</div><div class="line">sum = <span class="number">0</span></div><div class="line"><span class="selector-tag">b</span> = len(c)-<span class="number">1</span></div><div class="line"><span class="keyword">for</span> <span class="selector-tag">i</span> <span class="keyword">in</span> c:</div><div class="line">    sum = sum + int(i)*pow(<span class="number">10</span>,b)</div><div class="line">    <span class="selector-tag">b</span> = b-<span class="number">1</span></div><div class="line"><span class="function"><span class="title">print</span><span class="params">(sum)</span></span></div></pre></td></tr></table></figure>
<h4 id="Python翻转字符串-reverse-string"><a href="#Python翻转字符串-reverse-string" class="headerlink" title="Python翻转字符串(reverse string)"></a>Python翻转字符串(reverse string)</h4><p>最简单的方法，将步长设置为-1  </p>
<h4 id="pow-方法返回-xy（x的y次方）-的值"><a href="#pow-方法返回-xy（x的y次方）-的值" class="headerlink" title="pow() 方法返回 xy（x的y次方） 的值"></a>pow() 方法返回 xy（x的y次方） 的值</h4><p>math 模块 pow() 方法的语法:<br>import math<br>math.pow( x, y )<br>内置的方法：pow(x,y)  </p>
<h4 id="按照特定-顺序排序"><a href="#按照特定-顺序排序" class="headerlink" title="按照特定=顺序排序"></a>按照特定=顺序排序</h4><p>c.sort(key=a.index)</p>
<h3 id="字符个数统计"><a href="#字符个数统计" class="headerlink" title="字符个数统计"></a>字符个数统计</h3><p>Q:<br><figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">编写一个函数，计算字符串中含有的不同字符的个数。字符在<span class="selector-tag">ACSII</span>码范围内(<span class="number">0</span>~<span class="number">127</span>)。不在范围内的不作统计。</div><div class="line">输入描述:</div><div class="line">输入<span class="selector-tag">N</span>个字符，字符在<span class="selector-tag">ACSII</span>码范围内。</div><div class="line">输出描述:</div><div class="line">输出范围在(<span class="number">0</span>~<span class="number">127</span>)字符的个数。</div><div class="line">示例<span class="selector-tag">1</span></div><div class="line">输入</div><div class="line"><span class="selector-tag">abc</span></div><div class="line">输出</div><div class="line"><span class="selector-tag">3</span></div></pre></td></tr></table></figure></p>
<p>Soulution:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">a</span>,res= (set(input()),[])</div><div class="line"><span class="keyword">for</span> <span class="selector-tag">i</span> <span class="keyword">in</span> <span class="selector-tag">a</span>:</div><div class="line">    <span class="keyword">if</span>(ord(i)&gt;=<span class="number">0</span> and ord(i)&lt;=<span class="number">127</span>):</div><div class="line">        res.append(i)</div><div class="line"><span class="function"><span class="title">print</span><span class="params">(len(res)</span></span>)</div></pre></td></tr></table></figure></p>
<h5 id="字符–-gt-整型-ord-1"><a href="#字符–-gt-整型-ord-1" class="headerlink" title="字符–&gt;整型:ord()"></a>字符–&gt;整型:ord()</h5><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="title">ord</span><span class="params">(<span class="string">'Z'</span>)</span></span></div><div class="line"></div><div class="line">输出：<span class="number">90</span></div></pre></td></tr></table></figure>
<h3 id="字符串反转"><a href="#字符串反转" class="headerlink" title="字符串反转"></a>字符串反转</h3><p>Q：<br><figure class="highlight makefile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">写出一个程序，接受一个字符串，然后输出该字符串反转后的字符串。例如：</div><div class="line"><span class="section">输入描述:</span></div><div class="line">输入N个字符</div><div class="line"></div><div class="line"><span class="section">输出描述:</span></div><div class="line">输出该字符串反转后的字符串</div><div class="line">示例1</div><div class="line">输入</div><div class="line">abcd</div><div class="line">输出</div><div class="line">dcba</div></pre></td></tr></table></figure></p>
<p>Solution:<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">print(<span class="name">input</span>()[:<span class="symbol">:-1</span>])</div></pre></td></tr></table></figure></p>
<h4 id="1"><a href="#1" class="headerlink" title="[::-1]"></a>[::-1]</h4><p>步长为-1，表示为可迭代对象进行反转。  </p>
<h3 id="数字反转"><a href="#数字反转" class="headerlink" title="数字反转"></a>数字反转</h3><p>Q:<br><figure class="highlight dns"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">描述：</div><div class="line"></div><div class="line">输入一个整数，将这个整数以字符串的形式逆序输出</div><div class="line"></div><div class="line">程序不考虑负数的情况，若数字含有<span class="number">0</span>，则逆序形式也含有<span class="number">0</span>，如输入为<span class="number">100</span>，则输出为<span class="number">001</span></div><div class="line"></div><div class="line"> </div><div class="line"></div><div class="line">输入描述:</div><div class="line">输入一个int整数</div><div class="line"></div><div class="line">输出描述:</div><div class="line">将这个整数以字符串的形式逆序输出</div><div class="line"></div><div class="line">示例<span class="number">1</span></div><div class="line">输入</div><div class="line"><span class="number">1516000</span></div><div class="line">输出</div><div class="line"><span class="number">0006151</span></div></pre></td></tr></table></figure></p>
<p>Solution:<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">print(<span class="name">str</span>(<span class="name">input</span>()[:<span class="symbol">:-1</span>]))</div></pre></td></tr></table></figure></p>
<h3 id="句子逆序"><a href="#句子逆序" class="headerlink" title="句子逆序"></a>句子逆序</h3><p>Q:<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">题目描述</div><div class="line">将一个英文语句以单词为单位逆序排放。例如“I am a <span class="keyword">boy”，逆序排放后为“boy </span>a am I”</div><div class="line">所有单词之间用一个空格隔开，语句中除了英文字母外，不再包含其他字符</div><div class="line"></div><div class="line"></div><div class="line">接口说明</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * 反转句子</span></div><div class="line"><span class="comment"> * </span></div><div class="line"><span class="comment"> * @param sentence 原句子</span></div><div class="line"><span class="comment"> * @return 反转后的句子</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="symbol">public</span> <span class="keyword">String </span><span class="keyword">reverse(String </span>sentence)<span class="comment">;</span></div><div class="line"></div><div class="line">输入描述:</div><div class="line">将一个英文语句以单词为单位逆序排放。</div><div class="line"></div><div class="line">输出描述:</div><div class="line">得到逆序的句子</div><div class="line"></div><div class="line">示例<span class="number">1</span></div><div class="line">输入</div><div class="line">I am a <span class="keyword">boy</span></div><div class="line"><span class="keyword">输出</span></div><div class="line"><span class="keyword">boy </span>a am I</div></pre></td></tr></table></figure></p>
<p>Solution:<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">print(<span class="string">" "</span>.join(<span class="name">input</span>().split()[:<span class="symbol">:-1</span>]))</div></pre></td></tr></table></figure></p>
<p><strong>越做越有感觉，能用一行代码完成的绝不写两行</strong></p>
<h4 id="str-gt-gt-gt-list"><a href="#str-gt-gt-gt-list" class="headerlink" title="str &gt;&gt;&gt;list"></a>str &gt;&gt;&gt;list</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">str1 = <span class="string">"12345"</span>  </div><div class="line">list1 = <span class="keyword">list</span>(str1)  </div><div class="line"><span class="keyword">print</span> list1  </div><div class="line">  </div><div class="line">str2 = <span class="string">"123 sjhid dhi"</span>  </div><div class="line">list2 = str2.<span class="keyword">split</span>() #or list2 = str2.<span class="keyword">split</span>(<span class="string">" "</span>)  </div><div class="line"><span class="keyword">print</span> list2  </div><div class="line">  </div><div class="line">str3 = <span class="string">"www.google.com"</span>  </div><div class="line">list3 = str3.<span class="keyword">split</span>(<span class="string">"."</span>)  </div><div class="line"><span class="keyword">print</span> list3  </div><div class="line"></div><div class="line">输出为：  </div><div class="line">[<span class="keyword">python</span>] <span class="keyword">view</span> plain <span class="keyword">copy</span></div><div class="line">[<span class="string">'1'</span>, <span class="string">'2'</span>, <span class="string">'3'</span>, <span class="string">'4'</span>, <span class="string">'5'</span>]  </div><div class="line">[<span class="string">'123'</span>, <span class="string">'sjhid'</span>, <span class="string">'dhi'</span>]  </div><div class="line">[<span class="string">'www'</span>, <span class="string">'google'</span>, <span class="string">'com'</span>]</div></pre></td></tr></table></figure>
<h4 id="list-gt-gt-gt-str"><a href="#list-gt-gt-gt-str" class="headerlink" title="list &gt;&gt;&gt;str"></a>list &gt;&gt;&gt;str</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">str4 = <span class="string">""</span>.<span class="keyword">join</span>(list3)  </div><div class="line"><span class="keyword">print</span> str4  </div><div class="line">str5 = <span class="string">"."</span>.<span class="keyword">join</span>(list3)  </div><div class="line"><span class="keyword">print</span> str5  </div><div class="line">str6 = <span class="string">" "</span>.<span class="keyword">join</span>(list3)  </div><div class="line"><span class="keyword">print</span> str6  </div><div class="line"></div><div class="line"></div><div class="line">输出为：</div><div class="line">[<span class="keyword">python</span>] <span class="keyword">view</span> plain <span class="keyword">copy</span></div><div class="line">wwwgooglecom  </div><div class="line">www.google.<span class="keyword">com</span>  </div><div class="line">www google <span class="keyword">com</span></div></pre></td></tr></table></figure>
<h4 id="join"><a href="#join" class="headerlink" title="join()"></a>join()</h4><p>列表和元组转换为字符串则必须依靠join函数<br>join() 方法用于将序列中的元素以指定的字符连接生成一个新的字符串<br>语法：<br>join()方法语法:str.join(sequence)<br>参数：<br>sequence – 要连接的元素序列<br>返回值:<br>返回通过指定字符连接序列中元素后生成的新字符串<br>实例:<br>以下实例展示了join()的使用方法：<br><figure class="highlight makefile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">str = <span class="string">"-"</span>;</div><div class="line">seq = (<span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>);<span class="comment"># 字符串序列</span></div><div class="line">print(str.join( seq ))</div><div class="line">以上实例输出结果如下：</div><div class="line">a-b-c</div></pre></td></tr></table></figure></p>
<h3 id="字符串的连接最长路径查找"><a href="#字符串的连接最长路径查找" class="headerlink" title="字符串的连接最长路径查找"></a>字符串的连接最长路径查找</h3><p>Q:<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">题目描述</div><div class="line">给定<span class="keyword">n</span>个字符串，请对<span class="keyword">n</span>个字符串按照字典序排列。</div><div class="line">输入描述:</div><div class="line">输入第一行为一个正整数<span class="keyword">n</span>(1≤<span class="keyword">n</span>≤1000),下面<span class="keyword">n</span>行为<span class="keyword">n</span>个字符串(字符串长度≤100),字符串中只含有大小写字母。</div><div class="line">输出描述:</div><div class="line">数据输出<span class="keyword">n</span>行，输出结果为按照字典序排列的字符串。</div><div class="line">示例1</div><div class="line">输入</div><div class="line">9</div><div class="line"><span class="keyword">cap</span></div><div class="line">to</div><div class="line"><span class="keyword">cat</span></div><div class="line">card</div><div class="line"><span class="keyword">two</span></div><div class="line">too</div><div class="line">up</div><div class="line">boat</div><div class="line"><span class="keyword">boot</span></div><div class="line">输出</div><div class="line">boat</div><div class="line"><span class="keyword">boot</span></div><div class="line"><span class="keyword">cap</span></div><div class="line">card</div><div class="line"><span class="keyword">cat</span></div><div class="line">to</div><div class="line">too</div><div class="line"><span class="keyword">two</span></div><div class="line">up</div></pre></td></tr></table></figure></p>
<p>Solution；<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">a, strings = int(<span class="keyword">input</span>()),[]</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="keyword">range</span>(a):strings.<span class="keyword">append</span>(<span class="keyword">input</span>())</div><div class="line"><span class="keyword">for</span> str <span class="keyword">in</span> sorted(strings): <span class="keyword">print</span>(str)</div></pre></td></tr></table></figure></p>
<h4 id="range-1"><a href="#range-1" class="headerlink" title="range()"></a>range()</h4><p>老生常谈,注意其多行输入的方法  </p>
<h4 id="sorted"><a href="#sorted" class="headerlink" title="sorted()"></a>sorted()</h4><p>sort 与 sorted 区别：<br>sort是应用在list上的方法，sorted可以对所有可迭代的对象进行排序操作。<br>list的sort方法返回的是对已经存在的列表进行操作，而内建函数sorted方法返回的是一个新的list，而不是在原来的基础上进行的操作。  </p>
<h3 id="求int型正整数在内存中存储时1的个数"><a href="#求int型正整数在内存中存储时1的个数" class="headerlink" title="求int型正整数在内存中存储时1的个数"></a>求int型正整数在内存中存储时1的个数</h3><p>Q:<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">题目描述</div><div class="line">输入一个<span class="keyword">int</span>型的正整数，计算出该<span class="keyword">int</span>型数据在内存中存储时<span class="number">1</span>的个数。</div><div class="line"></div><div class="line">输入描述:</div><div class="line"> 输入一个整数（<span class="keyword">int</span>类型）</div><div class="line"></div><div class="line">输出描述:</div><div class="line"> 这个数转换成<span class="number">2</span>进制后，输出<span class="number">1</span>的个数</div><div class="line"></div><div class="line">示例<span class="number">1</span></div><div class="line">输入</div><div class="line"><span class="number">5</span></div><div class="line">输出</div><div class="line"><span class="number">2</span></div></pre></td></tr></table></figure></p>
<p>Solution:<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">print(<span class="name">str</span>(<span class="name">bin</span>(<span class="name">int</span>(<span class="name">input</span>()))).count(<span class="string">"1"</span>))</div></pre></td></tr></table></figure></p>
<p>操作越来骚，Python大法好。  </p>
<h4 id="bin"><a href="#bin" class="headerlink" title="bin()"></a>bin()</h4><p>十进制转二进制  </p>
<h4 id="count-1"><a href="#count-1" class="headerlink" title="count()"></a>count()</h4><p>统计字符串中出现特定符号的个数<br>本题即将输入的int型整数转为二进制，再转换为字符串统计“1”出现的个数  </p>
<h4 id="Python-质数判断"><a href="#Python-质数判断" class="headerlink" title="Python 质数判断"></a>Python 质数判断</h4><p>一个大于1的自然数，除了1和它本身外，不能被其他自然数（质数）整除（2, 3, 5, 7等），换句话说就是该数除了1和它本身以外不再有其他的因数。<br><figure class="highlight maxima"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"># Python 程序用于检测用户输入的数字是否为质数</div><div class="line"> </div><div class="line"># 用户输入数字</div><div class="line"><span class="built_in">num</span> = int(input(<span class="string">"请输入一个数字: "</span>))</div><div class="line"> </div><div class="line"># 质数大于 <span class="number">1</span></div><div class="line"><span class="keyword">if</span> <span class="built_in">num</span> &gt; <span class="number">1</span>:</div><div class="line">   # 查看因子</div><div class="line">   <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>,<span class="built_in">num</span>):</div><div class="line">       <span class="keyword">if</span> (<span class="built_in">num</span> <span class="symbol">%</span> i) == <span class="number">0</span>:</div><div class="line">           <span class="built_in">print</span>(<span class="built_in">num</span>,<span class="string">"不是质数"</span>)</div><div class="line">           <span class="built_in">print</span>(i,<span class="string">"乘于"</span>,<span class="built_in">num</span>//i,<span class="string">"是"</span>,<span class="built_in">num</span>)</div><div class="line">           <span class="built_in">break</span></div><div class="line">   <span class="keyword">else</span>:</div><div class="line">       <span class="built_in">print</span>(<span class="built_in">num</span>,<span class="string">"是质数"</span>)</div><div class="line">       </div><div class="line"># 如果输入的数字小于或等于 <span class="number">1</span>，不是质数</div><div class="line"><span class="keyword">else</span>:</div><div class="line">   <span class="built_in">print</span>(<span class="built_in">num</span>,<span class="string">"不是质数"</span>)</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;学的比较杂，忘得比较快。好记性不如烂键盘。  &lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="https://x-nicolo.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="学习" scheme="https://x-nicolo.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>前端入门学习--JavaScript</title>
    <link href="https://x-nicolo.github.io/2018/03/01/%E5%89%8D%E7%AB%AF%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0-JavaScript/"/>
    <id>https://x-nicolo.github.io/2018/03/01/前端入门学习-JavaScript/</id>
    <published>2018-03-01T07:27:44.000Z</published>
    <updated>2018-03-01T07:27:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>大概了解了HTML和CSS，到了前端的精华JavaScript。<br><a id="more"></a><br>学习笔记，ALL FROM <a href="https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000" target="_blank" rel="external">廖雪峰的官方网站</a>  </p>
<h3 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="actionscript"><span class="function"><span class="keyword">function</span> <span class="title">displayDate</span><span class="params">()</span></span>&#123;</span></div><div class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">"demo"</span>).innerHTML=<span class="built_in">Date</span>();</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>第一个JavaScript 程序<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"demo"</span>&gt;</span>这是一个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">onclick</span>=<span class="string">"displayDate()"</span>&gt;</span>显示日期<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="JavaScript简介"><a href="#JavaScript简介" class="headerlink" title="JavaScript简介"></a>JavaScript简介</h3><p>JavaScript是一种运行在浏览器中的解释型的编程语言。在Web世界里，只有JavaScript能跨平台、跨浏览器驱动网页，与用户交互。随着HTML5在PC和移动端越来越流行，JavaScript变得更加重要了。并且，新兴的Node.js把JavaScript引入到了服务器端，JavaScript已经变成了全能型选手。  </p>
<h3 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h3><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><p>JavaScript的语法和Java语言类似，每个语句以;结束，语句块用{…}。但是，JavaScript并不强制要求在每个语句的结尾加;，浏览器中负责执行JavaScript代码的引擎会自动在每个语句的结尾补上;。  </p>
<p>完整的复制语句：<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">var x</span> = 1;</div></pre></td></tr></table></figure></p>
<p>语句块是一组语句的集合，例如，下面的代码先做了一个判断，如果判断成立，将执行{…}中的所有语句：<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">if(<span class="number">2</span>&gt;<span class="number">1</span>)&#123;</div><div class="line">    x = <span class="number">1</span>;</div><div class="line">    y = <span class="number">2</span>;</div><div class="line">    z = <span class="number">3</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>注意花括号{…}内的语句具有缩进，通常是4个空格。缩进不是JavaScript语法要求必须的，但缩进有助于我们理解代码的层次，所以编写代码时要遵守缩进规则。(Python的缩进哈哈哈)  </p>
<h4 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h4><p>以//开头直到行末的字符被视为行注释，注释是给开发人员看到，JavaScript引擎会自动忽略：<br><figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 这是一行注释</span></div><div class="line"><span class="selector-tag">alert</span>(<span class="string">'hello'</span>); <span class="comment">// 这也是注释</span></div></pre></td></tr></table></figure></p>
<p>另一种块注释是用/<em>…</em>/把多行字符包裹起来，把一大“块”视为一个注释：<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* 从这里开始是块注释</span></div><div class="line"><span class="comment">仍然是注释</span></div><div class="line"><span class="comment">仍然是注释</span></div><div class="line"><span class="comment">注释结束 */</span></div></pre></td></tr></table></figure></p>
<h3 id="数据类型和变量"><a href="#数据类型和变量" class="headerlink" title="数据类型和变量"></a>数据类型和变量</h3><h4 id="Number"><a href="#Number" class="headerlink" title="Number"></a>Number</h4><p>JavaScript不区分整数和浮点数，统一用Number表示。以下均为合法：  </p>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="number">123</span>;<span class="comment">//整数</span></div><div class="line"><span class="number">0.456</span>;<span class="comment">//浮点数</span></div><div class="line"><span class="number">-99</span><span class="comment">//负数</span></div><div class="line">NaN;<span class="comment">//表示 Not a Number,当无法计算结果时用NaN表示</span></div><div class="line">Infinity;<span class="comment">//表示无限大</span></div></pre></td></tr></table></figure>
<p>Number可以直接做四则运算，规则和数学一致。  </p>
<h4 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h4><p>字符串是以单引号’或双引号”括起来的任意文本，比如’abc’，”xyz”等等。请注意，’’或””本身只是一种表示方式，不是字符串的一部分，因此，字符串’abc’只有a，b，c这3个字符。  </p>
<h4 id="布尔值"><a href="#布尔值" class="headerlink" title="布尔值"></a>布尔值</h4><p>布尔值和布尔数的表示完全一致，一个布尔值只有true、false两种值。<br>实际上，JavaScript允许对任意数据类型做比较：<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="literal">false</span> <span class="string">==</span> <span class="number">0</span><span class="string">;</span> <span class="string">//</span> <span class="literal">true</span></div><div class="line"><span class="literal">false</span> <span class="string">===</span> <span class="number">0</span><span class="string">;</span> <span class="string">//</span> <span class="literal">false</span></div></pre></td></tr></table></figure></p>
<p>注意：<br>“==”第一种比较，会自动转换数据类型再比较，很多时候会得到诡异的结果。<br>“===”第二种结比较，不会自动转换数据类型，如果数据类型不一致就会返回false。<br>特例：NaN这个特殊的Number与所有其他值都不相等，包括它自己。<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">NaN</span> === NaN;//<span class="literal">false</span></div></pre></td></tr></table></figure></p>
<p>唯一能判断NaN的方法是通过isNaN()函数：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">isNaN</span>(<span class="literal">NaN</span>);<span class="comment">//true</span></div></pre></td></tr></table></figure></p>
<p>还需要注意浮点数的相等比较：<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="number">1</span>/<span class="number">3</span> === (<span class="number">1</span> <span class="number">-2</span> / <span class="number">3</span>);<span class="comment">//false</span></div></pre></td></tr></table></figure></p>
<p>浮点数在运算过程中会产生误差，因为计算机无法精确表示无限循环小数。要比较两个浮点数是否相等，只能计算它们之差的绝对值，看是否小于某个阈值：<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Math.abs(<span class="number">1</span> / <span class="number">3</span> - (<span class="number">1</span> - <span class="number">2</span> / <span class="number">3</span>)) &lt; <span class="number">0.0000001</span>;<span class="comment">//true</span></div></pre></td></tr></table></figure></p>
<h4 id="null和undefined"><a href="#null和undefined" class="headerlink" title="null和undefined"></a>null和undefined</h4><p>null表示一个“空”的值，它和0以及空字符串’’不同，0是一个数值，’’表示长度为0的字符串，而null表示“空”。<br>在JavaScript中，还有一个和null类似的undefined，它表示“未定义”。  </p>
<h4 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h4><p>JavaScript的数组可以包括任意数据类型。<br><figure class="highlight scheme"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[<span class="name">1</span>,<span class="number">2</span>,<span class="number">3.14</span>,<span class="symbol">'Hello</span>',null,true]<span class="comment">;</span></div></pre></td></tr></table></figure></p>
<p>另一种创建数组的方法是通过Array()函数实现：<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">new Array(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>);<span class="comment">//创建了数组[1,2,3]</span></div></pre></td></tr></table></figure></p>
<p>数组的元素可以通过索引来访问，索引起始值为0：<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">var arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3.14</span>,'Hello',null,true];</div><div class="line">arr[<span class="number">0</span>];<span class="comment">//1</span></div><div class="line">arr[<span class="number">5</span>];<span class="comment">//true</span></div><div class="line">arr[<span class="number">6</span>];<span class="comment">//undefined</span></div></pre></td></tr></table></figure></p>
<h4 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h4><p>JavaScript的对象是一组由键值组成的无序集合：<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="string">var</span> <span class="string">person</span> <span class="string">=</span> <span class="string">&#123;</span></div><div class="line"><span class="attr">    name:</span> <span class="string">'Bob'</span><span class="string">,</span></div><div class="line"><span class="attr">    age:</span> <span class="number">20</span><span class="string">,</span></div><div class="line"><span class="attr">    tags:</span> <span class="string">['js',</span> <span class="string">'web'</span><span class="string">,</span> <span class="string">'mobile'</span><span class="string">],</span></div><div class="line"><span class="attr">    city:</span> <span class="string">'Beijing'</span><span class="string">,</span></div><div class="line"><span class="attr">    hasCar:</span> <span class="literal">true</span><span class="string">,</span></div><div class="line"><span class="attr">    zipcode:</span> <span class="literal">null</span></div><div class="line"><span class="string">&#125;</span></div></pre></td></tr></table></figure></p>
<p>要获取一个对象的属性，我们用对象变量.属性名的方式：<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">person.name; <span class="regexp">//</span> <span class="string">'Bob'</span></div><div class="line">person.zipcode; <span class="regexp">//</span> null</div></pre></td></tr></table></figure></p>
<h4 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h4><p>变量在JavaScript中就是用一个变量名表示，变量名是大小写英文、数字、$和_的组合，且不能用数字开头。变量名也不能是JavaScript的关键字，如if、while等。申明一个变量用var语句，比如：<br><figure class="highlight lasso"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">var</span> a; <span class="comment">// 申明了变量a，此时a的值为undefined</span></div><div class="line"><span class="built_in">var</span> $b = <span class="number">1</span>; <span class="comment">// 申明了变量$b，同时给$b赋值，此时$b的值为1</span></div><div class="line"><span class="built_in">var</span> s_007 = <span class="string">'007'</span>; <span class="comment">// s_007是一个字符串</span></div><div class="line"><span class="built_in">var</span> Answer = <span class="literal">true</span>; <span class="comment">// Answer是一个布尔值true</span></div><div class="line"><span class="built_in">var</span> t = <span class="built_in">null</span>; <span class="comment">// t的值是null</span></div></pre></td></tr></table></figure></p>
<p>使用等号=对变量进行赋值。可以把任意数据类型赋值给变量，同一个变量可以反复赋值，而且可以是不同类型的变量，但是要注意只能用var申明一次，例如：<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var <span class="keyword">a</span> = <span class="number">123</span>;<span class="comment"> // a的值是整数123</span></div><div class="line"><span class="keyword">a</span> = <span class="string">'ABC'</span>;<span class="comment"> // a变为字符串</span></div></pre></td></tr></table></figure></p>
<p>这种变量本身类型不固定的语言称之为动态语言，与Java不同。<br>要显示变量的内容，可以用console.log(x)，打开Chrome的控制台就可以看到结果。<br><figure class="highlight abnf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var x = <span class="number">100</span><span class="comment">;</span></div><div class="line">console.log(x)<span class="comment">;</span></div></pre></td></tr></table></figure></p>
<h4 id="strict模式"><a href="#strict模式" class="headerlink" title="strict模式"></a>strict模式</h4><p>JavaScript在设计之初，并不强制要求用var申明变量。这个设计错误带来了严重的后果：如果一个变量没有通过var申明就被使用，那么该变量就自动被申明为全局变量：<br><figure class="highlight abnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">i</span> = <span class="number">10</span><span class="comment">;//i现在是全局变量</span></div></pre></td></tr></table></figure></p>
<p>在同一个页面的不同的JavaScript文件中，如果都不用var申明，恰好都使用了变量i，将造成变量i互相影响，产生难以调试的错误结果。<br>使用var申明的变量则不是全局变量，它的范围被限制在该变量被申明的函数体内（函数的概念将稍后讲解），同名变量在不同的函数体内互不冲突。  </p>
<h3 id="字符串-1"><a href="#字符串-1" class="headerlink" title="字符串"></a>字符串</h3><p>JavaScript的字符串就是用‘’或者“”括起来的字符。  </p>
<h4 id="多行字符串"><a href="#多行字符串" class="headerlink" title="多行字符串"></a>多行字符串</h4><p>多行字符串的表示方法，用反引号 “<code>...</code> ”表示：<br><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">`这是一个</div><div class="line">多行</div><div class="line">字符串</div><div class="line">`;</div></pre></td></tr></table></figure></p>
<h4 id="模板字符串"><a href="#模板字符串" class="headerlink" title="模板字符串"></a>模板字符串</h4><p>要把多个字符串连接起来，可以用+号连接：<br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> <span class="keyword">name</span> = <span class="string">'小明'</span>；</div><div class="line"><span class="keyword">var</span> age = <span class="number">20</span>；</div><div class="line"><span class="keyword">var</span> <span class="keyword">message</span> = <span class="string">'你好，'</span> + <span class="string">',你今年'</span> + age + <span class="string">'岁了！'</span>；</div><div class="line">alert(<span class="keyword">message</span>);</div></pre></td></tr></table></figure></p>
<p>如果有很多变量需要连接，用+号就比较麻烦。ES6新增了一种模板字符串，表示方法和上面的多行字符串一样，但是它会自动替换字符串中的变量：<br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> <span class="keyword">name</span> = <span class="string">'小明'</span>;</div><div class="line"><span class="keyword">var</span> age = <span class="number">20</span>;</div><div class="line"><span class="keyword">var</span> <span class="keyword">message</span> = `你好, $<span class="comment">&#123;name&#125;</span>, 你今年$<span class="comment">&#123;age&#125;</span>岁了!`;</div><div class="line">alert(<span class="keyword">message</span>);</div></pre></td></tr></table></figure></p>
<p>(这怎么和之前写的Java操作Word模板，操作XML的方法很像)  </p>
<h4 id="操作字符串"><a href="#操作字符串" class="headerlink" title="操作字符串"></a>操作字符串</h4><p>字符串常见的操作如下：<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> s = <span class="string">'Hello, world!'</span>;</div><div class="line">s.length; <span class="comment">// 13</span></div></pre></td></tr></table></figure></p>
<p>要获取字符串某个指定位置的字符，使用类似Array的下标操作，索引号从0开始：<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">var s = <span class="string">'Hello, world!'</span>;</div><div class="line"></div><div class="line">s[<span class="number">0</span>]; <span class="regexp">//</span> <span class="string">'H'</span></div><div class="line">s[<span class="number">6</span>]; <span class="regexp">//</span> <span class="string">' '</span></div><div class="line">s[<span class="number">7</span>]; <span class="regexp">//</span> <span class="string">'w'</span></div><div class="line">s[<span class="number">12</span>]; <span class="regexp">//</span> <span class="string">'!'</span></div><div class="line">s[<span class="number">13</span>]; <span class="regexp">//</span> undefined 超出范围的索引不会报错，但一律返回undefined</div></pre></td></tr></table></figure></p>
<h4 id="JavaScript字符串常用方法"><a href="#JavaScript字符串常用方法" class="headerlink" title="JavaScript字符串常用方法"></a>JavaScript字符串常用方法</h4><h5 id="toUpperCase"><a href="#toUpperCase" class="headerlink" title="toUpperCase"></a>toUpperCase</h5><p>toUpperCase()方法是把一个字符串全部变为大写：<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> s = <span class="string">'Hello'</span>;</div><div class="line">s.toUpperCase();返回HELLO</div></pre></td></tr></table></figure></p>
<h5 id="toLowerCase"><a href="#toLowerCase" class="headerlink" title="toLowerCase"></a>toLowerCase</h5><p>toLowerCase()方法是把一个字符串全部变为小写：<br><figure class="highlight lua"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var s = <span class="string">'Hello'</span>;</div><div class="line">var <span class="built_in">lower</span> = s.toLowerCase(); // 返回<span class="string">'hello'</span>并赋值给变量<span class="built_in">lower</span></div><div class="line"><span class="built_in">lower</span>; // <span class="string">'hello'</span></div></pre></td></tr></table></figure></p>
<h5 id="indexOf"><a href="#indexOf" class="headerlink" title="indexOf"></a>indexOf</h5><p>indexOf()会搜索指定字符串出现的位置：<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> s = <span class="string">'Hello,world'</span>;</div><div class="line">s.indexOf(<span class="string">'world'</span>);<span class="comment">//返回7</span></div><div class="line">s.indexOf(<span class="string">'World'</span>);<span class="comment">//没有找到指定的子串，返回-1</span></div></pre></td></tr></table></figure></p>
<h5 id="substring"><a href="#substring" class="headerlink" title="substring"></a>substring</h5><p>substring()返回指定索引区间的子串：<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var s = <span class="string">'hello,world'</span></div><div class="line">s.substring(<span class="number">0</span>, <span class="number">5</span>); <span class="regexp">//</span> 从索引<span class="number">0</span>开始到<span class="number">5</span>（不包括<span class="number">5</span>），返回<span class="string">'hello'</span></div><div class="line">s.substring(<span class="number">7</span>); <span class="regexp">//</span> 从索引<span class="number">7</span>开始到结束，返回<span class="string">'world'</span></div></pre></td></tr></table></figure></p>
<h3 id="数组-1"><a href="#数组-1" class="headerlink" title="数组"></a>数组</h3><p>JavaScript的Array可以包含任意数据类型，并通过索引来访问每个元素。<br>要取得Array的长度，直接访问length属性：<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3.14</span>,<span class="string">'Hello'</span>,<span class="literal">null</span>,<span class="literal">true</span>];</div><div class="line">arr.length;<span class="comment">//6</span></div></pre></td></tr></table></figure></p>
<p>直接给Array的length赋一个新的值会导致Array大小的变化：<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">var arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</div><div class="line">arr.length; <span class="comment">// 3</span></div><div class="line">arr.length = <span class="number">6</span>;</div><div class="line">arr; <span class="comment">// arr变为[1, 2, 3, undefined, undefined, undefined]</span></div><div class="line">arr.length = <span class="number">2</span>;</div><div class="line">arr; <span class="comment">// arr变为[1, 2]</span></div></pre></td></tr></table></figure></p>
<p>Array可以通过索引把对应的元素修改为新的值，因此，对Array的索引进行赋值会直接修改这个Array：<br><figure class="highlight prolog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var arr = [<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>];</div><div class="line">arr[<span class="number">1</span>] = <span class="number">99</span>;</div><div class="line">arr; // arr现在变为[<span class="string">'A'</span>, <span class="number">99</span>, <span class="string">'C'</span>]</div></pre></td></tr></table></figure></p>
<p>如果通过索引赋值时，索引超过了范围，同样会引起Array大小的变化：<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</div><div class="line">arr[<span class="number">5</span>] = 'x';</div><div class="line">arr; <span class="comment">// arr变为[1, 2, 3, undefined, undefined, 'x']</span></div></pre></td></tr></table></figure></p>
<p>大多数其他编程语言不允许直接改变数组的大小，越界访问索引会报错。然而，JavaScript的Array却不会有任何错误。在编写代码时，不建议直接修改Array的大小，访问索引时要确保索引不会越界。  </p>
<h4 id="indexOf-1"><a href="#indexOf-1" class="headerlink" title="indexOf"></a>indexOf</h4><p>与String类似，Array也可以通过indexOf()来搜索一个指定的元素的位置：<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var arr = [<span class="number">10</span>,<span class="number">20</span>,'<span class="number">30</span>','xyz'];</div><div class="line">arr.indexOf(<span class="number">10</span>);<span class="comment">//元素10的索引为0</span></div><div class="line">arr.indexOf(<span class="number">30</span>);<span class="comment">//元素30没有找到，返回-1</span></div></pre></td></tr></table></figure></p>
<h4 id="slice"><a href="#slice" class="headerlink" title="slice"></a>slice</h4><p>slice()就是对应String的substring()版本，截取Array的部分元素，然后返回一个新的Array。<br><figure class="highlight prolog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var arr = [<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>,<span class="string">'D'</span>,<span class="string">'E'</span>,<span class="string">'F'</span>,<span class="string">'G'</span>]；</div><div class="line">arr.slice(<span class="number">0</span>,<span class="number">3</span>);//从索引<span class="number">0</span>开始，到索引<span class="number">3</span>结束，但不包括索引<span class="number">3</span>: [<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>]</div><div class="line">arr.slice(<span class="number">3</span>); // 从索引<span class="number">3</span>开始到结束: [<span class="string">'D'</span>, <span class="string">'E'</span>, <span class="string">'F'</span>, <span class="string">'G'</span>]</div></pre></td></tr></table></figure></p>
<p>叮：slice()的起止参数包括开始索引，不包括结束索引。<br>如果不给slice()传递任何参数，它就会从头到尾截取所有元素。利用这一点，我们可以很容易地复制一个Array：<br><figure class="highlight cal"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> arr = [<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>, <span class="string">'D'</span>, <span class="string">'E'</span>, <span class="string">'F'</span>, <span class="string">'G'</span>];</div><div class="line"><span class="keyword">var</span> aCopy = arr.slice();</div><div class="line">aCopy; // [<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>, <span class="string">'D'</span>, <span class="string">'E'</span>, <span class="string">'F'</span>, <span class="string">'G'</span>]</div><div class="line">aCopy === arr; // <span class="literal">false</span></div></pre></td></tr></table></figure></p>
<h4 id="push和pop"><a href="#push和pop" class="headerlink" title="push和pop"></a>push和pop</h4><p>push()向Array的末尾添加若干元素，pop()则把Array的最后一个元素删掉：<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">var arr = [<span class="number">1</span>,<span class="number">2</span>];</div><div class="line">arr.<span class="keyword">push</span>(<span class="string">'A'</span>,<span class="string">'B'</span>);<span class="comment">//返回Array新的长度：4  </span></div><div class="line">arr;<span class="comment">//[1,2,'A','B']</span></div><div class="line">arr.<span class="keyword">pop</span>();<span class="comment">//pop返回'B'</span></div><div class="line">arr;<span class="comment">//[1,2,'A']</span></div><div class="line">arr.<span class="keyword">pop</span>();arr.<span class="keyword">pop</span>();arr.<span class="keyword">pop</span>();<span class="comment">//连续三次pop  </span></div><div class="line">arr;<span class="comment">//[]</span></div><div class="line">arr.<span class="keyword">pop</span>();<span class="comment">//空数组继续pop不会报错，而是返回undefined</span></div><div class="line">arr;<span class="comment">//[]</span></div></pre></td></tr></table></figure></p>
<h4 id="unshifth和shift"><a href="#unshifth和shift" class="headerlink" title="unshifth和shift"></a>unshifth和shift</h4><p>向Array的头部添加若干元素，使用unshift()方法，shift()方法则把Array的第一个元素删掉：<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">var arr = [<span class="number">1</span>,<span class="number">2</span>];</div><div class="line">arr.unshift(<span class="string">'A'</span>,<span class="string">'B'</span>);<span class="regexp">//</span>返回Array新的长度：<span class="number">4</span>  </div><div class="line">arr;<span class="regexp">//</span>[<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="number">1</span>, <span class="number">2</span>]</div><div class="line">arr.shift(); <span class="regexp">//</span> <span class="string">'A'</span></div><div class="line">arr; <span class="regexp">//</span> [<span class="string">'B'</span>, <span class="number">1</span>, <span class="number">2</span>]</div><div class="line">arr.shift(); arr.shift(); arr.shift(); <span class="regexp">//</span> 连续shift <span class="number">3</span>次</div><div class="line">arr; <span class="regexp">//</span> []</div><div class="line">arr.shift(); <span class="regexp">//</span> 空数组继续shift不会报错，而是返回undefined</div><div class="line">arr; <span class="regexp">//</span> []</div></pre></td></tr></table></figure></p>
<h4 id="sort"><a href="#sort" class="headerlink" title="sort"></a>sort</h4><p>sort()可以对当前Array进行排序，它会直接修改当前Array的元素位置，直接调用时，按照默认顺序排序：<br><figure class="highlight prolog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var arr = [<span class="string">'B'</span>,<span class="string">'C'</span>,<span class="string">'A'</span>];</div><div class="line">arr.sort();</div><div class="line">arr;//[<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>]</div></pre></td></tr></table></figure></p>
<h4 id="reverse"><a href="#reverse" class="headerlink" title="reverse"></a>reverse</h4><p>reverse()把整个Array的元素给反转：<br><figure class="highlight prolog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var arr = [<span class="string">'one'</span>, <span class="string">'two'</span>, <span class="string">'three'</span>];</div><div class="line">arr.reverse(); </div><div class="line">arr; // [<span class="string">'three'</span>, <span class="string">'two'</span>, <span class="string">'one'</span>]</div></pre></td></tr></table></figure></p>
<h4 id="splice"><a href="#splice" class="headerlink" title="splice"></a>splice</h4><p>splice()方法是修改Array的“万能方法”，它可以从指定的索引开始删除若干元素，然后再从该位置添加若干元素：<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">var arr = [<span class="string">'Microsoft'</span>, <span class="string">'Apple'</span>, <span class="string">'Yahoo'</span>, <span class="string">'AOL'</span>, <span class="string">'Excite'</span>, <span class="string">'Oracle'</span>];</div><div class="line"><span class="regexp">//</span> 从索引<span class="number">2</span>开始删除<span class="number">3</span>个元素,然后再添加两个元素:</div><div class="line">arr.splice(<span class="number">2</span>,<span class="number">3</span>,<span class="string">'Google'</span>,<span class="string">'Facebook'</span>);<span class="regexp">//</span>返回删除的元素[<span class="string">'Yahoo'</span>, <span class="string">'AOL'</span>, <span class="string">'Excite'</span>]</div><div class="line">arr; <span class="regexp">//</span> [<span class="string">'Microsoft'</span>, <span class="string">'Apple'</span>, <span class="string">'Google'</span>, <span class="string">'Facebook'</span>, <span class="string">'Oracle'</span>]</div><div class="line"><span class="regexp">//</span><span class="regexp">//</span> 只删除,不添加:</div><div class="line">arr.splice(<span class="number">2</span>,<span class="number">2</span>);<span class="regexp">//</span>[<span class="string">'Google'</span>, <span class="string">'Facebook'</span>]</div><div class="line">arr;<span class="regexp">//</span> [<span class="string">'Microsoft'</span>, <span class="string">'Apple'</span>, <span class="string">'Oracle'</span>]</div><div class="line"><span class="regexp">//</span> 只添加,不删除:</div><div class="line">arr.splice(<span class="number">2</span>, <span class="number">0</span>, <span class="string">'Google'</span>, <span class="string">'Facebook'</span>); <span class="regexp">//</span> 返回[],因为没有删除任何元素</div><div class="line">arr; <span class="regexp">//</span> [<span class="string">'Microsoft'</span>, <span class="string">'Apple'</span>, <span class="string">'Google'</span>, <span class="string">'Facebook'</span>, <span class="string">'Oracle'</span>]</div></pre></td></tr></table></figure></p>
<h4 id="concat"><a href="#concat" class="headerlink" title="concat"></a>concat</h4><p>concat()方法把当前的Array和另一个Array连接起来，并返回一个新的Array：<br><figure class="highlight prolog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">var arr = [<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>];</div><div class="line">var added = arr.concat([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]);</div><div class="line">added; // [<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</div><div class="line">arr; // [<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>]</div></pre></td></tr></table></figure></p>
<p>叮：concat()方法并没有修改当前Array，而是返回了一个新的Array。<br>实际上，concat()方法可以接收任意个元素和Array，并且自动把Array拆开，然后全部添加到新的Array里：<br><figure class="highlight prolog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var arr = [<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>];</div><div class="line">arr.concat(<span class="number">1</span>, <span class="number">2</span>, [<span class="number">3</span>, <span class="number">4</span>]); // [<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</div></pre></td></tr></table></figure></p>
<h4 id="join"><a href="#join" class="headerlink" title="join"></a>join</h4><p>join()方法是一个非常实用的方法，它把当前Array的每个元素都用指定的字符串连接起来，然后返回连接后的字符串:<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> arr = [<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</div><div class="line">arr.<span class="keyword">join</span>(<span class="string">'-'</span>);<span class="comment">//'A-B-C-1-2-3'</span></div></pre></td></tr></table></figure></p>
<p>如果Array的元素不是字符串，将自动转换为字符串后再连接。  </p>
<h4 id="多维数组"><a href="#多维数组" class="headerlink" title="多维数组"></a>多维数组</h4><p>如果数组的某个元素又是一个Array，则可以形成多维数组，例如：<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var arr = [[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">400</span>, <span class="number">500</span>, <span class="number">600</span>], '-'];</div></pre></td></tr></table></figure></p>
<p>上述Array包含3个元素，其中头两个元素本身也是Array。<br>练习：如何通过索引取到500这个值：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">'use strict'</span>;</div><div class="line"><span class="keyword">var</span> arr = [[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">400</span>, <span class="number">500</span>, <span class="number">600</span>], <span class="string">'-'</span>];</div><div class="line"></div><div class="line">ans:  </div><div class="line"><span class="keyword">var</span> x = arr[<span class="number">1</span>][<span class="number">1</span>];</div><div class="line"><span class="built_in">console</span>.log(x); <span class="comment">// x应该为500</span></div></pre></td></tr></table></figure></p>
<h3 id="对象-1"><a href="#对象-1" class="headerlink" title="对象"></a>对象</h3><p>JavaScript的对象是一种无序的集合数据类型，它由若干键值对组成。</p>
<p>JavaScript的对象用于描述现实世界中的某个对象。例如，为了描述“小明”这个淘气的小朋友，我们可以用若干键值对来描述他：  </p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="string">var</span> <span class="string">xiaoming</span> <span class="string">=</span> <span class="string">&#123;</span></div><div class="line"><span class="attr">    name:</span> <span class="string">小明,</span></div><div class="line"><span class="attr">    birth:</span><span class="number">1990</span><span class="string">,</span></div><div class="line"><span class="attr">    school:</span><span class="string">'No.1 Middle School'</span><span class="string">,</span></div><div class="line"><span class="attr">    height:</span> <span class="number">1.70</span><span class="string">,</span></div><div class="line"><span class="attr">    weight:</span> <span class="number">65</span><span class="string">,</span></div><div class="line"><span class="attr">    score:</span><span class="literal">null</span></div><div class="line"><span class="string">&#125;;</span></div></pre></td></tr></table></figure>
<p>JavaScript用一个{…}表示一个对象，键值对以xxx: xxx形式申明，用,隔开。注意，最后一个键值对不需要在末尾加,，如果加了，有的浏览器（如低版本的IE）将报错。<br>上述对象申明了一个name属性，值是’小明’，birth属性，值是1990，以及其他一些属性。最后，把这个对象赋值给变量xiaoming后，就可以通过变量xiaoming来获取小明的属性了：<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">xiaoming.name<span class="regexp">//</span><span class="string">'小明'</span></div><div class="line">xiaoming.birth<span class="regexp">//</span><span class="number">1990</span></div></pre></td></tr></table></figure></p>
<p>访问属性是通过.操作符完成的，但这要求属性名必须是一个有效的变量名。如果属性名包含特殊字符，就必须用’’括起来：<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">var xiaohong</span> = &#123;</div><div class="line">    name:<span class="string">'小红'</span>，</div><div class="line">    <span class="string">'middle-school'</span>:<span class="string">'No.1 Middle School'</span></div><div class="line">&#125;;</div></pre></td></tr></table></figure></p>
<p>xiaohong的属性名middle-school不是一个有效的变量，就需要用’’括起来。访问这个属性也无法使用.操作符，必须用[‘xxx’]来访问：<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">xiaohong[<span class="string">'middle-school'</span>];<span class="regexp">//</span><span class="string">'No.1 Middle School'</span></div><div class="line">xiaohong[<span class="string">'name'</span>];<span class="regexp">//</span><span class="string">'小红'</span></div><div class="line">xiaohong.name;<span class="regexp">//</span><span class="string">'小红'</span></div></pre></td></tr></table></figure></p>
<p>也可以用xiaohong[‘name’]来访问xiaohong的name属性，不过xiaohong.name的写法更简洁。我们在编写JavaScript代码的时候，属性名尽量使用标准的变量名，这样就可以直接通过object.prop的形式访问一个属性了。<br>实际上JavaScript对象的所有属性都是字符串，不过属性对应的值可以是任意数据类型。</p>
<p>如果访问一个不存在的属性会返回什么呢？JavaScript规定，访问不存在的属性不报错，而是返回undefined：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">'use strict'</span>;</div><div class="line"></div><div class="line"><span class="keyword">var</span> xiaoming = &#123;</div><div class="line">    name: <span class="string">'小明'</span></div><div class="line">&#125;;</div><div class="line"><span class="built_in">console</span>.log(xiaoming.name);</div><div class="line"><span class="built_in">console</span>.log(xiaoming.age); <span class="comment">// undefined</span></div></pre></td></tr></table></figure></p>
<p>由于JavaScript的对象是动态类型，你可以自由地给一个对象添加或删除属性：<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> xiaoming = &#123;</div><div class="line">    name: <span class="string">'小明'</span></div><div class="line">&#125;;</div><div class="line">xiaoming.age; <span class="comment">// undefined</span></div><div class="line">xiaoming.age = <span class="number">18</span>; <span class="comment">// 新增一个age属性</span></div><div class="line">xiaoming.age; <span class="comment">// 18</span></div><div class="line"><span class="keyword">delete</span> xiaoming.age; <span class="comment">// 删除age属性</span></div><div class="line">xiaoming.age; <span class="comment">// undefined</span></div><div class="line"><span class="keyword">delete</span> xiaoming[<span class="string">'name'</span>]; <span class="comment">// 删除name属性</span></div><div class="line">xiaoming.name; <span class="comment">// undefined</span></div><div class="line"><span class="keyword">delete</span> xiaoming.school; <span class="comment">// 删除一个不存在的school属性也不会报错</span></div></pre></td></tr></table></figure></p>
<p>如果我们要检测xiaoming是否拥有某一属性，可以用in操作符：<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="string">var</span> <span class="string">xiaoming</span> <span class="string">=</span> <span class="string">&#123;</span></div><div class="line"><span class="attr">    name:</span> <span class="string">'小明'</span><span class="string">,</span></div><div class="line"><span class="attr">    birth:</span> <span class="number">1990</span><span class="string">,</span></div><div class="line"><span class="attr">    school:</span> <span class="string">'No.1 Middle School'</span><span class="string">,</span></div><div class="line"><span class="attr">    height:</span> <span class="number">1.70</span><span class="string">,</span></div><div class="line"><span class="attr">    weight:</span> <span class="number">65</span><span class="string">,</span></div><div class="line"><span class="attr">    score:</span> <span class="literal">null</span></div><div class="line"><span class="string">&#125;;</span></div><div class="line"><span class="string">'name'</span> <span class="string">in</span> <span class="string">xiaoming;</span> <span class="string">//</span> <span class="literal">true</span></div><div class="line"><span class="string">'grade'</span> <span class="string">in</span> <span class="string">xiaoming;</span> <span class="string">//</span> <span class="literal">false</span></div></pre></td></tr></table></figure></p>
<p>不过要小心，如果in判断一个属性存在，这个属性不一定是xiaoming的，它可能是xiaoming继承得到的：<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="string">'toString'</span> <span class="keyword">in</span> xiaoming; <span class="regexp">//</span> <span class="keyword">true</span></div></pre></td></tr></table></figure></p>
<p>因为toString定义在object对象中，而所有对象最终都会在原型链上指向object，所以xiaoming也拥有toString属性。</p>
<p>要判断一个属性是否是xiaoming自身拥有的，而不是继承得到的，可以用hasOwnProperty()方法：<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">var xiaoming = &#123;</div><div class="line">    <span class="symbol">name:</span> <span class="string">'小明'</span></div><div class="line">&#125;;</div><div class="line">xiaoming.hasOwnProperty(<span class="string">'name'</span>); <span class="regexp">//</span> <span class="keyword">true</span></div><div class="line">xiaoming.hasOwnProperty(<span class="string">'toString'</span>); <span class="regexp">//</span> <span class="keyword">false</span></div></pre></td></tr></table></figure></p>
<h3 id="条件判断"><a href="#条件判断" class="headerlink" title="条件判断"></a>条件判断</h3><p>JavaScript使用if () { … } else { … }来进行条件判断。例如，根据年龄显示不同内容，可以用if语句实现如下：<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">var age = <span class="number">20</span>;</div><div class="line"><span class="keyword">if</span> (age &gt;= <span class="number">18</span>) &#123; <span class="regexp">//</span> 如果age &gt;= <span class="number">18</span>为<span class="literal">true</span>，则执行<span class="keyword">if</span>语句块</div><div class="line">    alert(<span class="string">'adult'</span>);</div><div class="line">&#125; <span class="keyword">else</span> &#123; <span class="regexp">//</span> 否则执行<span class="keyword">else</span>语句块</div><div class="line">    alert(<span class="string">'teenager'</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>其中else语句是可选的。如果语句块只包含一条语句，那么可以省略{}：<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">var age = <span class="number">20</span><span class="comment">;</span></div><div class="line">if (<span class="name">age</span> &gt;= <span class="number">18</span>)</div><div class="line">    alert('adult')<span class="comment">;</span></div><div class="line">else</div><div class="line">    alert('teenager')<span class="comment">;</span></div></pre></td></tr></table></figure></p>
<p>省略{}的危险之处在于，如果后来想添加一些语句，却忘了写{}，就改变了if…else…的语义，例如：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> age = <span class="number">20</span>;</div><div class="line"><span class="keyword">if</span> (age &gt;= <span class="number">18</span>)</div><div class="line">    alert(<span class="string">'adult'</span>);</div><div class="line"><span class="keyword">else</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'age &lt; 18'</span>); <span class="comment">// 添加一行日志</span></div><div class="line">    alert(<span class="string">'teenager'</span>); <span class="comment">// &lt;- 这行语句已经不在else的控制范围了</span></div></pre></td></tr></table></figure></p>
<p>上述代码的else子句实际上只负责执行console.log(‘age &lt; 18’);，原有的alert(‘teenager’);已经不属于if…else…的控制范围了，它每次都会执行。</p>
<p>相反地，有{}的语句就不会出错：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> age = <span class="number">20</span>;</div><div class="line"><span class="keyword">if</span> (age &gt;= <span class="number">18</span>) &#123;</div><div class="line">    alert(<span class="string">'adult'</span>);</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'age &lt; 18'</span>);</div><div class="line">    alert(<span class="string">'teenager'</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="多行条件判断"><a href="#多行条件判断" class="headerlink" title="多行条件判断"></a>多行条件判断</h4><p>如果还要更细致地判断条件，可以使用多个if…else…的组合：<br><figure class="highlight xquery"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">var age = <span class="number">3</span>;</div><div class="line"><span class="keyword">if</span> (age &gt;= <span class="number">18</span>) &#123;</div><div class="line">    alert(<span class="string">'adult'</span>);</div><div class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (age &gt;= <span class="number">6</span>) &#123;</div><div class="line">    alert(<span class="string">'teenager'</span>);</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">    alert(<span class="string">'kid'</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h3><p>JavaScript的循环有两种，一种是for循环，通过初始条件、结束条件和递增条件来循环执行语句块：<br><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">var x = <span class="number">0</span><span class="comment">;</span></div><div class="line">var i<span class="comment">;</span></div><div class="line">for (i=<span class="number">1</span><span class="comment">; i&lt;=10000; i++) &#123;</span></div><div class="line">    x = x + i<span class="comment">;</span></div><div class="line">&#125;</div><div class="line">x<span class="comment">; // 50005000</span></div></pre></td></tr></table></figure></p>
<p>分析一下for循环的控制条件：<br>i=1 这是初始条件，将变量i置为1；<br>i&lt;=10000 这是判断条件，满足时就继续循环，不满足就退出循环；<br>i++ 这是每次循环后的递增条件，由于每次循环后变量i都会加1，因此它终将在若干次循环后不满足判断条件i&lt;=10000而退出循环。  </p>
<p>for循环最常用的地方是利用索引来遍历数组：<br><figure class="highlight matlab"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">var arr = [<span class="string">'Apple'</span>,<span class="string">'Google'</span>,<span class="string">'Microsoft'</span>];</div><div class="line">var <span class="built_in">i</span>,x;</div><div class="line"><span class="keyword">for</span>(<span class="built_in">i</span>=<span class="number">0</span>;<span class="built_in">i</span>&lt;arr.<span class="built_in">length</span>;<span class="built_in">i</span>++)</div><div class="line">&#123;</div><div class="line">    x = arr[i];</div><div class="line">    console.log(x)</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>for循环的3个条件都是可以省略的，如果没有退出循环的判断条件，就必须使用break语句退出循环，否则就是死循环：<br><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> x = <span class="number">0</span>;</div><div class="line"><span class="keyword">for</span>(;;)&#123;<span class="comment">//将无限循环下去</span></div><div class="line">    <span class="keyword">if</span>(x &gt; <span class="number">100</span>)&#123;</div><div class="line">        <span class="keyword">break</span>;<span class="comment">//通过if判断来退出循环</span></div><div class="line">    &#125;</div><div class="line">    x++;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="for…in"><a href="#for…in" class="headerlink" title="for…in"></a>for…in</h4><p>for循环的一个变体是for … in循环，它可以把一个对象的所有属性依次循环出来：<br><figure class="highlight cal"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> o = &#123;</div><div class="line">    name: <span class="string">'Jack'</span>,</div><div class="line">    age: <span class="number">20</span>,</div><div class="line">    city: <span class="string">'Beijing'</span></div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">in</span> o)&#123;</div><div class="line">    console.log(key);//<span class="string">'name'</span>, <span class="string">'age'</span>, <span class="string">'city'</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>要过滤掉对象继承的属性，用hasOwnProperty()来实现：<br><figure class="highlight cal"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> o = &#123;</div><div class="line">    name: <span class="string">'Jack'</span>,</div><div class="line">    age: <span class="number">20</span>,</div><div class="line">    city: <span class="string">'Beijing'</span></div><div class="line">&#125;;</div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">in</span> o) &#123;</div><div class="line">    <span class="keyword">if</span> (o.hasOwnProperty(key)) &#123;</div><div class="line">        console.log(key); // <span class="string">'name'</span>, <span class="string">'age'</span>, <span class="string">'city'</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>循环数组：<br>Array也是对象，而它的每个元素的索引被视为对象的属性，因此，for … in循环可以直接循环出Array的索引：<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">var a = [<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>];</div><div class="line"><span class="keyword">for</span>(var i <span class="keyword">in</span> a)&#123;</div><div class="line">    console.log(i);<span class="regexp">//</span> <span class="string">'0'</span>, <span class="string">'1'</span>, <span class="string">'2'</span></div><div class="line">    console.log(a[i]);<span class="regexp">//</span> <span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>叮！for … in对Array的循环得到的是String而不是Number。  </p>
<h4 id="while"><a href="#while" class="headerlink" title="while"></a>while</h4><p>for循环在已知循环的初始和结束条件时非常有用。而上述忽略了条件的for循环容易让人看不清循环的逻辑，此时用while循环更佳。</p>
<p>while循环只有一个判断条件，条件满足，就不断循环，条件不满足时则退出循环。比如我们要计算100以内所有奇数之和，可以用while循环实现：  </p>
<figure class="highlight excel"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">var</span> x = <span class="number">0</span>;</div><div class="line"><span class="built_in">var</span> <span class="built_in">n</span> = <span class="number">99</span>;</div><div class="line">while(<span class="built_in">n</span> &gt; <span class="number">0</span>)&#123;</div><div class="line">    x = x + <span class="built_in">n</span>;</div><div class="line">    <span class="built_in">n</span> = <span class="built_in">n</span> - <span class="number">2</span>;</div><div class="line">&#125;</div><div class="line">x;//<span class="number">2500</span></div></pre></td></tr></table></figure>
<p>循环内部变量n不断自减，直到变为-1时，不再满足while条件，循环退出。  </p>
<h4 id="do…while"><a href="#do…while" class="headerlink" title="do…while"></a>do…while</h4><p>do { … } while()循环，它和while循环的唯一区别在于，不是在每次循环开始的时候判断条件，而是在每次循环完成的时候判断条件：<br><figure class="highlight excel"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">var</span> <span class="built_in">n</span> = <span class="number">0</span>;</div><div class="line">do &#123;</div><div class="line">    <span class="built_in">n</span> = <span class="built_in">n</span> + <span class="number">1</span>;</div><div class="line">&#125; while (<span class="built_in">n</span> &lt; <span class="number">100</span>);</div><div class="line"><span class="built_in">n</span>; // <span class="number">100</span></div></pre></td></tr></table></figure></p>
<p>叮！用do { … } while()循环要小心，循环体会至少执行1次，而for和while循环则可能一次都不执行。  </p>
<h4 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h4><p>循环是让计算机做重复任务的有效的方法，有些时候，如果代码写得有问题，会让程序陷入“死循环”，也就是永远循环下去。JavaScript的死循环会让浏览器无法正常显示或执行当前页面的逻辑，有的浏览器会直接挂掉，有的浏览器会在一段时间后提示你强行终止JavaScript的执行，因此，要特别注意死循环的问题。<br>在编写循环代码时，务必小心编写初始条件和判断条件，尤其是边界值。特别注意i &lt; 100和i &lt;= 100是不同的判断逻辑。  </p>
<h3 id="Map和Set"><a href="#Map和Set" class="headerlink" title="Map和Set"></a>Map和Set</h3><h4 id="Map"><a href="#Map" class="headerlink" title="Map"></a>Map</h4><p>Map是一组键值对的结构，具有极快的查找速度。举个例子，假设要根据同学的名字查找对应的成绩，如果用Array实现，需要两个Array：<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">var names</span> = [<span class="string">'Michael'</span>, <span class="string">'Bob'</span>, <span class="string">'Tracy'</span>];</div><div class="line"><span class="attribute">var scores</span> = [95, 75, 85];</div></pre></td></tr></table></figure></p>
<p>给定一个名字，要查找对应的成绩，就先要在names中找到对应的位置，再从scores取出对应的成绩，Array越长，耗时越长。<br>如果用Map实现，只需要一个“名字”-“成绩”的对照表，直接根据名字查找成绩，无论这个表有多大，查找速度都不会变慢。用JavaScript写一个Map如下：<br><figure class="highlight dart"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> m = <span class="keyword">new</span> <span class="built_in">Map</span>([[<span class="string">'Michael'</span>, <span class="number">95</span>], [<span class="string">'Bob'</span>, <span class="number">75</span>], [<span class="string">'Tracy'</span>, <span class="number">85</span>]]);</div><div class="line">m.<span class="keyword">get</span>(<span class="string">'Michael'</span>);<span class="comment">//95</span></div></pre></td></tr></table></figure></p>
<p>初始化Map需要一个二维数组，或者直接初始化一个空Map。Map具有以下方法：<br><figure class="highlight dart"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> m = <span class="keyword">new</span> <span class="built_in">Map</span>(); <span class="comment">// 空Map</span></div><div class="line">m.<span class="keyword">set</span>(<span class="string">'Adam'</span>, <span class="number">67</span>); <span class="comment">// 添加新的key-value</span></div><div class="line">m.<span class="keyword">set</span>(<span class="string">'Bob'</span>, <span class="number">59</span>);</div><div class="line">m.has(<span class="string">'Adam'</span>); <span class="comment">// 是否存在key 'Adam': true</span></div><div class="line">m.<span class="keyword">get</span>(<span class="string">'Adam'</span>); <span class="comment">// 67</span></div><div class="line">m.delete(<span class="string">'Adam'</span>); <span class="comment">// 删除key 'Adam'</span></div><div class="line">m.<span class="keyword">get</span>(<span class="string">'Adam'</span>); <span class="comment">// undefined</span></div></pre></td></tr></table></figure></p>
<p>由于一个key只能对应一个value，所以，多次对一个key放入value，后面的值会把前面的值冲掉：<br><figure class="highlight dart"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> m = <span class="keyword">new</span> <span class="built_in">Map</span>();</div><div class="line">m.<span class="keyword">set</span>(<span class="string">'Adam'</span>, <span class="number">67</span>);</div><div class="line">m.<span class="keyword">set</span>(<span class="string">'Adam'</span>, <span class="number">88</span>);</div><div class="line">m.<span class="keyword">get</span>(<span class="string">'Adam'</span>); <span class="comment">// 88</span></div></pre></td></tr></table></figure></p>
<h4 id="Set"><a href="#Set" class="headerlink" title="Set"></a>Set</h4><p>Set和Map类似，也是一组key的集合，但不存储value。由于key不能重复，所以，在Set中，没有重复的key。</p>
<p>要创建一个Set，需要提供一个Array作为输入，或者直接创建一个空Set:<br><figure class="highlight dart"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> s1 = <span class="keyword">new</span> <span class="built_in">Set</span>(); <span class="comment">// 空Set</span></div><div class="line"><span class="keyword">var</span> s2 = <span class="keyword">new</span> <span class="built_in">Set</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]); <span class="comment">// 含1, 2, 3</span></div></pre></td></tr></table></figure></p>
<p>重复元素在Set中自动被过滤：<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var s = new Set([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, '<span class="number">3</span>']);</div><div class="line">s; <span class="comment">// Set &#123;1, 2, 3, "3"&#125;</span></div></pre></td></tr></table></figure></p>
<p>通过add(key)方法可以添加元素到Set中，可以重复添加，但不会有效果：<br><figure class="highlight abnf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">s.add(<span class="number">4</span>)<span class="comment">;</span></div><div class="line">s<span class="comment">;//Set &#123;1, 2, 3, 4&#125;</span></div><div class="line">s.add(<span class="number">4</span>)<span class="comment">;</span></div><div class="line">s<span class="comment">;//仍然是 Set &#123;1, 2, 3, 4&#125;</span></div></pre></td></tr></table></figure></p>
<p>通过delete(key)方法可以删除元素：<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">var s = new Set([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]);</div><div class="line">s; <span class="comment">// Set &#123;1, 2, 3&#125;</span></div><div class="line">s.delete(<span class="number">3</span>);</div><div class="line">s; <span class="comment">// Set &#123;1, 2&#125;</span></div></pre></td></tr></table></figure></p>
<h3 id="iterable"><a href="#iterable" class="headerlink" title="iterable"></a>iterable</h3><p>遍历Array可以采用下标循环，遍历Map和Set就无法使用下标。为了统一集合类型，ES6标准引入了新的iterable类型，Array、Map和Set都属于iterable类型。<br>具有iterable类型的集合可以通过新的for … of循环来遍历。<br>用for … of循环遍历集合，用法如下：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> a = [<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>];</div><div class="line"><span class="keyword">var</span> s = <span class="keyword">new</span> <span class="built_in">Set</span>([<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>]);</div><div class="line"><span class="keyword">var</span> m = <span class="keyword">new</span> <span class="built_in">Map</span>([[<span class="number">1</span>, <span class="string">'x'</span>], [<span class="number">2</span>, <span class="string">'y'</span>], [<span class="number">3</span>, <span class="string">'z'</span>]]);</div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> x <span class="keyword">of</span> a)&#123;<span class="comment">//遍历Array</span></div><div class="line">    <span class="built_in">console</span>.log(x);</div><div class="line">&#125;</div><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> x <span class="keyword">of</span> s)&#123;</div><div class="line">    <span class="built_in">console</span>.log(x);</div><div class="line">&#125;</div><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> x <span class="keyword">of</span> m)&#123;</div><div class="line">    <span class="built_in">console</span>.log(x[<span class="number">0</span>] + <span class="string">'='</span> +x[<span class="number">1</span>]);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>for … of循环和for … in循环有何区别？<br>for … in循环由于历史遗留问题，它遍历的实际上是对象的属性名称。一个Array数组实际上也是一个对象，它的每个元素的索引被视为一个属性。</p>
<p>当我们手动给Array对象添加了额外的属性后，for … in循环将带来意想不到的意外效果：<br><figure class="highlight cal"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> a = [<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>];</div><div class="line">a.name = <span class="string">'Hello'</span>;</div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> x <span class="keyword">in</span> a) &#123;</div><div class="line">    console.log(x); // <span class="string">'0'</span>, <span class="string">'1'</span>, <span class="string">'2'</span>, <span class="string">'name'</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>for … in循环将把name包括在内，但Array的length属性却不包括在内。<br>for … of循环则完全修复了这些问题，它只循环集合本身的元素：<br><figure class="highlight cal"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> a = [<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>];</div><div class="line">a.name = <span class="string">'Hello'</span>;</div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> x <span class="keyword">of</span> a) &#123;</div><div class="line">    console.log(x); // <span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>这就是为什么要引入新的for … of循环。<br>然而，更好的方式是直接使用iterable内置的forEach方法，它接收一个函数，每次迭代就自动回调该函数。以Array为例：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">'use strict'</span>;</div><div class="line"><span class="keyword">var</span> a = [<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>];</div><div class="line">a.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">element, index, array</span>) </span>&#123;</div><div class="line">    <span class="comment">// element: 指向当前元素的值</span></div><div class="line">    <span class="comment">// index: 指向当前索引</span></div><div class="line">    <span class="comment">// array: 指向Array对象本身</span></div><div class="line">    <span class="built_in">console</span>.log(element + <span class="string">', index = '</span> + index);</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<p>Set与Array类似，但Set没有索引，因此回调函数的前两个参数都是元素本身：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> s = <span class="keyword">new</span> <span class="built_in">Set</span>([<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>]);</div><div class="line">s.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">element, sameElement, set</span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(element);</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<p>Map的回调函数参数依次为value、key和map本身：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> m = <span class="keyword">new</span> <span class="built_in">Map</span>([[<span class="number">1</span>, <span class="string">'x'</span>], [<span class="number">2</span>, <span class="string">'y'</span>], [<span class="number">3</span>, <span class="string">'z'</span>]]);</div><div class="line">m.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">value, key, map</span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(value);</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;大概了解了HTML和CSS，到了前端的精华JavaScript。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="https://x-nicolo.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="前端" scheme="https://x-nicolo.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="JavaScript" scheme="https://x-nicolo.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>前端入门学习--CSS</title>
    <link href="https://x-nicolo.github.io/2018/01/29/%E5%89%8D%E7%AB%AF%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0-CSS/"/>
    <id>https://x-nicolo.github.io/2018/01/29/前端入门学习-CSS/</id>
    <published>2018-01-29T08:30:55.000Z</published>
    <updated>2018-01-29T08:30:55.000Z</updated>
    
    <content type="html"><![CDATA[<p>HTML已经做了简单了解，接下来是CSS的。<br><a id="more"></a>  </p>
<p>All form <a href="http://www.runoob.com/css/css-intro.html" target="_blank" rel="external">RUNOOB.COM</a></p>
<h3 id="CSS-简介"><a href="#CSS-简介" class="headerlink" title="CSS 简介"></a>CSS 简介</h3><h3 id="什么是CSS？"><a href="#什么是CSS？" class="headerlink" title="什么是CSS？"></a>什么是CSS？</h3><ul>
<li>CSS指层叠样式表（Cascading Style Sheets） </li>
<li>样式定义 <strong>如何显示</strong>  HTML元素</li>
<li>样式通常存储在样式表中  </li>
<li>把样式添加到HTML4.0中，是为了解决内容与表分离的问题</li>
<li>外部样式表可以极大提高工作效率</li>
<li>外部样式表通常存储在CSS文件中</li>
<li>多个样式定义可层叠为一  </li>
</ul>
<h3 id="CSS实例"><a href="#CSS实例" class="headerlink" title="CSS实例"></a>CSS实例</h3><h4 id="样式解决了一个很大的问题"><a href="#样式解决了一个很大的问题" class="headerlink" title="样式解决了一个很大的问题"></a>样式解决了一个很大的问题</h4><p>HTML 标签原本被设计为用于定义文档内容，如下实例：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>这是一个标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>样式表定义如何显示 HTML 元素，就像 HTML 3.2 的字体标签和颜色属性所起的作用那样。样式通常保存在外部的 .css 文件中。通过仅仅编辑一个简单的 CSS 文档，外部样式表使你有能力同时改变站点中所有页面的布局和外观。  </p>
<h3 id="CSS-语法"><a href="#CSS-语法" class="headerlink" title="CSS 语法"></a>CSS 语法</h3><p>先来实例。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-tag">body</span> &#123;<span class="attribute">background-color</span>:yellow;&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">h1</span>   &#123;<span class="attribute">font-size</span>:<span class="number">36pt</span>;&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">h2</span>   &#123;<span class="attribute">color</span>:blue;&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">p</span>    &#123;<span class="attribute">margin-left</span>:<span class="number">50px</span>;&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>This header is 36 pt<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>This header is blue<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>This paragraph has a left margin of 50 pixels<span class="tag">&lt;/<span class="name">p</span>&gt;</span> </div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="CSS-实例"><a href="#CSS-实例" class="headerlink" title="CSS 实例"></a>CSS 实例</h4><p>CSS 规则由两个主要的部分构成，选择器，以及一条或多条声明。<br><img src="http://www.runoob.com/images/selector.gif" alt="">  </p>
<p>CSS 声明总是以分号(;)结束，声明组以大括号({})括起来：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">p</span> &#123;<span class="attribute">color</span>:red;<span class="attribute">text-align</span>:center;&#125;</div></pre></td></tr></table></figure></p>
<p>为了让CSS可读性更强，你可以每行只描述一个属性:<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">p</span></div><div class="line">&#123;</div><div class="line"><span class="attribute">color</span>:red;</div><div class="line"><span class="attribute">text-align</span>:center;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="CSS-注释"><a href="#CSS-注释" class="headerlink" title="CSS 注释"></a>CSS 注释</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*这是个注释*/</span></div><div class="line"><span class="selector-tag">p</span></div><div class="line">&#123;</div><div class="line"><span class="attribute">text-align</span>:center;</div><div class="line"><span class="comment">/*这是另一个注释*/</span></div><div class="line"><span class="attribute">color</span>:black;</div><div class="line"><span class="attribute">font-family</span>:arial;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="CSS-id-和-class"><a href="#CSS-id-和-class" class="headerlink" title="CSS id 和 class"></a>CSS id 和 class</h3><h4 id="id-和-class-选择器"><a href="#id-和-class-选择器" class="headerlink" title="id 和 class 选择器"></a>id 和 class 选择器</h4><p>如果要在HTML元素中设置CSS样式，需要在元素中设置id和class选择器。  </p>
<h4 id="id选择器"><a href="#id选择器" class="headerlink" title="id选择器"></a>id选择器</h4><p>id选择器可以为标有特定id的HTML元素指定特定的样式。<br>HTML元素以id属性来设置id选择器，CSS中id选择器以#来定义。<br>下面的样式规则应用于元素属性id=”para1”：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#para1</span></div><div class="line">&#123;</div><div class="line">    <span class="attribute">text-align</span>:center;</div><div class="line">    <span class="attribute">color</span>:red;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="class选择器"><a href="#class选择器" class="headerlink" title="class选择器"></a>class选择器</h4><p>class选择器用于描述一组元素的样式，class选择器有助于id选择器，class可以在多个元素中使用。<br>class选择器在HTML中以class属性表示，在CSS中，类选择器以一个点“.”号显示：<br>下面的例子中，所以拥有center类的HTML元素均为居中。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.center</span>&#123;<span class="attribute">text-align</span>:center;&#125;</div></pre></td></tr></table></figure></p>
<p>也可指定特定的HTML元素使用class。<br>下例中，所有的P元素使用class=“center”让该元素的文本居中。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">p</span><span class="selector-class">.center</span>&#123;<span class="attribute">text-align</span>:center;&#125;</div></pre></td></tr></table></figure></p>
<h3 id="CSS-创建"><a href="#CSS-创建" class="headerlink" title="CSS 创建"></a>CSS 创建</h3><p>当读到一个样式表时，浏览器会根据它来格式化 HTML 文档。  </p>
<h4 id="如何插入样式表"><a href="#如何插入样式表" class="headerlink" title="如何插入样式表"></a>如何插入样式表</h4><p>插入样式表的方法有三种：  </p>
<ul>
<li>外部样式表</li>
<li>内部样式表</li>
<li>内联样式</li>
</ul>
<h4 id="外部样式表"><a href="#外部样式表" class="headerlink" title="外部样式表"></a>外部样式表</h4><p>当样式需要应用于很多页面时，外部样式表将是理想的选择。在使用外部样式表的情况下，你可以通过改变一个文件来改变整个站点的外观。每个页面使用link标签链接到样式表。 link标签在（文档的）头部：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"mystyle.css"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>浏览器会从文件Mystyle.css中读到样式声明，并根据它来格式文档。<br>外部样式表可以在任何文本编辑器中进行编辑，文件不能包含任何的HTML标签，样式表应该以.css扩展名进行保存。下面为一个例子:<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">hr</span> &#123;<span class="attribute">color</span>:sienna;&#125;</div><div class="line"><span class="selector-tag">p</span> &#123;<span class="attribute">margin-left</span>:<span class="number">20px</span>;&#125;</div><div class="line"><span class="selector-tag">body</span> &#123;<span class="attribute">background-image</span>:<span class="built_in">url</span>(<span class="string">"/images/back40.gif"</span>);&#125;</div></pre></td></tr></table></figure></p>
<h4 id="内部样式表"><a href="#内部样式表" class="headerlink" title="内部样式表"></a>内部样式表</h4><p>当单个文档需要特殊的样式时，就应该使用内部样式表。可以使用style标签在文档头部定义内部样式表，就像这样:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-tag">hr</span> &#123;<span class="attribute">color</span>:sienna;&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">p</span> &#123;<span class="attribute">margin-left</span>:<span class="number">20px</span>;&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">body</span> &#123;<span class="attribute">background-image</span>:<span class="built_in">url</span>(<span class="string">"images/back40.gif"</span>);&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="内联样式"><a href="#内联样式" class="headerlink" title="内联样式"></a>内联样式</h4><p>由于要将表现和内容混杂在一起，内联样式会损失掉样式表的许多优势。请慎用这种方法，例如当样式仅需要在一个元素上应用一次时。<br>要使用内联样式，你需要在相关的标签内使用样式（style）属性。Style 属性可以包含任何 CSS 属性。本例展示如何改变段落的颜色和左外边距：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color:sienna;margin-left:20px"</span>&gt;</span>这是一个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="多重样式"><a href="#多重样式" class="headerlink" title="多重样式"></a>多重样式</h4><p>如果某些属性在不同的样式表中被同样的选择器定义，那么属性值将从更具体的样式表中被继承过来。<br>例如，外部样式表拥有针对 h3 选择器的三个属性：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">h3</span></div><div class="line">&#123;</div><div class="line">    <span class="attribute">color</span>:red;</div><div class="line">    <span class="attribute">text-align</span>:left;</div><div class="line">    <span class="attribute">font-size</span>:<span class="number">8pt</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>而内部样式表拥有针对h3选择器的两个属性：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">h3</span></div><div class="line">&#123;</div><div class="line">    <span class="attribute">text-align</span>:right;</div><div class="line">    <span class="attribute">font-size</span>:<span class="number">20pt</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>假如拥有内部样式表的这个页面同时与外部样式表链接，那么h3得到的样式是：<br><figure class="highlight scss"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">color</span>:red;</div><div class="line"><span class="attribute">text-align</span>:right;</div><div class="line"><span class="attribute">font-size</span>:<span class="number">20pt</span>;</div></pre></td></tr></table></figure></p>
<p>即颜色属性将被继承于外部样式表，而文字排列（text-alignment）和字体尺寸（font-size）会被内部样式表中的规则取代。  </p>
<h4 id="多重样式优先级"><a href="#多重样式优先级" class="headerlink" title="多重样式优先级"></a>多重样式优先级</h4><p>样式表允许以多种方式规定样式信息。样式可以规定在单个的HTML元素中，在HTML的头元素中，或在一个外部的CSS文件中。甚至可以在同一个HTML文档内部引用多个外部样式表。<br>一般情况下，优先级如下：<br>内联样式&gt;Inline style &gt; （内部样式）Internal style sheet &gt;（外部样式）External style sheet &gt; 浏览器默认样式  </p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 外部样式 style.css --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"style.css"</span>/&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 设置：h3&#123;color:blue;&#125; --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="css">      <span class="comment">/* 内部样式 */</span></span></div><div class="line"><span class="css">      <span class="selector-tag">h3</span>&#123;<span class="attribute">color</span>:green;&#125;</span></div><div class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>测试！<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="CSS-背景"><a href="#CSS-背景" class="headerlink" title="CSS 背景"></a>CSS 背景</h3><p>CSS背景属性用于定义HTML元素的背景。<br>CSS属性定义背景效果:  </p>
<ul>
<li>background-color</li>
<li>background-image</li>
<li>background-repeat</li>
<li>background-attachment</li>
<li>background-position  </li>
</ul>
<h4 id="背景颜色"><a href="#背景颜色" class="headerlink" title="背景颜色"></a>背景颜色</h4><p>background-color属性定义了元素的背景颜色。<br>页面的背景颜色使用在body的选择器中：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">body</span>&#123;<span class="attribute">background-color</span>:<span class="number">#b0c4de</span>;&#125;</div></pre></td></tr></table></figure></p>
<p>CSS中，颜色值通常以以下方式定义：  </p>
<ul>
<li>十六进制 - 如：”#ff0000”</li>
<li>RGB - 如：”rgb(255,0,0)”</li>
<li>颜色名称 - 如：”red”<br>下面的例子中，h1,p,div元素拥有不同的背景颜色。  <figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">h1</span> &#123;<span class="attribute">background-color</span>:<span class="number">#6495ed</span>;&#125;</div><div class="line"><span class="selector-tag">p</span> &#123;<span class="attribute">background-color</span>:<span class="number">#e0ffff</span>;&#125;</div><div class="line"><span class="selector-tag">div</span> &#123;<span class="attribute">background-color</span>:<span class="number">#b0c4de</span>;&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="背景图像"><a href="#背景图像" class="headerlink" title="背景图像"></a>背景图像</h4><p>background-image 属性描述了元素的背景图像.默认情况下，背景图像进行平铺重复显示，以覆盖整个元素实体.页面背景图片设置实例:<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">body</span> &#123;<span class="attribute">background-image</span>:<span class="built_in">url</span>(<span class="string">'paper.gif'</span>);&#125;</div></pre></td></tr></table></figure></p>
<p>一个 <strong>反例</strong>，文本可读性差：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">body</span> &#123;<span class="attribute">background-image</span>:<span class="built_in">url</span>(<span class="string">'bgdesert.jpg'</span>);&#125;</div></pre></td></tr></table></figure></p>
<h4 id="背景图像-水平或垂直平铺"><a href="#背景图像-水平或垂直平铺" class="headerlink" title="背景图像-水平或垂直平铺"></a>背景图像-水平或垂直平铺</h4><p>默认情况下 background-image 属性会在页面的水平或者垂直方向平铺。一些图像如果在水平方向与垂直方向平铺，这样看起来很不协调，如下所示:<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">body</span></div><div class="line">&#123;</div><div class="line"><span class="attribute">background-image</span>:<span class="built_in">url</span>(<span class="string">'gradient2.png'</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>只在水平方向平铺 (repeat-x), 页面背景会更好些:<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">body</span></div><div class="line">&#123;</div><div class="line"><span class="attribute">background-image</span>:<span class="built_in">url</span>(<span class="string">'gradient2.png'</span>);</div><div class="line"><span class="attribute">background-repeat</span>:repeat-x;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="背景图像-设置定位与不平铺"><a href="#背景图像-设置定位与不平铺" class="headerlink" title="背景图像-设置定位与不平铺"></a>背景图像-设置定位与不平铺</h4><p>让背景图像不影响文本的排版，不想让图像平铺，可以使用background-repeat属性。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">body</span></div><div class="line">&#123;</div><div class="line"><span class="attribute">background-image</span>:<span class="built_in">url</span>(<span class="string">'img_tree.png'</span>);</div><div class="line"><span class="attribute">background-repeat</span>:no-repeat;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="背景-简写属性"><a href="#背景-简写属性" class="headerlink" title="背景- 简写属性"></a>背景- 简写属性</h4><p>在以上实例中我们可以看到页面的背景颜色通过了很多的属性来控制。为了简化这些属性的代码，我们可以将这些属性合并在同一个属性中，背景颜色的属性简写为background。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">body</span> &#123;<span class="attribute">background</span>:<span class="number">#ffffff</span> <span class="built_in">url</span>(<span class="string">'img_tree.png'</span>) no-repeat right top;&#125;</div></pre></td></tr></table></figure></p>
<p>当使用简写属性时，属性值的顺序为：  </p>
<ul>
<li>background-color</li>
<li>background-image</li>
<li>background-repeat</li>
<li>background-attachment</li>
<li>background-position</li>
</ul>
<h3 id="CSS-文本格式"><a href="#CSS-文本格式" class="headerlink" title="CSS 文本格式"></a>CSS 文本格式</h3><h4 id="文本颜色"><a href="#文本颜色" class="headerlink" title="文本颜色"></a>文本颜色</h4><p>颜色属性被用来设置文字的颜色。颜色是通过CSS最经常的指定：  </p>
<ul>
<li>十六进制值-如:#FF0000  </li>
<li>一个RGB值-如：RGB(255,0,0)</li>
<li>颜色的名称-如：red  </li>
</ul>
<p>例子：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">body</span> &#123;<span class="attribute">color</span>:red;&#125;</div><div class="line"><span class="selector-tag">h1</span> &#123;<span class="attribute">color</span>:<span class="number">#00ff00</span>;&#125;</div><div class="line"><span class="selector-tag">h2</span> &#123;<span class="attribute">color</span>:<span class="built_in">rgb</span>(255,0,0);&#125;</div></pre></td></tr></table></figure></p>
<h4 id="文本的对齐方式"><a href="#文本的对齐方式" class="headerlink" title="文本的对齐方式"></a>文本的对齐方式</h4><p>文本排列属性是用来设置文本的水平对齐方式。<br>文本可居中或对齐到左或右，两端对齐。<br>当text-align设置为“justify”,每一行被展开为宽度相等，左，右外边距是对齐。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">h1</span> &#123;<span class="attribute">text-align</span>:center;&#125;</div><div class="line"><span class="selector-tag">p</span><span class="selector-class">.date</span> &#123;<span class="attribute">text-align</span>:right;&#125;</div><div class="line"><span class="selector-tag">p</span><span class="selector-class">.main</span> &#123;<span class="attribute">text-align</span>:justify;&#125;</div></pre></td></tr></table></figure></p>
<h4 id="文本修饰"><a href="#文本修饰" class="headerlink" title="文本修饰"></a>文本修饰</h4><p>text-decoration属性用来设置或删除文本的装饰。<br>从设计的角度看text-decoration属性主要用来删除链接的下划线：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">a</span> &#123;<span class="attribute">text-decoration</span>:none;&#125;</div></pre></td></tr></table></figure></p>
<p>一个例子：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-tag">h1</span> &#123;<span class="attribute">text-decoration</span>:overline;&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">h2</span> &#123;<span class="attribute">text-decoration</span>:line-through;&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">h3</span> &#123;<span class="attribute">text-decoration</span>:underline;&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>This is heading 1<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>This is heading 2<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>This is heading 3<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="文本转换"><a href="#文本转换" class="headerlink" title="文本转换"></a>文本转换</h4><p>文本转换属性是用来指定在一个文本中的大写和小写字母。<br>可用于所有字句变成大写或小写字母，或每个单词的首字母大写。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-class">.uppercase</span> &#123;<span class="attribute">text-transform</span>:uppercase;&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-class">.lowercase</span> &#123;<span class="attribute">text-transform</span>:lowercase;&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-class">.capitalize</span> &#123;<span class="attribute">text-transform</span>:capitalize;&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"uppercase"</span>&gt;</span>This is some text.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"lowercase"</span>&gt;</span>This is some text.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"capitalize"</span>&gt;</span>This is some text.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="文本缩进"><a href="#文本缩进" class="headerlink" title="文本缩进"></a>文本缩进</h4><p>文本缩进属性是用来指定文本的第一行的缩进。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">p</span> &#123;<span class="attribute">text-indent</span>:<span class="number">50px</span>;&#125;</div></pre></td></tr></table></figure></p>
<h4 id="CSS-字体"><a href="#CSS-字体" class="headerlink" title="CSS 字体"></a>CSS 字体</h4><p>CSS字体属性定义字体，加粗，大小，文字样式。  </p>
<h4 id="字体系列"><a href="#字体系列" class="headerlink" title="字体系列"></a>字体系列</h4><p>font-family属性设置文本的字体系列。应该设置几个字体名称作为一种后备机制，如果浏览器不支持第一种字体，他将尝试下一种字体。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">p</span>&#123;<span class="attribute">font-family</span>:<span class="string">"Times New Roman"</span>,Times,serif;&#125;</div></pre></td></tr></table></figure></p>
<h4 id="字体样式"><a href="#字体样式" class="headerlink" title="字体样式"></a>字体样式</h4><p>主要是用于指定斜体文字的字体样式属性。<br>此属性有三个值：  </p>
<ul>
<li>正常-正常显示文本</li>
<li>斜体-以斜体显示的文字  </li>
<li>倾斜的文字-文字向一边倾斜  <figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">p</span><span class="selector-class">.normal</span>&#123;<span class="attribute">font-style</span>:normal;&#125;</div><div class="line"><span class="selector-tag">p</span><span class="selector-class">.italic</span>&#123;<span class="attribute">font-style</span>:italic;&#125;</div><div class="line"><span class="selector-tag">p</span><span class="selector-class">.oblique</span>&#123;<span class="attribute">font-style</span>:oblique;&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="字体大小"><a href="#字体大小" class="headerlink" title="字体大小"></a>字体大小</h4><p>font-size属性设置文本的大小。<br>请务必使用正确的HTML标签，就h1-h6表示标题和p表示段落。<br>字体大小的值是可以绝对或相对的大小。<br>绝对大小：  </p>
<ul>
<li>设置一个指定大小的文本</li>
<li>不允许用户在所有浏览器中改变字体大小  </li>
<li>确定了输出的物理尺寸时绝对大小很有用  </li>
</ul>
<p>相对大小：  </p>
<ul>
<li>相对于周围的元素来设置大小  </li>
<li>允许用户在浏览器中改变文字大小</li>
</ul>
<h4 id="设置字体大小像素"><a href="#设置字体大小像素" class="headerlink" title="设置字体大小像素"></a>设置字体大小像素</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">h1</span> &#123;<span class="attribute">font-size</span>:<span class="number">40px</span>;&#125;</div><div class="line"><span class="selector-tag">h2</span> &#123;<span class="attribute">font-size</span>:<span class="number">30px</span>;&#125;</div><div class="line"><span class="selector-tag">p</span> &#123;<span class="attribute">font-size</span>:<span class="number">14px</span>&#125;</div></pre></td></tr></table></figure>
<h4 id="用em来设置字体大小"><a href="#用em来设置字体大小" class="headerlink" title="用em来设置字体大小"></a>用em来设置字体大小</h4><p>为了避免Internet Explorer 中无法调整文本的问题，许多开发者使用 em 单位代替像素。<br>em的尺寸单位由W3C建议。<br>1em和当前字体大小相等。在浏览器中默认的文字大小是16px。<br>因此，1em的默认大小是16px。可以通过下面这个公式将像素转换为em：px/16=em  </p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">h1</span> &#123;<span class="attribute">font-size</span>:<span class="number">2.5em</span>;&#125;<span class="comment">/*40px/16=2.5em*/</span></div><div class="line"><span class="selector-tag">h2</span> &#123;<span class="attribute">font-size</span>:<span class="number">1.875em</span>;&#125;<span class="comment">/*30px/16=1.875em*/</span></div><div class="line"><span class="selector-tag">p</span> &#123;<span class="attribute">font-size</span>:<span class="number">0.875em</span>;&#125;<span class="comment">/*14px/16=0.875em*/</span></div></pre></td></tr></table></figure>
<h4 id="使用百分比和EM组合"><a href="#使用百分比和EM组合" class="headerlink" title="使用百分比和EM组合"></a>使用百分比和EM组合</h4><p>在所有浏览器的解决方案中，设置body元素的默认字体大小的是百分比：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">body</span> &#123;<span class="attribute">font-size</span>:<span class="number">100%</span>;&#125;</div><div class="line"><span class="selector-tag">h1</span> &#123;<span class="attribute">font-size</span>:<span class="number">2.5em</span>;&#125;</div><div class="line"><span class="selector-tag">h2</span> &#123;<span class="attribute">font-size</span>:<span class="number">1</span>,<span class="number">875em</span>;&#125;</div><div class="line"><span class="selector-tag">p</span> &#123;<span class="attribute">font-size</span>:<span class="number">0.875em</span>;&#125;</div></pre></td></tr></table></figure></p>
<h3 id="CSS-链接"><a href="#CSS-链接" class="headerlink" title="CSS 链接"></a>CSS 链接</h3><h4 id="链接的样式"><a href="#链接的样式" class="headerlink" title="链接的样式"></a>链接的样式</h4><ul>
<li>a:link - 正常，未访问过的链接</li>
<li>a:visited - 用户已访问过的链接</li>
<li>a:hover - 当用户鼠标放在链接上时</li>
<li>a:active - 链接被点击的那一刻<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:link</span> &#123;<span class="attribute">color</span>:<span class="number">#000000</span>;&#125;      <span class="comment">/* 未访问链接*/</span></div><div class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:visited</span> &#123;<span class="attribute">color</span>:<span class="number">#00FF00</span>;&#125;  <span class="comment">/* 已访问链接 */</span></div><div class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;<span class="attribute">color</span>:<span class="number">#FF00FF</span>;&#125;  <span class="comment">/* 鼠标移动到链接上 */</span></div><div class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:active</span> &#123;<span class="attribute">color</span>:<span class="number">#0000FF</span>;&#125;  <span class="comment">/* 鼠标点击时 */</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="常见的链接样式"><a href="#常见的链接样式" class="headerlink" title="常见的链接样式"></a>常见的链接样式</h4><h5 id="文本修饰-1"><a href="#文本修饰-1" class="headerlink" title="文本修饰"></a>文本修饰</h5><p>text-decoration 属性主要用于删除链接中的下划线：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:link</span> &#123;<span class="attribute">text-decoration</span>:none;&#125;</div><div class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:visited</span> &#123;<span class="attribute">text-decoration</span>:none;&#125;</div><div class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;<span class="attribute">text-decoration</span>:underline;&#125;</div><div class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:active</span> &#123;<span class="attribute">text-decoration</span>:underline;&#125;</div></pre></td></tr></table></figure></p>
<h5 id="背景颜色-1"><a href="#背景颜色-1" class="headerlink" title="背景颜色"></a>背景颜色</h5><p>背景颜色属性指定链接背景色：  </p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:link</span> &#123;<span class="attribute">background-color</span>:<span class="number">#B2FF99</span>;&#125;</div><div class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:visited</span> &#123;<span class="attribute">background-color</span>:<span class="number">#FFFF85</span>;&#125;</div><div class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;<span class="attribute">background-color</span>:<span class="number">#FF704D</span>;&#125;</div><div class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:active</span> &#123;<span class="attribute">background-color</span>:<span class="number">#FF704D</span>;&#125;</div></pre></td></tr></table></figure>
<h3 id="CSS-列表"><a href="#CSS-列表" class="headerlink" title="CSS 列表"></a>CSS 列表</h3><p>列表属性作用：  </p>
<ul>
<li>设置不同的列表项标记问有序列表  </li>
<li>设置不同的列表项为无序列表  </li>
<li>设置列表项标记为图像  </li>
</ul>
<h4 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h4><p>HTML有两种类型的列表：  </p>
<ul>
<li>无序列表</li>
<li>有序列表<br>使用CSS可以列出进一步的样式，并可用图像作列表项标记。  </li>
</ul>
<h4 id="不同的列表项标记"><a href="#不同的列表项标记" class="headerlink" title="不同的列表项标记"></a>不同的列表项标记</h4><p>list-style-type属性指定列表项标记的类型是：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-tag">ul</span><span class="selector-class">.a</span> &#123;<span class="attribute">list-style-type</span>:circle;&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">ul</span><span class="selector-class">.b</span> &#123;<span class="attribute">list-style-type</span>:square;&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">ol</span><span class="selector-class">.c</span> &#123;<span class="attribute">list-style-type</span>:upper-roman;&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">ol</span><span class="selector-class">.d</span> &#123;<span class="attribute">list-style-type</span>:lower-alpha;&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>无序列表实例:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"a"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Coffee<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Tea<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Coca Cola<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"b"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Coffee<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Tea<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Coca Cola<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>有序列表实例:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">class</span>=<span class="string">"c"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Coffee<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Tea<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Coca Cola<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">class</span>=<span class="string">"d"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Coffee<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Tea<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Coca Cola<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="作为列表项标记的图像"><a href="#作为列表项标记的图像" class="headerlink" title="作为列表项标记的图像"></a>作为列表项标记的图像</h4><p>要指定列表项标记的图像，使用列表样式图像属性：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">ul </span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">    <span class="selector-tag">list-style-image</span><span class="selector-pseudo">:url('sqpurple.gif')</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>Coffee<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>Tea<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>Coca Cola<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="浏览器兼容性解决方案"><a href="#浏览器兼容性解决方案" class="headerlink" title="浏览器兼容性解决方案"></a>浏览器兼容性解决方案</h4><p>同样在所有浏览器，下面的例子会显示的图像标记：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">ul</span></div><div class="line">&#123;</div><div class="line">    <span class="attribute">list-style-type</span>: none;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">0px</span>;</div><div class="line">    <span class="attribute">margin</span>: <span class="number">0px</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span></div><div class="line">&#123;</div><div class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(sqpurple.gif);</div><div class="line">    <span class="attribute">background-repeat</span>: no-repeat;</div><div class="line">    <span class="attribute">background-position</span>: <span class="number">0px</span> <span class="number">5px</span>; </div><div class="line">    <span class="attribute">padding-left</span>: <span class="number">14px</span>; </div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="列表-简写属性"><a href="#列表-简写属性" class="headerlink" title="列表-简写属性"></a>列表-简写属性</h4><p>在单个属性中可以指定所有的列表属性，这就是所谓的简写属性。<br>为列表使用方便，列表样式属性设置如下：<br><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="string">ul</span></div><div class="line"><span class="string">&#123;</span></div><div class="line">    <span class="built_in">list-style:</span> <span class="string">square </span><span class="string">url(</span><span class="string">"sqpurple.gif"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="CSS-表格"><a href="#CSS-表格" class="headerlink" title="CSS 表格"></a>CSS 表格</h3><p>使用CSS可以使HTML表格更美观。  </p>
<h4 id="表格边框"><a href="#表格边框" class="headerlink" title="表格边框"></a>表格边框</h4><p>指定CSS表格边框，使用border属性。<br>下面的例子指定了一个表格的th和td元素的黑色边框：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">table</span>,<span class="selector-tag">th</span>,td</div><div class="line">&#123;</div><div class="line">    <span class="attribute">border</span>:<span class="number">1px</span> solid black;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="折叠边框"><a href="#折叠边框" class="headerlink" title="折叠边框"></a>折叠边框</h4><p>border-collapse属性设置的边框是否杯折叠成一个单一的边框或隔开：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">table</div><div class="line">&#123;</div><div class="line"><span class="attribute">border-collapse</span>:collapse;</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">table</span>,<span class="selector-tag">th</span>, td</div><div class="line">&#123;</div><div class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid black;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="表格宽度和高度"><a href="#表格宽度和高度" class="headerlink" title="表格宽度和高度"></a>表格宽度和高度</h4><p>Width和height属性定义表格的宽度和高度。<br>下面的例子是设置100％的宽度，50像素的th元素的高度的表格：  </p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">table</span> </div><div class="line">&#123;</div><div class="line"><span class="attribute">width</span>:<span class="number">100%</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">th</span></div><div class="line">&#123;</div><div class="line"><span class="attribute">height</span>:<span class="number">50px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="表格文字对齐"><a href="#表格文字对齐" class="headerlink" title="表格文字对齐"></a>表格文字对齐</h4><p>表格中的文本对齐和垂直对齐属性。<br>text-align属性设置水平对齐方式，像左，右，或中心：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">td</span></div><div class="line">&#123;</div><div class="line"><span class="attribute">text-align</span>:right;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>垂直对齐属性设置垂直对齐，比如顶部，底部或中间：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">td</span></div><div class="line">&#123;</div><div class="line"><span class="attribute">height</span>:<span class="number">50px</span>;</div><div class="line"><span class="attribute">vertical-align</span>:bottom;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="表格填充"><a href="#表格填充" class="headerlink" title="表格填充"></a>表格填充</h4><p>如果在标的内容中控制空格之间的边框，应使用td和th元素的填充属性：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">td</span></div><div class="line">&#123;</div><div class="line">    <span class="attribute">padding</span>:<span class="number">15px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="表格颜色"><a href="#表格颜色" class="headerlink" title="表格颜色"></a>表格颜色</h4><p>下面的例子指定边框的颜色，和th元素的文本和背景颜色：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">table</span>, <span class="selector-tag">td</span>, <span class="selector-tag">th</span></div><div class="line">&#123;</div><div class="line"><span class="attribute">border</span>:<span class="number">1px</span> solid green;</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">th</span></div><div class="line">&#123;</div><div class="line"><span class="attribute">background-color</span>:green;</div><div class="line"><span class="attribute">color</span>:white;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="CSS-盒子模型"><a href="#CSS-盒子模型" class="headerlink" title="CSS 盒子模型"></a>CSS 盒子模型</h3><p>所有HTML元素可以看作盒子，在CSS中，”box model”这一术语是用来设计和布局时使用。<br>CSS盒模型本质上是一个盒子，封装周围的HTML元素，它包括：边距，边框，填充，和实际内容。<br>盒模型允许我们在其它元素和周围元素边框之间的空间放置元素。<br>下面的图片说明了盒子模型(Box Model)：<br><a href="http://www.runoob.com/images/box-model.gif" target="_blank" rel="external"></a><br>不同部分的说明：  </p>
<ul>
<li>Margin(外边距) - 清除边框外的区域，外边距是透明的。</li>
<li>Border(边框) - 围绕在内边距和内容外的边框。</li>
<li>Padding(内边距) - 清除内容周围的区域，内边距是透明的。</li>
<li>Content(内容) - 盒子的内容，显示文本和图像。  </li>
</ul>
<h4 id="元素的宽度和高度"><a href="#元素的宽度和高度" class="headerlink" title="元素的宽度和高度"></a>元素的宽度和高度</h4><p>指定一个CSS元素的宽度和高度属性时，只是设置内容区域的宽度和高度。要知道，完全大小的元素，还必须添加填充，边框和边距  </p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">div</span> &#123;</div><div class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</div><div class="line">    <span class="attribute">border</span>: <span class="number">25px</span> solid green;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">25px</span>;</div><div class="line">    <span class="attribute">margin</span>: <span class="number">25px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>让我们自己算算：<br>300px (宽)  </p>
<ul>
<li>50px (左 + 右填充)  + 50px (左 + 右边框)  + 50px (左 + 右边距)<br>= 450px<br>试想一下，你只有250像素的空间。让我们设置总宽度为250像素的元素:  <figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">div</span> &#123;</div><div class="line">    <span class="attribute">width</span>: <span class="number">220px</span>;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">10px</span>;</div><div class="line">    <span class="attribute">border</span>: <span class="number">5px</span> solid gray;</div><div class="line">    <span class="attribute">margin</span>: <span class="number">0</span>; </div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>最终元素的总宽度计算公式是这样的：<br>总元素的宽度=宽度+左填充+右填充+左边框+右边框+左边距+右边距<br>元素的总高度最终计算公式是这样的：<br>总元素的高度=高度+顶部填充+底部填充+上边框+下边框+上边距+下边距  </p>
<h4 id="浏览器的兼容性问题"><a href="#浏览器的兼容性问题" class="headerlink" title="浏览器的兼容性问题"></a>浏览器的兼容性问题</h4><p>一旦为页面设置了恰当的 DTD，大多数浏览器都会按照上面的图示来呈现内容。然而 IE 5 和 6 的呈现却是不正确的。根据 W3C 的规范，元素内容占据的空间是由 width 属性设置的，而内容周围的 padding 和 border 值是另外计算的。不幸的是，IE5.X 和 6 在怪异模式中使用自己的非标准模型。这些浏览器的 width 属性不是内容的宽度，而是内容、内边距和边框的宽度的总和。<br>虽然有方法解决这个问题。但是目前最好的解决方案是回避这个问题。也就是，不要给元素添加具有指定宽度的内边距，而是尝试将内边距或外边距添加到元素的父元素和子元素。<br>IE8 及更早IE版本不支持设置填充的宽度和边框的宽度属性。<br>解决IE8及更早版本不兼容问题可以在HTML页面声明 !DOCTYPE html即可</p>
<h3 id="CSS-边框"><a href="#CSS-边框" class="headerlink" title="CSS 边框"></a>CSS 边框</h3><h4 id="CSS-边框属性"><a href="#CSS-边框属性" class="headerlink" title="CSS 边框属性"></a>CSS 边框属性</h4><p>CSS边框属性允许指定一个元素边框的样式和颜色。  </p>
<h4 id="边框样式"><a href="#边框样式" class="headerlink" title="边框样式"></a>边框样式</h4><p>边框样式属性指定要显示什么样的边界。   </p>
<h4 id="border-style值"><a href="#border-style值" class="headerlink" title="border-style值"></a>border-style值</h4><p>dotted: dotted:定义一个点线边框<br>dashed: 定义一个虚线边框<br>solid: 定义实线边框<br>double: 定义两个边框。 两个边框的宽度和 border-width 的值相同<br>groove: 定义3D沟槽边框。效果取决于边框的颜色值<br>ridge: 定义3D脊边框。效果取决于边框的颜色值<br>inset:定义一个3D的嵌入边框。效果取决于边框的颜色值<br>outset: 定义一个3D突出边框。 效果取决于边框的颜色值  </p>
<h4 id="边框宽度"><a href="#边框宽度" class="headerlink" title="边框宽度"></a>边框宽度</h4><p>可以通过Border-width属性为边框指定宽度。<br>为边框指定宽度有两种方法：可以指定长度值，比如 2px 或 0.1em(单位为 px, pt, cm, em 等)，或者使用 3 个关键字之一，它们分别是 thick 、medium（默认值） 和 thin。<br>CSS 没有定义 3 个关键字的具体宽度，所以一个用户可能把 thick 、medium 和 thin 分别设置为等于 5px、3px 和 2px，而另一个用户则分别设置为 3px、2px 和 1px。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">p</span><span class="selector-class">.one</span></div><div class="line">&#123;</div><div class="line">    <span class="attribute">border-style</span>:solid;</div><div class="line">    <span class="attribute">border-width</span>:<span class="number">5px</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">p</span><span class="selector-class">.two</span></div><div class="line">&#123;</div><div class="line">    <span class="attribute">border-style</span>:solid;</div><div class="line">    <span class="attribute">border-width</span>:medium;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="边框颜色"><a href="#边框颜色" class="headerlink" title="边框颜色"></a>边框颜色</h4><p>border-color属性用于设置边框的颜色。可以设置的颜色：  </p>
<ul>
<li>name - 指定颜色的名称，如 “red”</li>
<li>RGB - 指定 RGB 值, 如 “rgb(255,0,0)”</li>
<li>Hex - 指定16进制值, 如 “#ff0000”    </li>
</ul>
<p>您还可以设置边框的颜色为”transparent”。<br>注意：border-color单独使用是不起作用的，必须得先使用border-style来设置边框样式。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">p</span><span class="selector-class">.one</span></div><div class="line">&#123;</div><div class="line">    <span class="attribute">border-style</span>:solid;</div><div class="line">    <span class="attribute">border-color</span>:red;</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">p</span><span class="selector-class">.two</span></div><div class="line">&#123;</div><div class="line">    <span class="attribute">border-style</span>:solid;</div><div class="line">    <span class="attribute">border-color</span>:<span class="number">#98bf21</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="边框-单独设置各边"><a href="#边框-单独设置各边" class="headerlink" title="边框-单独设置各边"></a>边框-单独设置各边</h4><p>在CSS中，可以指定不同的侧面不同的边框：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">p</span></div><div class="line">&#123;</div><div class="line">    <span class="attribute">border-top-style</span>:dotted;</div><div class="line">    <span class="attribute">border-right-style</span>:solid;</div><div class="line">    <span class="attribute">border-bottom-style</span>:dotted;</div><div class="line">    <span class="attribute">border-left-style</span>:solid;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>上面的例子可以设置一个单一属性：<br><figure class="highlight maxima"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">border</span>-<span class="built_in">style</span>:dotted solid;</div></pre></td></tr></table></figure></p>
<h4 id="边框-简写属性"><a href="#边框-简写属性" class="headerlink" title="边框-简写属性"></a>边框-简写属性</h4><p>上面的例子用了很多属性来设置边框。<br>也可以在一个属性中设置边框。<br>可以在”border”属性中设置：  </p>
<ul>
<li>border-width</li>
<li>border-style (required)</li>
<li>border-color  </li>
</ul>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">p</span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">    <span class="selector-tag">border</span><span class="selector-pseudo">:5px</span> <span class="selector-tag">solid</span> <span class="selector-tag">red</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>段落中的一些文本。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="CSS-轮廓"><a href="#CSS-轮廓" class="headerlink" title="CSS 轮廓"></a>CSS 轮廓</h3><p>轮廓（outline）是绘制于元素周围的一条线，位于边框边缘的外围，可起到突出元素的作用。<br>轮廓（outline）属性指定元素轮廓的样式、颜色和宽度.<br>看几个例子就很明显了：  </p>
<h4 id="在元素周围画线"><a href="#在元素周围画线" class="headerlink" title="在元素周围画线"></a>在元素周围画线</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">p </span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">border</span><span class="selector-pseudo">:1px</span> <span class="selector-tag">solid</span> <span class="selector-tag">red</span>;</span></div><div class="line"><span class="css">  <span class="selector-tag">outline</span><span class="selector-pseudo">:green</span> <span class="selector-tag">dotted</span> <span class="selector-tag">thick</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>注意:<span class="tag">&lt;/<span class="name">b</span>&gt;</span> 如果只有一个 !DOCTYP E指定 IE8 支持 outline 属性。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="设置轮廓样式"><a href="#设置轮廓样式" class="headerlink" title="设置轮廓样式"></a>设置轮廓样式</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-tag">p</span> &#123;<span class="attribute">border</span>:<span class="number">1px</span> solid red;&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-class">.dotted</span> &#123;<span class="attribute">outline-style</span>:dotted;&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-class">.dashed</span> &#123;<span class="attribute">outline-style</span>:dashed;&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-class">.solid</span> &#123;<span class="attribute">outline-style</span>:solid;&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-class">.double</span> &#123;<span class="attribute">outline-style</span>:double;&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-class">.groove</span> &#123;<span class="attribute">outline-style</span>:groove;&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-class">.ridge</span> &#123;<span class="attribute">outline-style</span>:ridge;&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-class">.inset</span> &#123;<span class="attribute">outline-style</span>:inset;&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-class">.outset</span> &#123;<span class="attribute">outline-style</span>:outset;&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"dotted"</span>&gt;</span>点线轮廓<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"dashed"</span>&gt;</span>虚线轮廓<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"solid"</span>&gt;</span>实线轮廓<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"double"</span>&gt;</span>双线轮廓<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"groove"</span>&gt;</span>凹槽轮廓<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"ridge"</span>&gt;</span>垄状轮廓<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"inset"</span>&gt;</span>嵌入轮廓<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"outset"</span>&gt;</span>外凸轮廓<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>注意:<span class="tag">&lt;/<span class="name">b</span>&gt;</span> 如果只有一个 !DOCTYPE 指定 IE 8 支持 outline 属性。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="设置轮廓的颜色"><a href="#设置轮廓的颜色" class="headerlink" title="设置轮廓的颜色"></a>设置轮廓的颜色</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">p </span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">border</span><span class="selector-pseudo">:1px</span> <span class="selector-tag">solid</span> <span class="selector-tag">red</span>;</span></div><div class="line"><span class="css">  <span class="selector-tag">outline-style</span><span class="selector-pseudo">:dotted</span>;</span></div><div class="line"><span class="css">  <span class="selector-tag">outline-color</span>:<span class="selector-id">#00ff00</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>注意:<span class="tag">&lt;/<span class="name">b</span>&gt;</span> 如果只有一个 !DOCTYPE 指定 IE 8 支持 outline 属性。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="设置轮廓的宽度"><a href="#设置轮廓的宽度" class="headerlink" title="设置轮廓的宽度"></a>设置轮廓的宽度</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-class">.one</span></span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">border</span><span class="selector-pseudo">:1px</span> <span class="selector-tag">solid</span> <span class="selector-tag">red</span>;</span></div><div class="line"><span class="css">  <span class="selector-tag">outline-style</span><span class="selector-pseudo">:solid</span>;</span></div><div class="line"><span class="css">  <span class="selector-tag">outline-width</span><span class="selector-pseudo">:thin</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-class">.two</span></span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">border</span><span class="selector-pseudo">:1px</span> <span class="selector-tag">solid</span> <span class="selector-tag">red</span>;</span></div><div class="line"><span class="css">  <span class="selector-tag">outline-style</span><span class="selector-pseudo">:dotted</span>;</span></div><div class="line"><span class="css">  <span class="selector-tag">outline-width</span><span class="selector-pseudo">:3px</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"one"</span>&gt;</span>This is some text in a paragraph.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"two"</span>&gt;</span>This is some text in a paragraph.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>注意:<span class="tag">&lt;/<span class="name">b</span>&gt;</span> 如果只有一个 !DOCTYPE 指定 IE8 支持 outline 属性。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="CSS-Margin-外边距"><a href="#CSS-Margin-外边距" class="headerlink" title="CSS Margin(外边距)"></a>CSS Margin(外边距)</h3><p>外边距属性定义元素周围的空间。  </p>
<h4 id="Margin"><a href="#Margin" class="headerlink" title="Margin"></a>Margin</h4><p>margin清除周围的元素（外边框）的区域。margin没有背景颜色，是完全透明的<br>margin可以单独改变元素的上，下，左，右边距。也可以一次改变所有的属性。  </p>
<h4 id="Margin-单边外边距属性"><a href="#Margin-单边外边距属性" class="headerlink" title="Margin - 单边外边距属性"></a>Margin - 单边外边距属性</h4><p>在CSS中，它可以指定不同的侧面不同的边距：  </p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">p</span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">background-color</span><span class="selector-pseudo">:yellow</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-class">.margin</span></span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">margin-top</span><span class="selector-pseudo">:100px</span>;</span></div><div class="line"><span class="css">  <span class="selector-tag">margin-bottom</span><span class="selector-pseudo">:100px</span>;</span></div><div class="line"><span class="css">  <span class="selector-tag">margin-right</span><span class="selector-pseudo">:50px</span>;</span></div><div class="line"><span class="css">  <span class="selector-tag">margin-left</span><span class="selector-pseudo">:50px</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个没有指定边距大小的段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"margin"</span>&gt;</span>这是一个指定边距大小的段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="Margin-简写属性"><a href="#Margin-简写属性" class="headerlink" title="Margin - 简写属性"></a>Margin - 简写属性</h4><p>为了缩短代码，有可能使用一个属性中margin指定的所有边距属性。这就是所谓的缩写属性。<br>所有边距属性的缩写属性是”margin”:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">p</span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">background-color</span><span class="selector-pseudo">:yellow</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-class">.margin</span></span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">margin</span><span class="selector-pseudo">:100px</span> 50<span class="selector-tag">px</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个没有指定边距大小的段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"margin"</span>&gt;</span>这是一个指定边距大小的段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="CSS-Padding（填充）"><a href="#CSS-Padding（填充）" class="headerlink" title="CSS Padding（填充）"></a>CSS Padding（填充）</h3><p>CSS Padding（填充）属性定义元素边框与元素内容之间的空间。  </p>
<h4 id="Padding（填充）"><a href="#Padding（填充）" class="headerlink" title="Padding（填充）"></a>Padding（填充）</h4><p>当元素的Padding（填充）（内边距）被清除时，所”释放”的区域将会受到元素背景颜色的填充。<br>单独使用填充属性可以改变上下左右的填充。缩写填充属性也可以使用，一旦改变一切都改变。  </p>
<h4 id="填充-单边内边距属性"><a href="#填充-单边内边距属性" class="headerlink" title="填充- 单边内边距属性"></a>填充- 单边内边距属性</h4><p>在CSS中，它可以指定不同的侧面不同的填充：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">p</span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">background-color</span><span class="selector-pseudo">:yellow</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-class">.padding</span></span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">padding-top</span><span class="selector-pseudo">:25px</span>;</span></div><div class="line"><span class="css">  <span class="selector-tag">padding-bottom</span><span class="selector-pseudo">:25px</span>;</span></div><div class="line"><span class="css">  <span class="selector-tag">padding-right</span><span class="selector-pseudo">:50px</span>;</span></div><div class="line"><span class="css">  <span class="selector-tag">padding-left</span><span class="selector-pseudo">:50px</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个没有指定填充边距的段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"padding"</span>&gt;</span>这是一个指定填充边距的段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="填充-简写属性"><a href="#填充-简写属性" class="headerlink" title="填充 - 简写属性"></a>填充 - 简写属性</h4><p>为了缩短代码，它可以在一个属性中指定的所有填充属性。<br>这就是所谓的缩写属性。所有的填充属性的缩写属性是”padding”:   </p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">p</span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">background-color</span><span class="selector-pseudo">:yellow</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-class">.padding</span></span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">padding</span><span class="selector-pseudo">:25px</span> 50<span class="selector-tag">px</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个没有指定填充边距的段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"padding"</span>&gt;</span>这是一个指定填充边距的段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="CSS-分组和-嵌套-选择器"><a href="#CSS-分组和-嵌套-选择器" class="headerlink" title="CSS 分组和 嵌套 选择器"></a>CSS 分组和 嵌套 选择器</h3><h4 id="Grouping-Selectors"><a href="#Grouping-Selectors" class="headerlink" title="Grouping Selectors"></a>Grouping Selectors</h4><p>在样式表中有很多具有相同样式的元素。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">h1</span></div><div class="line">&#123;</div><div class="line"><span class="attribute">color</span>:green;</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">h2</span></div><div class="line">&#123;</div><div class="line"><span class="attribute">color</span>:green;</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">p</span></div><div class="line">&#123;</div><div class="line"><span class="attribute">color</span>:green;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>为了尽量减少代码，你可以使用分组选择器。<br>每个选择器用逗号分隔.<br>在下面的例子中，我们对以上代码使用分组选择器：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">h1</span>,<span class="selector-tag">h2</span>,p</div><div class="line">&#123;</div><div class="line"><span class="attribute">color</span>:green;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="嵌套选择器"><a href="#嵌套选择器" class="headerlink" title="嵌套选择器"></a>嵌套选择器</h4><p>它可能适用于选择器内部的选择器的样式。<br>在下面的例子设置了三个样式：  </p>
<ul>
<li>为所有p元素指定一个样式</li>
<li>为所有class=”marked”的元素指定一个样式</li>
<li>为所有class=”marked”元素内的p元素指定一个样式  </li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">p</span></div><div class="line">&#123;</div><div class="line"><span class="attribute">color</span>:blue;</div><div class="line"><span class="attribute">text-align</span>:center;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.marked</span></div><div class="line">&#123;</div><div class="line"><span class="attribute">background-color</span>:red;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.marked</span> <span class="selector-tag">p</span></div><div class="line">&#123;</div><div class="line"><span class="attribute">color</span>:white;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>来一个全的：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">p</span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">color</span><span class="selector-pseudo">:blue</span>;</span></div><div class="line"><span class="css">  <span class="selector-tag">text-align</span><span class="selector-pseudo">:center</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="css"><span class="selector-class">.marked</span></span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">background-color</span><span class="selector-pseudo">:red</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="css"><span class="selector-class">.marked</span> <span class="selector-tag">p</span></span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">color</span><span class="selector-pseudo">:white</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这个段落是蓝色文本，居中对齐。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"marked"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这个段落不是蓝色文本。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>所有 class="marked"元素内的 p 元素指定一个样式，但有不同的文本颜色。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="CSS-尺寸-Dimension"><a href="#CSS-尺寸-Dimension" class="headerlink" title="CSS 尺寸 (Dimension)"></a>CSS 尺寸 (Dimension)</h3><p>CSS 尺寸 (Dimension) 属性允许你控制元素的高度和宽度。同样，它允许你增加行间距。  </p>
<h4 id="设置元素的高度"><a href="#设置元素的高度" class="headerlink" title="设置元素的高度"></a>设置元素的高度</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-tag">img</span><span class="selector-class">.normal</span></span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">height</span><span class="selector-pseudo">:auto</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">img</span><span class="selector-class">.big</span></span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">height</span><span class="selector-pseudo">:120px</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-class">.ex</span></span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">height</span><span class="selector-pseudo">:100px</span>;</span></div><div class="line"><span class="css">  <span class="selector-tag">width</span><span class="selector-pseudo">:100px</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="使用百分比设置图像的高度"><a href="#使用百分比设置图像的高度" class="headerlink" title="使用百分比设置图像的高度"></a>使用百分比设置图像的高度</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-tag">html</span> &#123;<span class="attribute">height</span>:<span class="number">100%</span>;&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">body</span> &#123;<span class="attribute">height</span>:<span class="number">100%</span>;&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">img</span><span class="selector-class">.normal</span> &#123;<span class="attribute">height</span>:auto;&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">img</span><span class="selector-class">.big</span> &#123;<span class="attribute">height</span>:<span class="number">50%</span>;&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">img</span><span class="selector-class">.small</span> &#123;<span class="attribute">height</span>:<span class="number">10%</span>;&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="使用像素值来设置元素的宽度"><a href="#使用像素值来设置元素的宽度" class="headerlink" title="使用像素值来设置元素的宽度"></a>使用像素值来设置元素的宽度</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-tag">img</span> &#123;<span class="attribute">width</span>:<span class="number">200px</span>;&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="设置元素的最大高度"><a href="#设置元素的最大高度" class="headerlink" title="设置元素的最大高度"></a>设置元素的最大高度</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">p</span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">max-height</span><span class="selector-pseudo">:50px</span>;</span></div><div class="line"><span class="css">  <span class="selector-tag">background-color</span><span class="selector-pseudo">:yellow</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="使用百分比来设置元素的最大宽度"><a href="#使用百分比来设置元素的最大宽度" class="headerlink" title="使用百分比来设置元素的最大宽度"></a>使用百分比来设置元素的最大宽度</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">p</span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">max-width</span><span class="selector-pseudo">:20</span>%;</span></div><div class="line"><span class="css">  <span class="selector-tag">background-color</span><span class="selector-pseudo">:yellow</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="设置元素的最低高度"><a href="#设置元素的最低高度" class="headerlink" title="设置元素的最低高度"></a>设置元素的最低高度</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">p</span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">min-height</span><span class="selector-pseudo">:100px</span>;</span></div><div class="line"><span class="css">  <span class="selector-tag">background-color</span><span class="selector-pseudo">:yellow</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="使用像素值设置元素的最小宽度"><a href="#使用像素值设置元素的最小宽度" class="headerlink" title="使用像素值设置元素的最小宽度"></a>使用像素值设置元素的最小宽度</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">p</span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">min-width</span><span class="selector-pseudo">:150px</span>;</span></div><div class="line"><span class="css">  <span class="selector-tag">background-color</span><span class="selector-pseudo">:yellow</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="CSS-Display-显示-与-Visibility（可见性）"><a href="#CSS-Display-显示-与-Visibility（可见性）" class="headerlink" title="CSS Display(显示) 与 Visibility（可见性）"></a>CSS Display(显示) 与 Visibility（可见性）</h3><p>display属性设置一个元素应如何显示，visibility属性指定一个元素应可见还是隐藏。    </p>
<h4 id="隐藏元素-display-none或visibility-hidden"><a href="#隐藏元素-display-none或visibility-hidden" class="headerlink" title="隐藏元素 - display:none或visibility:hidden"></a>隐藏元素 - display:none或visibility:hidden</h4><p>隐藏一个元素可以通过把display属性设置为”none”，或把visibility属性设置为”hidden”。但是请注意，这两种方法会产生不同的结果。<br>visibility:hidden可以隐藏某个元素，但隐藏的元素仍需占用与未隐藏之前一样的空间。也就是说，该元素虽然被隐藏了，但仍然会影响布局。  </p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>这是一个可见标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"hidden"</span>&gt;</span>这是一个隐藏标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>注意, 实例中的隐藏标题仍然占用空间。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div></pre></td></tr></table></figure>
<p>display:none可以隐藏某个元素，且隐藏的元素不会占用任何空间。也就是说，该元素不但被隐藏了，而且该元素原本占用的空间也会从页面布局中消失。  </p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">h1</span><span class="selector-class">.hidden</span> &#123;<span class="attribute">display</span>:none;&#125;</div></pre></td></tr></table></figure>
<h4 id="CSS-Display-块和内联元素"><a href="#CSS-Display-块和内联元素" class="headerlink" title="CSS Display - 块和内联元素"></a>CSS Display - 块和内联元素</h4><p>块元素是一个元素，占用了全部宽度，在前后都是换行符。<br>块元素的例子：</p>
<ul>
<li>&amp;lth1&amp;gt</li>
<li>&amp;ltp&amp;gt</li>
<li>&amp;ltdiv&amp;gt<br>内联元素只需要必要的宽度，不强制换行。<br>内联元素的例子：  </li>
<li>&amp;ltspan&amp;gt</li>
<li>&amp;lta&amp;gt  </li>
</ul>
<h4 id="如何改变一个元素显示"><a href="#如何改变一个元素显示" class="headerlink" title="如何改变一个元素显示"></a>如何改变一个元素显示</h4><p>可以更改内联元素和块元素，反之亦然，可以使页面看起来是以一种特定的方式组合，并仍然遵循web标准。下面的示例把列表项显示为内联元素：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">li</span> &#123;<span class="attribute">display</span>:inline;&#125;</div></pre></td></tr></table></figure></p>
<p>把span元素作为块元素：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">span</span> &#123;<span class="attribute">display</span>:block;&#125;</div></pre></td></tr></table></figure></p>
<h3 id="CSS-Positioning-定位"><a href="#CSS-Positioning-定位" class="headerlink" title="CSS Positioning(定位)"></a>CSS Positioning(定位)</h3><p>position 属性指定了元素的定位类型。<br>position 属性的四个值：  </p>
<ul>
<li>static</li>
<li>relative</li>
<li>fixed</li>
<li>absolute  </li>
</ul>
<p>元素可以使用的顶部，底部，左侧和右侧属性定位。然而，这些属性无法工作，除非是先设定position属性。他们也有不同的工作方式，这取决于定位方法。  </p>
<h4 id="static-定位"><a href="#static-定位" class="headerlink" title="static 定位"></a>static 定位</h4><p>HTML元素的默认值，即没有定位，元素出现在正常的流中。<br>静态定位的元素不会受到 top, bottom, left, right影响。  </p>
<h4 id="fixed-定位"><a href="#fixed-定位" class="headerlink" title="fixed 定位"></a>fixed 定位</h4><p>元素的位置相对于浏览器窗口是固定位置。<br>即使窗口是滚动的它也不会移动：  </p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">p</span><span class="selector-class">.pos_fixed</span></div><div class="line">&#123;</div><div class="line">    <span class="attribute">position</span>:fixed;</div><div class="line">    <span class="attribute">top</span>:<span class="number">30px</span>;</div><div class="line">    <span class="attribute">right</span>:<span class="number">5px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="relative-定位"><a href="#relative-定位" class="headerlink" title="relative 定位"></a>relative 定位</h4><p>相对定位元素的定位是相对其正常位置。  </p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">h2</span><span class="selector-class">.pos_left</span></div><div class="line">&#123;</div><div class="line">    <span class="attribute">position</span>:relative;</div><div class="line">    <span class="attribute">left</span>:-<span class="number">20px</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">h2</span><span class="selector-class">.pos_right</span></div><div class="line">&#123;</div><div class="line">    <span class="attribute">position</span>:relative;</div><div class="line">    <span class="attribute">left</span>:<span class="number">20px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>可以移动的相对定位元素的内容和相互重叠的元素，它原本所占的空间不会改变。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">h2</span><span class="selector-class">.pos_top</span></div><div class="line">&#123;</div><div class="line">    <span class="attribute">position</span>:relative;</div><div class="line">    <span class="attribute">top</span>:-<span class="number">50px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="absolute-定位"><a href="#absolute-定位" class="headerlink" title="absolute 定位"></a>absolute 定位</h4><p>绝对定位的元素的位置相对于最近的已定位父元素，如果元素没有已定位的父元素，那么它的位置相对于html:  </p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">h2</span></div><div class="line">&#123;</div><div class="line">    <span class="attribute">position</span>:absolute;</div><div class="line">    <span class="attribute">left</span>:<span class="number">100px</span>;</div><div class="line">    <span class="attribute">top</span>:<span class="number">150px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>absolute 定位使元素的位置与文档流无关，因此不占据空间。<br>absolute 定位的元素和其他元素重叠。  </p>
<h4 id="重叠的元素"><a href="#重叠的元素" class="headerlink" title="重叠的元素"></a>重叠的元素</h4><p>元素的定位与文档流无关，所以它们可以覆盖页面上的其它元素<br>z-index属性指定了一个元素的堆叠顺序（哪个元素应该放在前面，或后面）<br>一个元素可以有正数或负数的堆叠顺序：  </p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">img</span></div><div class="line">&#123;</div><div class="line">    <span class="attribute">position</span>:absolute;</div><div class="line">    <span class="attribute">left</span>:<span class="number">0px</span>;</div><div class="line">    <span class="attribute">top</span>:<span class="number">0px</span>;</div><div class="line">    <span class="attribute">z-index</span>:-<span class="number">1</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="CSS-Float-浮动"><a href="#CSS-Float-浮动" class="headerlink" title="CSS Float(浮动)"></a>CSS Float(浮动)</h3><p>CSS 的 Float（浮动），会使元素向左或向右移动，其周围的元素也会重新排列。<br>Float（浮动），往往是用于图像，但它在布局时一样非常有用。  </p>
<h4 id="元素怎样浮动"><a href="#元素怎样浮动" class="headerlink" title="元素怎样浮动"></a>元素怎样浮动</h4><p>元素的水平方向浮动，意味着元素只能左右移动而不能上下移动。<br>一个浮动元素会尽量向左或向右移动，直到它的外边缘碰到包含框或另一个浮动框的边框为止。<br>浮动元素之后的元素将围绕它。<br>浮动元素之前的元素将不会受到影响。<br>如果图像是右浮动，下面的文本流将环绕在它左边：  </p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">img</span></div><div class="line">&#123;</div><div class="line">    <span class="attribute">float</span>:right;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="彼此相邻的浮动元素"><a href="#彼此相邻的浮动元素" class="headerlink" title="彼此相邻的浮动元素"></a>彼此相邻的浮动元素</h4><p>如果把几个浮动的元素放到一起，如果有空间的话，它们将彼此相邻。<br>在这里，对图片廊使用 float 属性：  </p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.thumbnail</span> </div><div class="line">&#123;</div><div class="line">    <span class="attribute">float</span>:left;</div><div class="line">    <span class="attribute">width</span>:<span class="number">110px</span>;</div><div class="line">    <span class="attribute">height</span>:<span class="number">90px</span>;</div><div class="line">    <span class="attribute">margin</span>:<span class="number">5px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="清除浮动-使用-clear"><a href="#清除浮动-使用-clear" class="headerlink" title="清除浮动 - 使用 clear"></a>清除浮动 - 使用 clear</h4><p>元素浮动之后，周围的元素会重新排列，为了避免这种情况，使用 clear 属性。<br>clear 属性指定元素两侧不能出现浮动元素。<br>使用 clear 属性往文本中添加图片廊：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.text_line</span></div><div class="line">&#123;</div><div class="line">    <span class="attribute">clear</span>:both;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="CSS-布局-水平-amp-垂直对齐"><a href="#CSS-布局-水平-amp-垂直对齐" class="headerlink" title="CSS 布局 - 水平 &amp; 垂直对齐"></a>CSS 布局 - 水平 &amp; 垂直对齐</h3><h4 id="元素居中对齐"><a href="#元素居中对齐" class="headerlink" title="元素居中对齐"></a>元素居中对齐</h4><p>要水平居中对齐一个元素(如 div), 可以使用 margin: auto;。<br>设置到元素的宽度将防止它溢出到容器的边缘。<br>元素通过指定宽度，并将两边的空外边距平均分配：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.center</span> &#123;</div><div class="line">    <span class="attribute">margin</span>: auto;</div><div class="line">    <span class="attribute">width</span>: <span class="number">50%</span>;</div><div class="line">    <span class="attribute">border</span>: <span class="number">3px</span> solid green;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">10px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="文本居中对齐"><a href="#文本居中对齐" class="headerlink" title="文本居中对齐"></a>文本居中对齐</h4><p>如果仅仅是为了文本在元素内居中对齐，可以使用 text-align: center;  </p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.center</span> &#123;</div><div class="line">    <span class="attribute">text-align</span>: center;</div><div class="line">    <span class="attribute">border</span>: <span class="number">3px</span> solid green;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="图片居中对齐"><a href="#图片居中对齐" class="headerlink" title="图片居中对齐"></a>图片居中对齐</h4><p>要让图片居中对齐, 可以使用 margin: auto; 并将它放到 块 元素中:  </p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">img</span> &#123;</div><div class="line">    <span class="attribute">display</span>: block;</div><div class="line">    <span class="attribute">margin</span>: auto;</div><div class="line">    <span class="attribute">width</span>: <span class="number">40%</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="左右对齐-使用定位方式"><a href="#左右对齐-使用定位方式" class="headerlink" title="左右对齐 - 使用定位方式"></a>左右对齐 - 使用定位方式</h4><p>可以使用 position: absolute; 属性来对齐元素:<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.right</span> &#123;</div><div class="line">    <span class="attribute">position</span>: absolute;</div><div class="line">    <span class="attribute">right</span>: <span class="number">0px</span>;</div><div class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</div><div class="line">    <span class="attribute">border</span>: <span class="number">3px</span> solid <span class="number">#73AD21</span>;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">10px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="左右对齐-使用-float-方式"><a href="#左右对齐-使用-float-方式" class="headerlink" title="左右对齐 - 使用 float 方式"></a>左右对齐 - 使用 float 方式</h4><p>我们也可以使用 float 属性来对齐元素:  </p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.right</span> &#123;</div><div class="line">    <span class="attribute">float</span>: right;</div><div class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</div><div class="line">    <span class="attribute">border</span>: <span class="number">3px</span> solid <span class="number">#73AD21</span>;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">10px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="垂直居中对齐-使用-padding"><a href="#垂直居中对齐-使用-padding" class="headerlink" title="垂直居中对齐 - 使用 padding"></a>垂直居中对齐 - 使用 padding</h4><p>CSS 中有很多方式可以实现垂直居中对齐。 一个简单的方式就是头部顶部使用 padding:  </p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.center</span> &#123;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">70px</span> <span class="number">0</span>;</div><div class="line">    <span class="attribute">border</span>: <span class="number">3px</span> solid green;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>如果要水平和垂直都居中，可以使用 padding 和 text-align: center:  </p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.center</span> &#123;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">70px</span> <span class="number">0</span>;</div><div class="line">    <span class="attribute">border</span>: <span class="number">3px</span> solid green;</div><div class="line">    <span class="attribute">text-align</span>: center;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="垂直居中-使用-line-height"><a href="#垂直居中-使用-line-height" class="headerlink" title="垂直居中 - 使用 line-height"></a>垂直居中 - 使用 line-height</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.center</span> &#123;</div><div class="line">    <span class="attribute">line-height</span>: <span class="number">200px</span>;</div><div class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</div><div class="line">    <span class="attribute">border</span>: <span class="number">3px</span> solid green;</div><div class="line">    <span class="attribute">text-align</span>: center;</div><div class="line">&#125;</div><div class="line"> </div><div class="line"><span class="comment">/* 如果文本有多行，添加以下代码: */</span></div><div class="line"><span class="selector-class">.center</span> <span class="selector-tag">p</span> &#123;</div><div class="line">    <span class="attribute">line-height</span>: <span class="number">1.5</span>;</div><div class="line">    <span class="attribute">display</span>: inline-block;</div><div class="line">    <span class="attribute">vertical-align</span>: middle;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="垂直居中-使用-position-和-transform"><a href="#垂直居中-使用-position-和-transform" class="headerlink" title="垂直居中 - 使用 position 和 transform"></a>垂直居中 - 使用 position 和 transform</h4><p>除了使用 padding 和 line-height 属性外,我们还可以使用 transform 属性来设置垂直居中:<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.center</span> &#123; </div><div class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</div><div class="line">    <span class="attribute">position</span>: relative;</div><div class="line">    <span class="attribute">border</span>: <span class="number">3px</span> solid green; </div><div class="line">&#125;</div><div class="line"> </div><div class="line"><span class="selector-class">.center</span> <span class="selector-tag">p</span> &#123;</div><div class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">position</span>: absolute;</div><div class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</div><div class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</div><div class="line">    <span class="attribute">transform</span>: <span class="built_in">translate</span>(-50%, -50%);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="CSS-组合选择符"><a href="#CSS-组合选择符" class="headerlink" title="CSS 组合选择符"></a>CSS 组合选择符</h3><h4 id="后代选取器"><a href="#后代选取器" class="headerlink" title="后代选取器"></a>后代选取器</h4><p>后代选取器匹配所有值得元素的后代元素。<br>以下实例选取所有 p 元素插入到 div元素中:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">div p</span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">background-color</span><span class="selector-pseudo">:yellow</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>后代选择1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>后代选择2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>不在div3<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>不在div4<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="子元素选择器"><a href="#子元素选择器" class="headerlink" title="子元素选择器"></a>子元素选择器</h4><p>与后代选择器相比，子元素选择器（Childselectors）只能选择作为某元素子元素的元素。以下实例选择了div元素中所有直接子元素 p ：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">div</span>&gt;<span class="selector-tag">p</span></div><div class="line">&#123;</div><div class="line">  <span class="attribute">background-color</span>:yellow;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="相邻兄弟选择器"><a href="#相邻兄弟选择器" class="headerlink" title="相邻兄弟选择器"></a>相邻兄弟选择器</h4><p>相邻兄弟选择器（Adjacent sibling selector）可选择紧接在另一元素后的元素，且二者有相同父元素。如果需要选择紧接在另一个元素后的元素，而且二者有相同的父元素，可以使用相邻兄弟选择器（Adjacent sibling selector）。以下实例选取了所有位于div元素后的第一个p元素:<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">div</span>+<span class="selector-tag">p</span></div><div class="line">&#123;</div><div class="line">  <span class="attribute">background-color</span>:yellow;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="后续兄弟选择器"><a href="#后续兄弟选择器" class="headerlink" title="后续兄弟选择器"></a>后续兄弟选择器</h4><p>后续兄弟选择器选取所有指定元素之后的相邻兄弟元素。<br>以下实例选取了所有div元素之后的所有相邻兄弟元素p:<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">div</span>~<span class="selector-tag">p</span></div><div class="line">&#123;</div><div class="line">  <span class="attribute">background-color</span>:yellow;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="CSS-导航栏"><a href="#CSS-导航栏" class="headerlink" title="CSS 导航栏"></a>CSS 导航栏</h3><p>熟练使用导航栏，对于任何网站都非常重要。<br>使用CSS你可以转换成好看的导航栏而不是枯燥的HTML菜单。  </p>
<h4 id="导航栏-链接列表"><a href="#导航栏-链接列表" class="headerlink" title="导航栏=链接列表"></a>导航栏=链接列表</h4><p>作为标准的HTML基础一个导航栏是必须的。在我们的例子中我们将建立一个标准的HTML列表导航栏。导航条基本上是一个链接列表，所以使用ul和li元素非常有意义：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;ul&gt;</div><div class="line">  &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#home"</span>&gt;</span>主页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></div><div class="line">  &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#news"</span>&gt;</span>新闻<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></div><div class="line">  &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#contact"</span>&gt;</span>联系<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></div><div class="line">  &lt;li&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#about"</span>&gt;</span>关于<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></div><div class="line">&lt;<span class="regexp">/ul&gt;</span></div></pre></td></tr></table></figure></p>
<p>注：这里用 href=”#”作为测试连接。但在一个真正的 web 站点上需要真实的 url。  </p>
<p>从列表中删除边距和填充：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">ul</span>&#123;</div><div class="line">  <span class="attribute">list-style-type</span>: none;</div><div class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</div><div class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>解析：<br>list-style-type：none 是移除列表前小标志，导航栏不需要列表标志。<br>移除浏览器的默认设置将边距和填充设置为0  </p>
<h4 id="垂直导航栏"><a href="#垂直导航栏" class="headerlink" title="垂直导航栏"></a>垂直导航栏</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">ul &#123;</span></div><div class="line"><span class="undefined">    list-style-type: none;</span></div><div class="line"><span class="undefined">    margin: 0;</span></div><div class="line"><span class="undefined">    padding: 0;</span></div><div class="line"><span class="undefined">    width: 200px;</span></div><div class="line"><span class="css">    <span class="selector-tag">background-color</span>: <span class="selector-id">#f1f1f1</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"> </span></div><div class="line"><span class="undefined">li a &#123;</span></div><div class="line"><span class="undefined">    display: block;</span></div><div class="line"><span class="css">    <span class="selector-tag">color</span>: <span class="selector-id">#000</span>;</span></div><div class="line"><span class="undefined">    padding: 8px 16px;</span></div><div class="line"><span class="undefined">    text-decoration: none;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"> </span></div><div class="line"><span class="css"><span class="comment">/* 鼠标移动到选项上修改背景颜色 */</span></span></div><div class="line"><span class="css"><span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span></div><div class="line"><span class="css">    <span class="selector-tag">background-color</span>: <span class="selector-id">#555</span>;</span></div><div class="line"><span class="undefined">    color: white;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#home"</span>&gt;</span>主页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#news"</span>&gt;</span>新闻<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#contact"</span>&gt;</span>联系<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#about"</span>&gt;</span>关于<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>背景颜色添加到链接中显示链接的区域<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>注意,整个区域是可点击的链接,而不仅仅是文本。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div></pre></td></tr></table></figure>
<p>display:block - 显示块元素的链接，让整体变为可点击链接区域（不只是文本），它允许我们指定宽度<br>width:60px - 块元素默认情况下是最大宽度。我们要指定一个60像素的宽度  </p>
<h4 id="垂直导航条实例"><a href="#垂直导航条实例" class="headerlink" title="垂直导航条实例"></a>垂直导航条实例</h4><p>创建一个简单的垂直导航条实例，在鼠标移动到选项时，修改背景颜色：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">ul &#123;</span></div><div class="line"><span class="undefined">    list-style-type: none;</span></div><div class="line"><span class="undefined">    margin: 0;</span></div><div class="line"><span class="undefined">    padding: 0;</span></div><div class="line"><span class="undefined">    width: 200px;</span></div><div class="line"><span class="css">    <span class="selector-tag">background-color</span>: <span class="selector-id">#f1f1f1</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"> </span></div><div class="line"><span class="undefined">li a &#123;</span></div><div class="line"><span class="undefined">    display: block;</span></div><div class="line"><span class="css">    <span class="selector-tag">color</span>: <span class="selector-id">#000</span>;</span></div><div class="line"><span class="undefined">    padding: 8px 16px;</span></div><div class="line"><span class="undefined">    text-decoration: none;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"> </span></div><div class="line"><span class="css"><span class="comment">/* 鼠标移动到选项上修改背景颜色 */</span></span></div><div class="line"><span class="css"><span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span></div><div class="line"><span class="css">    <span class="selector-tag">background-color</span>: <span class="selector-id">#555</span>;</span></div><div class="line"><span class="undefined">    color: white;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#home"</span>&gt;</span>主页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#news"</span>&gt;</span>新闻<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#contact"</span>&gt;</span>联系<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#about"</span>&gt;</span>关于<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>背景颜色添加到链接中显示链接的区域<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>注意,整个区域是可点击的链接,而不仅仅是文本。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="激活-当前导航条实例"><a href="#激活-当前导航条实例" class="headerlink" title="激活/当前导航条实例"></a>激活/当前导航条实例</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.active</span> &#123;</div><div class="line">    <span class="attribute">background-color</span>: <span class="number">#4CAF50</span>;</div><div class="line">    <span class="attribute">color</span>: white;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>实现：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">ul &#123;</span></div><div class="line"><span class="undefined">    list-style-type: none;</span></div><div class="line"><span class="undefined">    margin: 0;</span></div><div class="line"><span class="undefined">    padding: 0;</span></div><div class="line"><span class="undefined">    width: 200px;</span></div><div class="line"><span class="css">    <span class="selector-tag">background-color</span>: <span class="selector-id">#f1f1f1</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">li a &#123;</span></div><div class="line"><span class="undefined">    display: block;</span></div><div class="line"><span class="css">    <span class="selector-tag">color</span>: <span class="selector-id">#000</span>;</span></div><div class="line"><span class="undefined">    padding: 8px 16px;</span></div><div class="line"><span class="undefined">    text-decoration: none;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-class">.active</span> &#123;</span></div><div class="line"><span class="css">    <span class="selector-tag">background-color</span>: <span class="selector-id">#4CAF50</span>;</span></div><div class="line"><span class="undefined">    color: white;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">:not(.active)</span> &#123;</span></div><div class="line"><span class="css">    <span class="selector-tag">background-color</span>: <span class="selector-id">#555</span>;</span></div><div class="line"><span class="undefined">    color: white;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>垂直导航条<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>在点击了选项后，我们可以添加 "active" 类来标准哪个选项被选中。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"active"</span> <span class="attr">href</span>=<span class="string">"#home"</span>&gt;</span>主页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#news"</span>&gt;</span>新闻<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#contact"</span>&gt;</span>联系<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#about"</span>&gt;</span>关于<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="全屏高度的固定导航条"><a href="#全屏高度的固定导航条" class="headerlink" title="全屏高度的固定导航条"></a>全屏高度的固定导航条</h4><p>接下来创建一个左边是全屏高度的固定导航条，右边是可滚动的内容。(这不是和我博客一样了吗)<br>核心：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">ul</span> &#123;</div><div class="line">    <span class="attribute">list-style-type</span>: none;</div><div class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">width</span>: <span class="number">25%</span>;</div><div class="line">    <span class="attribute">background-color</span>: <span class="number">#f1f1f1</span>;</div><div class="line">    <span class="attribute">height</span>: <span class="number">100%</span>; <span class="comment">/* 全屏高度 */</span></div><div class="line">    <span class="attribute">position</span>: fixed; </div><div class="line">    <span class="attribute">overflow</span>: auto; <span class="comment">/* 如果导航栏选项多，允许滚动 */</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>实现：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">body &#123;</span></div><div class="line"><span class="undefined">    margin: 0;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">ul &#123;</span></div><div class="line"><span class="undefined">    list-style-type: none;</span></div><div class="line"><span class="undefined">    margin: 0;</span></div><div class="line"><span class="undefined">    padding: 0;</span></div><div class="line"><span class="undefined">    width: 25%;</span></div><div class="line"><span class="css">    <span class="selector-tag">background-color</span>: <span class="selector-id">#f1f1f1</span>;</span></div><div class="line"><span class="undefined">    position: fixed;</span></div><div class="line"><span class="undefined">    height: 100%;</span></div><div class="line"><span class="undefined">    overflow: auto;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">li a &#123;</span></div><div class="line"><span class="undefined">    display: block;</span></div><div class="line"><span class="css">    <span class="selector-tag">color</span>: <span class="selector-id">#000</span>;</span></div><div class="line"><span class="undefined">    padding: 8px 16px;</span></div><div class="line"><span class="undefined">    text-decoration: none;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-class">.active</span> &#123;</span></div><div class="line"><span class="css">    <span class="selector-tag">background-color</span>: <span class="selector-id">#4CAF50</span>;</span></div><div class="line"><span class="undefined">    color: white;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">:not(.active)</span> &#123;</span></div><div class="line"><span class="css">    <span class="selector-tag">background-color</span>: <span class="selector-id">#555</span>;</span></div><div class="line"><span class="undefined">    color: white;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"active"</span> <span class="attr">href</span>=<span class="string">"#home"</span>&gt;</span>主页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#news"</span>&gt;</span>新闻<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#contact"</span>&gt;</span>联系<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#about"</span>&gt;</span>关于<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"margin-left:25%;padding:1px 16px;height:1000px;"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Fixed Full-height Side Nav<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Try to scroll this area, and see how the sidenav sticks to the page<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Notice that this div element has a left margin of 25%. This is because the side navigation is set to 25% width. If you remove the margin, the sidenav will overlay/sit on top of this div.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Also notice that we have set overflow:auto to sidenav. This will add a scrollbar when the sidenav is too long (for example if it has over 50 links inside of it).<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Some text..<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Some text..<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Some text..<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Some text..<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Some text..<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Some text..<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Some text..<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="CSS-下拉菜单"><a href="#CSS-下拉菜单" class="headerlink" title="CSS 下拉菜单"></a>CSS 下拉菜单</h4><p>实例：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>下拉菜单实例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-class">.dropdown</span> &#123;</span></div><div class="line"><span class="undefined">  position: relative;</span></div><div class="line"><span class="undefined">  display: inline-block;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="css"><span class="selector-class">.dropdown-content</span> &#123;</span></div><div class="line"><span class="undefined">  display: none;</span></div><div class="line"><span class="undefined">  position: absolute;</span></div><div class="line"><span class="css">  <span class="selector-tag">background-color</span>: <span class="selector-id">#f9f9f9</span>;</span></div><div class="line"><span class="undefined">  min-width: 160px;</span></div><div class="line"><span class="css">  <span class="selector-tag">box-shadow</span>: 0<span class="selector-tag">px</span> 8<span class="selector-tag">px</span> 16<span class="selector-tag">px</span> 0<span class="selector-tag">px</span> <span class="selector-tag">rgba</span>(0,0,0,0<span class="selector-class">.2</span>);</span></div><div class="line"><span class="undefined">  padding: 12px 16px;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="css"><span class="selector-class">.dropdown</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.dropdown-content</span> &#123;</span></div><div class="line"><span class="undefined">  display: block;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>鼠标移动后出现下拉菜单<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>将鼠标移动到指定元素上就能看到下拉菜单。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"dropdown"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">span</span>&gt;</span>鼠标移动到我这！<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"dropdown-content"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>教程<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>www.runoob.com<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>实例解析<br>HTML 部分：<br>我们可以使用任何的HTML元素来打开下拉菜单，如：span, 或a button元素。<br>使用容器元素(如：div)来创建下拉菜单的内容，并放在任何你想放的位置上。<br>使用div元素来包裹这些元素，并使用CSS来设置下拉内容的样式。<br>CSS 部分：<br>.dropdown类使用 position:relative, 这将设置下拉菜单的内容放置在下拉按钮 (使用 position:absolute) 的右下角位置。<br>.dropdown-content 类中是实际的下拉菜单。默认是隐藏的，在鼠标移动到指定元素后会显示。 注意 min-width 的值设置为 160px。你可以随意修改它。<br>注意: 如果你想设置下拉内容与下拉按钮的宽度一致，可设置 width 为 100% ( overflow:auto 设置可以在小尺寸屏幕上滚动)。<br>我们使用 box-shadow 属性让下拉菜单看起来像一个”卡片”。<br>:hover 选择器用于在用户将鼠标移动到下拉按钮上时显示下拉菜单。  </p>
<h4 id="下拉菜单"><a href="#下拉菜单" class="headerlink" title="下拉菜单"></a>下拉菜单</h4><p>实例：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="css"><span class="comment">/* 下拉按钮样式 */</span></span></div><div class="line"><span class="css"><span class="selector-class">.dropbtn</span> &#123;</span></div><div class="line"><span class="css">    <span class="selector-tag">background-color</span>: <span class="selector-id">#4CAF50</span>;</span></div><div class="line"><span class="undefined">    color: white;</span></div><div class="line"><span class="undefined">    padding: 16px;</span></div><div class="line"><span class="undefined">    font-size: 16px;</span></div><div class="line"><span class="undefined">    border: none;</span></div><div class="line"><span class="undefined">    cursor: pointer;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="css"><span class="comment">/* 容器 &lt;div&gt; - 需要定位下拉内容 */</span></span></div><div class="line"><span class="css"><span class="selector-class">.dropdown</span> &#123;</span></div><div class="line"><span class="undefined">    position: relative;</span></div><div class="line"><span class="undefined">    display: inline-block;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="css"><span class="comment">/* 下拉内容 (默认隐藏) */</span></span></div><div class="line"><span class="css"><span class="selector-class">.dropdown-content</span> &#123;</span></div><div class="line"><span class="undefined">    display: none;</span></div><div class="line"><span class="undefined">    position: absolute;</span></div><div class="line"><span class="css">    <span class="selector-tag">background-color</span>: <span class="selector-id">#f9f9f9</span>;</span></div><div class="line"><span class="undefined">    min-width: 160px;</span></div><div class="line"><span class="css">    <span class="selector-tag">box-shadow</span>: 0<span class="selector-tag">px</span> 8<span class="selector-tag">px</span> 16<span class="selector-tag">px</span> 0<span class="selector-tag">px</span> <span class="selector-tag">rgba</span>(0,0,0,0<span class="selector-class">.2</span>);</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="css"><span class="comment">/* 下拉菜单的链接 */</span></span></div><div class="line"><span class="css"><span class="selector-class">.dropdown-content</span> <span class="selector-tag">a</span> &#123;</span></div><div class="line"><span class="undefined">    color: black;</span></div><div class="line"><span class="undefined">    padding: 12px 16px;</span></div><div class="line"><span class="undefined">    text-decoration: none;</span></div><div class="line"><span class="undefined">    display: block;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="css"><span class="comment">/* 鼠标移上去后修改下拉菜单链接颜色 */</span></span></div><div class="line"><span class="css"><span class="selector-class">.dropdown-content</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;<span class="attribute">background-color</span>: <span class="number">#f1f1f1</span>&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="css"><span class="comment">/* 在鼠标移上去后显示下拉菜单 */</span></span></div><div class="line"><span class="css"><span class="selector-class">.dropdown</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.dropdown-content</span> &#123;</span></div><div class="line"><span class="undefined">    display: block;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="css"><span class="comment">/* 当下拉内容显示后修改下拉按钮的背景颜色 */</span></span></div><div class="line"><span class="css"><span class="selector-class">.dropdown</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.dropbtn</span> &#123;</span></div><div class="line"><span class="css">    <span class="selector-tag">background-color</span>: <span class="selector-id">#3e8e41</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"dropdown"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"dropbtn"</span>&gt;</span>下拉菜单<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"dropdown-content"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>菜鸟教程 1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>菜鸟教程 2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>菜鸟教程 3<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="CSS-提示工具-Tooltip"><a href="#CSS-提示工具-Tooltip" class="headerlink" title="CSS 提示工具(Tooltip)"></a>CSS 提示工具(Tooltip)</h3><p>如何使用 HTML 与 CSS 来创建提示工具。  </p>
<h4 id="基础提示框-Tooltip"><a href="#基础提示框-Tooltip" class="headerlink" title="基础提示框(Tooltip)"></a>基础提示框(Tooltip)</h4><p>提示框在鼠标移动到指定元素上显示：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-class">.tooltip</span> &#123;</span></div><div class="line"><span class="undefined">    position: relative;</span></div><div class="line"><span class="undefined">    display: inline-block;</span></div><div class="line"><span class="undefined">    border-bottom: 1px dotted black;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-class">.tooltip</span> <span class="selector-class">.tooltiptext</span> &#123;</span></div><div class="line"><span class="undefined">    visibility: hidden;</span></div><div class="line"><span class="undefined">    width: 120px;</span></div><div class="line"><span class="undefined">    background-color: black;</span></div><div class="line"><span class="css">    <span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span></div><div class="line"><span class="undefined">    text-align: center;</span></div><div class="line"><span class="undefined">    border-radius: 6px;</span></div><div class="line"><span class="undefined">    padding: 5px 0;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="css">    <span class="comment">/* 定位 */</span></span></div><div class="line"><span class="undefined">    position: absolute;</span></div><div class="line"><span class="undefined">    z-index: 1;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-class">.tooltip</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.tooltiptext</span> &#123;</span></div><div class="line"><span class="undefined">    visibility: visible;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">style</span>=<span class="string">"text-align:center;"</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tooltip"</span>&gt;</span>鼠标移动到这</div><div class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"tooltiptext"</span>&gt;</span>提示文本<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>实例解析：<br>HTML) 使用容器元素 (like div) 并添加 “tooltip” 类。在鼠标移动到div 上时显示提示信息。提示文本放在内联函数上(如 span) 并使用class=”tooltiptext”。<br>CSS)tooltip 类使用 position:relative, 提示文本需要设置定位值 position:absolute。 注意: 接下来的实例会显示更多的定位效果。<br>tooltiptext 类用于实际的提示文本。模式是隐藏的，在鼠标移动到元素显示 。设置了一些宽度、背景色、字体色等样式。CSS3 border-radius 属性用于为提示框添加圆角。<br>:hover 选择器用于在鼠标移动到到指定元素div上时显示的提示。  </p>
<h3 id="图片廊"><a href="#图片廊" class="headerlink" title="图片廊"></a>图片廊</h3><p>以下是使用 CSS 创建图片廊：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span>  </div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-tag">div</span><span class="selector-class">.img</span> &#123;</span></div><div class="line"><span class="undefined">    margin: 5px;</span></div><div class="line"><span class="css">    <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#ccc</span>;</span></div><div class="line"><span class="undefined">    float: left;</span></div><div class="line"><span class="undefined">    width: 180px;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-tag">div</span><span class="selector-class">.img</span><span class="selector-pseudo">:hover</span> &#123;</span></div><div class="line"><span class="css">    <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#777</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-tag">div</span><span class="selector-class">.img</span> <span class="selector-tag">img</span> &#123;</span></div><div class="line"><span class="undefined">    width: 100%;</span></div><div class="line"><span class="undefined">    height: auto;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-tag">div</span><span class="selector-class">.desc</span> &#123;</span></div><div class="line"><span class="undefined">    padding: 15px;</span></div><div class="line"><span class="undefined">    text-align: center;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"responsive"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"img"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">href</span>=<span class="string">"http://static.runoob.com/images/demo/demo1.jpg"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://static.runoob.com/images/demo/demo1.jpg"</span> <span class="attr">alt</span>=<span class="string">"图片文本描述"</span> <span class="attr">width</span>=<span class="string">"300"</span> <span class="attr">height</span>=<span class="string">"200"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"desc"</span>&gt;</span>这里添加图片文本描述<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"responsive"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"img"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">href</span>=<span class="string">"http://static.runoob.com/images/demo/demo2.jpg"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://static.runoob.com/images/demo/demo2.jpg"</span> <span class="attr">alt</span>=<span class="string">"图片文本描述"</span> <span class="attr">width</span>=<span class="string">"300"</span> <span class="attr">height</span>=<span class="string">"200"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"desc"</span>&gt;</span>这里添加图片文本描述<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"responsive"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"img"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">href</span>=<span class="string">"http://static.runoob.com/images/demo/demo3.jpg"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://static.runoob.com/images/demo/demo3.jpg"</span> <span class="attr">alt</span>=<span class="string">"图片文本描述"</span> <span class="attr">width</span>=<span class="string">"300"</span> <span class="attr">height</span>=<span class="string">"200"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"desc"</span>&gt;</span>这里添加图片文本描述<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"responsive"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"img"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">href</span>=<span class="string">"http://static.runoob.com/images/demo/demo4.jpg"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://static.runoob.com/images/demo/demo4.jpg"</span> <span class="attr">alt</span>=<span class="string">"图片文本描述"</span> <span class="attr">width</span>=<span class="string">"300"</span> <span class="attr">height</span>=<span class="string">"200"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"desc"</span>&gt;</span>这里添加图片文本描述<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>叮：想到之前用的的博客排版，一直想做一个相册，其实这样就可以实现。  </p>
<h3 id="CSS-图像透明-不透明"><a href="#CSS-图像透明-不透明" class="headerlink" title="CSS 图像透明/不透明"></a>CSS 图像透明/不透明</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">img</span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">opacity</span><span class="selector-pseudo">:0.4</span>;</span></div><div class="line"><span class="undefined">  filter:alpha(opacity=40); /* 适用 IE8 及其更早版本 */</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">img</span><span class="selector-pseudo">:hover</span></span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">opacity</span><span class="selector-pseudo">:1.0</span>;</span></div><div class="line"><span class="undefined">  filter:alpha(opacity=100); /* 适用 IE8 及其更早版本 */</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>图片透明度<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>opacity 属性通常与 :hover 选择器一起使用，在鼠标移动到图片上后改变图片的透明度：<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"klematis.jpg"</span> <span class="attr">width</span>=<span class="string">"150"</span> <span class="attr">height</span>=<span class="string">"113"</span> <span class="attr">alt</span>=<span class="string">"klematis"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"/images/klematis2.jpg"</span> <span class="attr">width</span>=<span class="string">"150"</span> <span class="attr">height</span>=<span class="string">"113"</span> <span class="attr">alt</span>=<span class="string">"klematis"</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>注意:<span class="tag">&lt;/<span class="name">b</span>&gt;</span>在 IE 中必须声明 &amp;lt;!DOCTYPE&amp;gt; 才能保证 :hover 选择器能够有效。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="CSS-图像拼合技术"><a href="#CSS-图像拼合技术" class="headerlink" title="CSS 图像拼合技术"></a>CSS 图像拼合技术</h3><p>图像拼合就是单个图像的集合。<br>有许多图像的网页可能需要很长的时间来加载和生成多个服务器的请求。<br>使用图像拼合会降低服务器的请求数量，并节省带宽。  </p>
<h4 id="简单实例"><a href="#简单实例" class="headerlink" title="简单实例"></a>简单实例</h4><p>与其使用三个独立的图像，不如我们使用这种单个图像（”img_navsprites.gif”）：<br><img src="http://www.runoob.com/images/img_navsprites.gif" alt="img"><br>有了CSS，可以只显示需要的图像的一部分。在下面的例子CSS指定显示”img_navsprites.gif” 的图像的一部分：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span>  </div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-tag">img</span><span class="selector-class">.home</span> &#123;</span></div><div class="line"><span class="undefined">    width: 46px;</span></div><div class="line"><span class="undefined">    height: 44px;</span></div><div class="line"><span class="undefined">    background: url(/images/img_navsprites.gif) 0 0;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-tag">img</span><span class="selector-class">.next</span> &#123;</span></div><div class="line"><span class="undefined">    width: 43px;</span></div><div class="line"><span class="undefined">    height: 44px;</span></div><div class="line"><span class="undefined">    background: url(/images/img_navsprites.gif) -91px 0;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"home"</span> <span class="attr">src</span>=<span class="string">"/images/img_trans.gif"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"next"</span> <span class="attr">src</span>=<span class="string">"/images/img_trans.gif"</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>实例解析：<br>img class=”home” src=”img_trans.gif” / -因为不能为空,src属性只定义了一个小的透明图像。显示的图像将是我们在CSS中指定的背景图像宽度：46px;高度：44px; - 定义我们使用的那部分图像background:url(img_navsprites.gif) 0 0;定义背景图像和它的位置（左0px，顶部0px）这是使用图像拼合最简单的方法，现在我们使用链接和悬停效果。  </p>
<h3 id="CSS-媒体类型"><a href="#CSS-媒体类型" class="headerlink" title="CSS 媒体类型"></a>CSS 媒体类型</h3><p>一些CSS属性只设计了某些媒体。例如”voice-family”属性是专为听觉用户代理。其他一些属性可用于不同的媒体类型。例如，”font-size”属性可用于屏幕和印刷媒体，但有不同的值。屏幕和纸上的文件不同，通常需要一个更大的字体，sans - serif字体比较适合在屏幕上阅读，而serif字体更容易在纸上阅读。  </p>
<h4 id="media-规则"><a href="#media-规则" class="headerlink" title="@media 规则"></a>@media 规则</h4><p>@media 规则允许在相同样式表为不同媒体设置不同的样式。<br>在下面的例子告诉我们浏览器屏幕上显示一个14像素的Verdana字体样式。但是如果页面打印，将是10个像素的Times字体。请注意，font-weight在屏幕上和纸上设置为粗体：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="css">@<span class="keyword">media</span> screen</span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">    <span class="selector-tag">p</span><span class="selector-class">.test</span> &#123;<span class="attribute">font-family</span>:verdana,sans-serif;<span class="attribute">font-size</span>:<span class="number">14px</span>;&#125;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="css">@<span class="keyword">media</span> print</span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">    <span class="selector-tag">p</span><span class="selector-class">.test</span> &#123;<span class="attribute">font-family</span>:times,serif;<span class="attribute">font-size</span>:<span class="number">10px</span>;&#125;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="css">@<span class="keyword">media</span> screen,print</span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">    <span class="selector-tag">p</span><span class="selector-class">.test</span> &#123;<span class="attribute">font-weight</span>:bold;&#125;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">....</div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="CSS-属性-选择器"><a href="#CSS-属性-选择器" class="headerlink" title="CSS 属性 选择器"></a>CSS 属性 选择器</h3><h4 id="具有特定属性的HTML元素样式"><a href="#具有特定属性的HTML元素样式" class="headerlink" title="具有特定属性的HTML元素样式"></a>具有特定属性的HTML元素样式</h4><p>具有特定属性的HTML元素样式不仅仅是class和id。<br>注意：IE7和IE8需声明!DOCTYPE才支持属性选择器！IE6和更低的版本不支持属性选择器。  </p>
<h4 id="属性选择器"><a href="#属性选择器" class="headerlink" title="属性选择器"></a>属性选择器</h4><p>下面的例子是把包含标题（title）的所有元素变为蓝色：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-attr">[title]</span></span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css"><span class="selector-tag">color</span><span class="selector-pseudo">:blue</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>Will apply to:<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">title</span>=<span class="string">"Hello world"</span>&gt;</span>Hello world<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">title</span>=<span class="string">"runoob.com"</span> <span class="attr">href</span>=<span class="string">"http://www.runoob.com/"</span>&gt;</span>runoob.com<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>Will not apply to:<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Hello!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="属性和值选择器"><a href="#属性和值选择器" class="headerlink" title="属性和值选择器"></a>属性和值选择器</h4><p>下面的实例改变了标题title=’runoob’元素的边框样式:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span>  </div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-attr">[title=runoob]</span></span></div><div class="line"><span class="undefined">&#123;</span></div><div class="line"><span class="css">  <span class="selector-tag">border</span><span class="selector-pseudo">:5px</span> <span class="selector-tag">solid</span> <span class="selector-tag">green</span>;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>将适用:<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">title</span>=<span class="string">"runoob"</span> <span class="attr">src</span>=<span class="string">"logo.png"</span> <span class="attr">width</span>=<span class="string">"270"</span> <span class="attr">height</span>=<span class="string">"50"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">title</span>=<span class="string">"runoob"</span> <span class="attr">href</span>=<span class="string">"http://www.runoob.com/"</span>&gt;</span>runoob<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>将不适用:<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">title</span>=<span class="string">"greeting"</span>&gt;</span>Hi!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"runoob"</span> <span class="attr">href</span>=<span class="string">"http://www.runoob.com/"</span>&gt;</span>runoob<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="CSS-总结"><a href="#CSS-总结" class="headerlink" title="CSS 总结"></a>CSS 总结</h3><p>CSS创建样式表来同时控制多重页面的样式和布局。使用CSS来添加背景、格式化文本、以及格式化边框，并定义元素的填充和边距。<br>使用CSS定位元素、控制元素的可见性和尺寸、设置元素的形状、将一个元素置于另一个之后，以及向某些选择器添加特殊的效果，比如链接。  </p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;HTML已经做了简单了解，接下来是CSS的。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="https://x-nicolo.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="前端" scheme="https://x-nicolo.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="CSS" scheme="https://x-nicolo.github.io/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>前端入门学习--HTML</title>
    <link href="https://x-nicolo.github.io/2018/01/23/%E5%89%8D%E7%AB%AF%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0-HTML/"/>
    <id>https://x-nicolo.github.io/2018/01/23/前端入门学习-HTML/</id>
    <published>2018-01-23T03:10:30.000Z</published>
    <updated>2018-01-23T03:10:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>写在前面。<br>前端知识真的还是比较有用的。一直要把前端的学习提上日程，因为各种事情各种拖延，写爬虫的时候也是捎带学习前端的东西，还是需要系统的了解下。<br><a id="more"></a><br>All from <a href="http://www.w3school.com.cn/html/html_links.asp" target="_blank" rel="external">W3school.</a></p>
<h3 id="HTML简介"><a href="#HTML简介" class="headerlink" title="HTML简介"></a>HTML简介</h3><p>HTML是用来描述网页的一种语言。指的是超文本标记语言（Hyper Text Markup Language）,不是一种编程语言，而是一种标记语言。</p>
<h4 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h4><p>HTML标签是由尖括号包围的关键词比如html，便签通常是成对出现的，比如<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span>和<span class="tag">&lt;/<span class="name">b</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>第一个是开始，第二个标签是结束。  </p>
<h4 id="文档-网页"><a href="#文档-网页" class="headerlink" title="文档=网页"></a>文档=网页</h4><p>HTML文档描述网页，包含HTML标签和纯文本。Web浏览器的作用就是读取HTML文档，并以网页的形式显示他们。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>hello world<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个段落，嗯，我说他是他就是<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="例子解释"><a href="#例子解释" class="headerlink" title="例子解释"></a>例子解释</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span>与<span class="tag">&lt;/<span class="name">hrml</span>&gt;</span>之间的文本描述网页  </div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>与<span class="tag">&lt;/<span class="name">body</span>&gt;</span>之间的文本是可见的页面内容  </div><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>与<span class="tag">&lt;/<span class="name">h1</span>&gt;</span>之间的文本被显示为标题  </div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>与<span class="tag">&lt;/<span class="name">p</span>&gt;</span>之间的文本被显示为段落</div></pre></td></tr></table></figure>
<h3 id="HTML-基础"><a href="#HTML-基础" class="headerlink" title="HTML 基础"></a>HTML 基础</h3><h4 id="HTML-标题"><a href="#HTML-标题" class="headerlink" title="HTML 标题"></a>HTML 标题</h4><p>HTML标题是通过h1-h6等标签进行定义的。  </p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>这是个标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>嗯，这还是个标题<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>没错，又是一个标题<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="HTML-段落"><a href="#HTML-段落" class="headerlink" title="HTML 段落"></a>HTML 段落</h4><p>HTML段落通过p标签进行定义。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>段落一<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>段落二<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="HTML-链接"><a href="#HTML-链接" class="headerlink" title="HTML 链接"></a>HTML 链接</h4><p>HTML链接是通过a进行定义的。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://x-nicolo.github.io/"</span>&gt;</span>这是肖洒的博客<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>注释：在href属性中指定链接的地址。</p>
<h4 id="HTML-图像"><a href="#HTML-图像" class="headerlink" title="HTML 图像"></a>HTML 图像</h4><p>HTML图像是通过img标签进行定义的。  </p>
<figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;img <span class="attribute">src</span>=<span class="string">"img.jpg"</span> <span class="attribute">width</span>=<span class="string">"104"</span> <span class="attribute">height</span>=<span class="string">"142"</span> /&gt;</div></pre></td></tr></table></figure>
<p>注释：图像的名称和尺寸是以属性的形式提供的。</p>
<h3 id="HTML-元素"><a href="#HTML-元素" class="headerlink" title="HTML 元素"></a>HTML 元素</h3><p>HTML元素指的是从开始标签到结束标签的所有代码。 </p>
<h3 id="HTML-属性"><a href="#HTML-属性" class="headerlink" title="HTML 属性"></a>HTML 属性</h3><p>HTML标签可以拥有属性。属性提供了有关HTML元素的更多信息。<br>属性总是以名称/值对的形式出现。比如：name=”value”.<br>属性总是在HTML元素的开始标签中规定。</p>
<h4 id="属性例子"><a href="#属性例子" class="headerlink" title="属性例子"></a>属性例子</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="number">1</span>.  </div><div class="line">&lt;<span class="selector-tag">h1</span> align=<span class="string">"center"</span>&gt;拥有关于对齐方式的附加信息。  </div><div class="line"><span class="number">2</span>.  </div><div class="line">&lt;<span class="selector-tag">body</span> bgcolor=<span class="string">"yellow"</span>&gt;拥有关于背景颜色的附加信息。  </div><div class="line"><span class="number">3</span>.  </div><div class="line">&lt;<span class="selector-tag">table</span> <span class="attribute">border</span>=<span class="string">"1"</span>&gt;拥有关于表格边框的附加信息</div></pre></td></tr></table></figure>
<h3 id="HTML-标题-1"><a href="#HTML-标题-1" class="headerlink" title="HTML 标题"></a>HTML 标题</h3><p>标题是通过h1-h6等标签进行定义的。<br>h1定义最大的标题，h6定义最小的标题。  </p>
<h4 id="HTML-水平线"><a href="#HTML-水平线" class="headerlink" title="HTML 水平线"></a>HTML 水平线</h4><figure class="highlight apache"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="section">&lt;hr /&gt;</span></div></pre></td></tr></table></figure>
<p>标签在HTML页面中创建水平线hr元素可用与分隔内容。<br>例子：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是第一段<span class="tag">&lt;/<span class="name">p</span>&gt;</span>  </div><div class="line"><span class="tag">&lt;<span class="name">hr</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是第二段<span class="tag">&lt;/<span class="name">p</span>&gt;</span>  </div><div class="line"><span class="tag">&lt;<span class="name">hr</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是第三段<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div></pre></td></tr></table></figure>
<p>提示：使用水平线 (hr 标签)来分隔文章中的小节是一个办法（但并不是唯一的办法）。  </p>
<h4 id="HTML-注释"><a href="#HTML-注释" class="headerlink" title="HTML 注释"></a>HTML 注释</h4><p>科技将注释插入HTML代码中。<br>例子：  </p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!--这里是注释，不显示--&gt;</span></div></pre></td></tr></table></figure>
<h4 id="HTML-段落-1"><a href="#HTML-段落-1" class="headerlink" title="HTML 段落"></a>HTML 段落</h4><p>段落通过p标签定义。  </p>
<h4 id="HTML-折行"><a href="#HTML-折行" class="headerlink" title="HTML 折行"></a>HTML 折行</h4><p>不产生一个新段落的情况下进行换行。  </p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我就是<span class="tag">&lt;<span class="name">br</span> /&gt;</span>想试试<span class="tag">&lt;<span class="name">br</span> /&gt;</span>这个功能<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div></pre></td></tr></table></figure>
<p>注：br / 元素是一个空的 HTML 元素。由于关闭标签没有任何意义，因此它没有结束标签。<br>注:浏览器忽略了源代码中的排版（省略了多余的空格和换行）  </p>
<h3 id="HTML-样式"><a href="#HTML-样式" class="headerlink" title="HTML 样式"></a>HTML 样式</h3><p>style属性用于改变HTML元素的样式。  </p>
<h4 id="HTML的style属性"><a href="#HTML的style属性" class="headerlink" title="HTML的style属性"></a>HTML的style属性</h4><p>style属性的作用：提供了一种改变所有HTML元素的样式的通用方法。<br>样式是 HTML 4 引入的，它是一种新的首选的改变 HTML 元素样式的方式。通过 HTML 样式，能够通过使用style属性直接将样式添加到HTML元素，或者间接地在独立的样式表中（CSS 文件）进行定义。  </p>
<h4 id="HTML-样式实例-背景颜色"><a href="#HTML-样式实例-背景颜色" class="headerlink" title="HTML 样式实例-背景颜色"></a>HTML 样式实例-背景颜色</h4><p>background-color属性为元素定义 了背景颜色：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">style</span>=<span class="string">"background-color:yellow"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">style</span>=<span class="string">"background-color:red"</span>&gt;</span>这里是标题<span class="tag">&lt;/<span class="name">h2</span>&gt;</span>  </div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"background-color:green"</span>&gt;</span>这里是一个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>注意：style属性淘汰了旧的bgcolor属性。  </p>
<h4 id="HTML-样式实例-字体、颜色和尺寸"><a href="#HTML-样式实例-字体、颜色和尺寸" class="headerlink" title="HTML 样式实例-字体、颜色和尺寸"></a>HTML 样式实例-字体、颜色和尺寸</h4><p>front-family、color以及front-size属性分别定义元素中文字的字体系列、颜色和字体大小。<br><figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">style</span>=<span class="string">"front-family:verdana"</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"front-family:arial;color:red;font-size:20px;"</span>段落&lt;/<span class="attr">p</span>&gt;</span></span></div><div class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></div><div class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></div></pre></td></tr></table></figure></p>
<h4 id="HTML-样式实例-文本对齐"><a href="#HTML-样式实例-文本对齐" class="headerlink" title="HTML 样式实例-文本对齐"></a>HTML 样式实例-文本对齐</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">style</span>=<span class="string">"text-align:center"</span>&gt;</span>又是标题啊<span class="tag">&lt;/<span class="name">h1</span>&gt;</span>  </div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>听说上面的标题会居中<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="HTML-引用"><a href="#HTML-引用" class="headerlink" title="HTML 引用"></a>HTML 引用</h3><h4 id="HTML短的引用"><a href="#HTML短的引用" class="headerlink" title="HTML短的引用"></a>HTML短的引用</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>下面是引用：<span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">q</span>&gt;</span>上面说的对，我是引用<span class="tag">&lt;/<span class="name">q</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="HTML-长应用"><a href="#HTML-长应用" class="headerlink" title="HTML 长应用"></a>HTML 长应用</h4><p>HTML blockquote 元素定义被引用的节。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>下面的这个引用听说很长<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span>  </div><div class="line"><span class="tag">&lt;<span class="name">blockquote</span>&gt;</span>  </div><div class="line">我就是那个很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长的引用。  </div><div class="line"><span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="HTML-缩略词abbr"><a href="#HTML-缩略词abbr" class="headerlink" title="HTML 缩略词abbr"></a>HTML 缩略词abbr</h4><p>HTML abbr 元素定义缩写或首字母缩略语。<br>例子：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">abbr</span> <span class="attr">title</span>=<span class="string">"World Health Organization"</span>&gt;</span>WHO<span class="tag">&lt;/<span class="name">abbr</span>&gt;</span> 成立于 1948 年。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="HTML-计算机代码元素"><a href="#HTML-计算机代码元素" class="headerlink" title="HTML 计算机代码元素"></a>HTML 计算机代码元素</h3><h4 id="HTML-键盘格式"><a href="#HTML-键盘格式" class="headerlink" title="HTML 键盘格式"></a>HTML 键盘格式</h4><p>kbd 元素定义键盘输入<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>打开一个文件，选择<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">kbd</span>&gt;</span>File|Open...<span class="tag">&lt;/<span class="name">kbd</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="HTML-样本格式"><a href="#HTML-样本格式" class="headerlink" title="HTML 样本格式"></a>HTML 样本格式</h4><p>HTML code 元素定义编程代码示例。<br>注意：code 元素不保留多余的空格和折行。  </p>
<p>例子：<br><figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="params">&lt;p&gt;</span>Coding Example:<span class="params">&lt;/p&gt;</span></div><div class="line"><span class="params">&lt;code&gt;</span></div><div class="line">var person = &#123;</div><div class="line"><span class="symbol">    firstName:</span><span class="string">"Bill"</span>,</div><div class="line"><span class="symbol">    lastName:</span><span class="string">"Gates"</span>,</div><div class="line"><span class="symbol">    age:</span><span class="number">50</span>,</div><div class="line"><span class="symbol">    eyeColor:</span><span class="string">"bule"</span></div><div class="line">&#125;</div><div class="line"><span class="params">&lt;/code&gt;</span></div></pre></td></tr></table></figure></p>
<p>如果需要保留多余的空格和折行，必须在pre元素中包围代码。<br><figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="params">&lt;p&gt;</span>Coding Example<span class="params">&lt;/p&gt;</span></div><div class="line"><span class="params">&lt;code&gt;</span></div><div class="line"><span class="params">&lt;pre&gt;</span></div><div class="line">var person = &#123;</div><div class="line"><span class="symbol">    firstName:</span><span class="string">"Bill"</span>,</div><div class="line"><span class="symbol">    lastName:</span><span class="string">"Gates"</span>,</div><div class="line"><span class="symbol">    age:</span><span class="number">50</span>,</div><div class="line"><span class="symbol">    eyeColor:</span><span class="string">"bule"</span></div><div class="line">&#125;</div><div class="line"><span class="params">&lt;/pre&gt;</span></div><div class="line"><span class="params">&lt;/code&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="HTML-变量格式化"><a href="#HTML-变量格式化" class="headerlink" title="HTML 变量格式化"></a>HTML 变量格式化</h4><p>var 元素定义数学变量<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;p&gt;Einstein wrote:<span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></div><div class="line"></div><div class="line">&lt;p&gt;<span class="xml"><span class="tag">&lt;<span class="name">var</span>&gt;</span>E = m c<span class="tag">&lt;<span class="name">sup</span>&gt;</span>2<span class="tag">&lt;/<span class="name">sup</span>&gt;</span><span class="tag">&lt;/<span class="name">var</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></div></pre></td></tr></table></figure></p>
<h3 id="HTML-注释-1"><a href="#HTML-注释-1" class="headerlink" title="HTML 注释"></a>HTML 注释</h3><p><strong>注释标签&lt;！–与–&gt;用于在HTML插入注释</strong><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!--这里是注释，什么意思呢，就是写在这里的东西都不会显示，所以你懂了吧，注释注释////--&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="HTML-CSS"><a href="#HTML-CSS" class="headerlink" title="HTML CSS"></a>HTML CSS</h3><h4 id="如何使用样式"><a href="#如何使用样式" class="headerlink" title="如何使用样式"></a>如何使用样式</h4><p>当浏览器读到一个样式表，它就会按照这个样式来度文档进行格式化。有以下三种方式：  </p>
<h5 id="外部样式表"><a href="#外部样式表" class="headerlink" title="外部样式表"></a>外部样式表</h5><p>当样式需要被应用到很多页面的时候，外部样式表将是理想的选择。使用外部样式表，你就可以通过更改一个文件来改变整个站点的外观。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"mystyle.css"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h5 id="内部样式表"><a href="#内部样式表" class="headerlink" title="内部样式表"></a>内部样式表</h5><p>当单个文件需要特别样式时，就可以使用内部样式表。可以在head部分通过style标签定义内部样式表。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>= <span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-tag">body</span>&#123;<span class="attribute">background-color</span>:red&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">p</span>&#123;<span class="attribute">margin-left</span>:<span class="number">20px</span>&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h5 id="内联样式"><a href="#内联样式" class="headerlink" title="内联样式"></a>内联样式</h5><p>当特殊的样式需要应用到个别元素时，就可以使用内联样式。使用内联样式的方法是在相关的标签中使用样式属性，样式属性可以包含任何CSS属性，下面的例子显示如何改变段落的颜色和左外边距。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">P</span> <span class="attr">style</span> = <span class="string">"color:red;margin-left:20px"</span>&gt;</span></div><div class="line">这是一个段落。  </div><div class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="HTML-链接-1"><a href="#HTML-链接-1" class="headerlink" title="HTML  链接"></a>HTML  链接</h3><p>HTML 使用超级链接与网络上的另一个文档相连。<br>几乎可以在所有的网页中找到链接。点击链接可以从一张页面跳转到另一张页面。  </p>
<h4 id="HTML-链接语法"><a href="#HTML-链接语法" class="headerlink" title="HTML 链接语法"></a>HTML 链接语法</h4><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;<span class="keyword">a</span> href=<span class="string">"url"</span>&gt;link <span class="keyword">text</span>&lt;/<span class="keyword">a</span>&gt;</div></pre></td></tr></table></figure>
<p>href属性规定链接的目标。开始标签和结束标签之间的文字被作为超链接来显示。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://x-nicolo.github.io/"</span>&gt;</span>肖洒的博客<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="HTML-链接-target属性"><a href="#HTML-链接-target属性" class="headerlink" title="HTML 链接-target属性"></a>HTML 链接-target属性</h4><p>使用Target属性，你可以定义被链接的文档显示在何处。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span> = <span class="string">"http://x-nicolo.github.io"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>访问肖洒的博客！<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="HTML-链接-name属性"><a href="#HTML-链接-name属性" class="headerlink" title="HTML 链接-name属性"></a>HTML 链接-name属性</h4><p>name 属性规定锚（anchor）的名称。<br>您可以使用name属性创建HTML页面中的书签.书签不会以任何特殊方式显示，它对读者是不可见的。当使用命名锚（named anchors）时，我们可以创建直接跳至该命名锚（比如页面中某个小节）的链接，这样使用者就无需不停地滚动页面来寻找他们需要的信息了。  </p>
<h5 id="命名锚的语法："><a href="#命名锚的语法：" class="headerlink" title="命名锚的语法："></a>命名锚的语法：</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span> = <span class="string">"label"</span>&gt;</span>锚<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div></pre></td></tr></table></figure>
<p>例子：<br>首先，在HTML文档中对锚进行命名(创建一个书签)：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">"tips"</span>&gt;</span>基本的注意事项-有用的提示<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>然后，在同一个文档中创建指向该锚的链接：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#tips"</span>&gt;</span>有用的提示<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="HTML-图像-1"><a href="#HTML-图像-1" class="headerlink" title="HTML 图像"></a>HTML 图像</h3><p><strong>图像标签img 和源属性src</strong><br>在HTML中，图像由img标签定义，img是空标签，只包含属性，并且没有闭合标签。<br>要在页面上显示图像，需要使用源属性src，源属性的值是图像的URL地址。<br>定义图像的语法是：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;<span class="selector-tag">img</span> src = <span class="string">"url"</span> /&gt;</div></pre></td></tr></table></figure></p>
<p>URL指存储图像的位置。如果名为 “boat.gif” 的图像位于www.w3school.com.cn的images 目录中，那么其URL为./images/boat.gif  </p>
<h4 id="替换文本属性"><a href="#替换文本属性" class="headerlink" title="替换文本属性"></a>替换文本属性</h4><p>alt 属性用来为图像定义一串预备的可替换的文本。替换文本属性的值是用户定义的。<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;img <span class="attribute">src</span>=<span class="string">"boat.gif"</span> <span class="attribute">alt</span>=<span class="string">"Big Boat"</span>&gt;</div></pre></td></tr></table></figure></p>
<p>在浏览器无法载入图像时，替换文本属性告诉读者她们失去的信息。此时，浏览器将显示这个替代性的文本而不是图像。为页面上的图像都加上替换文本属性是个好习惯，这样有助于更好的显示信息，并且对于那些使用纯文本浏览器的人来说是非常有用的。  </p>
<h4 id="HTML背景图片"><a href="#HTML背景图片" class="headerlink" title="HTML背景图片"></a>HTML背景图片</h4><p>本例演示如何向HTML页面添加背景图片。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">background</span>=<span class="string">"/i/eg_background.jpg"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>图像背景<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>gif 和 jpg 文件均可用作 HTML 背景。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>如果图像小于页面，图像会进行重复。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="HTML-排列图片"><a href="#HTML-排列图片" class="headerlink" title="HTML 排列图片"></a>HTML 排列图片</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>未设置对齐方式的图像：<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>图像 <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span> =<span class="string">"/i/eg_cute.gif"</span>&gt;</span> 在文本中<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>已设置对齐方式的图像：<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>图像 <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"/i/eg_cute.gif"</span> <span class="attr">align</span>=<span class="string">"bottom"</span>&gt;</span> 在文本中<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>图像 <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span> =<span class="string">"/i/eg_cute.gif"</span> <span class="attr">align</span>=<span class="string">"middle"</span>&gt;</span> 在文本中<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>图像 <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span> =<span class="string">"/i/eg_cute.gif"</span> <span class="attr">align</span>=<span class="string">"top"</span>&gt;</span> 在文本中<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>请注意，bottom 对齐方式是默认的对齐方式。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="HTML-浮动图像"><a href="#HTML-浮动图像" class="headerlink" title="HTML 浮动图像"></a>HTML 浮动图像</h4><p>如何使图片浮动至段落的左边或右边。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span> =<span class="string">"/i/eg_cute.gif"</span> <span class="attr">align</span> =<span class="string">"left"</span>&gt;</span> </div><div class="line">带有图像的一个段落。图像的 align 属性设置为 "left"。图像将浮动到文本的左侧。</div><div class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span> =<span class="string">"/i/eg_cute.gif"</span> <span class="attr">align</span> =<span class="string">"right"</span>&gt;</span> </div><div class="line">带有图像的一个段落。图像的 align 属性设置为 "right"。图像将浮动到文本的右侧。</div><div class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="HTML-调整图像大小"><a href="#HTML-调整图像大小" class="headerlink" title="HTML 调整图像大小"></a>HTML 调整图像大小</h4><p>如何将图片调整到不同的尺寸.  </p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&lt;html&gt;</div><div class="line">&lt;body&gt;</div><div class="line">&lt;<span class="selector-tag">img</span> src=<span class="string">"/i/eg_mouse.jpg"</span> <span class="attribute">width</span>=<span class="string">"50"</span> height=<span class="string">"50"</span>&gt;</div><div class="line">&lt;br /&gt;</div><div class="line">&lt;<span class="selector-tag">img</span> src=<span class="string">"/i/eg_mouse.jpg"</span> <span class="attribute">width</span>=<span class="string">"100"</span> height=<span class="string">"100"</span>&gt;</div><div class="line">&lt;br /&gt;</div><div class="line">&lt;<span class="selector-tag">img</span> src=<span class="string">"/i/eg_mouse.jpg"</span> <span class="attribute">width</span>=<span class="string">"200"</span> height=<span class="string">"200"</span>&gt;</div><div class="line">&lt;p&gt;通过改变 <span class="selector-tag">img</span> 标签的 <span class="string">"height"</span> 和 <span class="string">"width"</span> 属性的值，您可以放大或缩小图像。&lt;/p&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
<h4 id="HTML-制作图像链接"><a href="#HTML-制作图像链接" class="headerlink" title="HTML 制作图像链接"></a>HTML 制作图像链接</h4><p>如何将图像作为一个链接使用。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></div><div class="line">可以把图像作为链接来使用：</div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/example/html/lastpage.html"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">border</span>=<span class="string">"0"</span> <span class="attr">src</span>=<span class="string">"/i/eg_buttonnext.gif"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="HTML-表格"><a href="#HTML-表格" class="headerlink" title="HTML 表格"></a>HTML 表格</h3><p>表格由table标签来定义。每个表格均有若干行（由tr标签定义），每行被分割为若干单元格（由td标签定义）。字母td指表格数据（table data），即数据单元格的内容。数据单元格可以包含文本、图片、列表、段落、表单、水平线、表格等等。  </p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>row 1, cell 1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>row 1, cell 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>row 2, cell 1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>row 2, cell 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="HTML-表格和边框属性"><a href="#HTML-表格和边框属性" class="headerlink" title="HTML 表格和边框属性"></a>HTML 表格和边框属性</h4><p>使用边框属性来显示一个带有边框的表格：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>Row 1, cell 1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>Row 1, cell 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="HTML-表格的表头"><a href="#HTML-表格的表头" class="headerlink" title="HTML  表格的表头"></a>HTML  表格的表头</h4><p>表格的表头使用th标签进行定义。大多数浏览器会把表头显示为粗体居中的文本：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>Heading<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>Another Heading<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>row 1, cell 1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>row 1, cell 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>row 2, cell 1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>row 2, cell 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="HTML-表格中的空单元格"><a href="#HTML-表格中的空单元格" class="headerlink" title="HTML 表格中的空单元格"></a>HTML 表格中的空单元格</h4><p>在一些浏览器中，没有内容的表格单元显示得不太好。如果某个单元格是空的（没有内容），浏览器可能无法显示出这个单元格的边框。比如：  </p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>row 1, cell 1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>row 1, cell 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>row 2, cell 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></div></pre></td></tr></table></figure>
<p>注意：这个空的单元格的边框没有被显示出来。为了避免这种情况，在空单元格中添加一个 <strong>空格占位符</strong>，就可以将边框显示出来。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>row 1, cell 1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>row 1, cell 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>&amp;nbsp;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>row 2, cell 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="跨行或跨列的表格单元格"><a href="#跨行或跨列的表格单元格" class="headerlink" title="跨行或跨列的表格单元格"></a>跨行或跨列的表格单元格</h4><p>如何定义跨行或跨列的表格单元格<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>横跨两列的单元格：<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">th</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span>电话<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>Bill Gates<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>555 77 854<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>555 77 855<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>横跨两行的单元格：<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>Bill Gates<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">th</span> <span class="attr">rowspan</span>=<span class="string">"2"</span>&gt;</span>电话<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>555 77 854<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>555 77 855<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="HTML-列表"><a href="#HTML-列表" class="headerlink" title="HTML 列表"></a>HTML 列表</h3><p>HTML支持有序、无序和定义列表。  </p>
<h4 id="HTML-无序列表"><a href="#HTML-无序列表" class="headerlink" title="HTML 无序列表"></a>HTML 无序列表</h4><p>无序列表是一个项目的列表，此列项目使用粗体原点进行标记。<br>无序列表使用 ul 标签。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>牛奶<span class="tag">&lt;<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>咖啡<span class="tag">&lt;<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="HTML-有序列表"><a href="#HTML-有序列表" class="headerlink" title="HTML 有序列表"></a>HTML 有序列表</h4><p>自定义列表不仅仅是一列项目，而是项目及其注释的组合。<br>自定义列表以 dl 标签开始，每个自定义列表项以 dt开始，每个自定义列表项的定义以 dd 开始。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dt</span>&gt;</span>Coffee<span class="tag">&lt;/<span class="name">dt</span>&gt;</span>  </div><div class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span>-black hot drink<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dt</span>&gt;</span>-white cold drink<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="HTML-区块"><a href="#HTML-区块" class="headerlink" title="HTML 区块"></a>HTML 区块</h3><p>HTML可以通过 div 和 span将元素组合起来。  </p>
<h4 id="HTML-区块元素"><a href="#HTML-区块元素" class="headerlink" title="HTML 区块元素"></a>HTML 区块元素</h4><p>块级元素在浏览器显示时，通常会以新行来开始。<br>例如 h1 p ul table  </p>
<h4 id="HTML-内联元素"><a href="#HTML-内联元素" class="headerlink" title="HTML 内联元素"></a>HTML 内联元素</h4><p>内联元素在显示时通常不会以新行开始。  </p>
<h4 id="HTML-div-元素"><a href="#HTML-div-元素" class="headerlink" title="HTML div 元素"></a>HTML div 元素</h4><p>div 是块级元素，可用于组合其他HTML元素的容器。  </p>
<h4 id="HTML-span-元素"><a href="#HTML-span-元素" class="headerlink" title="HTML span 元素"></a>HTML span 元素</h4><p>HTML span 元素是内联元素，可用作文本容器。  </p>
<h3 id="HTML-布局"><a href="#HTML-布局" class="headerlink" title="HTML 布局"></a>HTML 布局</h3><p>大多数网站可以使用 <div> 或者 <table> 元素来创建多列。CSS 用于对元素进行定位，或者为页面创建背景以及色彩丰富的外观  </table></div></p>
<h4 id="HTML-布局-使用-div元素"><a href="#HTML-布局-使用-div元素" class="headerlink" title="HTML 布局-使用 div元素"></a>HTML 布局-使用 div元素</h4><p>例子：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Nicolo<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"container"</span> <span class="attr">style</span>=<span class="string">"width:500px"</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"header"</span> <span class="attr">style</span>=<span class="string">"background-color:#FFA500;"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">style</span>=<span class="string">"margin-bottom:0;"</span>&gt;</span>主要的网页标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"menu"</span> <span class="attr">style</span>=<span class="string">"background-color:#FFD700;height:200px;width:100px;float:left;"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span>菜单<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">HTML<span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">CSS<span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">JavaScript<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"content"</span> <span class="attr">style</span>=<span class="string">"background-color:#EEEEEE;height:200px;width:400px;float:left;"</span>&gt;</span></div><div class="line">内容在这里<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"footer"</span> <span class="attr">style</span>=<span class="string">"background-color:#FFA500;clear:both;text-align:center;"</span>&gt;</span></div><div class="line">版权 © runoob.com<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="HTML-表单"><a href="#HTML-表单" class="headerlink" title="HTML 表单"></a>HTML 表单</h3><p>HTML表单用于收集不同类型的用户输入。<br>表单是一个包含表单元素的区域。表单元素是允许用户在表单中输入内容,比如：文本域(textarea)、下拉列表、单选框(radio-buttons)、复选框(checkboxes)等等。<br>表单使用表单标签 <form> 来设置:  </form></p>
<h4 id="HTML-表单-输入元素"><a href="#HTML-表单-输入元素" class="headerlink" title="HTML 表单-输入元素"></a>HTML 表单-输入元素</h4><p>多数情况下被用到的表单标签是输入标签。input.<br>输入类型是由类型属性定义的，大多数经常被用到的输入类型如下。<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;<span class="keyword">form</span>&gt;</div><div class="line">First name: &lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">"text"</span> name=<span class="string">"firstname"</span>&gt;&lt;<span class="keyword">br</span>&gt;</div><div class="line">Last name: &lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">"text"</span> name=<span class="string">"lastname"</span>&gt;</div><div class="line">&lt;/<span class="keyword">form</span>&gt;</div></pre></td></tr></table></figure></p>
<h4 id="密码字段"><a href="#密码字段" class="headerlink" title="密码字段"></a>密码字段</h4><p>密码字段通过标签 input type=”password”来定义。<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;<span class="keyword">form</span>&gt;</div><div class="line">Password:&lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">"password"</span> name=<span class="string">"pwd"</span>&gt;</div><div class="line">&lt;/<span class="keyword">form</span>&gt;</div></pre></td></tr></table></figure></p>
<h4 id="单选按钮"><a href="#单选按钮" class="headerlink" title="单选按钮"></a>单选按钮</h4><p>input type=”radio” 标签定义了表单单选边框选项。<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;<span class="keyword">form</span>&gt;</div><div class="line">&lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">"radio"</span> name=<span class="string">"sex"</span> value=<span class="string">"male"</span>&gt;Male&lt;<span class="keyword">br</span>&gt;</div><div class="line">&lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">"radio"</span> name=<span class="string">"sex"</span> value=<span class="string">"female"</span>&gt;Female</div><div class="line">&lt;/<span class="keyword">form</span>&gt;</div></pre></td></tr></table></figure></p>
<h4 id="复选框"><a href="#复选框" class="headerlink" title="复选框"></a>复选框</h4><p>input type=”checkbox” 定义了复选框. 用户需要从若干给定的选择中选取一个或若干选项。</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;form&gt;</div><div class="line">&lt;<span class="selector-tag">input</span> type=<span class="string">"checkbox"</span> name=<span class="string">"vehicle"</span> value=<span class="string">"Bike"</span>&gt;I have <span class="selector-tag">a</span> bike&lt;br&gt;</div><div class="line">&lt;<span class="selector-tag">input</span> type=<span class="string">"checkbox"</span> name=<span class="string">"vehicle"</span> value=<span class="string">"Car"</span>&gt;I have <span class="selector-tag">a</span> car </div><div class="line">&lt;/form&gt;</div></pre></td></tr></table></figure>
<h4 id="提交按钮"><a href="#提交按钮" class="headerlink" title="提交按钮"></a>提交按钮</h4><p>input type=”submit”定义了提交按钮.<br>当用户单击确认按钮时，表单的内容会被传送到另一个文件。表单的动作属性定义了目的文件的文件名。由动作属性定义的这个文件通常会对接收到的输入数据进行相关的处理。:<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;<span class="keyword">form</span> name=<span class="string">"input"</span> action=<span class="string">"html_form_action.php"</span> method=<span class="string">"get"</span>&gt;</div><div class="line">Username: &lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">"text"</span> name=<span class="string">"user"</span>&gt;</div><div class="line">&lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">"submit"</span> value=<span class="string">"Submit"</span>&gt;</div><div class="line">&lt;/<span class="keyword">form</span>&gt;</div></pre></td></tr></table></figure></p>
<h3 id="HTML-框架"><a href="#HTML-框架" class="headerlink" title="HTML 框架"></a>HTML 框架</h3><p>通过使用框架，你可以在同一个浏览器窗口中显示不止一个页面。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">iframe语法:</div><div class="line">&lt;iframe src=<span class="string">"URL"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span></div><div class="line">该URL指向不同的网页。</div></pre></td></tr></table></figure></p>
<h4 id="Iframe-设置高度与宽度"><a href="#Iframe-设置高度与宽度" class="headerlink" title="Iframe-设置高度与宽度"></a>Iframe-设置高度与宽度</h4><p>height和width属性用来定义iframe标签的高度与宽度。<br>属性默认以像素为单位，但是可以指定其按比例显示。<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;iframe <span class="attribute">src</span>=<span class="string">"demo_iframe.html"</span> <span class="attribute">frameborder</span>=<span class="string">"0"</span>&gt;&lt;/iframe&gt;</div></pre></td></tr></table></figure></p>
<h4 id="Iframe-移除边框"><a href="#Iframe-移除边框" class="headerlink" title="Iframe -移除边框"></a>Iframe -移除边框</h4><p>frameborder属性用于定义iframe表示是否显示边框。<br>设置属性值为”0”移除边框。<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;iframe <span class="attribute">src</span>=<span class="string">"demo_iframe.html"</span> <span class="attribute">frameborder</span>=<span class="string">"0"</span>&gt;&lt;/iframe&gt;</div></pre></td></tr></table></figure></p>
<h4 id="使用iframe来显示目标链接页面"><a href="#使用iframe来显示目标链接页面" class="headerlink" title="使用iframe来显示目标链接页面"></a>使用iframe来显示目标链接页面</h4><p>iframe可以显示一个目标链接的页面<br>目标链接的属性必须使用iframe的属性，如下实例:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;iframe src=<span class="string">"demo_iframe.htm"</span> name=<span class="string">"iframe_a"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span></div><div class="line">&lt;p&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://x-nicolo.github.io"</span> <span class="attr">target</span>=<span class="string">"iframe_a"</span>&gt;</span>Nicolo<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></div></pre></td></tr></table></figure></p>
<h3 id="HTML颜色"><a href="#HTML颜色" class="headerlink" title="HTML颜色"></a>HTML颜色</h3><p>HTML 颜色由红色、绿色、蓝色混合而成。  </p>
<h4 id="颜色值"><a href="#颜色值" class="headerlink" title="颜色值"></a>颜色值</h4><p>HTML 颜色由一个十六进制符号来定义，这个符号由红色、绿色和蓝色的值组成（RGB）。<br>每种颜色的最小值是0（十六进制：#00）。最大值是255（十六进制：#FF）。  </p>
<p>例子：<br>相对于使用rgb(255,255,0)使用rgba(255,255,0,0.25)可以实现设置颜色透明度的功能，这里的0.5表示透明度，范围0~1。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"background-color:rgb(255,255,0)"</span>&gt;</span></div><div class="line">通过 rbg 值设置背景颜色</div><div class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"background-color:rgba(255,255,0,0.25)"</span>&gt;</span></div><div class="line">通过 rbg 值设置背景颜色</div><div class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"background-color:rgba(255,255,0,0.5)"</span>&gt;</span></div><div class="line">通过 rbg 值设置背景颜色</div><div class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"background-color:rgba(255,255,0,0.75)"</span>&gt;</span></div><div class="line">通过 rbg 值设置背景颜色</div><div class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="HTML-颜色名"><a href="#HTML-颜色名" class="headerlink" title="HTML 颜色名"></a>HTML 颜色名</h3><p>目前所有浏览器都支持以下颜色名。<br>141个颜色名称是在HTML和CSS颜色规范定义的（17标准颜色，再加124）。下表列出了所有颜色的值，包括十六进制值。<br>Remark 提示: 17标准颜色：黑色，蓝色，水，紫红色，灰色，绿色，石灰，栗色，海军，橄榄，橙，紫，红，白，银，蓝绿色，黄色。点击其中一个颜色名称（或一个十六进制值）就可以查看与不同文字颜色搭配的背景颜色。  </p>
<h3 id="HTML-颜色值"><a href="#HTML-颜色值" class="headerlink" title="HTML 颜色值"></a>HTML 颜色值</h3><p>颜色由红(R)、绿(G)、蓝(B)组成。  </p>
<h4 id="颜色值-1"><a href="#颜色值-1" class="headerlink" title="颜色值"></a>颜色值</h4><p>颜色值由十六进制来表示红、绿、蓝（RGB）。<br>每个颜色的最低值为0(十六进制为00)，最高值为255(十六进制为FF)<br>十六进制值的写法为#号后跟三个或六个十六进制字符。<br>三位数表示法为：#RGB，转换为6位数表示为：#RRGGBB。  </p>
<h3 id="HTML-脚本"><a href="#HTML-脚本" class="headerlink" title="HTML 脚本"></a>HTML 脚本</h3><p>JavaScript 使 HTML 页面具有更强的动态和交互性。<br>插入一个脚本：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Nicolo<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript"><span class="built_in">document</span>.write(<span class="string">"Hello World"</span>)</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="HTML-script-标签"><a href="#HTML-script-标签" class="headerlink" title="HTML script 标签"></a>HTML script 标签</h4><p>script标签用于定义客户端脚本，比如JavaScript。<br>script元素既可包含脚本语句，也可通过 src 属性指向外部脚本文件。<br>JavaScript 最常用于图片操作、表单验证以及内容动态更新。<br>下面的脚本会向浏览器输出”Hello World!”：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript"><span class="built_in">document</span>.write(<span class="string">"Hello World!"</span>);</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="HTML-noscript-标签"><a href="#HTML-noscript-标签" class="headerlink" title="HTML noscript 标签"></a>HTML noscript 标签</h4><p>noscript 标签提供无法使用脚本时的替代内容，比方在浏览器禁用脚本时，或浏览器不支持客户端脚本时。<br>noscript元素可包含普通 HTML 页面的 body 元素中能够找到的所有元素。<br>只有在浏览器不支持脚本或者禁用脚本时，才会显示 noscript&gt;元素中的内容：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript"><span class="built_in">document</span>.write(<span class="string">"Hello World!"</span>)</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">noscript</span>&gt;</span>抱歉，你的浏览器不支持 JavaScript!<span class="tag">&lt;/<span class="name">noscript</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="JavaScript体验"><a href="#JavaScript体验" class="headerlink" title="JavaScript体验"></a>JavaScript体验</h4><p>JavaScript可以直接在HTML输出:<br><figure class="highlight abnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">document.write(<span class="string">"&lt;p&gt;这是一个段落。&lt;/p&gt;"</span>)<span class="comment">;</span></div></pre></td></tr></table></figure></p>
<p>JavaScript事件响应:<br><figure class="highlight hsp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;<span class="keyword">button</span> type=<span class="string">"button"</span> <span class="keyword">onclick</span>=<span class="string">"myFunction()"</span>&gt;点我！&lt;/<span class="keyword">button</span>&gt;</div></pre></td></tr></table></figure></p>
<p>JavaScript处理 HTML 样式:<br><figure class="highlight livescript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">document</span>.getElementById(<span class="string">"demo"</span>).style.color=<span class="string">"<span class="subst">#ff0000</span>"</span>;</div></pre></td></tr></table></figure></p>
<h3 id="HTML-字符实体"><a href="#HTML-字符实体" class="headerlink" title="HTML 字符实体"></a>HTML 字符实体</h3><p>HTML中的预留字符必须被替换为字符实体。<br>一些在键盘上找不到的字符也可以使用字符实体来替换。  </p>
<h4 id="HTML-实体"><a href="#HTML-实体" class="headerlink" title="HTML 实体"></a>HTML 实体</h4><p>在 HTML 中，某些字符是预留的。<br>在 HTML 中不能使用小于号（&lt;）和大于号（&gt;），这是因为浏览器会误认为它们是标签。<br>如果希望正确地显示预留字符，我们必须在 HTML 源代码中使用字符实体（character entities）。 字符实体类似这样：<br><figure class="highlight 1c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&amp;entity_name;</span></div><div class="line">或</div><div class="line"><span class="meta">&amp;#entity_number;</span></div></pre></td></tr></table></figure></p>
<p>如需显示小于号，我们必须这样写：&lt; 或 &#60; 或 &#060;</p>
<h4 id="不间断空格-Non-breaking-Space"><a href="#不间断空格-Non-breaking-Space" class="headerlink" title="不间断空格(Non-breaking Space)"></a>不间断空格(Non-breaking Space)</h4><p>HTML 中的常用字符实体是不间断空格(&nbsp;)。浏览器总是会截短 HTML 页面中的空格。如果您在文本中写10个空格，在显示该页面之前，浏览器会删除它们中的 9 个。如需在页面中增加空格的数量，您需要使用&nbsp;字符实体。  </p>
<h3 id="HTML-URL"><a href="#HTML-URL" class="headerlink" title="HTML URL"></a>HTML URL</h3><p>URL是一个网页地址。URL可以由字母组成，或互联网协议（IP）地址： 192.68.20.50。大多数人进入网站使用网站域名来访问，因为名字比数字更容易记住。  </p>
<h4 id="URL-统一资源定位器"><a href="#URL-统一资源定位器" class="headerlink" title="URL- 统一资源定位器"></a>URL- 统一资源定位器</h4><p>Web浏览器通过URL从Web服务器请求页面。当您点击 HTML 页面中的某个链接时，对应的a标签指向万维网上的一个地址。一个统一资源定位器(URL) 用于定位万维网上的文档。  </p>
<h4 id="URL-字符编码"><a href="#URL-字符编码" class="headerlink" title="URL 字符编码"></a>URL 字符编码</h4><p>URL只能使用ASCII字符集.来通过因特网进行发送。由于URL常常会包含ASCII合之外的字符，URL 必须转换为有效的 ASCII 格式。URL编码使用 “%”其后跟随两位的十六进制数来替换非 ASCII 字符。<br>URL不能包含空格。URL编码通常使用 + 来替换空格。   </p>
<h3 id="HTML-速查列表"><a href="#HTML-速查列表" class="headerlink" title="HTML 速查列表"></a>HTML 速查列表</h3><p>备日常使用。  </p>
<h4 id="HTML-基本文档"><a href="#HTML-基本文档" class="headerlink" title="HTML 基本文档"></a>HTML 基本文档</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>文档标题<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">可见文本...</div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="HTML-基本标签"><a href="#HTML-基本标签" class="headerlink" title="HTML 基本标签"></a>HTML 基本标签</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>最大的标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span> . . . <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span> . . . <span class="tag">&lt;/<span class="name">h3</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span> . . . <span class="tag">&lt;/<span class="name">h4</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h5</span>&gt;</span> . . . <span class="tag">&lt;/<span class="name">h5</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h6</span>&gt;</span>最小的标题<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span> （换行）</div><div class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span> （水平线）</div><div class="line"><span class="comment">&lt;!-- 这是注释 --&gt;</span></div></pre></td></tr></table></figure>
<h4 id="HTML-文本格式化"><a href="#HTML-文本格式化" class="headerlink" title="HTML 文本格式化"></a>HTML 文本格式化</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span>粗体文本<span class="tag">&lt;/<span class="name">b</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">code</span>&gt;</span>计算机代码<span class="tag">&lt;/<span class="name">code</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span>强调文本<span class="tag">&lt;/<span class="name">em</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">i</span>&gt;</span>斜体文本<span class="tag">&lt;/<span class="name">i</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">kbd</span>&gt;</span>键盘输入<span class="tag">&lt;/<span class="name">kbd</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span>预格式化文本<span class="tag">&lt;/<span class="name">pre</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">small</span>&gt;</span>更小的文本<span class="tag">&lt;/<span class="name">small</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span>重要的文本<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;<span class="name">abbr</span>&gt;</span> （缩写）</div><div class="line"><span class="tag">&lt;<span class="name">address</span>&gt;</span> （联系信息）</div><div class="line"><span class="tag">&lt;<span class="name">bdo</span>&gt;</span> （文字方向）</div><div class="line"><span class="tag">&lt;<span class="name">blockquote</span>&gt;</span> （从另一个源引用的部分）</div><div class="line"><span class="tag">&lt;<span class="name">cite</span>&gt;</span> （工作的名称）</div><div class="line"><span class="tag">&lt;<span class="name">del</span>&gt;</span> （删除的文本）</div><div class="line"><span class="tag">&lt;<span class="name">ins</span>&gt;</span> （插入的文本）</div><div class="line"><span class="tag">&lt;<span class="name">sub</span>&gt;</span> （下标文本）</div><div class="line"><span class="tag">&lt;<span class="name">sup</span>&gt;</span> （上标文本）</div></pre></td></tr></table></figure>
<h4 id="HTML-链接-2"><a href="#HTML-链接-2" class="headerlink" title="HTML 链接"></a>HTML 链接</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">普通的链接：&lt;a <span class="attribute">href</span>=<span class="string">"http://www.example.com/"</span>&gt;链接文本&lt;/a&gt;</div><div class="line">图像链接： &lt;a <span class="attribute">href</span>=<span class="string">"http://www.example.com/"</span>&gt;&lt;img <span class="attribute">src</span>=<span class="string">"URL"</span> <span class="attribute">alt</span>=<span class="string">"替换文本"</span>&gt;&lt;/a&gt;</div><div class="line">邮件链接： &lt;a <span class="attribute">href</span>=<span class="string">"mailto:webmaster@example.com"</span>&gt;发送e-mail&lt;/a&gt;</div><div class="line">书签：</div><div class="line">&lt;a <span class="attribute">id</span>=<span class="string">"tips"</span>&gt;提示部分&lt;/a&gt;</div><div class="line">&lt;a <span class="attribute">href</span>=<span class="string">"#tips"</span>&gt;跳到提示部分&lt;/a&gt;</div></pre></td></tr></table></figure>
<h4 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;img <span class="attribute">src</span>=<span class="string">"URL"</span> <span class="attribute">alt</span>=<span class="string">"替换文本"</span> <span class="attribute">height</span>=<span class="string">"42"</span> <span class="attribute">width</span>=<span class="string">"42"</span>&gt;</div></pre></td></tr></table></figure>
<h4 id="样式-区块"><a href="#样式-区块" class="headerlink" title="样式/区块"></a>样式/区块</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="css"><span class="selector-tag">h1</span> &#123;<span class="attribute">color</span>:red;&#125;</span></div><div class="line"><span class="css"><span class="selector-tag">p</span> &#123;<span class="attribute">color</span>:blue;&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>文档中的块级元素<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>文档中的内联元素<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>项目<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>项目<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>第一项<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>第二项<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="定义列表"><a href="#定义列表" class="headerlink" title="定义列表"></a>定义列表</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>项目 1<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>描述项目 1<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>项目 2<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>描述项目 2<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>表格标题<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>表格标题<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>表格数据<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>表格数据<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="框架"><a href="#框架" class="headerlink" title="框架"></a>框架</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">"demo_iframe.htm"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"demo_form.php"</span> <span class="attr">method</span>=<span class="string">"post/get"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">size</span>=<span class="string">"40"</span> <span class="attr">maxlength</span>=<span class="string">"50"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">checked</span>=<span class="string">"checked"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">checked</span>=<span class="string">"checked"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"Send"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">option</span>&gt;</span>苹果<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">selected</span>=<span class="string">"selected"</span>&gt;</span>香蕉<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">option</span>&gt;</span>樱桃<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">"comment"</span> <span class="attr">rows</span>=<span class="string">"60"</span> <span class="attr">cols</span>=<span class="string">"20"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="实体"><a href="#实体" class="headerlink" title="实体"></a>实体</h4><figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="variable">&amp;lt</span>; 等同于 <span class="params">&lt;</span></div><div class="line"><span class="params"><span class="variable">&amp;gt</span>; 等同于 &gt;</span></div><div class="line">&amp;<span class="meta">#169; 等同于 ©</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;写在前面。&lt;br&gt;前端知识真的还是比较有用的。一直要把前端的学习提上日程，因为各种事情各种拖延，写爬虫的时候也是捎带学习前端的东西，还是需要系统的了解下。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="https://x-nicolo.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="前端" scheme="https://x-nicolo.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="HTML" scheme="https://x-nicolo.github.io/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>跳一跳刷分指南（作弊攻略）</title>
    <link href="https://x-nicolo.github.io/2018/01/02/%E8%B7%B3%E4%B8%80%E8%B7%B3%E5%88%B7%E5%88%86%E6%8C%87%E5%8D%97%EF%BC%88%E4%BD%9C%E5%BC%8A%E6%94%BB%E7%95%A5%EF%BC%89-1/"/>
    <id>https://x-nicolo.github.io/2018/01/02/跳一跳刷分指南（作弊攻略）-1/</id>
    <published>2018-01-02T13:51:55.000Z</published>
    <updated>2018-01-02T13:51:55.000Z</updated>
    
    <content type="html"><![CDATA[<p>略略略。<br><a id="more"></a><br><img src="http://upload-images.jianshu.io/upload_images/2847713-a0cb36f928fde35d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="794994122028961310.jpg"><br>自从刷了分好多好友都来问我，我还是写一个指（作）南（弊）吧。<br>游戏虽好玩，且刷且珍惜。（谢好友们不删之恩<br>没耐心的直接拉到最后的总结，两步到位。  </p>
<h3 id="外挂"><a href="#外挂" class="headerlink" title="外挂"></a>外挂</h3><p>最近在微博看到好多物理外挂，还有一些基于图像识别的外挂。其实都算是伤神费力，毛爷爷说过，看问题要抓住关键矛盾,一切问题迎刃而解。所以抓包去看看。  </p>
<h3 id="抓包"><a href="#抓包" class="headerlink" title="抓包"></a>抓包</h3><p>以前使用过fiddle，觉得非常nice。但是这玩意在电脑端抓包，不还得设置代理，再去抓微信数据，比较烦，所以找个安卓机直接抓包。  </p>
<h4 id="Packet-Capture"><a href="#Packet-Capture" class="headerlink" title="Packet Capture"></a>Packet Capture</h4><p>安卓机上下载这个，一步一步来，会提示安装证书，安装即可。安装好后长这样：<br><img src="http://upload-images.jianshu.io/upload_images/2847713-0bbbd607f45c0642.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="409430815870541656.png">  </p>
<h4 id="session-ID"><a href="#session-ID" class="headerlink" title="session ID"></a>session ID</h4><p>点三角形开始的按钮，在抓包软件里找到微信，然后打开跳一跳玩一把。<br><img src="http://upload-images.jianshu.io/upload_images/2847713-4ea2220505b7098c.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="709930993861369338.jpg">  </p>
<p><img src="http://upload-images.jianshu.io/upload_images/2847713-c3e7e96f594ff3e3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="839620930425149610.png">  </p>
<p>返回抓包软件，查找有SSL的文件，点开找json文件，找session ID。  </p>
<p><img src="http://upload-images.jianshu.io/upload_images/2847713-71dabab8fe2a5380.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="236073869604834277.jpg"><br>就在这里。<br><img src="http://upload-images.jianshu.io/upload_images/2847713-4520c8d34165e640.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="TIM截图20180102211438.jpg"><br>把session ID后面双引号的序列保存下来。  </p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>此为开源的一个代码，直接改下面的session_id，和自己想要的”score”: 10086就可以，应该能跑起来，但是python的环境配置有时还是挺恶心的。<br><figure class="highlight makefile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line">import requests</div><div class="line">import json</div><div class="line">import time</div><div class="line">from Crypto.Cipher import AES</div><div class="line">import base64</div><div class="line"></div><div class="line">action_data = &#123;</div><div class="line">    <span class="string">"score"</span>: 10086,</div><div class="line">    <span class="string">"times"</span>: 666,</div><div class="line">    <span class="string">"game_data"</span>: <span class="string">"&#123;&#125;"</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">session_id = <span class="string">"5TrXoE7IXtM/Nr7vITnbU9bmR53VH0u8RkVnm6m/Fezg=="</span></div><div class="line"></div><div class="line">aes_key = session_id</div><div class="line">aes_iv  = aes_key</div><div class="line"></div><div class="line">cryptor = AES.new(aes_key, AES.MODE_CBC, aes_iv)</div><div class="line"></div><div class="line">str_action_data = json.dumps(action_data).encode(<span class="string">"utf-8"</span>)</div><div class="line">print(<span class="string">"json_str_action_data "</span>, str_action_data)</div><div class="line"></div><div class="line"><span class="comment">#Pkcs7</span></div><div class="line">length = 16 - (len(str_action_data) % 16)</div><div class="line">str_action_data += bytes([length])*length</div><div class="line"></div><div class="line">cipher_action_data = base64.b64encode(cryptor.encrypt(str_action_data)).decode(<span class="string">"utf-8"</span>)</div><div class="line">print(<span class="string">"action_data "</span>, cipher_action_data)</div><div class="line"></div><div class="line">post_data = &#123;</div><div class="line">  <span class="string">"base_req"</span>: &#123;</div><div class="line">    <span class="string">"session_id"</span>: session_id,</div><div class="line">    <span class="string">"fast"</span>: 1,</div><div class="line">  &#125;,</div><div class="line">  <span class="string">"action_data"</span>: cipher_action_data</div><div class="line">&#125;</div><div class="line"></div><div class="line">headers = &#123;</div><div class="line">    <span class="string">"charset"</span>: <span class="string">"utf-8"</span>,</div><div class="line">    <span class="string">"Accept-Encoding"</span>: <span class="string">"gzip"</span>,</div><div class="line">    <span class="string">"referer"</span>: <span class="string">"https://servicewechat.com/wx7c8d593b2c3a7703/3/page-frame.html"</span>,</div><div class="line">    <span class="string">"content-type"</span>: <span class="string">"application/json"</span>,</div><div class="line">    <span class="string">"User-Agent"</span>: <span class="string">"MicroMessenger/6.6.1.1200(0x26060130) NetType/WIFI Language/zh_CN"</span>,</div><div class="line">    <span class="string">"Content-Length"</span>: <span class="string">"0"</span>,</div><div class="line">    <span class="string">"Host"</span>: <span class="string">"mp.weixin.qq.com"</span>,</div><div class="line">    <span class="string">"Connection"</span>: <span class="string">"Keep-Alive"</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">url = <span class="string">"https://mp.weixin.qq.com/wxagame/wxagame_settlement"</span></div><div class="line"></div><div class="line"></div><div class="line">response = requests.post(url, json=post_data, headers=headers)</div><div class="line">print(json.loads(response.text))</div></pre></td></tr></table></figure></p>
<h3 id="web提交"><a href="#web提交" class="headerlink" title="web提交"></a>web提交</h3><p>当然，游戏通关的策略当然是越简单越好，有位大神写了一个这个程序的Java版，直接可以web端提交。<br><img src="http://upload-images.jianshu.io/upload_images/2847713-29dccef1a8381a63.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png">  </p>
<p><a href="http://java.zhaoxuyang.com/WxTyT/" target="_blank" rel="external">【点这个】填写sessionID和想要的分数，提交即可</a><br>真的是太暴力了。。这个漏洞目前还没修复。  </p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul>
<li>第一步：抓包，获取sessionID（请看<a href="">Packet Capture</a>）</li>
<li>第二步：web提交 </li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;略略略。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="https://x-nicolo.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Python" scheme="https://x-nicolo.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>西电睿思年度非官方关键字榜单</title>
    <link href="https://x-nicolo.github.io/2017/12/19/%E7%9D%BF%E6%80%9D%E6%A6%9C%E5%8D%95/"/>
    <id>https://x-nicolo.github.io/2017/12/19/睿思榜单/</id>
    <published>2017-12-19T13:03:46.000Z</published>
    <updated>2017-12-19T13:03:46.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://upload-images.jianshu.io/upload_images/2847713-7349c503240afeba.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="20150607.png"><br><a id="more"></a>  </p>
<h3 id="西电睿思"><a href="#西电睿思" class="headerlink" title="西电睿思"></a>西电睿思</h3><blockquote>
<p>西电睿思，建立于2009年9月，是一个面向西安电子科技大学师生的以资源共享为主，包括论坛在内诸多功能的综合集娱乐、学习、资源交流的平台。名字取自“睿智善思”和“resource”的谐音，网站的宗旨是“永远不去谋求任何商业利益，只为西电人有一个高速下载的地方，有一个开心聊天交朋友的地方而努力”。</p>
</blockquote>
<h3 id="初衷"><a href="#初衷" class="headerlink" title="初衷"></a>初衷</h3><p>首先要说的是真的特别喜欢睿思，也特别喜欢它的宗旨！“永远不去谋求任何商业利益，只为西电人有一个高速下载的地方，有一个开心聊天交朋友的地方而努力”。睿思背后的技术团队一定是伟大，灿烂的！技术也是有温度的！  </p>
<p>之前写了一个简单的爬虫登录睿思领金币（其实我也没怎么领，因为金币够用。[偷笑][偷笑]）。就有一个想法，希望年底能对睿思做一个报告分析,特别好奇西电er在学习磕盐之余关心什么。    </p>
<p>本来的计划是爬取睿思全站的信息，后来因为种种事情忙的不可开交，只对西电睿思灌水专区、相聚睿思板块的发帖人、帖子标题。帖子内容进行了采集。当然，采集的时长和网速都有控制，不会对睿思服务器造成影响的~(采集过程中出了好多幺蛾子！xue微的用了人工“断点采集”……)  </p>
<p><img src="http://upload-images.jianshu.io/upload_images/2847713-91fac6213c1d57a2.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="text2.gif"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2847713-9e9095949286f530.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="数据库.gif"></p>
<h3 id="采集内容统计"><a href="#采集内容统计" class="headerlink" title="采集内容统计"></a>采集内容统计</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">板块：西电睿思灌水专区  </div><div class="line">时间段： <span class="number">2017</span><span class="number">-12</span><span class="number">-18</span>~<span class="number">2016</span><span class="number">-10</span><span class="number">-7</span>  </div><div class="line">有效帖子数：<span class="number">24940</span>  </div><div class="line">字数：<span class="number">4102465</span></div></pre></td></tr></table></figure>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">板块：相聚睿思  </div><div class="line">时间段： <span class="number">2017</span><span class="number">-12</span><span class="number">-19</span>~<span class="number">2010</span><span class="number">-11</span><span class="number">-24</span>   </div><div class="line">有效帖子数：<span class="number">2618</span>  </div><div class="line">字数：<span class="number">439649</span></div></pre></td></tr></table></figure>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">帖子总计：<span class="number">27558</span>  </div><div class="line">字数总计：<span class="number">4130023</span></div></pre></td></tr></table></figure>
<h3 id="灌水专区关键字榜单"><a href="#灌水专区关键字榜单" class="headerlink" title="灌水专区关键字榜单"></a>灌水专区关键字榜单</h3><p>对采集的信息首先进行了结巴分词，然后做了词频统计。使用了停用表过滤（就是过滤嗯、啊、的这些没意思的词语），发现还是有很多BBS的用语，就自己又建立了一个过滤表，体现我个人倾向以及非官方的时候到了[哈哈]。得到以下排行：  </p>
<p><img src="http://upload-images.jianshu.io/upload_images/2847713-573664beaa4a38a0.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="水区ok.jpg"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2847713-96f47a4f85072ea0.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="水区哦看看.jpg"></p>
<h4 id="“可以”"><a href="#“可以”" class="headerlink" title="“可以”"></a>“可以”</h4><p>“可以”？什么可以？可以什么？ Are you ok ?<br>可以可以，很可以。我电孩纸们难道很佛系？<br>当然，也希望大家可以一直可以下去，2018年里一直可以!一直ok下去！  </p>
<h3 id="“他”-“她”"><a href="#“他”-“她”" class="headerlink" title="“他”  “她”"></a>“他”  “她”</h3><p>“他”的次数出现了3280次。“她”的次数出现了1739次。</p>
<p>本来以为“食堂”（580）、“餐厅”（249）、“空调”（359）会上榜。看到这个榜单，其实还是比较符合睿思上的情况的。“工作”、“毕业”、“手机”、“研究生”、“流量”、“宿舍”等等，就是我们日常的日常啊。</p>
<h3 id="缘聚睿思关键字榜单"><a href="#缘聚睿思关键字榜单" class="headerlink" title="缘聚睿思关键字榜单"></a>缘聚睿思关键字榜单</h3><p><img src="http://upload-images.jianshu.io/upload_images/2847713-1b0ee2dd4925bde2.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="缘34.jpg"><br><img src="http://upload-images.jianshu.io/upload_images/2847713-6221964de8baef70.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="缘.jpg"></p>
<h4 id="“老乡”"><a href="#“老乡”" class="headerlink" title="“老乡”"></a>“老乡”</h4><p>缘聚睿思的板块，采集的数据比较久远。“老乡”一共出现了734次。看来大家还是喜欢找一个老乡或者喜欢给老乡找一个。“可以”又出现了，到底什么可以呢？？？希望一切都可以吧。</p>
<h4 id="“妹子”"><a href="#“妹子”" class="headerlink" title="“妹子”"></a>“妹子”</h4><p>“妹子”出现排行第三，不知道怎么解释了。[尴尬]  </p>
<h4 id="“身高”"><a href="#“身高”" class="headerlink" title="“身高”"></a>“身高”</h4><p>我觉得这个可能是最有意义的了，到底睿思的标准是不是173？？刚刚写了个正则，发现还是不能很好的匹配出好的结果。（然而我要去忙了，后面再做分析吧）</p>
<p>（updating）<br>~~~</p>
<h3 id="问题集合"><a href="#问题集合" class="headerlink" title="问题集合"></a>问题集合</h3><p>遇到的问题:捕获异常、重复处理、网络异常502,504，数据库数据类型错误  </p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/2847713-7349c503240afeba.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;20150607.png&quot;&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="https://x-nicolo.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Python" scheme="https://x-nicolo.github.io/tags/Python/"/>
    
      <category term="爬虫" scheme="https://x-nicolo.github.io/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="数据分析" scheme="https://x-nicolo.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>Python网络数据采集</title>
    <link href="https://x-nicolo.github.io/2017/12/17/%E6%95%B0%E6%8D%AE%E9%87%87%E9%9B%86/"/>
    <id>https://x-nicolo.github.io/2017/12/17/数据采集/</id>
    <published>2017-12-17T01:11:46.000Z</published>
    <updated>2017-12-17T01:11:46.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<ol>
<li>“网络数据采集是为普通大众所喜闻乐见的计算机巫术”。</li>
<li>bug 是产品生命中的挑战，好产品是不断面对 bug 并战胜 bug 的结果。</li>
</ol>
</blockquote>
<p>有人说编程语言就是宗教，不同语言的设计哲学不同，行为方式各异，“非我族类，其心必异”，但本着美好生活、快乐修行的初衷，我们对所有语言都时刻保持敬畏之心，尊重信仰自由，努力做好自己的功课。对爱好Python的人来说，人生苦短，Python当歌！ </p>
<a id="more"></a>    
<p>学习笔记。ALL FROM：Web Scraping with Python: Collecting Data from the Modern Web<br>先填坑。</p>
<p><strong><em>第一部分 创建爬虫</em></strong></p>
<p><strong>第1章 初见网络爬虫</strong><br><strong>第2章 复杂HTML解析</strong><br><strong>第3章 开始采集</strong><br><strong>第4章 使用API</strong><br><strong>第5章 存储数据</strong><br><strong>第6章 读取文档</strong>  </p>
<p><strong><em>第二部分 高级数据采集</em></strong></p>
<p><strong>第7章 数据清洗</strong><br><strong>第8章 自然语言处理</strong><br><strong>第9章 穿越网页表单与登录窗口进行采集</strong><br><strong>第10章 采集JavaScript</strong><br><strong>第11章 图像识别与文字处理</strong><br><strong>第12章 避开采集陷阱</strong><br><strong>第13章 用爬虫测试网站</strong><br><strong>第14章 远程采集</strong>  </p>
<hr>
<h2 id="第一部分-创建爬虫"><a href="#第一部分-创建爬虫" class="headerlink" title="第一部分 创建爬虫"></a>第一部分 创建爬虫</h2><p>重点介绍网络数据采集的基本原理。如何用 Python 从网络服务器请求信息，如何对服务器的响应进行基本处理，以及如何以自动化手段与网站进行交互。  </p>
<h3 id="第1章-初见网络爬虫"><a href="#第1章-初见网络爬虫" class="headerlink" title="第1章 初见网络爬虫"></a>第1章 初见网络爬虫</h3><h4 id="网络链接"><a href="#网络链接" class="headerlink" title="网络链接"></a>网络链接</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">from urllib<span class="selector-class">.request</span> import urlopen </div><div class="line">#查找 Python 的 request 模块（在 urllib库里面），只导入一个urlopen 函数。</div><div class="line"><span class="selector-tag">html</span> = urlopen(<span class="string">"http://pythonscraping.com/pages/page1.html"</span>)</div><div class="line"><span class="function"><span class="title">print</span><span class="params">(html.read()</span></span>)</div></pre></td></tr></table></figure>
<p>这是一个获取<a href="http://pythonscraping.com/pages/page1.html" target="_blank" rel="external">http://pythonscraping.com/pages/page1.html</a> 网页的全部HTML代码的程序。  </p>
<p><strong>urllib &amp; urllib2</strong>:在 Python 3.x 里，urllib2改名为urllib，被分成一些子模块： urllib.request、urllib.parse 和 你urllib.error。<br>urllib是Python的标准库（就是说不用额外安装就可以运行这个例子），包含了从网络请求数据，处理 cookie，甚至改变像请求头和用户代理这些元数据的函数。  </p>
<p><strong>urlopen</strong>:用来打开并读取一个从网络获取的远程对象。因为它是一个非常通用的库（它可以轻松读取HTML文件、图像文件，或其他任何文件流)。  </p>
<h4 id="BeautifulSoup简介"><a href="#BeautifulSoup简介" class="headerlink" title="BeautifulSoup简介"></a>BeautifulSoup简介</h4><p>BeautifulSoup通过定位HTML标签来格式化和组织复杂的网络信息，用简单易用的Python对象展现XML结构信息。  </p>
<h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><p>安装 Python 的包管理器 pip，然后运行:<br><figure class="highlight gams"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta"><span class="meta-keyword">$pip</span> install beautifulsoup4</span></div></pre></td></tr></table></figure></p>
<p><strong>注意:</strong>Python2、Python3的版本问题。  </p>
<h6 id="运行Beautifulsoup4"><a href="#运行Beautifulsoup4" class="headerlink" title="运行Beautifulsoup4"></a>运行Beautifulsoup4</h6><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">from urllib<span class="selector-class">.request</span> import urlopen</div><div class="line">from bs4 import BeautifulSoup</div><div class="line"><span class="selector-tag">html</span> = urlopen(<span class="string">"http://www.pythonscraping.com/pages/page1.html"</span>)  </div><div class="line"></div><div class="line">bsObj = BeautifulSoup(<span class="selector-tag">html</span>.read())</div><div class="line">#调用 <span class="selector-tag">html</span>.read() 获取网页的 HTML 内容  </div><div class="line"></div><div class="line"><span class="function"><span class="title">print</span><span class="params">(bsObj.h1)</span></span></div></pre></td></tr></table></figure>
<p>输出结果：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>An Interesting Title<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>从网页中提取的h1标签被嵌在 BeautifulSoup 对象 bsObj 结构的第二层（html → body→ h1）。但是，当我们从对象里提取 h1 标签的时候，可以直接调用它:<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">bsObj</span><span class="selector-class">.h1</span></div></pre></td></tr></table></figure></p>
<p>其实，下面的所有函数调用都可以产生同样的结果：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">bsObj<span class="selector-class">.html</span><span class="selector-class">.body</span><span class="selector-class">.h1</span></div><div class="line">bsObj<span class="selector-class">.body</span><span class="selector-class">.h1</span></div><div class="line">bsObj<span class="selector-class">.html</span><span class="selector-class">.h1</span></div></pre></td></tr></table></figure></p>
<h5 id="可靠的网络链接"><a href="#可靠的网络链接" class="headerlink" title="可靠的网络链接"></a>可靠的网络链接</h5><figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">html</span> = urlopen(<span class="string">"http://www.pythonscraping.com/pages/page1.html"</span>)</div></pre></td></tr></table></figure>
<p>这行代码主要可能会发生两种异常：<br>• 网页在服务器上不存在（或者获取页面的时候出现错误）<br>• 服务器不存在<br>第一种异常发生时，程序会返回HTTP错误。HTTP错误可能是“404 Page Not Found”“500Internal Server Error”等。所有类似情形，urlopen函数都会抛出“HTTPError”异常。我们可以用下面的方式处理这种异常：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">try</span>:</div><div class="line">    html = urlopen(<span class="string">"http://www.pythonscraping.com/pages/page1.html"</span>)</div><div class="line"><span class="keyword">except</span> HTTPError <span class="keyword">as</span> e:</div><div class="line">    print(e)</div><div class="line">    <span class="comment"># 返回空值，中断程序，或者执行另一个方案</span></div><div class="line"><span class="keyword">else</span>:</div><div class="line">    <span class="comment"># 程序继续。注意：如果你已经在上面异常捕捉那一段代码里返回或中断（break）那么就不需要使用else语句了，这段代码也不会执行</span></div></pre></td></tr></table></figure></p>
<p>如果程序返回 HTTP 错误代码，程序就会显示错误内容，不再执行else语句后面的代码。  </p>
<h3 id="第2章-复杂HTML解析"><a href="#第2章-复杂HTML解析" class="headerlink" title="第2章 复杂HTML解析"></a>第2章 复杂HTML解析</h3><p>面对页面解析难题（Gordian Knot）的时候，不假思索地直接写几行语句来抽取信息是非常直接的做法。但是，像这样鲁莽放纵地使用技术，只会让程序变得难以调试或脆弱不堪，甚至二者兼具。<br>正确的做法：<br>• 寻找“打印此页”的链接，或者看看网站有没有 HTML 样式更友好的 <strong>移动版</strong>（把自己的请求头设置成处于移动设备的状态，然后接收网站移动版。移动版后面还会提到，是一个获取数据非常好的渠道。当有一个网页很难爬去的时候，应该去试试它的移动版。<br>• 寻找隐藏在 JavaScript 文件里的信息。要实现这一点，你可能需要查看网页加载的JavaScript 文件。<br>• 虽然网页标题经常会用到，但是这个信息也许可以从网页的URL链接里获取。<br>• 如果要找的信息只存在于一个网站上， 别处没有，那确实是运气不佳。如果不只限于这个网站，那么可以找找其他数据源。有没有其他网站也显示了同样的数据？网站上显示的数据是不是从其他网站上抓取后攒出来的？  </p>
<h4 id="BeautifulSoup"><a href="#BeautifulSoup" class="headerlink" title="BeautifulSoup"></a>BeautifulSoup</h4><p>将介绍通过属性查找标签的方法，标签组的使用，以及标签解析树的导航过程。<br>CSS的发明是网络爬虫的福音。CSS可以让HTML元素呈现出差异化，使那些具有完全相同修饰的元素呈现出不同的样式。  </p>
<p>例子：创建一个网络爬虫来抓取<a href="http://www.pythonscraping.com/pages/warandpeace.html" target="_blank" rel="external">http://www.pythonscraping.com/pages/warandpeace.html</a> 这个网页。  </p>
<p>创建一个 BeautifulSoup 对象，和第1章里使用的程序类似：<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">from</span> urllib.request <span class="meta">import</span> urlopen</div><div class="line"><span class="symbol">from</span> <span class="keyword">bs4 </span><span class="meta">import</span> <span class="keyword">BeautifulSoup</span></div><div class="line"><span class="keyword">html </span>= urlopen(<span class="string">"http://www.pythonscraping.com/pages/warandpeace.html"</span>)</div><div class="line"><span class="keyword">bsObj </span>= <span class="keyword">BeautifulSoup(html)</span></div></pre></td></tr></table></figure></p>
<p>通过BeautifulSoup对象，可以用findAll函数抽取只包含在<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"green"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></div></pre></td></tr></table></figure></p>
<p>标签里的文字，这样就会得到一个人物名称的Python列表（findAll是一个非常灵活的函数，后面会经常用到它）：<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">nameList = bsObj.findAll(<span class="string">"span"</span>, &#123;<span class="string">"class"</span>:<span class="string">"green"</span>&#125;)</div><div class="line"><span class="keyword">for</span> <span class="built_in">name</span> <span class="keyword">in</span> nameList:</div><div class="line">    print(<span class="built_in">name</span>.get_text())</div></pre></td></tr></table></figure></p>
<p>之前调用 bsObj.tagName 只能获取页面中的第一个指定的标签。现在调用 bsObj.findAll(tagName, tagAttributes)可以获取页面中所有指定的标签，不再只是第一个了。<br>获取人名列表之后,程序遍历列表中所有的名字，然后打印name.get_text()，就可以把标签中的内容分开显示了。  </p>
<p><strong>get_text()</strong>:.get_text()会把正在处理的HTML文档中所有的标签都清除，然后返回一个只包含文字的字符串。 假如正在处理一个包含许多超链接、段落和标签的大段源代码，那么 .get_text()会把这些超链接、段落和标签都清除掉，只剩下一串不带标签的文字。<br>用BeautifulSoup对象查找想要的信息，比直接在HTML文本里查找信息要简单得多。 通常在准备打印、存储和操作数据时，应该最后才使用.get_text()。一般情况下，应该尽可能地保留HTML文档的标签结构。后面说不定还会用到的。  </p>
<h4 id="BeautifulSoup的find-和findAll"><a href="#BeautifulSoup的find-和findAll" class="headerlink" title="BeautifulSoup的find()和findAll()"></a>BeautifulSoup的find()和findAll()</h4><p>BeautifulSoup里的find()和findAll()可能是最常用的两个函数。借助它们可以通过标签的不同属性轻松地过滤 HTML页面，查找需要的标签组或单个标签。<br>这两个函数非常相似，BeautifulSoup文档里两者的定义就是这样：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="title">findAll</span><span class="params">(tag, attributes, recursive, text, limit, keywords)</span></span></div><div class="line"><span class="function"><span class="title">find</span><span class="params">(tag, attributes, recursive, text, keywords)</span></span></div></pre></td></tr></table></figure></p>
<ul>
<li><p>标签参数tag前面已经介绍过——可以传一个标签的名称或多个标签名称组成的Python列表做标签参数。例如，下面的代码将返回一个包含HTML文档中所有标题标签的列表:  </p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.<span class="keyword">findAll</span>(&#123;<span class="string">"h1"</span>,<span class="string">"h2"</span>,<span class="string">"h3"</span>,<span class="string">"h4"</span>,<span class="string">"h5"</span>,<span class="string">"h6"</span>&#125;)</div></pre></td></tr></table></figure>
</li>
<li><p>属性参数attributes是用一个Python字典封装一个标签的若干属性和对应的属性值。例<br>如，下面这个函数会返回HTML文档里红色与绿色两种颜色的span标签：  </p>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.findAll(<span class="string">"span"</span>, &#123;<span class="string">"class"</span>:&#123;<span class="string">"green"</span>, <span class="string">"red"</span>&#125;&#125;)</div></pre></td></tr></table></figure>
</li>
<li><p>递归参数recursive是一个布尔变量。你想抓取HTML文档标签结构里多少层的信息？如果recursive 设置为True，findAll就会根据你的要求去查找标签参数的所有子标签，以及子标签的子标签。如果recursive设置为False，findAll 就只查找文档的一级标签。findAll默认是支持递归查找的（recursive默认值是True）；一般情况下这个参数不需要设置，除非你真正了解自己需要哪些信息，而且抓取速度非常重要，那时你可以设置递归参数。  </p>
</li>
</ul>
<p>PS：之前感觉都是在瞎胡爬啊，现在再回头看，遇到的问题都是讲过的。书，还是要看三遍才算看过。    </p>
<ul>
<li>文本参数text有点不同，它是用标签的文本内容去匹配，而不是用标签的属性。假如想查找前面网页中包含“the prince”内容的标签数量，可以把之前的findAll方法换成下面的代码：<figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">nameList = bsObj.findAll(<span class="attribute">text</span>=<span class="string">"the prince"</span>)</div><div class="line"><span class="builtin-name">print</span>(len(nameList))</div></pre></td></tr></table></figure>
</li>
</ul>
<p>输出结果为“ 7”。  </p>
<ul>
<li><p>范围限制参数limit，显然只用于findAll方法。find其实等价于findAll的limit等于1时的情形。如果你只对网页中获取的前x项结果感兴趣，就可以设置它。但是要注意，这个参数设置之后，获得的前几项结果是按照网页上的顺序排序的，未必是你想要的那前几项。<br>PS:之前的爬虫，也遇到过这种情况。解决的办法是切片的方法。  </p>
</li>
<li><p>还有一个关键词参数keyword，可以让你选择那些具有指定属性的标签。例如：  </p>
<figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">allText = bsObj.findAll(<span class="attribute">id</span>=<span class="string">"text"</span>)  </div><div class="line"><span class="builtin-name">print</span>(allText[0].get_text())</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="其他BeautifulSoup对象"><a href="#其他BeautifulSoup对象" class="headerlink" title="其他BeautifulSoup对象"></a>其他BeautifulSoup对象</h4><p>BeautifulSoup库里的两种对象。<br>• BeautifulSoup对象：前面代码示例中的bsObj<br>• 标签Tag对象：BeautifulSoup对象通过find和findAll，或者直接调用子标签获取的一列对象或单个对象，就像：bsObj.div.h1<br>• NavigableString对象：用来表示标签里的文字，不是标签（有些函数可以操作和生成NavigableString 对象，而不是标签对象）。<br>• Comment对象：用来查找HTML文档的注释标签，<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- 像这样 --&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="导航树"><a href="#导航树" class="headerlink" title="导航树"></a>导航树</h4><p>findAll函数通过标签的名称和属性来查找标签。但是如果需要通过标签在文档中的位置来查找标签，该怎么办？这就是导航树（Navigating Trees）的作用。在第1章里，我们看过用单一方向进行BeautifulSoup标签树的导航：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bsObj<span class="selector-class">.tag</span><span class="selector-class">.subTag</span><span class="selector-class">.anotherSubTag</span>。</div></pre></td></tr></table></figure></p>
<h5 id="处理子标签和其他后代标签"><a href="#处理子标签和其他后代标签" class="headerlink" title="处理子标签和其他后代标签"></a>处理子标签和其他后代标签</h5><p>在 BeautifulSoup库里，孩子（child）和后代（descendant）有显著的不同：和人类的家谱一样，子标签就是一个父标签的下一级，而后代标签是指一个父标签下面所有级别的标签。例如，tr标签是tabel标签的子标签，而tr、th、td、img和span标签都是tabel 标签的后代标签（我们的示例页面中就是如此）。所有的子标签都是后代标签，但不是所有的后代标签都是子标签。<br>如果你只想找出子标签，可以用 .children 标签：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">from urllib<span class="selector-class">.request</span> import urlopen</div><div class="line">from bs4 import BeautifulSoup</div><div class="line"><span class="selector-tag">html</span> = urlopen(<span class="string">"http://www.pythonscraping.com/pages/page3.html"</span>)</div><div class="line">bsObj = BeautifulSoup(html)</div><div class="line"><span class="keyword">for</span> child <span class="keyword">in</span> bsObj.find(<span class="string">"table"</span>,&#123;<span class="string">"id"</span>:<span class="string">"giftList"</span>&#125;)<span class="selector-class">.children</span>:</div><div class="line"><span class="function"><span class="title">print</span><span class="params">(child)</span></span></div></pre></td></tr></table></figure></p>
<p>这段代码会打印giftList表格中所有产品的数据行。如果你用descendants()函数而不是children() 函数，那么就会有二十几个标签打印出来，包括img标签、span标签，以及每个td标签。掌握子标签与后代标签的差别十分重要！  </p>
<h5 id="处理兄弟标签"><a href="#处理兄弟标签" class="headerlink" title="处理兄弟标签"></a>处理兄弟标签</h5><p>BeautifulSoup 的 next_siblings()函数可以让收集表格数据成为简单的事情，尤其是处理带标题行的表格：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">from urllib<span class="selector-class">.request</span> import urlopen</div><div class="line">from bs4 import BeautifulSoup</div><div class="line"><span class="selector-tag">html</span> = urlopen(<span class="string">"http://www.pythonscraping.com/pages/page3.html"</span>)</div><div class="line">bsObj = BeautifulSoup(html)</div><div class="line"><span class="keyword">for</span> sibling <span class="keyword">in</span> bsObj.find(<span class="string">"table"</span>,&#123;<span class="string">"id"</span>:<span class="string">"giftList"</span>&#125;)<span class="selector-class">.tr</span><span class="selector-class">.next_siblings</span>:</div><div class="line">    print(sibling)</div></pre></td></tr></table></figure></p>
<p>这段代码会打印产品列表里的所有行的产品，第一行表格标题除外。为什么标题行被跳过了呢？有两个理由。首先，对象不能把自己作为兄弟标签。任何时候你获取一个标签的兄弟标签，都不会包含这个标签本身。其次，这个函数只调用后面的兄弟标签。例如，如果我们选择一组标签中位于中间位置的一个标签，然后用next_siblings()函数，那么它就只会返回在它后面的兄弟标签。因此，选择标签行然后调用next_siblings，可以选择表格中除了标题行以外的所有行。  </p>
<p><strong>让标签的选择更具体</strong>:如果我们选择bsObj.table.tr或直接就用bsObj.tr来获取表格中的第一行，上面的代码也可以获得正确的结果。但是，我们还是采用更长的形式写了一行代码，这可以避免各种意外：<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bsObj.<span class="builtin-name">find</span>(<span class="string">"table"</span>,&#123;<span class="string">"id"</span>:<span class="string">"giftList"</span>&#125;).tr</div></pre></td></tr></table></figure></p>
<p>即使页面上只有一个表格（或其他目标标签），只用标签也很容易丢失细节。另外，页面布局总是不断变化的。一个标签这次是在表格中第一行的位置，没准儿哪天就在第二行或第三行了。 如果想让你的爬虫更稳定，最好还是让标签的选择更加具体。如果有属性，就利用标签的属性。和next_siblings一样，如果你很容易找到一组兄弟标签中的最后一个标签，那么previous_siblings函数也会很有用。当然，还有next_sibling和previous_sibling函数，与next_siblings和previous_siblings的作用类似，只是它们返回的是单个标签，而不是一组标签。  </p>
<h5 id="父标签处理"><a href="#父标签处理" class="headerlink" title="父标签处理"></a>父标签处理</h5><p>偶尔在特殊情况下你也会用到BeautifulSoup 的父标签查找函数， parent 和 parents。例如：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">from urllib<span class="selector-class">.request</span> import urlopen</div><div class="line">from bs4 import BeautifulSoup  </div><div class="line"></div><div class="line"><span class="selector-tag">html</span> = urlopen(<span class="string">"http://www.pythonscraping.com/pages/page3.html"</span>)</div><div class="line">bsObj = BeautifulSoup(html)</div><div class="line"><span class="function"><span class="title">print</span><span class="params">(bsObj.find(<span class="string">"img"</span>,&#123;<span class="string">"src"</span>:<span class="string">"../img/gifts/img1.jpg"</span>&#125;)</span></span><span class="selector-class">.parent</span><span class="selector-class">.previous_sibling</span><span class="selector-class">.get_text</span>())</div></pre></td></tr></table></figure></p>
<p>这是如何实现的呢？下面的图形是我们正在处理的HTML页面的部分结构，用数字表示步骤的话：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">• <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">    — <span class="tag">&lt;<span class="name">td</span>&gt;</span></div><div class="line">    — <span class="tag">&lt;<span class="name">td</span>&gt;</span></div><div class="line">    — <span class="tag">&lt;<span class="name">td</span>&gt;</span>(3)</div><div class="line">        — "$15.00" (4)</div><div class="line">    — <span class="tag">&lt;<span class="name">td</span>&gt;</span>(2)</div><div class="line">        — <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../img/gifts/img1.jpg"</span>&gt;</span> (1)</div></pre></td></tr></table></figure></p>
<p>(1) 选择图片标签 src=”../img/gifts/img1.jpg”；<br>(2) 选择图片标签的父标签（在示例中是 td 标签）；<br>(3)选择td标签的前一个兄弟标签previous_sibling（在示例中是包含美元价格的td标签）；<br>(4) 选择标签中的文字，“ $15.00”。  </p>
<h4 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h4><blockquote>
<p>如果你有一个问题要用到正则表达式，那么这就成两个问题了。  </p>
</blockquote>
<p>之所以叫正则表达式，是因为它们可以识别正则字符串（regular string）；也就是说，它们可以这么定义：“如果你给我的字符串符合规则，我就返回它”，或者是“如果字符串不符合规则，我就忽略它”。这在要求快速浏览大文档，以查找像电话号码和邮箱地址之类的字符串时是非常方便的。<br>比如：“aaaabbbbbccccd”“aabbbbbcc”等<br>正则表达式就是表达这组规则的缩写。这组规则的正则表达式如下所示：<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">aa*bbbbb(<span class="name">cc</span>)*(<span class="name">d</span>|)</div></pre></td></tr></table></figure></p>
<p>分解之后就会很清楚了。<br>• aa<em><br>a后面跟着的a</em>（读作a星）表示“重复 <em>任意次</em> a，包括0次”。这样就可以保证字母a至少出现一次。<br>• bbbbb<br>这没有什么特别的——就是5次b。<br>• (cc)<em><br>任意偶数个字符都可以编组， 这个规则是用括号两个c，然后后面跟一个星号，表示有<br>任意次两个c（也可以是0次）。<br>• (d|)<br>增加一个竖线（ |）在表达式里表示“这个 </em>或* 那个”。本例是表示“增加一个后面跟着空格的d，或者只有一个空格”。这样我们可以保证字符串的结尾最多是一个后面跟着空格的d。<br>正则表达式在实际中的一个经典应用是识别邮箱地址。虽然不同邮箱服务器的邮箱地址的<br>具体规则不尽相同， 但是我们还是可以创建几条通用规则.  </p>
<ul>
<li>规则：邮箱地址的第一部分至少包括一种内容： 大<br>写字母、小写字母、数字 0~9、点号（.）、加号（+）或下划线（ _）  </li>
</ul>
<p>正则表达式：[A-Za-z0-9._+]+：这个正则表达式简写非常智慧。例如，它用“A-Z”表示“任意A~Z的大写字母”。把所有可能的序列和符号放在中括号（不是小括号）里表示“括号中的符号里任何一个”。要注意后面的加号，它表示“这些符号都可以出现多次，且至少出现1次”  </p>
<ul>
<li>规则：邮箱地址会包含一个@符号<br>正则表达式：@：这个符号很直接。@符号必须出现在中间位置，有且仅有 1 次    </li>
<li>规则：在符合@之后，邮箱地址还必须至少包含一个大写或小写字母<br>正则表达式：[A-Za-z]+：可能只在域名的前半部分、符号@后面用字母。而且，至少有一个字。  </li>
<li>规则：之后跟一个点号（ .）<br>正则表达式：.：在域名前必须有一个点号（ .）  </li>
<li>规则：最后邮箱地址用com、org、edu、net结尾（实际上，顶级域名有很多种可能，但是作为示例演示这四个后缀够用了）。<br>正则表达式：(com|org|edu|net)：这样列出了邮箱地址中可能出现在点号之后的字母序列<br>把上面的规则连接起来，就获得了完整的正则表达式：  <figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-attr">[A-Za-z0-9\._+]</span>+@[<span class="keyword">A</span>-<span class="keyword">Za</span>-<span class="keyword">z</span>]+\.(<span class="keyword">com</span>|<span class="keyword">org</span>|<span class="keyword">edu</span>|<span class="keyword">net</span>)</div></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/2847713-0dff7324eb234503.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png">  </p>
<h4 id="正则表达式和BeautifulSoup"><a href="#正则表达式和BeautifulSoup" class="headerlink" title="正则表达式和BeautifulSoup"></a>正则表达式和BeautifulSoup</h4><p>直接定位那些标签来查找信息。直接通图片的文件路径来查找：<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlopen</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"><span class="keyword">import</span> re</div><div class="line">html = urlopen(<span class="string">"http://www.pythonscraping.com/pages/page3.html"</span>)</div><div class="line">bsObj = BeautifulSoup(html)</div><div class="line">images = bsObj.<span class="keyword">findAll</span>(<span class="string">"img"</span>,&#123;<span class="string">"src"</span>:re.<span class="keyword">compile</span>(<span class="string">"\.\.\/img\/gifts/img.*\.jpg"</span>)&#125;)</div><div class="line"><span class="keyword">for</span> image in images:</div><div class="line"><span class="keyword">print</span>(image[<span class="string">"src"</span>])</div></pre></td></tr></table></figure></p>
<p>这段代码会打印出图片的相对路径，都是以../img/gifts/img开头，以.jpg结尾，其结果如下所示：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">../img/gifts/img1.jpg</div><div class="line">../img/gifts/img2.jpg</div><div class="line">../img/gifts/img3.jpg</div><div class="line">../img/gifts/img4.jpg</div><div class="line">../img/gifts/img6.jpg</div></pre></td></tr></table></figure></p>
<p>正则表达式可以作为BeautifulSoup语句的任意一个参数，让目标元素查找工作极具灵活性。  </p>
<h4 id="获取属性"><a href="#获取属性" class="headerlink" title="获取属性"></a>获取属性</h4><p>在网络数据采集时经常不需要查找标签的内容，而是需要查找标签属性。比如标签:a指向的URL链接包含在href属性中，或者img标签的图片文件包含在src属性中，这时获取标签属性就变得非常有用了。对于一个标签对象，可以用下面的代码获取它的全部属性：myTag.attrs要注意这行代码返回的是一个Python字典对象，可以获取和操作这些属性。比如要获取图<br>片的资源位置 src，可以用下面这行代码：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">myImgTag<span class="selector-class">.attrs</span>[<span class="string">"src"</span>]</div></pre></td></tr></table></figure></p>
<h4 id="Lambda表达式"><a href="#Lambda表达式" class="headerlink" title="Lambda表达式"></a>Lambda表达式</h4><p>这个在前博客的Python3集合学习中已经提交到了。<br>Lambda表达式本质上就是一个函数，可以作为其他函数的变量使用；也就是说，一个函数不是定义成 f(x, y)，而是定义成 f(g(x), y)，或f(g(x),h(x))的形式。<br>BeautifulSoup 允许我们把特定函数类型当作findAll函数的参数。唯一的限制条件是这些<br>函数必须把一个标签作为参数且返回结果是布尔类型。BeautifulSoup用这个函数来评估它遇到的每个标签对象，最后把评估结果为“真”的标签保留，把其他标签剔除。例如，下面的代码就是获取有两个属性的标签：  </p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">soup.findAll(lambda <span class="keyword">ta</span><span class="variable">g:</span> <span class="built_in">len</span>(<span class="keyword">tag</span>.attrs) == <span class="number">2</span>)</div></pre></td></tr></table></figure>
<p>这行代码会找出下面的标签：  </p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"body"</span> id=<span class="string">"content"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></div><div class="line">&lt;span style=<span class="string">"color:red"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"title"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></div></pre></td></tr></table></figure>
<h4 id="超越BeautifulSoup"><a href="#超越BeautifulSoup" class="headerlink" title="超越BeautifulSoup"></a>超越BeautifulSoup</h4><p>• lxml<br>这个库（ <a href="http://lxml.de/）" target="_blank" rel="external">http://lxml.de/）</a> 可以用来解析HTML和XML文档，以非常底层的实现而闻名于世，大部分源代码是用C语言写的。虽然学习它需要花一些时间（其实学习曲线越陡峭，表明你可以越快地学会它），但它在处理绝大多数HTML文档时速度都非常快。<br>• HTML parser<br>这是Python自带的解析库（ <a href="https://docs.python.org/3/library/html.parser.html）。" target="_blank" rel="external">https://docs.python.org/3/library/html.parser.html）。</a> 因为它不用安装（只要装Python就有），所以可以很方便地使用。  </p>
<h3 id="第3章-开始采集"><a href="#第3章-开始采集" class="headerlink" title="第3章 开始采集"></a>第3章 开始采集</h3><h4 id="遍历单个域名"><a href="#遍历单个域名" class="headerlink" title="遍历单个域名"></a>遍历单个域名</h4><p>西电睿思首页：<img src="http://upload-images.jianshu.io/upload_images/2847713-8915ce2dade9a482.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="rs.xidian.edu.cn-portal.php(iPad Pro) (1).png">  </p>
<p>获取西电睿思首页并提取页面链接的 Python 代码：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">from urllib<span class="selector-class">.request</span> import urlopen</div><div class="line">from bs4 import BeautifulSoup</div><div class="line">        <span class="selector-tag">html</span> = urlopen(<span class="string">"http://rs.xidian.edu.cn/portal.php"</span>)</div><div class="line">        bsObj = BeautifulSoup(html)</div><div class="line">        <span class="keyword">for</span> link <span class="keyword">in</span> bsObj.findAll(<span class="string">"a"</span>):</div><div class="line">            <span class="keyword">if</span> <span class="string">'href'</span> <span class="keyword">in</span> link<span class="selector-class">.attrs</span>:</div><div class="line">                <span class="keyword">if</span> (link<span class="selector-class">.attrs</span>[<span class="string">'href'</span>][:<span class="number">5</span>] == <span class="string">"forum"</span>):</div><div class="line">                    print(<span class="string">"http://rs.xidian.edu.cn/"</span> + link<span class="selector-class">.attrs</span>[<span class="string">'href'</span>])</div><div class="line">                elif((link<span class="selector-class">.attrs</span>[<span class="string">'href'</span>][:<span class="number">4</span>] == <span class="string">"home"</span>)):</div><div class="line">                    print(<span class="string">"http://rs.xidian.edu.cn/"</span> + link<span class="selector-class">.attrs</span>[<span class="string">'href'</span>])</div><div class="line">                elif ((link<span class="selector-class">.attrs</span>[<span class="string">'href'</span>][:<span class="number">6</span>] == <span class="string">"portal"</span>)):</div><div class="line">                    print(<span class="string">"http://rs.xidian.edu.cn/"</span> + link<span class="selector-class">.attrs</span>[<span class="string">'href'</span>])</div><div class="line">                <span class="keyword">else</span>:</div><div class="line">                    print(link<span class="selector-class">.attrs</span>[<span class="string">'href'</span>])</div></pre></td></tr></table></figure></p>
<p>forum和home开头的RUL都是主页的链接。  </p>
<p>首页爬取的URL：<br><figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div><div class="line">344</div><div class="line">345</div><div class="line">346</div><div class="line">347</div><div class="line">348</div><div class="line">349</div><div class="line">350</div><div class="line">351</div><div class="line">352</div><div class="line">353</div><div class="line">354</div><div class="line">355</div><div class="line">356</div><div class="line">357</div><div class="line">358</div><div class="line">359</div><div class="line">360</div><div class="line">361</div><div class="line">362</div><div class="line">363</div><div class="line">364</div><div class="line">365</div><div class="line">366</div><div class="line">367</div><div class="line">368</div><div class="line">369</div><div class="line">370</div><div class="line">371</div><div class="line">372</div><div class="line">373</div><div class="line">374</div><div class="line">375</div><div class="line">376</div><div class="line">377</div><div class="line">378</div><div class="line">379</div><div class="line">380</div><div class="line">381</div><div class="line">382</div><div class="line">383</div><div class="line">384</div><div class="line">385</div><div class="line">386</div><div class="line">387</div><div class="line">388</div><div class="line">389</div><div class="line">390</div><div class="line">391</div><div class="line">392</div><div class="line">393</div><div class="line">394</div><div class="line">395</div><div class="line">396</div><div class="line">397</div><div class="line">398</div><div class="line">399</div><div class="line">400</div><div class="line">401</div><div class="line">402</div><div class="line">403</div><div class="line">404</div><div class="line">405</div><div class="line">406</div><div class="line">407</div><div class="line">408</div><div class="line">409</div><div class="line">410</div><div class="line">411</div><div class="line">412</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//weibo.com/xdrsbt</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/static/image/common/banner/weichat.jpg</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//bbs.rs.xidian.me</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/uTorrent.zip</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/utorrentForMac.zip</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/AndroidRS.apk</span></div><div class="line"><span class="symbol">https:</span><span class="comment">//jq.qq.com/?_wv=1027&amp;k=43TLwVI</span></div><div class="line"><span class="symbol">javascript:</span>;</div><div class="line"><span class="symbol">javascript:</span>;</div><div class="line">member.php?mod=register</div><div class="line">./</div><div class="line"><span class="symbol">javascript:</span>;</div><div class="line">member.php?mod=register</div><div class="line"><span class="symbol">javascript:</span>;</div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/portal.php</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php</span></div><div class="line">bt.php?mod=browse<span class="variable">&amp;t</span>=all</div><div class="line">bt.php?mod=upload</div><div class="line"><span class="meta">#</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=forumdisplay&amp;fid=566</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//doufm.info/#</span></div><div class="line">rsjc.php</div><div class="line">misc.php?mod=faq</div><div class="line">misc.php?mod=ranklist</div><div class="line">plugin.php?id=dsu_paulsign:sign</div><div class="line"><span class="symbol">http:</span><span class="comment">//bbs.xidian.edu.cn</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//123.xidian.edu.cn</span></div><div class="line">plugin.php?id=dsu_paulsign:sign</div><div class="line">bt.php?mod=browse<span class="variable">&amp;t</span>=digest</div><div class="line">bt.php?mod=browse<span class="variable">&amp;t</span>=hot</div><div class="line">bt.php?mod=browse<span class="variable">&amp;t</span>=highlight</div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=662797</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//hdtv.neu6.edu.cn/</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//tv.byr.cn/</span></div><div class="line"><span class="symbol">javascript:</span>;</div><div class="line">search.php?mod=forum<span class="variable">&amp;srchtxt</span>=%E5%<span class="number">81</span>%<span class="number">9</span>A%E7%A7%<span class="number">8</span>D%<span class="number">20</span>%E6%<span class="number">95</span>%<span class="number">99</span>%E7%A8%<span class="number">8</span>B<span class="variable">&amp;formhash</span>=<span class="number">0</span>ede9aec<span class="variable">&amp;searchsubmit</span>=true<span class="variable">&amp;source</span>=hotsearch</div><div class="line">search.php?mod=forum<span class="variable">&amp;srchtxt</span>=%E7%<span class="number">94</span>%B5%E5%BD%B1%<span class="number">20</span>%E6%AC%A7%E7%BE%<span class="number">8</span>E<span class="variable">&amp;formhash</span>=<span class="number">0</span>ede9aec<span class="variable">&amp;searchsubmit</span>=true<span class="variable">&amp;source</span>=hotsearch</div><div class="line">search.php?mod=forum<span class="variable">&amp;srchtxt</span>=%E5%<span class="number">89</span>%A7%E9%<span class="number">9</span>B%<span class="number">86</span>%<span class="number">20</span>%E9%<span class="number">9F</span>%A9%E5%<span class="number">89</span>%A7<span class="variable">&amp;formhash</span>=<span class="number">0</span>ede9aec<span class="variable">&amp;searchsubmit</span>=true<span class="variable">&amp;source</span>=hotsearch</div><div class="line">search.php?mod=forum<span class="variable">&amp;srchtxt</span>=%E8%A7%<span class="number">86</span>%E9%A2%<span class="number">91</span><span class="variable">&amp;formhash</span>=<span class="number">0</span>ede9aec<span class="variable">&amp;searchsubmit</span>=true<span class="variable">&amp;source</span>=hotsearch</div><div class="line"><span class="symbol">javascript:</span>;</div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=285587</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=880644</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=285411</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=862260</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=298698</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=862155</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=287561</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=861570</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=284186</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=860952</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=304543</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=860425</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=288755</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=855711</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=301434</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=855579</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=62484</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=847337</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=71870</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=837603</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=898059</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=896025</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=889965</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=887913</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=885831</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=885753</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=885651</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=870379</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=885048</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=880420</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=869432</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=874905</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=874304</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=872229</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=869049</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=868111</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=867138</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=867859</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=866769</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=820179</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=forumdisplay&amp;fid=157</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901386</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=287668</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901386</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901350</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=42884</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901350</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=900991</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=42884</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=900991</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=900689</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=42884</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=900689</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=forumdisplay&amp;fid=21</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=276989</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=895317</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=300656</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=890614</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=190294</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=890170</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=64489</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=889730</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=260560</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=889749</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=262727</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=889568</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=284115</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=732034</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=214850</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=457107</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=214850</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=721807</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=193867</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=649913</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=241562</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=720116</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901529</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901528</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901527</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901526</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901525</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901524</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901523</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901522</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901521</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901520</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=898030</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=309281</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=898030</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=899628</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=284864</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=899628</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=897855</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=309281</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=897855</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=897772</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=287887</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=897772</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=900547</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=297044</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=900547</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=896544</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=276989</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=896544</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=898344</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=307663</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=898344</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=898217</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=297712</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=898217</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=896939</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=276989</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=896939</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=897157</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=285304</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=897157</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=900044</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=298621</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=900044</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=896872</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=300590</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=896872</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=897235</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=284908</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=897235</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=897655</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=298003</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=897655</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=900110</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=298621</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=900110</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=898835</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=297712</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=898835</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=900341</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=297712</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=900341</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=896838</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=276989</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=896838</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=896817</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=297712</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=896817</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=899482</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=295399</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=899482</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=900162</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=276989</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=900162</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=900161</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=276989</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=900161</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901281</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=260969</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901281</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=899262</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=306330</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=899262</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=899630</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=284864</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=899630</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=791978</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=276190</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=791978</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=792036</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=279056</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=792036</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=791500</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=214409</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=791500</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=790482</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=295512</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=790482</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=792195</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=288815</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=792195</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=791826</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=272010</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=791826</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=790813</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=19696</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=790813</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=790630</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=260560</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=790630</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=790729</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=278537</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=790729</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=790172</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=293161</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=790172</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=790194</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=280451</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=790194</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=791029</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=241562</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=791029</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=790691</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=268786</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=790691</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=790862</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=268789</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=790862</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=790669</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=284320</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=790669</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=790164</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=167042</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=790164</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=791694</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=276989</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=791694</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=791037</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=241562</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=791037</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=791386</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=241562</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=791386</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=790912</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=241562</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=790912</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=96501</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=195196</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=19530</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=143142</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=397</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=452</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=15621</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=1390</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=5029</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=18833</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=116495</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=259166</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=269195</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=17917</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=241562</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=39423</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=272685</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=98773</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=275662</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=193867</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=275662</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=291835</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=116495</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=127482</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=57588</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=238092</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=269642</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=244973</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=98773</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=269195</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//shang.qq.com/wpa/qunwpa?idkey=89cc0b526cd16ab6cee4506996b3963ceb22f7c9007c8810572122c7c5d838a4</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//jq.qq.com/?_wv=1027&amp;k=2IofhVV</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=285032</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901435</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=268862</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901399</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=0</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901548</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=300782</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901458</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=285032</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901406</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=252309</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901467</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=295850</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901395</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=299876</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901464</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=217937</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901530</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=295399</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901544</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=forumdisplay&amp;fid=142</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901579</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901507</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901450</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901438</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901314</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901270</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901250</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901217</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901165</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901117</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=forumdisplay&amp;fid=554</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901564</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901562</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901547</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901543</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901540</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901530</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901503</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901496</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901485</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=901479</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/portal.php?mod=list&amp;catid=1</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/portal.php?mod=view&amp;aid=52</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/portal.php?mod=view&amp;aid=51</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/portal.php?mod=view&amp;aid=50</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/portal.php?mod=view&amp;aid=49</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=forumdisplay&amp;fid=115</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=900642&amp;from=portal</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=897118&amp;from=portal</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=895378&amp;from=portal</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=viewthread&amp;tid=893467&amp;from=portal</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=311203</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=311203&amp;do=blog&amp;id=1900</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=307289</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=307289&amp;do=blog&amp;id=1898</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=310426</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=310426&amp;do=blog&amp;id=1897</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=307289</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=307289&amp;do=blog&amp;id=1896</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=307331</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=307331&amp;do=blog&amp;id=1894</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=307289</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=307289&amp;do=blog&amp;id=1893</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=308946</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=308946&amp;do=blog&amp;id=1891</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=305834</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=305834&amp;do=blog&amp;id=1890</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=287055</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=287055&amp;do=blog&amp;id=1889</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=291359</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=291359&amp;do=blog&amp;id=1888</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=309479</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=309479&amp;do=blog&amp;id=1885</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=310727</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=310727&amp;do=blog&amp;id=1881</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=307541</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=307541&amp;do=blog&amp;id=1878</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=307289</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=307289&amp;do=blog&amp;id=1893</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=307541</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=307541&amp;do=blog&amp;id=1887</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=291359</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=291359&amp;do=blog&amp;id=1888</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=298067</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=298067&amp;do=blog&amp;id=1882</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=287055</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=287055&amp;do=blog&amp;id=1889</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=308946</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=308946&amp;do=blog&amp;id=1891</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=309134</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=309134&amp;do=blog&amp;id=1877</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=298086</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=298086&amp;do=blog&amp;id=1665</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=302366</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=302366&amp;do=blog&amp;id=1699</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=302489</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=302489&amp;do=blog&amp;id=1673</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=298086</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=298086&amp;do=blog&amp;id=1670</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=304068</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=304068&amp;do=blog&amp;id=1685</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=285379</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=285379&amp;do=blog&amp;id=1664</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=311126</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=311126&amp;do=blog&amp;id=1871</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=298086</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=298086&amp;do=blog&amp;id=1738</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=252175</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=252175&amp;do=blog&amp;id=1719</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=309479</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/home.php?mod=space&amp;uid=309479&amp;do=blog&amp;id=1857</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/forum.php?mod=misc&amp;action=showdarkroom</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//weibo.com/xdrsbt</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn/data/attachment/forum/201411/20/131007gaghl2s997wxzhy8.jpg</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//rs.xidian.edu.cn</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//www.discuz.net</span></div><div class="line"><span class="symbol">http:</span><span class="comment">//www.comsenz.com</span></div></pre></td></tr></table></figure></p>
<h3 id="采集整个网站"><a href="#采集整个网站" class="headerlink" title="采集整个网站"></a>采集整个网站</h3><p>爬取一个页面比较简单，但是如果需要系统地把整个网站按目录分类，或者要搜索网站上的每一个页面，怎么办？<br>那就得采集整个网站，那是一种非常耗费内存资源的过程，尤其是处理大型网站时，最合适的工具就是用一个数据库来储存采集的资源。但是，我们可以掌握这类工具的行为，并不需要通过大规模地运行它们。<br><img src="http://upload-images.jianshu.io/upload_images/2847713-1d017e0850d713a5.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="TIM截图20171127162657.jpg"></p>
<p>遍历整个网站的网络数据采集有许多好处。  </p>
<ul>
<li>生成网站地图  </li>
<li><p>收集数据<br>“ 5 个页面深度，每页 10 个链接”是网站的主流配置。为了避免一个页面被采集两次，链接去重是非常重要的。在代码运行时，把已发现的所有链接都放到一起，并保存在方便查询的列表里（下文示例指Python的集合set类型）。只有“新”链接才会被采集，之后再从页面中搜索其他链接：  </p>
<figure class="highlight haxe"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">from urllib.request <span class="keyword">import</span> urlopen</div><div class="line">from bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"><span class="keyword">import</span> re</div><div class="line">pages = <span class="keyword">set</span>()</div><div class="line">def getLinks(pageUrl):<span class="type"></span></div><div class="line"><span class="type">    global pages</span></div><div class="line"><span class="type">    html </span>= urlopen(<span class="string">"http://en.wikipedia.org"</span>+pageUrl)</div><div class="line">    bsObj = BeautifulSoup(html)</div><div class="line">    <span class="keyword">for</span> link <span class="keyword">in</span> bsObj.findAll(<span class="string">"a"</span>, href=re.compile(<span class="string">"^(/wiki/)"</span>)):<span class="type"></span></div><div class="line"><span class="type">        if </span>'href<span class="string">' in link.attrs:</span></div><div class="line"><span class="string">            if link.attrs['</span>href<span class="string">'] not in pages:</span></div><div class="line"><span class="string">            # 我们遇到了新页面</span></div><div class="line"><span class="string">                newPage = link.attrs['</span>href<span class="string">']</span></div><div class="line"><span class="string">                print(newPage)</span></div><div class="line"><span class="string">                pages.add(newPage)</span></div><div class="line"><span class="string">                getLinks(newPage)</span></div><div class="line"><span class="string">getLinks("")</span></div></pre></td></tr></table></figure>
</li>
<li></li>
</ul>
<h3 id="采集睿思发现了一个新的公网地址-美滋滋"><a href="#采集睿思发现了一个新的公网地址-美滋滋" class="headerlink" title="采集睿思发现了一个新的公网地址 美滋滋"></a>采集睿思发现了一个新的公网地址 美滋滋</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -*-coding:utf-8-*-</span></div><div class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlopen</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rspider</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Store</span><span class="params">(self)</span>:</span></div><div class="line"></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</div><div class="line">            pages = <span class="string">'http://rsbbs.xidian.edu.cn/forum.php?mod=forumdisplay&amp;fid=72&amp;page='</span>+str(i)+<span class="string">'&amp;mobile=2'</span></div><div class="line">            html = urlopen(pages)</div><div class="line">            bsObj = BeautifulSoup(html.read())</div><div class="line">            tiezi = bsObj.findAll(<span class="string">"ul"</span>)</div><div class="line">            <span class="keyword">for</span> tiaos <span class="keyword">in</span> tiezi:</div><div class="line">                <span class="keyword">for</span> tiao <span class="keyword">in</span> tiaos.findAll(<span class="string">'a'</span>):</div><div class="line">                    <span class="keyword">for</span> person <span class="keyword">in</span> tiao.findAll(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"by"</span>&#125;):</div><div class="line">                        print(<span class="string">"发帖人：   "</span> + person.get_text().strip())</div><div class="line"></div><div class="line">                    [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> tiao.findAll(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"by"</span>&#125;)]</div><div class="line">                    print(<span class="string">"帖子:     "</span>+tiao.get_text().strip())</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    RS = Rspider()</div><div class="line">    RS.Store()</div></pre></td></tr></table></figure>
<h3 id="存入数据库"><a href="#存入数据库" class="headerlink" title="存入数据库"></a>存入数据库</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -*-coding:utf-8-*-</span></div><div class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlopen</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"><span class="keyword">import</span> csv</div><div class="line"><span class="keyword">import</span> pymysql</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rspider</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Store</span><span class="params">(self)</span>:</span></div><div class="line"></div><div class="line">        connection = pymysql.connect(host=<span class="string">'127.0.0.1'</span>, user=<span class="string">'root'</span>, password=<span class="string">'root'</span>, db=<span class="string">'rs'</span>, charset=<span class="string">'utf8'</span>,</div><div class="line">                                     cursorclass=pymysql.cursors.DictCursor)</div><div class="line">        cur = connection.cursor()</div><div class="line">        cur.execute(<span class="string">"USE rs"</span>)</div><div class="line"></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</div><div class="line">            pages = <span class="string">'http://rsbbs.xidian.edu.cn/forum.php?mod=forumdisplay&amp;fid=72&amp;page='</span>+str(i)+<span class="string">'&amp;mobile=2'</span></div><div class="line">            html = urlopen(pages)</div><div class="line">            bsObj = BeautifulSoup(html.read())</div><div class="line">            tiezi = bsObj.findAll(<span class="string">"ul"</span>)</div><div class="line">            <span class="keyword">for</span> tiaos <span class="keyword">in</span> tiezi:</div><div class="line">                <span class="keyword">for</span> tiao <span class="keyword">in</span> tiaos.findAll(<span class="string">'a'</span>):</div><div class="line">                    <span class="keyword">for</span> person <span class="keyword">in</span> tiao.findAll(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"by"</span>&#125;):</div><div class="line">                        T = person.get_text().strip()</div><div class="line">                        print(<span class="string">"发帖人：   "</span> + person.get_text().strip())</div><div class="line">                        [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> tiao.findAll(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"by"</span>&#125;)]</div><div class="line">                    P = tiao.get_text().strip()</div><div class="line">                    print(<span class="string">"帖子:     "</span>+tiao.get_text().strip())</div><div class="line"></div><div class="line"></div><div class="line">                    cur.execute(<span class="string">"INSERT INTO rstiezi (person,tiezi) VALUES (\"%s\",\"%s\")"</span>, (T, P))</div><div class="line">                    cur.connection.commit()</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    RS = Rspider()</div><div class="line">    RS.Store()</div></pre></td></tr></table></figure>
<h3 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -*-coding:utf-8-*-</span></div><div class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlopen</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"><span class="keyword">import</span> csv</div><div class="line"><span class="keyword">import</span> pymysql</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rspider</span>:</span></div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Store</span><span class="params">(self)</span>:</span></div><div class="line"></div><div class="line">        connection = pymysql.connect(host=<span class="string">'127.0.0.1'</span>, user=<span class="string">'root'</span>, password=<span class="string">'root'</span>, db=<span class="string">'rs'</span>, charset=<span class="string">'utf8'</span>,</div><div class="line">                                     cursorclass=pymysql.cursors.DictCursor)</div><div class="line">        cur = connection.cursor()</div><div class="line">        cur.execute(<span class="string">"USE rs"</span>)</div><div class="line"></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>):</div><div class="line">            pages = <span class="string">'http://rsbbs.xidian.edu.cn/forum.php?mod=forumdisplay&amp;fid=72&amp;page='</span>+str(i)+<span class="string">'&amp;mobile=2'</span></div><div class="line">            html = urlopen(pages)</div><div class="line">            bsObj = BeautifulSoup(html.read())</div><div class="line">            tiezi = bsObj.findAll(<span class="string">"ul"</span>)</div><div class="line">            <span class="keyword">for</span> tiaos <span class="keyword">in</span> tiezi:</div><div class="line">                <span class="keyword">for</span> tiao <span class="keyword">in</span> tiaos.findAll(<span class="string">'a'</span>):</div><div class="line">                    <span class="keyword">for</span> person <span class="keyword">in</span> tiao.findAll(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"by"</span>&#125;):</div><div class="line">                        T = person.get_text().strip()</div><div class="line">                        print(<span class="string">"发帖人："</span> + person.get_text().strip())</div><div class="line">                        [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> tiao.findAll(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"by"</span>&#125;)]</div><div class="line">                    P = tiao.get_text().strip()</div><div class="line">                    print(<span class="string">"标题: "</span>+tiao.get_text().strip())</div><div class="line"></div><div class="line">                    <span class="comment">#get every tiao Likn</span></div><div class="line">                    <span class="keyword">if</span> <span class="string">'href'</span> <span class="keyword">in</span> tiao.attrs:</div><div class="line">                        tiao_links= <span class="string">"http://rsbbs.xidian.edu.cn/"</span> + tiao.attrs[<span class="string">'href'</span>]</div><div class="line">                        tiao_html = urlopen(tiao_links)</div><div class="line">                        tiao_bsObj = BeautifulSoup(tiao_html.read())</div><div class="line">                        <span class="comment"># [q.extract() for q in tiao_bsObj.findAll('blockquote')]</span></div><div class="line">                        content = tiao_bsObj.findAll(<span class="string">"div"</span>, &#123;<span class="string">"class"</span>: <span class="string">"message"</span>&#125;)[<span class="number">0</span>]</div><div class="line">                        R = content.get_text().strip()</div><div class="line">                        print(<span class="string">"帖子内容: "</span>+R)</div><div class="line">                        print(<span class="string">'\n'</span>)</div><div class="line"></div><div class="line">                    <span class="comment">#将发帖人、帖子标题、帖子内容插入数据库</span></div><div class="line">                    cur.execute(<span class="string">"INSERT INTO rstiezi (person,tiezi,content) VALUES (\"%s\",\"%s\",\"%s\")"</span>, (T, P, R))</div><div class="line">                    cur.connection.commit()</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    RS = Rspider()</div><div class="line">    RS.Store()</div></pre></td></tr></table></figure>
<h3 id="遇到异常、重复处理"><a href="#遇到异常、重复处理" class="headerlink" title="遇到异常、重复处理"></a>遇到异常、重复处理</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -*-coding:utf-8-*-</span></div><div class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlopen</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"><span class="keyword">import</span> csv</div><div class="line"><span class="keyword">import</span> pymysql</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rspider</span>:</span></div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Store</span><span class="params">(self)</span>:</span></div><div class="line"></div><div class="line">        connection = pymysql.connect(host=<span class="string">'127.0.0.1'</span>, user=<span class="string">'root'</span>, password=<span class="string">'root'</span>, db=<span class="string">'rs'</span>, charset=<span class="string">'utf8'</span>,</div><div class="line">                                     cursorclass=pymysql.cursors.DictCursor)</div><div class="line">        cur = connection.cursor()</div><div class="line">        cur.execute(<span class="string">"USE rs"</span>)</div><div class="line"></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">3</span>):</div><div class="line">            pages = <span class="string">'http://rsbbs.xidian.edu.cn/forum.php?mod=forumdisplay&amp;fid=72&amp;page='</span>+str(i)+<span class="string">'&amp;mobile=2'</span></div><div class="line">            html = urlopen(pages)</div><div class="line">            bsObj = BeautifulSoup(html.read())</div><div class="line">            tiezi = bsObj.findAll(<span class="string">"ul"</span>)</div><div class="line">            <span class="keyword">for</span> tiaos <span class="keyword">in</span> tiezi:</div><div class="line">                <span class="keyword">for</span> tiao <span class="keyword">in</span> tiaos.findAll(<span class="string">'a'</span>):</div><div class="line">                    <span class="keyword">for</span> person <span class="keyword">in</span> tiao.findAll(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"by"</span>&#125;):</div><div class="line">                        T = person.get_text().strip()</div><div class="line">                        print(<span class="string">"发帖人："</span> + person.get_text().strip())</div><div class="line">                        [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> tiao.findAll(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"by"</span>&#125;)]</div><div class="line">                    P = tiao.get_text().strip()</div><div class="line">                    print(<span class="string">"标题: "</span>+tiao.get_text().strip())</div><div class="line"></div><div class="line">                    <span class="comment">#get every tiao Likn</span></div><div class="line">                    <span class="keyword">if</span> <span class="string">'href'</span> <span class="keyword">in</span> tiao.attrs:</div><div class="line">                        tiao_links= <span class="string">"http://rsbbs.xidian.edu.cn/"</span> + tiao.attrs[<span class="string">'href'</span>]</div><div class="line">                        tiao_html = urlopen(tiao_links)</div><div class="line">                        tiao_bsObj = BeautifulSoup(tiao_html.read())</div><div class="line">                        <span class="comment"># [q.extract() for q in tiao_bsObj.findAll('blockquote')]</span></div><div class="line">                        <span class="keyword">try</span>:</div><div class="line">                            content = tiao_bsObj.findAll(<span class="string">"div"</span>, &#123;<span class="string">"class"</span>: <span class="string">"message"</span>&#125;)[<span class="number">0</span>]</div><div class="line">                            R = content.get_text().strip()</div><div class="line">                            print(<span class="string">"帖子内容: "</span> + R)</div><div class="line">                            print(<span class="string">'\n'</span>)</div><div class="line">                        <span class="keyword">finally</span>:</div><div class="line">                            <span class="keyword">pass</span></div><div class="line"></div><div class="line"></div><div class="line">                    <span class="comment">#将发帖人、帖子标题、帖子内容插入数据库</span></div><div class="line">                    cur.execute(<span class="string">"INSERT INTO rstiezi (person,tiezi,content) VALUES (\"%s\",\"%s\",\"%s\")"</span>, (T, P, R))</div><div class="line">                    cur.connection.commit()</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    RS = Rspider()</div><div class="line">    RS.Store()</div></pre></td></tr></table></figure>
<h3 id="1218备份"><a href="#1218备份" class="headerlink" title="1218备份"></a>1218备份</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -*-coding:utf-8-*-</span></div><div class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlopen</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"><span class="keyword">import</span> csv</div><div class="line"><span class="keyword">import</span> pymysql</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rspider</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Store</span><span class="params">(self)</span>:</span></div><div class="line"></div><div class="line">        <span class="comment">#链接数据库</span></div><div class="line">        connection = pymysql.connect(host=<span class="string">'127.0.0.1'</span>, user=<span class="string">'root'</span>, password=<span class="string">'root'</span>, db=<span class="string">'rs'</span>, charset=<span class="string">'utf8'</span>,</div><div class="line">                                     cursorclass=pymysql.cursors.DictCursor)</div><div class="line">        cur = connection.cursor()</div><div class="line">        cur.execute(<span class="string">"USE rs"</span>)</div><div class="line"></div><div class="line">        pageURL = set()</div><div class="line"></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>):</div><div class="line">            pages = <span class="string">'http://rsbbs.xidian.edu.cn/forum.php?mod=forumdisplay&amp;fid=72&amp;page='</span>+str(i)+<span class="string">'&amp;mobile=2'</span></div><div class="line">            print(pages)</div><div class="line"></div><div class="line">            <span class="keyword">if</span> pages <span class="keyword">not</span> <span class="keyword">in</span> pageURL:</div><div class="line">                html = urlopen(pages)</div><div class="line">                bsObj = BeautifulSoup(html.read())</div><div class="line">                tiezi = bsObj.findAll(<span class="string">"ul"</span>)</div><div class="line"></div><div class="line">                <span class="keyword">for</span> tiaos <span class="keyword">in</span> tiezi:</div><div class="line">                    <span class="keyword">for</span> tiao <span class="keyword">in</span> tiaos.findAll(<span class="string">'a'</span>):</div><div class="line">                        <span class="keyword">for</span> person <span class="keyword">in</span> tiao.findAll(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"by"</span>&#125;):</div><div class="line">                            T = person.get_text().strip()</div><div class="line">                            print(<span class="string">"发帖人："</span> + person.get_text().strip())</div><div class="line">                            [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> tiao.findAll(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"by"</span>&#125;)]</div><div class="line"></div><div class="line">                        P = tiao.get_text().strip()</div><div class="line">                        print(<span class="string">"标题: "</span>+tiao.get_text().strip())</div><div class="line"></div><div class="line">                        <span class="comment">#get every tiao Likn</span></div><div class="line">                        <span class="keyword">if</span> <span class="string">'href'</span> <span class="keyword">in</span> tiao.attrs:</div><div class="line">                            tiao_links= <span class="string">"http://rsbbs.xidian.edu.cn/"</span> + tiao.attrs[<span class="string">'href'</span>]</div><div class="line">                            tiao_html = urlopen(tiao_links)</div><div class="line">                            tiao_bsObj = BeautifulSoup(tiao_html.read())</div><div class="line">                            <span class="comment"># [q.extract() for q in tiao_bsObj.findAll('blockquote')]</span></div><div class="line">                            <span class="keyword">try</span>:</div><div class="line">                                content = tiao_bsObj.findAll(<span class="string">"div"</span>, &#123;<span class="string">"class"</span>: <span class="string">"message"</span>&#125;)[<span class="number">0</span>]</div><div class="line">                                R = content.get_text().strip()</div><div class="line">                                print(<span class="string">"帖子内容: "</span> + R)</div><div class="line">                                print(<span class="string">'\n'</span>)</div><div class="line"></div><div class="line">                            <span class="keyword">finally</span>:</div><div class="line">                                <span class="keyword">pass</span></div><div class="line">                            pageURL.add(pages)</div><div class="line"></div><div class="line"></div><div class="line">                        <span class="comment">#将发帖人、帖子标题、帖子内容插入数据库</span></div><div class="line">                        cur.execute(<span class="string">"INSERT INTO rstiezi (person,tiezi,content) VALUES (\"%s\",\"%s\",\"%s\")"</span>, (T, P, R))</div><div class="line">                        cur.connection.commit()</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    RS = Rspider()</div><div class="line">    RS.Store()</div></pre></td></tr></table></figure>
<h3 id="灌水区and缘聚睿思终极版"><a href="#灌水区and缘聚睿思终极版" class="headerlink" title="灌水区and缘聚睿思终极版"></a>灌水区and缘聚睿思终极版</h3><p>灌水区<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -*-coding:utf-8-*-</span></div><div class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlopen</div><div class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"><span class="keyword">import</span> csv</div><div class="line"><span class="keyword">import</span> pymysql</div><div class="line"></div><div class="line"><span class="keyword">import</span> time<span class="comment">#导入包</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">import</span> urllib.request</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rspider</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Store</span><span class="params">(self)</span>:</span></div><div class="line"></div><div class="line">        <span class="comment">#链接数据库</span></div><div class="line">        connection = pymysql.connect(host=<span class="string">'127.0.0.1'</span>, user=<span class="string">'root'</span>, password=<span class="string">'root'</span>, db=<span class="string">'rs'</span>, charset=<span class="string">'utf8'</span>,</div><div class="line">                                     cursorclass=pymysql.cursors.DictCursor)</div><div class="line">        cur = connection.cursor()</div><div class="line">        cur.execute(<span class="string">"USE rs"</span>)</div><div class="line"></div><div class="line">        pageURL = set()</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">1000</span>):</div><div class="line">            pages = <span class="string">'http://rsbbs.xidian.edu.cn/forum.php?mod=forumdisplay&amp;fid=72&amp;page='</span>+str(i)+<span class="string">'&amp;mobile=2'</span></div><div class="line">            print(<span class="string">"【这是第"</span>+str(i)+<span class="string">"页】"</span>+pages)</div><div class="line"></div><div class="line">            <span class="keyword">if</span> pages <span class="keyword">not</span> <span class="keyword">in</span> pageURL:</div><div class="line"></div><div class="line"></div><div class="line">                <span class="comment">#header</span></div><div class="line"></div><div class="line">                <span class="comment"># url = r'http://rsbbs.xidian.edu.cn'</span></div><div class="line"></div><div class="line">                headers = &#123;</div><div class="line">                <span class="string">'User-Agent'</span>: <span class="string">r'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) '</span></div><div class="line">                <span class="string">r'Chrome/45.0.2454.85 Safari/537.36 115Browser/6.0.3'</span>,</div><div class="line">                <span class="string">'Referer'</span>: <span class="string">r'http://rsbbs.xidian.edu.cn'</span>,</div><div class="line">                <span class="string">'Connection'</span>: <span class="string">'keep-alive'</span>&#125;</div><div class="line"></div><div class="line">                req = request.Request(pages, headers=headers)</div><div class="line"></div><div class="line">                html = request.urlopen(req)</div><div class="line"></div><div class="line"></div><div class="line">                <span class="comment"># html = urlopen(pages)</span></div><div class="line">                bsObj = BeautifulSoup(html.read())</div><div class="line">                tiezi = bsObj.findAll(<span class="string">"ul"</span>)</div><div class="line"></div><div class="line">                <span class="keyword">for</span> tiaos <span class="keyword">in</span> tiezi:</div><div class="line">                    <span class="keyword">for</span> tiao <span class="keyword">in</span> tiaos.findAll(<span class="string">'a'</span>):</div><div class="line">                        <span class="keyword">for</span> person <span class="keyword">in</span> tiao.findAll(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"by"</span>&#125;):</div><div class="line">                            T = person.get_text().strip()</div><div class="line">                            print(<span class="string">"发帖人："</span> + person.get_text().strip())</div><div class="line">                            [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> tiao.findAll(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"by"</span>&#125;)]</div><div class="line"></div><div class="line">                        P = tiao.get_text().strip()</div><div class="line">                        print(<span class="string">"标题: "</span>+tiao.get_text().strip())</div><div class="line"></div><div class="line">                        <span class="comment">#get every tiao Likn</span></div><div class="line">                        <span class="keyword">if</span> <span class="string">'href'</span> <span class="keyword">in</span> tiao.attrs:</div><div class="line">                            <span class="keyword">try</span>:</div><div class="line">                                tiao_links = <span class="string">"http://rsbbs.xidian.edu.cn/"</span> + tiao.attrs[<span class="string">'href'</span>]</div><div class="line">                                tiao_html = urlopen(tiao_links)</div><div class="line">                                tiao_bsObj = BeautifulSoup(tiao_html.read())</div><div class="line">                                <span class="comment"># [q.extract() for q in tiao_bsObj.findAll('blockquote')]</span></div><div class="line">                                content = tiao_bsObj.findAll(<span class="string">"div"</span>, &#123;<span class="string">"class"</span>: <span class="string">"message"</span>&#125;)[<span class="number">0</span>]</div><div class="line">                                R = content.get_text().strip()</div><div class="line">                                print(<span class="string">"帖子内容: "</span> + R)</div><div class="line">                                print(<span class="string">'\n'</span>)</div><div class="line">                            <span class="keyword">except</span> (ValueError, IndexError) <span class="keyword">as</span> e:</div><div class="line">                                <span class="keyword">pass</span></div><div class="line"></div><div class="line">                            pageURL.add(pages)</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">                        <span class="comment">#将发帖人、帖子标题、帖子内容插入数据库</span></div><div class="line">                        cur.execute(<span class="string">"INSERT INTO rstiezi (person,tiezi,content) VALUES (\"%s\",\"%s\",\"%s\")"</span>, (T, P, R))</div><div class="line">                        cur.connection.commit()</div><div class="line">            time.sleep(<span class="number">3</span>)  <span class="comment"># 设置时间间隔为3秒</span></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    RS = Rspider()</div><div class="line">    RS.Store()</div><div class="line">板块：西电睿思灌水专区</div><div class="line">时间段： <span class="number">2017</span><span class="number">-12</span><span class="number">-18</span>~<span class="number">2016</span><span class="number">-10</span><span class="number">-7</span> </div><div class="line">有效帖子数：<span class="number">24940</span></div></pre></td></tr></table></figure></p>
<p>缘聚睿思<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -*-coding:utf-8-*-</span></div><div class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlopen</div><div class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"><span class="keyword">import</span> csv</div><div class="line"><span class="keyword">import</span> pymysql</div><div class="line"><span class="keyword">import</span> time<span class="comment">#导入包</span></div><div class="line"><span class="keyword">import</span> urllib.request</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rspider</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Store</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="comment">#链接数据库</span></div><div class="line">        connection = pymysql.connect(host=<span class="string">'127.0.0.1'</span>, user=<span class="string">'root'</span>, password=<span class="string">'root'</span>, db=<span class="string">'rs'</span>, charset=<span class="string">'utf8'</span>,</div><div class="line">                                     cursorclass=pymysql.cursors.DictCursor)</div><div class="line">        cur = connection.cursor()</div><div class="line">        cur.execute(<span class="string">"USE rs"</span>)</div><div class="line">        pageURL = set()</div><div class="line"></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">122</span>):</div><div class="line">            pages = <span class="string">'http://rsbbs.xidian.edu.cn/forum.php?mod=forumdisplay&amp;fid=217&amp;page='</span>+str(i)+<span class="string">'&amp;mobile=2'</span></div><div class="line">            print(<span class="string">"【这是第"</span>+str(i)+<span class="string">"页】"</span>+pages)</div><div class="line">            <span class="keyword">if</span> pages <span class="keyword">not</span> <span class="keyword">in</span> pageURL:</div><div class="line">                headers = &#123;</div><div class="line">                <span class="string">'User-Agent'</span>: <span class="string">r'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) '</span></div><div class="line">                <span class="string">r'Chrome/45.0.2454.85 Safari/537.36 115Browser/6.0.3'</span>,</div><div class="line">                <span class="string">'Referer'</span>: <span class="string">r'http://rsbbs.xidian.edu.cn'</span>,</div><div class="line">                <span class="string">'Connection'</span>: <span class="string">'keep-alive'</span>&#125;</div><div class="line">                req = request.Request(pages, headers=headers)</div><div class="line">                html = request.urlopen(req)</div><div class="line">                bsObj = BeautifulSoup(html.read())</div><div class="line">                tiezi = bsObj.findAll(<span class="string">"ul"</span>)</div><div class="line">                <span class="keyword">for</span> tiaos <span class="keyword">in</span> tiezi:</div><div class="line">                    <span class="keyword">for</span> tiao <span class="keyword">in</span> tiaos.findAll(<span class="string">'a'</span>):</div><div class="line">                        <span class="keyword">for</span> person <span class="keyword">in</span> tiao.findAll(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"by"</span>&#125;):</div><div class="line">                            X = person.get_text().strip()</div><div class="line">                            <span class="comment"># print("发帖人：" + person.get_text().strip())</span></div><div class="line">                            print(<span class="string">"发帖人："</span> + X)</div><div class="line">                            [s.extract() <span class="keyword">for</span> s <span class="keyword">in</span> tiao.findAll(<span class="string">'span'</span>, attrs=&#123;<span class="string">'class'</span>: <span class="string">"by"</span>&#125;)]</div><div class="line">                        Y = tiao.get_text().strip()</div><div class="line">                        print(<span class="string">"标题: "</span>+tiao.get_text().strip())</div><div class="line">                        <span class="comment">#get every tiao Likn</span></div><div class="line">                        <span class="keyword">if</span> <span class="string">'href'</span> <span class="keyword">in</span> tiao.attrs:</div><div class="line">                            <span class="keyword">try</span>:</div><div class="line">                                tiao_links = <span class="string">"http://rsbbs.xidian.edu.cn/"</span> + tiao.attrs[<span class="string">'href'</span>]</div><div class="line">                                tiao_html = urlopen(tiao_links)</div><div class="line">                                tiao_bsObj = BeautifulSoup(tiao_html.read())</div><div class="line">                                content = tiao_bsObj.findAll(<span class="string">"div"</span>, &#123;<span class="string">"class"</span>: <span class="string">"message"</span>&#125;)[<span class="number">0</span>]</div><div class="line">                                Z = content.get_text().strip()</div><div class="line">                                print(<span class="string">"帖子内容: "</span> + Z)</div><div class="line">                                print(<span class="string">'\n'</span>)</div><div class="line">                                cur.execute(<span class="string">"INSERT INTO love (person,tiezi,content) VALUES (\"%s\",\"%s\",\"%s\")"</span>,</div><div class="line">                                            (X, Y, Z))</div><div class="line">                                cur.connection.commit()</div><div class="line">                            <span class="keyword">except</span> (ValueError, IndexError) <span class="keyword">as</span> e:</div><div class="line">                                <span class="keyword">pass</span></div><div class="line">                            pageURL.add(pages)</div><div class="line">                        <span class="comment">#将发帖人、帖子标题、帖子内容插入数据库</span></div><div class="line">                        <span class="comment"># cur.execute("INSERT INTO love (person,tiezi,content) VALUES (\"%s\",\"%s\",\"%s\")", (X, Y, Z))</span></div><div class="line">                    <span class="comment"># cur.execute("INSERT INTO love (person,tiezi,content) VALUES (\"%s\",\"%s\",\"%s\")", (X, Y, Z))</span></div><div class="line">                    <span class="comment"># cur.connection.commit()</span></div><div class="line">            time.sleep(<span class="number">3</span>)  <span class="comment"># 设置时间间隔为3秒</span></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    RS = Rspider()</div><div class="line">    RS.Store()</div><div class="line">板块：相聚睿思</div><div class="line">时间段： <span class="number">2017</span><span class="number">-12</span><span class="number">-19</span>~<span class="number">2010</span><span class="number">-11</span><span class="number">-24</span> </div><div class="line">有效帖子数：<span class="number">2618</span></div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;“网络数据采集是为普通大众所喜闻乐见的计算机巫术”。&lt;/li&gt;
&lt;li&gt;bug 是产品生命中的挑战，好产品是不断面对 bug 并战胜 bug 的结果。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;有人说编程语言就是宗教，不同语言的设计哲学不同，行为方式各异，“非我族类，其心必异”，但本着美好生活、快乐修行的初衷，我们对所有语言都时刻保持敬畏之心，尊重信仰自由，努力做好自己的功课。对爱好Python的人来说，人生苦短，Python当歌！ &lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="https://x-nicolo.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Python" scheme="https://x-nicolo.github.io/tags/Python/"/>
    
      <category term="爬虫" scheme="https://x-nicolo.github.io/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="数据分析" scheme="https://x-nicolo.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>移动终端比赛之旅</title>
    <link href="https://x-nicolo.github.io/2017/12/04/%E7%A7%BB%E5%8A%A8%E7%BB%88%E7%AB%AF%E6%AF%94%E8%B5%9B%E4%B9%8B%E6%97%85/"/>
    <id>https://x-nicolo.github.io/2017/12/04/移动终端比赛之旅/</id>
    <published>2017-12-04T12:12:55.000Z</published>
    <updated>2017-12-04T12:12:55.000Z</updated>
    
    <content type="html"><![CDATA[<p>轮子哥说他都是用编译的时间来刷微博，那我也不知羞耻的（不想学习）来更博。    </p>
<a id="more"></a> 
<p>敲代码的水平没有增长多少，PS和做视频的本事倒是提高了不少。</p>
<ul>
<li><a href="http://oeiseebmx.bkt.clouddn.com/%E5%BF%AB%E9%93%831121PPT%E8%A7%86%E9%A2%91_x264.mp4" target="_blank" rel="external">快铃PPT</a></li>
<li><a href="http://opms50p58.bkt.clouddn.com/%E5%BF%AB%E9%93%83_%E6%B4%BB%E5%8A%9B%E5%B7%A5%E4%BD%9C%E5%AE%A4.mp4" target="_blank" rel="external">快铃宣传视频</a>  </li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/2847713-88ed85d7ffbc1199.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="微信图片_20171204211938.jpg"><br><img src="http://upload-images.jianshu.io/upload_images/2847713-adafaf84351ff247.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="微信图片_20171204212036.jpg"><br><img src="http://upload-images.jianshu.io/upload_images/2847713-3c7633cc3e6ef614.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="微信图片_20171204212044.jpg"><br>谈谈这次的全国移动终端的比赛吧。  </p>
<h3 id="一"><a href="#一" class="headerlink" title="一"></a>一</h3><p>一个偶然的机会加入工作室，从还没开始学Python就直接上手爬虫。最深的体会就是，结果导向的驱动真的最有用。看了一万本书可能真的不如亲手去操作一番。<br>开始学Python，了解协议，抓包，去学HTML，去学数据库。我都不敢相信我本科四年搞硬件的。整个流程走下来，好像是真的有学习到很多。但是还是差很远，现在也是。从不认为自己牛逼，敬畏一切可敬畏的。  </p>
<h3 id="二"><a href="#二" class="headerlink" title="二"></a>二</h3><p>后面就是多花时间去尝试，去调代码，从一开始的不知道写什么，到后来去想能不能用好一点的算法去实现。感谢团队的力量，代码写到半夜也是有的。<br>这是一段很难忘的经历。去明白、去了解一个产品从无到有的流程。  </p>
<h3 id="三"><a href="#三" class="headerlink" title="三"></a>三</h3><p>先是准备校内赛。<br>我还记得我第一次做的PPT，和第一次预演答辩的样子。磕磕绊绊，简直尴尬到死。<br>还在背答辩的稿子。整个过程也是极度的不自信。   </p>
<p>后来进入决赛，指导老师每周一次的答辩演练。我的PPT也开始不是以版本来命名，而是以日期来命名，每天都会出一个新的版本。  </p>
<h3 id="四"><a href="#四" class="headerlink" title="四"></a>四</h3><p>去了大连理工，还是非常见了世面的。有敬畏之心是对的。总有人比你准备的更充分，东西比你做的更好。这些差距不是没有的。 还好算是发挥出自己最好的状态，整个答辩环节也算是十分自信不磕绊，感觉人只要自信了，问题就会解决掉一半。 </p>
<h3 id="五"><a href="#五" class="headerlink" title="五"></a>五</h3><p>Say Little, Do Much.做自己想做的，最纯粹的。<br>最后，感谢队友。 </p>
<blockquote>
<p>很享受这次角色的转变 表达自我很重要 也是这一年多来成长最多的<br>虽然没有摆脱千年二等的怪圈 不过这次真的离一只差2.8分 不遗憾<br>感谢给力的队友 指导老师和Holi团队<br>不求凛冬的暮色天光 只乞胸前的微束心火  </p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;轮子哥说他都是用编译的时间来刷微博，那我也不知羞耻的（不想学习）来更博。    &lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="https://x-nicolo.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="日常" scheme="https://x-nicolo.github.io/tags/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>基于Python的微信好友分析</title>
    <link href="https://x-nicolo.github.io/2017/10/23/Python%E5%BE%AE%E4%BF%A1%E5%A5%BD%E5%8F%8B%E5%88%86%E6%9E%90/"/>
    <id>https://x-nicolo.github.io/2017/10/23/Python微信好友分析/</id>
    <published>2017-10-23T02:42:37.000Z</published>
    <updated>2017-10-23T02:42:37.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://oeiseebmx.bkt.clouddn.com/all.png" alt="friends"><br>“如果我比别人看得远,那是因为我站在巨人的肩膀上”–不知道牛顿说了没<br><a id="more"></a><br>本文利用Python3的itchat包简单的分析了一下自己的微信好友。  </p>
<h3 id="itchat"><a href="#itchat" class="headerlink" title="itchat"></a>itchat</h3><p><a href="https://itchat.readthedocs.io/zh/latest/" target="_blank" rel="external">itchat</a></p>
<blockquote>
<p>itchat是一个开源的微信个人号接口，使用python调用微信从未如此简单。<br>使用不到三十行的代码，你就可以完成一个能够处理所有信息的微信机器人。<br>当然，该api的使用远不止一个机器人，更多的功能等着你来发现，比如这些。<br>该接口与公众号接口itchatmp共享类似的操作方式，学习一次掌握两个工具。<br>如今微信已经成为了个人社交的很大一部分，希望这个项目能够帮助你扩展你的个人的微信号、方便自己的生活。  </p>
</blockquote>
<h3 id="运行环境"><a href="#运行环境" class="headerlink" title="运行环境"></a>运行环境</h3><p>本文采用Python3，然后顺便吐槽下Python的向后不兼容真的好烦好烦，真的是体验超差。当然为了解决这个不是问题的小问题，我装了两个运行环境，毕竟是要站在巨人肩膀上去瞭望远方，那就站在两个肩膀上好了。<a href="https://x-nicolo.github.io/2017/09/15/Python-Opencv%E7%9A%84%E5%AE%89%E8%A3%85/">sublime的Python3和2的配置（点进去往下翻。。。）</a>  =_+<br>关于Pycharm里面Py2和Py3的转换更是简单，百度一下就ok。转换如下：<br><img src="http://upload-images.jianshu.io/upload_images/2847713-5f4d274955817a08.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png">   </p>
<h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p>需要安装itchat、matplotlib、numpy等依赖。<br>老生常谈之安装方式：<br><figure class="highlight cmake"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">pip <span class="keyword">install</span> itchat</div><div class="line">pip <span class="keyword">install</span> matplotlib</div><div class="line">pip <span class="keyword">install</span> numpy</div><div class="line">pip <span class="keyword">install</span> PIL/Pillow</div></pre></td></tr></table></figure></p>
<p><strong>注意：</strong>是不是上面的命令我早都忘了（我此时此刻觉得应该是这样的!），所以。。你们自己看着安装吧，反正不出问题都感觉不正常。按照使用的Python运行环境来安装相应的依赖包。pip/pip3  </p>
<h4 id="安装包介绍"><a href="#安装包介绍" class="headerlink" title="安装包介绍"></a>安装包介绍</h4><h5 id="itchat-1"><a href="#itchat-1" class="headerlink" title="itchat"></a>itchat</h5><p>本文的主角，我给它起个slogan吧“不仅仅是微信机器人。”   </p>
<h5 id="Matplotlib"><a href="#Matplotlib" class="headerlink" title="Matplotlib"></a>Matplotlib</h5><p>Matplotlib是Python的可视化包。  </p>
<blockquote>
<p>Matplotlib是Python中最常用的可视化工具之一，可以非常方便地创建海量类型地2D图表和一些基本的3D图表。Matplotlib最早是为了可视化癫痫病人的脑皮层电图相关的信号而研发，因为在函数的设计上参考了MATLAB，所以叫做Matplotlib。Matplotlib首次发表于2007年，在开源和社区的推动下，现在在基于Python的各个科学计算领域都得到了广泛应用。Matplotlib的原作者John D. Hunter博士是一名神经生物学家，2012年不幸因癌症去世，感谢他创建了这样一个伟大的库。</p>
</blockquote>
<h5 id="numpy"><a href="#numpy" class="headerlink" title="numpy"></a>numpy</h5><p>Numpy是Python的科学计算包。  </p>
<blockquote>
<p>numpy(Numerical Python extensions)是一个第三方的Python包，用于科学计算。这个库的前身是1995年就开始开发的一个用于数组运算的库。经过了长时间的发展，基本上成了绝大部分Python科学计算的基础包，当然也包括所有提供Python接口的深度学习框架。  </p>
</blockquote>
<p>关于Matplotlib和numpy，推荐知乎上的一篇文章，感觉不错：<a href="https://zhuanlan.zhihu.com/p/24309547" target="_blank" rel="external">给深度学习入门者的Python快速教程 - numpy和Matplotlib篇</a>  </p>
<h5 id="PIL-Pillow"><a href="#PIL-Pillow" class="headerlink" title="PIL/Pillow"></a>PIL/Pillow</h5><p>PIL:Python Imaging Library，已经是Python平台事实上的图像处理标准库了。<br>Pillow 是 PIL的对Python3支持的另外一个分支，当然他对Python2也兼容，由于PIL安装起来比较烦，而使用pip可以很轻松的安装Pillow，所以我选择Pillow使用，但是其核心还是PIL库的。</p>
<h3 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h3><p> 好了，奠基石和肩膀都已经准备好了，上车！<br> <figure class="highlight xl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"> #-*-coding:utf-<span class="number">8</span>-*-</div><div class="line"></div><div class="line"><span class="keyword">import</span> itchat</div><div class="line"><span class="keyword">import</span> re</div><div class="line"><span class="keyword">import</span> os</div><div class="line"><span class="keyword">import</span> matplotlib <span class="keyword">as</span> mpl</div><div class="line">from matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</div><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"><span class="keyword">import</span> PIL.Image <span class="keyword">as</span> Image</div><div class="line">from os <span class="keyword">import</span> listdir</div><div class="line"><span class="keyword">import</span> math</div><div class="line"></div><div class="line"></div><div class="line">plt.rcParams[<span class="string">'font.sans-serif'</span>]=[<span class="string">'SimHei'</span>] #用来正常显示中文标签</div><div class="line">plt.rcParams[<span class="string">'axes.unicode_minus'</span>]=False #用来正常显示负号</div><div class="line">zhfont = mpl.font_manager.FontProperties(fname=<span class="string">'E:\PythonWorkSpace\WeChat\msyh.ttf'</span>, size=<span class="number">14</span>)</div></pre></td></tr></table></figure></p>
<p>有时候不得不说说外国的月亮比较圆啊。<br>使用的Matplotlib绘图是不能显示中文字符的，需要做一点小设置。<br>这两句：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">plt<span class="selector-class">.rcParams</span>[<span class="string">'font.sans-serif'</span>]=[<span class="string">'SimHei'</span>] #用来正常显示中文标签</div><div class="line">plt<span class="selector-class">.rcParams</span>[<span class="string">'axes.unicode_minus'</span>]=False #用来正常显示负号</div></pre></td></tr></table></figure></p>
<p>这一句为指定字体的设置：<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">zhfont = mpl.font_manager.FontProperties(<span class="attribute">fname</span>=<span class="string">'E:\PythonWorkSpace\WeChat\msyh.ttf'</span>, <span class="attribute">size</span>=14)</div></pre></td></tr></table></figure></p>
<p>关于上面的xx.tff为c盘windows下front字体包里的字体，我拷到目录下面了。<br>这样，我们就可以好好编程了+_+ ，想编个程序心也是蛮累的，不是在配置环境的路上，就是在改bug的路上，奈何程序员都是打不死的小强！  </p>
<h3 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h3><blockquote>
<p>爬取目标网站的时候，看看有没有 HTML样式更友好的移动版（把自己的请求头设置成处于移动设备的状态，然后接收网站移动版。移动版是一个获取数据非常好的渠道。当有一个网页很难爬去的时候，应该去试试它的移动版。）    </p>
</blockquote>
<p>微信就已经是移动设备上的了，腾讯粑粑又没有开发微信的API，所以我们只能另辟蹊径！反向思维-&gt;Web端有木有！This is itChat!  </p>
<p>使用itchat登录Web端的微信，代码很简单：<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">itchat.auto_login(<span class="attribute">hotReload</span>=<span class="literal">True</span>)</div></pre></td></tr></table></figure></p>
<p><strong>注：</strong>  传入True hotReload使得程序关闭后一定时间内也可以登录，该方法会生一个静态文件itchat.pkl，用于存储登陆的状态。即使程序关闭，一定时间内重新开启也可以不用重新扫码。</p>
<p>执行上面这句代码后会弹出一个Web微信登录的二维码QR，拿手机微信扫一扫后有以下显示：<br><img src="http://upload-images.jianshu.io/upload_images/2847713-1559487f1d7cb053.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>这样就登录成功了！好简单有木有！用大神的包就是好，自己写模拟登陆的话还得抓包，分析报头，然后模拟登录。itchat简直良心到想哭。&gt;_&lt;  </p>
<h3 id="获取好友信息"><a href="#获取好友信息" class="headerlink" title="获取好友信息"></a>获取好友信息</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attr">friends</span> = itchat.get_friends(update=<span class="literal">True</span>)  </div><div class="line"><span class="comment"># 爬取好友的相关信息，返回json文件</span></div></pre></td></tr></table></figure>
<p>上面这个json文件就包括了微信好友的信息。  </p>
<h3 id="好友性别"><a href="#好友性别" class="headerlink" title="好友性别"></a>好友性别</h3><p>直接上代码:<br><figure class="highlight xl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">def friend_analysis(friends):</div><div class="line">    labels = [<span class="string">'男'</span>, <span class="string">'女'</span>, <span class="string">'其他'</span>]</div><div class="line">    <span class="keyword">data</span> = [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>]</div><div class="line"></div><div class="line">    # friends[<span class="number">0</span>] 是自己的信息</div><div class="line">    <span class="keyword">for</span> friend <span class="built_in">in</span> friends[<span class="number">1</span>:]:</div><div class="line">        sex = friend[<span class="string">"Sex"</span>]</div><div class="line">        <span class="keyword">if</span> sex == <span class="number">1</span>:</div><div class="line">            <span class="keyword">data</span>[<span class="number">0</span>] += <span class="number">1</span></div><div class="line">        elif sex == <span class="number">2</span>:</div><div class="line">            <span class="keyword">data</span>[<span class="number">1</span>] += <span class="number">1</span></div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            <span class="keyword">data</span>[<span class="number">2</span>] += <span class="number">1</span></div><div class="line"></div><div class="line">    fig = plt.figure()</div><div class="line">    plt.pie(<span class="keyword">data</span>, labels=labels,autopct=<span class="string">"%.2f%%"</span>)</div><div class="line">    plt.<span class="built_in">title</span>(<span class="string">"微信好友分析"</span>,fontsize=<span class="number">18</span>,fontproperties=zhfont)</div><div class="line">    plt.show()</div></pre></td></tr></table></figure></p>
<p>labels是我们要画的饼图的标注。<br>男、女和其他性别的提取很简单了，当然需要注意的是如果没有我们准备阶段对于Matplotlib绘图的中文字符的处理，画出来的图是显示不了汉字滴！<br>运行结果：<br><img src="http://upload-images.jianshu.io/upload_images/2847713-d695657454189ff6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Figure_1.png">  </p>
<p>看来我的微信好友男女差不多是1:1吧，还有那5.31%不知性别的好友，他们可能对性别的要求并不是那么严格吧，毕竟人与人也没那么多的隔阂是不是 =_*  </p>
<h3 id="区域分析"><a href="#区域分析" class="headerlink" title="区域分析"></a>区域分析</h3><p>关于这个，自己之前写了一个简单的省份分析，就是从friends里去匹配Province，但是画的太丑了。所以，又找到一个<a href="https://github.com/IsaacChanghau/AmusingPythonCodes/blob/master/wechat_exploration/wechat_explore.ipynb" target="_blank" rel="external">肩膀</a><br><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># extract the variables: NickName, Sex, City, Province, Signature</span></div><div class="line">def get_features(friends):</div><div class="line">    features = []</div><div class="line">    for friend in friends:</div><div class="line">        feature = &#123;<span class="string">'NickName'</span>: friend[<span class="string">'NickName'</span>], <span class="string">'Sex'</span>: friend[<span class="string">'Sex'</span>], <span class="string">'City'</span>: friend[<span class="string">'City'</span>], </div><div class="line">                  <span class="string">'Province'</span>: friend[<span class="string">'Province'</span>], <span class="string">'Signature'</span>: friend[<span class="string">'Signature'</span>]&#125;</div><div class="line">        features.append(feature)</div><div class="line">    return pd.DataFrame(features)</div><div class="line">features = get_features(friends[<span class="number">1</span>:])</div><div class="line">print(features.columns)</div><div class="line">features.head()</div><div class="line">locations = features.loc[:, [<span class="string">'Province'</span>, <span class="string">'City'</span>]]  <span class="comment"># get location columns</span></div><div class="line">locations = locations[locations[<span class="string">'Province'</span>] != <span class="string">''</span>]  <span class="comment"># clean empty city or province records</span></div><div class="line">data = locations.groupby([<span class="string">'Province'</span>, <span class="string">'City'</span>]).size().unstack()  <span class="comment"># group by and count</span></div><div class="line">count_subset = data.take(data.sum(<span class="number">1</span>).argsort())[-<span class="number">20</span>:]  <span class="comment"># obtain the 20 highest data</span></div><div class="line"></div><div class="line"><span class="comment"># plot</span></div><div class="line">subset_plot = count_subset.plot(kind=<span class="string">'bar'</span>, stacked=True, figsize=(<span class="number">24</span>, <span class="number">24</span>))</div><div class="line"></div><div class="line"><span class="comment"># set fonts</span></div><div class="line">xtick_labels = subset_plot.get_xticklabels()</div><div class="line">for <span class="keyword">label</span><span class="bash"> <span class="keyword">in</span> xtick_labels: </span></div><div class="line"><span class="bash">    label.set_fontproperties(font)</span></div><div class="line"><span class="bash">legend_labels = subset_plot.legend().texts</span></div><div class="line"><span class="bash"><span class="keyword">for</span> label <span class="keyword">in</span> legend_labels:</span></div><div class="line"><span class="bash">    label.set_fontproperties(font)</span></div><div class="line"><span class="bash">    label.set_fontsize(10)</span></div><div class="line"><span class="bash"></span></div><div class="line"><span class="bash">plt.xlabel(<span class="string">'Province'</span>, fontsize=20)</span></div><div class="line"><span class="bash">plt.ylabel(<span class="string">'Number'</span>, fontsize=20)</span></div><div class="line"><span class="bash">plt.show()</span></div></pre></td></tr></table></figure></p>
<p>上面这段代码更是厉害，提取了昵称,性别, 城市, 省份, 签名。<br>我只用他的省市画图部分locations，结果如下；<br><img src="http://upload-images.jianshu.io/upload_images/2847713-96ef196cb9a822b9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="TIM截图20170929195104.png"><br>emmmm,放不大了，全图看不到，而且放大拖动起来巨卡，这个图也是辛苦了i3了。<br>从上面可以看到，我大陕西的乡党们在哪里！！我大西安的乡党们在哪里!!<br>排名第二、三的北京和广东，就是那群在北（上？）广深那一波人吧，向他们致敬！<br>从排名第四开始，某种程度上可以说是在陕西的各省学霸的分布了吧！尤其是河北、河南、山东！这些省份的同学一直都是学神一样的存在，陕西欢迎你们，学生生涯请轻虐+_+  </p>
<h3 id="签名"><a href="#签名" class="headerlink" title="签名"></a>签名</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">signature_analysis</span><span class="params">(friends)</span>:</span></div><div class="line">    signature_list = list()</div><div class="line"></div><div class="line">    <span class="keyword">for</span> friend <span class="keyword">in</span> friends[<span class="number">1</span>:]:</div><div class="line">        signature = friend[<span class="string">'Signature'</span>].strip()</div><div class="line">        signature_list.append(signature)</div><div class="line">        print(friend[<span class="string">'NickName'</span>] + <span class="string">"\t"</span> + signature)</div></pre></td></tr></table></figure>
<p>这是从friends中分析出好友签名的，.strip()是用来删除空白符。<br>最后的输出是打印出昵称+签名。这个比较隐私就不展示了哈。有时间的还可以整理下这些签名，使用jieba分词+Wordcloud云词生成一个图片。  </p>
<h3 id="获取好友头像"><a href="#获取好友头像" class="headerlink" title="获取好友头像"></a>获取好友头像</h3><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">def getImage(friends):</div><div class="line">    <span class="comment">#下载所有好友的头像图片</span></div><div class="line">    <span class="built_in">num</span> = <span class="number">0</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> friends:</div><div class="line">     img = itchat.get_head_img(i[<span class="string">"UserName"</span>])</div><div class="line">     <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">'./headImg/'</span> + str(<span class="built_in">num</span>) + <span class="string">".png"</span>,<span class="string">'wb'</span>) <span class="keyword">as</span> f:</div><div class="line">      f.<span class="built_in">write</span>(img)</div><div class="line">      f.<span class="built_in">close</span>()</div><div class="line">      <span class="built_in">num</span> += <span class="number">1</span></div><div class="line">    <span class="comment">#获取文件夹内的文件个数</span></div><div class="line">    <span class="built_in">length</span> = <span class="built_in">len</span>(os.listdir(<span class="string">'./headImg'</span>))</div><div class="line">    <span class="comment">#根据总面积求每一个的大小</span></div><div class="line">    each_size = int(math.<span class="built_in">sqrt</span>(float(<span class="number">810</span>*<span class="number">810</span>)/<span class="built_in">length</span>))</div><div class="line">    <span class="comment">#每一行可以放多少个</span></div><div class="line">    <span class="keyword">lines</span> = int(<span class="number">810</span>/each_size)</div><div class="line">    <span class="comment">#生成白色背景新图片</span></div><div class="line">    image = Image.<span class="built_in">new</span>(<span class="string">'RGBA'</span>, (<span class="number">810</span>, <span class="number">810</span>),<span class="string">'white'</span>)</div><div class="line">    x = <span class="number">0</span></div><div class="line">    y = <span class="number">0</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="built_in">length</span>):</div><div class="line">     <span class="keyword">try</span>:</div><div class="line">      img = Image.<span class="built_in">open</span>(<span class="string">'./headImg/'</span> + str(i) + <span class="string">".png"</span>)</div><div class="line">     except IOError:</div><div class="line">      print(i)</div><div class="line">      print(<span class="string">"Error"</span>)</div><div class="line">     <span class="keyword">else</span>:</div><div class="line">      img = img.resize((each_size, each_size), Image.ANTIALIAS) <span class="comment">#resize image with high-quality</span></div><div class="line">      image.paste(img, (x * each_size, y * each_size))</div><div class="line">      x += <span class="number">1</span></div><div class="line">      <span class="keyword">if</span> x == <span class="keyword">lines</span>:</div><div class="line">       x = <span class="number">0</span></div><div class="line">       y += <span class="number">1</span></div><div class="line">    image.save(<span class="string">'./headImg/'</span> + <span class="string">"all.png"</span>)</div><div class="line">    <span class="comment">#通过文件传输助手发送到自己微信中</span></div><div class="line">    itchat.send_image(<span class="string">'./headImg/'</span> + <span class="string">"all.png"</span>,<span class="string">'filehelper'</span>)</div><div class="line">    image.show()</div></pre></td></tr></table></figure>
<p>注释里写的应该算很清楚，需要注意的是：<br>开始想截取好友头像图片遇到了一个报错：<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cannot <span class="keyword">write</span> <span class="keyword">mode</span> rgba <span class="keyword">as</span> jpg</div></pre></td></tr></table></figure></p>
<p><strong>google后如下:</strong>  </p>
<blockquote>
<p>这是因为，JPG只有三个通道，而程序中一定用到了RGBA四个通道，所以程序不知道多出来的一个通道怎么处理，就会报错了。  </p>
</blockquote>
<p><strong>解决如下:</strong>  </p>
<ol>
<li>PNG图像有RGBA四个通道，而BMP和JPG图像只有RGB三个通道，所以我们可以将程序中所有图片的保存形式改为PNG.(本文采用的是这种方法。)  </li>
<li>不想改变图片格式，就添加判断，进行转换  </li>
</ol>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> <span class="built_in">len</span>(toImage.<span class="built_in">split</span>())==<span class="number">4</span>:</div><div class="line">   r,g,b,<span class="keyword">a</span>=toImage.<span class="built_in">split</span>()        <span class="comment">#利用split和merge将通道从四个转换为三个</span></div><div class="line">   toImage=Image.<span class="built_in">merge</span>(<span class="string">"RGB"</span>,(r,g,b))</div><div class="line">    toImage.save(user + <span class="string">".jpg"</span>)</div></pre></td></tr></table></figure>
<p>“全世界的程序员们联合起来，那些bug的坑我们填一个它就少一个！”<br><strong>结果：</strong><br><img src="http://upload-images.jianshu.io/upload_images/2847713-665aaa9dceb62fbf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="all.png"><br>来来来，找自己，找到三个自己就可以Bingo了…  </p>
<h3 id="最后，人生苦短，且行且珍惜"><a href="#最后，人生苦短，且行且珍惜" class="headerlink" title="最后，人生苦短，且行且珍惜"></a>最后，人生苦短，且行且珍惜</h3><p><strong>强烈建议仅使用小号（小号怎么会有好友？反正我给你们建议了…日后可不要搞个大新闻把我批判一番）</strong><br>小道消息：从近期 (17年6月下旬)反馈来看，使用itchat及其他微信机器人（类爬虫程序）存在一定概率被限制登录的可能性。主要表现为无法登陆 Web 微信 (但不影响手机等其他平台)。<br>现在感觉都是爬一次少一次，Web微信有时候也登不上去+_+，前几天还被封号两天，微信消息只能看，不能回复，朋友圈不能评论，不能点赞，这对一个话痨来说简直就是无声的摧残！</p>
<h3 id="最后的最后：反思"><a href="#最后的最后：反思" class="headerlink" title="最后的最后：反思"></a>最后的最后：反思</h3><p><a href="">微信是不是太强大了，生活、学习、工作中真的是一分一秒都离不开！所以，还是建议大家时不时的用下QQ，用下微博，多和新老好友们尬聊下，不然，真到了微信垄断那一天，你我联系只能靠漂流瓶了！全看缘分！</a></p>
<h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>一晚上的访问量破三百了！三百！1024程序员节日快乐！<br>盖个戳！本文的访问数据，google analytics：<br>访问数据：<br><img src="http://upload-images.jianshu.io/upload_images/2847713-bcd6a5f21a66261c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="TIM截图20171024095959.png"><br>访问者国家和地区：<br><img src="http://upload-images.jianshu.io/upload_images/2847713-48219243e1dd40e5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="TIM截图20171024100028.png"><br>地理位置：<br><img src="http://upload-images.jianshu.io/upload_images/2847713-9ddc57c9f935f21c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="TIM截图20171024100148.png">  </p>
<p>访问者城市分布：<br><img src="http://upload-images.jianshu.io/upload_images/2847713-8a42b1c8f20468ab.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="TIM截图20171024100202.png"><br>服务提供商：<br><img src="http://upload-images.jianshu.io/upload_images/2847713-a6e1096c56470d63.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="TIM截图20171024100303.png"><br>网页浏览分析：<br><img src="http://upload-images.jianshu.io/upload_images/2847713-c060957628cf2ffc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="TIM截图20171024100517.png"><br>访问者行为流：<br><img src="http://upload-images.jianshu.io/upload_images/2847713-c4a4c11d0af771c6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="TIM截图20171024100600.png"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://oeiseebmx.bkt.clouddn.com/all.png&quot; alt=&quot;friends&quot;&gt;&lt;br&gt;“如果我比别人看得远,那是因为我站在巨人的肩膀上”–不知道牛顿说了没&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="https://x-nicolo.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Python" scheme="https://x-nicolo.github.io/tags/Python/"/>
    
      <category term="数据分析" scheme="https://x-nicolo.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
</feed>
